<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jachin</title>
  <subtitle>Impossible is I’m possible!!!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://ygcaicn.github.io/"/>
  <updated>2018-01-15T10:04:40.317Z</updated>
  <id>https://ygcaicn.github.io/</id>
  
  <author>
    <name>PN结</name>
    <email>ygcaicn@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>build-live-ubuntu --2</title>
    <link href="https://ygcaicn.github.io/Linux/build-live-ubuntu2.html"/>
    <id>https://ygcaicn.github.io/Linux/build-live-ubuntu2.html</id>
    <published>2018-01-15T17:09:42.000Z</published>
    <updated>2018-01-15T10:04:40.317Z</updated>
    
    <content type="html"><![CDATA[<p>在上次介绍了一些基础的常用软件之后决定进一步探索！在知乎找到了一篇很棒的讨论，链接如下：<br><a href="https://www.zhihu.com/question/19811112" target="_blank" rel="external">https://www.zhihu.com/question/19811112</a>通过实践找出了我比较满意的软件。<br>由于本人电脑只有240G的固盘，电脑性能一般，因此对与内存和硬盘都是相当的奢侈，能原配的就不去搞些华丽胡哨的<br>东西，本着能简单绝不复杂，能默认绝不修改的原则去测试一些软件，以及一些脚本，特此记录以备后查！</p>
<a id="more"></a>
<h1 id="No-1-Guake-Terminal"><a href="#No-1-Guake-Terminal" class="headerlink" title="No.1 Guake Terminal"></a>No.1 Guake Terminal</h1><p>这个名字有点意思，‘挂科’Terminal。。。功能很简单快速打开Terminal，或许你认为Ctrl+Alt+T（或者自己设置一个快捷键）去开Terminal也是一件很简单的事。没错我以前也是这么认为的，但是遇到了Guake后我改变了看法，特别是需要开多个Terminal的时候（高手都不需要开多个，一个都能全搞定！）系统的Terminal显的不方便，还有就是临时开一个<br>Terminal的时候很可能用完就不去关然后在那积攒了很多。Guake Terminal就是来解决这些问题的！一键弹出（默认F12），失去焦点自动关闭，可以开启多个Tab，可以自定义Appearance。<br><img src="../img/82bdf788-4c0c-4238-a94c-bf6e7e2e2106.png" alt="82bdf788-4c0c-4238-a94c-bf6e7e2e2106"></p>
<h1 id="No-2-bash-aliases"><a href="#No-2-bash-aliases" class="headerlink" title="No.2 ~/.bash_aliases"></a>No.2 ~/.bash_aliases</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">m_basedir=&apos;/media/jachin/Software&apos;</div><div class="line">#cd</div><div class="line">alias pydir=&apos;cd $&#123;m_basedir&#125;/python&apos;</div><div class="line">alias soft=&apos;cd $&#123;m_basedir&#125;&apos;</div><div class="line">alias gitdir=&apos;cd $&#123;m_basedir&#125;/Github&apos;</div><div class="line"></div><div class="line"></div><div class="line">#python3 -m venv</div><div class="line">alias pyvenv=&apos;python3 -m venv&apos;</div><div class="line">alias pyenv=&apos;pydir &amp;&amp; source ./ENV/bin/activate&apos;</div><div class="line"></div><div class="line">#atom</div><div class="line">alias atoma=&apos;atom -a&apos;</div><div class="line"></div><div class="line">#blog</div><div class="line">alias blogdir=&apos;cd $&#123;m_basedir&#125;/Github/blog-hexo&apos;</div><div class="line">alias blog=&apos;pushd $&#123;m_basedir&#125;/Github/blog-hexo &amp;&amp; atom -a ./  &amp;&amp; popd&apos;</div><div class="line">alias blogd=&apos;pushd $&#123;m_basedir&#125;/Github/blog-hexo &amp;&amp; hexo d -g  &amp;&amp; popd&apos;</div><div class="line">alias blogs=&apos;pushd $&#123;m_basedir&#125;/Github/blog-hexo &amp;&amp; hexo s -g  &amp;&amp; popd&apos;</div></pre></td></tr></table></figure>
<p>配置后我只要F12 blog便用atom打开了我的blog目录，写完之后只要blogd就会执行上传！真的很方便！还可以写很多的快捷命令，搭配GuakeTerminal简直完美！有点像win下Listary。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">pydir #进入python的目录</div><div class="line">pyenv #进入python的目录并进入venv</div><div class="line">atoma #以append的方式将目录添加到atom中</div><div class="line"></div><div class="line">blogdir #进入到blog的目录</div><div class="line">blog    #用atom打开blog目录</div><div class="line">blogd   #上传</div><div class="line">blogs   #本地测试</div></pre></td></tr></table></figure>
<h1 id="No-3-Draw-io"><a href="#No-3-Draw-io" class="headerlink" title="No.3 Draw.io"></a>No.3 <a href="https://www.draw.io/" target="_blank" rel="external">Draw.io</a></h1><p>有很多的模板可以使用，支持存储在本地，Github，google drive等，在线版的viso！</p>
<p><img src="../img/6fd4b766-2a6b-42a9-b27e-1536f8d993c6.png" alt="6fd4b766-2a6b-42a9-b27e-1536f8d993c6"></p>
<h1 id="No-4-有道云笔记"><a href="#No-4-有道云笔记" class="headerlink" title="No.4 有道云笔记"></a>No.4 有道云笔记</h1><p>网易一向很良心，不像某讯。我以前是大象的忠实粉丝，在一次有道云笔记更新以后（支持新的网页版，和markdow的那次更新）我开始慢慢转移到了有道云！markdown，和网页版凭这两点就选择它了！因为我又能少装一个软件了。<br><img src="../img/c1c639a7-7a2a-4998-81cd-3f78055eba5b.png" alt="c1c639a7-7a2a-4998-81cd-3f78055eba5b"></p>
<h1 id="每天进步一点点"><a href="#每天进步一点点" class="headerlink" title="每天进步一点点!!!"></a>每天进步一点点!!!</h1><h2 id="impossible-is-I’m-possible"><a href="#impossible-is-I’m-possible" class="headerlink" title="impossible is I’m possible!!!"></a><strong>impossible is I’m possible!!!</strong></h2>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在上次介绍了一些基础的常用软件之后决定进一步探索！在知乎找到了一篇很棒的讨论，链接如下：&lt;br&gt;&lt;a href=&quot;https://www.zhihu.com/question/19811112&quot;&gt;https://www.zhihu.com/question/19811112&lt;/a&gt;通过实践找出了我比较满意的软件。&lt;br&gt;由于本人电脑只有240G的固盘，电脑性能一般，因此对与内存和硬盘都是相当的奢侈，能原配的就不去搞些华丽胡哨的&lt;br&gt;东西，本着能简单绝不复杂，能默认绝不修改的原则去测试一些软件，以及一些脚本，特此记录以备后查！&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://ygcaicn.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://ygcaicn.github.io/tags/Linux/"/>
    
      <category term="Ubuntu" scheme="https://ygcaicn.github.io/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://ygcaicn.github.io/uncategorized/hello-md.html"/>
    <id>https://ygcaicn.github.io/uncategorized/hello-md.html</id>
    <published>2018-01-15T10:20:54.039Z</published>
    <updated>2018-01-15T10:20:54.039Z</updated>
    
    <content type="html"><![CDATA[<p>—categories: 杂项<br>title: hello.md<br>date: 2017-03-05 18:08:28<br>tags: Markdown</p>
<h2 id="categories-杂项"><a href="#categories-杂项" class="headerlink" title="categories: 杂项"></a>categories: 杂项</h2><p>MarkDown 文本编辑器：  </p>
<ul>
<li>MarkdownPad（我使用的是Markdownpad2）</li>
<li>Sublime</li>
<li>Atom</li>
<li>有道云笔记（直接存入云笔记很方便）</li>
<li>任何有文本编辑功能的软件都可以书写markdown</li>
</ul>
<a id="more"></a>
<h2 id="Hello-word！"><a href="#Hello-word！" class="headerlink" title="Hello word！"></a>Hello word！</h2><p>打开Markdown编辑器，新建Hello.md文件，写入下面的内容：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Hello world!</div><div class="line">===</div><div class="line"></div><div class="line">I love [Google](http://www.google.com)!</div></pre></td></tr></table></figure>
<p>可视化以后的效果：</p>
<h1 id="Hello-world"><a href="#Hello-world" class="headerlink" title="Hello world!"></a>Hello world!</h1><p>I love <a href="http://www.google.com" target="_blank" rel="external">Google</a>!</p>
<hr>
<h1 id="关于MarkdownPad2"><a href="#关于MarkdownPad2" class="headerlink" title="关于MarkdownPad2"></a>关于MarkdownPad2</h1><ul>
<li>官方<a href="https://markdownpad.com/" target="_blank" rel="external">MarkdownPad2</a>,可以下载Pro版本。</li>
<li>破解<a href="http://www.jianshu.com/p/fa7c4387dc62" target="_blank" rel="external">注册码</a><blockquote>
<p>邮箱：<br>Soar360@live.com<br>授权秘钥：<br>GBPduHjWfJU1mZqcPM3BikjYKF6xKhlKIys3i1MU2eJHqWGImDHzWdD6xhMNLGVpbP2M5SN6bnxn2kSE8qHqNY5QaaRxmO3YSMHxlv2EYpjdwLcPwfeTG7kUdnhKE0vVy4RidP6Y2wZ0q74f47fzsZo45JE2hfQBFi2O9Jldjp1mW8HUpTtLA2a5/sQytXJUQl/QKO0jUQY4pa5CCx20sV1ClOTZtAGngSOJtIOFXK599sBr5aIEFyH0K7H4BoNMiiDMnxt1rD8Vb/ikJdhGMMQr0R4B+L3nWU97eaVPTRKfWGDE8/eAgKzpGwrQQoDh+nzX1xoVQ8NAuH+s4UcSeQ==</p>
</blockquote>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;—categories: 杂项&lt;br&gt;title: hello.md&lt;br&gt;date: 2017-03-05 18:08:28&lt;br&gt;tags: Markdown&lt;/p&gt;
&lt;h2 id=&quot;categories-杂项&quot;&gt;&lt;a href=&quot;#categories-杂项&quot; class=&quot;headerlink&quot; title=&quot;categories: 杂项&quot;&gt;&lt;/a&gt;categories: 杂项&lt;/h2&gt;&lt;p&gt;MarkDown 文本编辑器：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MarkdownPad（我使用的是Markdownpad2）&lt;/li&gt;
&lt;li&gt;Sublime&lt;/li&gt;
&lt;li&gt;Atom&lt;/li&gt;
&lt;li&gt;有道云笔记（直接存入云笔记很方便）&lt;/li&gt;
&lt;li&gt;任何有文本编辑功能的软件都可以书写markdown&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>test</title>
    <link href="https://ygcaicn.github.io/%E6%9D%82%E9%A1%B9/test-acmurl.html"/>
    <id>https://ygcaicn.github.io/杂项/test-acmurl.html</id>
    <published>2018-01-15T05:28:32.000Z</published>
    <updated>2018-01-15T10:26:16.726Z</updated>
    
    <content type="html"><![CDATA[<p>搜集的各大高校的ACM网站…</p>
<a id="more"></a>
<h1 id="中国：-China"><a href="#中国：-China" class="headerlink" title="中国：(China)"></a>中国：(China)</h1><h1 id="华东地区："><a href="#华东地区：" class="headerlink" title="华东地区："></a>华东地区：</h1><h2 id="浙江："><a href="#浙江：" class="headerlink" title="浙江："></a>浙江：</h2><p>杭州电子科技大学(HDU)：<a href="http://acm.hdu.edu.cn/" target="_blank" rel="external">http://acm.hdu.edu.cn/</a></p>
<p>浙江大学（ZJU）：<a href="http://acm.zju.edu.cn/" target="_blank" rel="external">http://acm.zju.edu.cn/</a></p>
<p>浙江工业大学（ZJUT）：<a href="http://acm.zjut.edu.cn/" target="_blank" rel="external">http://acm.zjut.edu.cn/</a></p>
<p>浙江师范大学（ZJNU）：<a href="http://acm.zjnu.cn/" target="_blank" rel="external">http://acm.zjnu.cn/</a></p>
<p>浙江工商（ZJGSU）：<a href="http://acm.zjgsu.edu.cn/" target="_blank" rel="external">http://acm.zjgsu.edu.cn/</a></p>
<p>宁波理工（NIT）：<a href="http://acm.nit.net.cn/" target="_blank" rel="external">http://acm.nit.net.cn/</a></p>
<h2 id="上海："><a href="#上海：" class="headerlink" title="上海："></a>上海：</h2><p>华东师范大学（ECNU）：<a href="http://acm.cs.ecnu.edu.cn/" target="_blank" rel="external">http://acm.cs.ecnu.edu.cn/</a></p>
<p>华东理工大学（ECUST）：<a href="http://acm.ecust.edu.cn/" target="_blank" rel="external">http://acm.ecust.edu.cn/</a></p>
<p>同济大学（TJU）：<a href="http://acm.tongji.edu.cn/" target="_blank" rel="external">http://acm.tongji.edu.cn/</a></p>
<h2 id="江苏："><a href="#江苏：" class="headerlink" title="江苏："></a>江苏：</h2><p>中国矿业大学（CUMT）： <a href="http://219.219.62.238" target="_blank" rel="external">http://219.219.62.238</a> (我也不懂为啥连个域名都没有)<br>南京航空航天大学： <a href="http://acm.nuaa.edu.cn/" target="_blank" rel="external">http://acm.nuaa.edu.cn/</a></p>
<h2 id="福建："><a href="#福建：" class="headerlink" title="福建："></a>福建：</h2><p>福州大学（FZU）：<a href="http://acm.fzu.edu.cn/" target="_blank" rel="external">http://acm.fzu.edu.cn/</a></p>
<p>厦门大学（XMU）：<a href="http://acm.xmu.edu.cn/" target="_blank" rel="external">http://acm.xmu.edu.cn/</a></p>
<p>福建师范大学（FJNU）：<a href="http://acm.fjnu.edu.cn/" target="_blank" rel="external">http://acm.fjnu.edu.cn/</a></p>
<h2 id="安徽："><a href="#安徽：" class="headerlink" title="安徽："></a>安徽：</h2><p>中国科技大学（USTC）：<a href="http://acm.ustc.edu.cn/" target="_blank" rel="external">http://acm.ustc.edu.cn/</a></p>
<p>华北地区：</p>
<h2 id="北京："><a href="#北京：" class="headerlink" title="北京："></a>北京：</h2><p>北京交大（BJTU）：<a href="http://acm.bjtu.edu.cn/" target="_blank" rel="external">http://acm.bjtu.edu.cn/</a></p>
<p>北京大学（PKU）：<a href="http://acm.pku.edu.cn/" target="_blank" rel="external">http://acm.pku.edu.cn/</a></p>
<h2 id="天津："><a href="#天津：" class="headerlink" title="天津："></a>天津：</h2><p>南开大学（NAIKAI）：<a href="http://acm.nankai.edu.cn/" target="_blank" rel="external">http://acm.nankai.edu.cn/</a></p>
<p>天津大学（TJU）：<a href="http://acm.tju.edu.cn/toj/" target="_blank" rel="external">http://acm.tju.edu.cn/toj/</a></p>
<h1 id="东北地区："><a href="#东北地区：" class="headerlink" title="东北地区："></a>东北地区：</h1><h2 id="黑龙江："><a href="#黑龙江：" class="headerlink" title="黑龙江："></a>黑龙江：</h2><p>哈尔滨工程大学（HRBEU）：<a href="http://acm.hrbeu.edu.cn/" target="_blank" rel="external">http://acm.hrbeu.edu.cn/</a></p>
<h1 id="华南地区："><a href="#华南地区：" class="headerlink" title="华南地区："></a>华南地区：</h1><h2 id="广东："><a href="#广东：" class="headerlink" title="广东："></a>广东：</h2><h2 id="中山大学（ZSU）：http-acm-zsu-edu-cn"><a href="#中山大学（ZSU）：http-acm-zsu-edu-cn" class="headerlink" title="中山大学（ZSU）：http://acm.zsu.edu.cn/"></a>中山大学（ZSU）：<a href="http://acm.zsu.edu.cn/" target="_blank" rel="external">http://acm.zsu.edu.cn/</a></h2><h1 id="西南地区："><a href="#西南地区：" class="headerlink" title="西南地区："></a>西南地区：</h1><h2 id="四川："><a href="#四川：" class="headerlink" title="四川："></a>四川：</h2><p>西南民大（SWUN）：<a href="http://acm.swun.edu.cn/" target="_blank" rel="external">http://acm.swun.edu.cn/</a></p>
<h1 id="华中地区："><a href="#华中地区：" class="headerlink" title="华中地区："></a>华中地区：</h1><h2 id="湖北："><a href="#湖北：" class="headerlink" title="湖北："></a>湖北：</h2><p>华中科技大学（HUST）：<a href="http://acm.hust.edu.cn/JudgeOnline/" target="_blank" rel="external">http://acm.hust.edu.cn/JudgeOnline/</a></p>
<p>武汉大学（WHU）：<a href="http://acm.whu.edu.cn/" target="_blank" rel="external">http://acm.whu.edu.cn/</a></p>
<h1 id="港澳台地区："><a href="#港澳台地区：" class="headerlink" title="港澳台地区："></a>港澳台地区：</h1><h2 id="香港："><a href="#香港：" class="headerlink" title="香港："></a>香港：</h2><p>香港大学(HKOI)：<a href="http://judge.hkoi.org/" target="_blank" rel="external">http://judge.hkoi.org/</a></p>
<p>俄罗斯：(Russia)</p>
<p>乌拉尔大学（URAL）：<a href="http://acm.timus.ru/" target="_blank" rel="external">http://acm.timus.ru/</a></p>
<p>萨拉托夫大学（SGU）：<a href="http://acm.sgu.ru/" target="_blank" rel="external">http://acm.sgu.ru/</a></p>
<p>(vallod) ：<a href="http://acm.uva.es/" target="_blank" rel="external">http://acm.uva.es/</a></p>
<p>EL Judge(MIPT):：<a href="http://acm.mipt.ru/judge/problems.pl" target="_blank" rel="external">http://acm.mipt.ru/judge/problems.pl</a></p>
<p>西班牙：(Spanish)</p>
<p>瓦拉杜利德大学（UVA）：<a href="http://acm.uva.es/" target="_blank" rel="external">http://acm.uva.es/</a></p>
<h1 id="美国：-America"><a href="#美国：-America" class="headerlink" title="美国：(America)"></a>美国：(America)</h1><p>USACO: <a href="http://train.usaco.org/usacogate" target="_blank" rel="external">http://train.usaco.org/usacogate</a></p>
<p>波兰：(Poland)</p>
<p>SPOJ：<a href="http://www.spoj.pl/" target="_blank" rel="external">http://www.spoj.pl/</a></p>
<p>吉尔吉斯斯坦:：(Kirgizstan)</p>
<p>KRSU: <a href="http://www.olymp.krsu.edu.kg/GeneralProblemset.aspx" target="_blank" rel="external">http://www.olymp.krsu.edu.kg/GeneralProblemset.aspx</a></p>
<h1 id="中国各大高校BBS"><a href="#中国各大高校BBS" class="headerlink" title="中国各大高校BBS:"></a>中国各大高校BBS:</h1><p><a href="http://acm.hdu.edu.cn/forum/（杭电）" target="_blank" rel="external">http://acm.hdu.edu.cn/forum/（杭电）</a></p>
<p><a href="http://www.hdubbs.com/（杭电）" target="_blank" rel="external">http://www.hdubbs.com/（杭电）</a></p>
<p><a href="http://www.freecity.cn/（浙大）" target="_blank" rel="external">http://www.freecity.cn/（浙大）</a></p>
<p><a href="http://bbs.freecity.cn/(浙大" target="_blank" rel="external">http://bbs.freecity.cn/(浙大</a>)</p>
<p>Others：</p>
<p>Topcoder：<a href="http://www.topcoder.com/tc" target="_blank" rel="external">http://www.topcoder.com/tc</a></p>
<p>ACM-ICPC：<a href="http://icpc.baylor.edu/icpc/" target="_blank" rel="external">http://icpc.baylor.edu/icpc/</a></p>
<p>美国信息学奥林匹克竞赛官方网站：<a href="http://www.usaco.org/" target="_blank" rel="external">http://www.usaco.org/</a></p>
<p>全美计算机奥林匹克竞赛：<a href="http://ace.delos.com/usacogate" target="_blank" rel="external">http://ace.delos.com/usacogate</a></p>
<p>信息学初学者之家：<a href="http://oibh.ioiforum.org/" target="_blank" rel="external">http://oibh.ioiforum.org/</a></p>
<p>中国教育曙光网：<a href="http://www.chinaschool.org/aosai/" target="_blank" rel="external">http://www.chinaschool.org/aosai/</a></p>
<p>福建信息学奥林匹克：<a href="http://www.cfcs.com.cn/fjas/index.htm" target="_blank" rel="external">http://www.cfcs.com.cn/fjas/index.htm</a></p>
<p>IOI：<a href="http://olympiads.win.tue.nl/ioi/" target="_blank" rel="external">http://olympiads.win.tue.nl/ioi/</a></p>
<p>高效信息学在线判题系统（VIJOS）：<a href="http://www.vijos.cn/" target="_blank" rel="external">http://www.vijos.cn/</a></p>
<p>ACM的例程和测试数据：<a href="http://www.karrels.org/Ed/ACM/" target="_blank" rel="external">http://www.karrels.org/Ed/ACM/</a></p>
<p>ACM社区：<a href="http://www.608088.com/" target="_blank" rel="external">http://www.608088.com/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;搜集的各大高校的ACM网站…&lt;/p&gt;
    
    </summary>
    
      <category term="杂项" scheme="https://ygcaicn.github.io/categories/%E6%9D%82%E9%A1%B9/"/>
    
    
      <category term="编程" scheme="https://ygcaicn.github.io/tags/%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>build-live-ubuntu打造日常使用Ubuntu</title>
    <link href="https://ygcaicn.github.io/Linux/build-live-ubuntu.html"/>
    <id>https://ygcaicn.github.io/Linux/build-live-ubuntu.html</id>
    <published>2017-11-11T17:09:42.000Z</published>
    <updated>2018-01-14T19:22:28.687Z</updated>
    
    <content type="html"><![CDATA[<p>转战Linux后尝试过不少的发行版Mint，Deepin等，换来换去最后还是换成了ubuntu。<br>Ubuntu17.10后回归Gnome桌面，真的越来越棒了！当然选择Linux作为日常live系统最大<br>的问题就是缺少很多日常必须的软件，比如QQ，office，还有一些音乐视频等娱乐软件。<br>本文带你打造一个完美的能够满足日常娱乐与学习的Linux系统！发行版为：Ubuntu17.10</p>
<a id="more"></a>
<h2 id="美图"><a href="#美图" class="headerlink" title="美图"></a>美图</h2><p>几张系统美图：<br><img src="../img/b207a505-34c5-4236-898d-21de1c7dd91e.png" alt="b207a505-34c5-4236-898d-21de1c7dd91e"><br><img src="../img/e0a9cda0-3cac-4dd4-88cb-2e201d649880.png" alt="e0a9cda0-3cac-4dd4-88cb-2e201d649880"><br><img src="../img/a3f9ed8c-efba-423d-a62d-420514282260.png" alt="a3f9ed8c-efba-423d-a62d-420514282260"><br><img src="../img/731747dc-79eb-42c0-bf02-bb98602a463a.png" alt="731747dc-79eb-42c0-bf02-bb98602a463a"><br><img src="../img/98343370-eb6a-4b11-9fe2-e0c558bf1e0d.png" alt="98343370-eb6a-4b11-9fe2-e0c558bf1e0d"></p>
<h2 id="Step1-浏览器Chrome-amp-FireFox"><a href="#Step1-浏览器Chrome-amp-FireFox" class="headerlink" title="Step1.浏览器Chrome&amp;FireFox"></a>Step1.浏览器Chrome&amp;FireFox</h2><p>浏览器是日常使用的top1。在Ubuntu下也有很多浏览器可以选择，我的搭配为Chrome为主，FireFox为辅。选择Chrome后可以在Chrome的基础上安装很多的Chrome App。</p>
<h3 id="Chrome"><a href="#Chrome" class="headerlink" title="Chrome"></a>Chrome</h3><p>Chrome主页：<a href="https://www.google.com/chrome/browser/desktop/index.html#" target="_blank" rel="external">https://www.google.com/chrome/browser/desktop/index.html#</a><br>（需要梯子自寻）</p>
<p>Chrome安装很简单在上面的链接中下着二进制包安装即可！</p>
<p><img src="../img/62c4e42a-5a98-4f11-921b-1954821b3451.png" alt="62c4e42a-5a98-4f11-921b-1954821b3451"></p>
<h3 id="FireFox"><a href="#FireFox" class="headerlink" title="FireFox"></a>FireFox</h3><p>Firefox主页：<a href="https://www.mozilla.org/en-US/firefox/new/" target="_blank" rel="external">https://www.mozilla.org/en-US/firefox/new/</a><br><img src="../img/d4329e63-1f7f-4863-8733-8309e37a8eb1.png" alt="d4329e63-1f7f-4863-8733-8309e37a8eb1"></p>
<h2 id="Step2-编辑器Atom"><a href="#Step2-编辑器Atom" class="headerlink" title="Step2. 编辑器Atom"></a>Step2. 编辑器<a href="https://atom.io" target="_blank" rel="external">Atom</a></h2><p>Atom主页：<a href="https://atom.io" target="_blank" rel="external">https://atom.io</a><br>程序员最不可缺少的就是一个好的编辑器。Atom是万能的，开源，有很多的扩展包可以使用。</p>
<p><img src="../img/96878ad6-346d-43a3-a1b7-7851683c8219.png" alt="96878ad6-346d-43a3-a1b7-7851683c8219"></p>
<p>必须扩展包：</p>
<h3 id="Sublime-Style-Column-Celection"><a href="#Sublime-Style-Column-Celection" class="headerlink" title="Sublime-Style-Column-Celection"></a>Sublime-Style-Column-Celection</h3><p>区块编辑支持<br><img src="../img/d24863a2-5697-411f-b9ad-35c032a2467a.png" alt="d24863a2-5697-411f-b9ad-35c032a2467a"><br><img src="../img/e319e32b-da3b-4814-b514-68f79f829e35.png" alt="e319e32b-da3b-4814-b514-68f79f829e35"></p>
<h3 id="gcc-make-run"><a href="#gcc-make-run" class="headerlink" title="gcc-make-run"></a>gcc-make-run</h3><p>c文件快速编译运行<br><img src="../img/93120020-fa27-445e-a77e-de0d38df843a.png" alt="93120020-fa27-445e-a77e-de0d38df843a"></p>
<h3 id="markdown-image-paste"><a href="#markdown-image-paste" class="headerlink" title="markdown-image-paste"></a>markdown-image-paste</h3><p>最棒的插件之一！！！在md文件编辑中，截图以后直接打出文件名然后Ctrl+V将图片存到配置好的目录中，并生成Markdow 图片链接。<br><img src="../img/719a6b00-d384-4b08-8656-85c24e4b3444.png" alt="719a6b00-d384-4b08-8656-85c24e4b3444"></p>
<h3 id="uuidgen"><a href="#uuidgen" class="headerlink" title="uuidgen"></a>uuidgen</h3><p>在粘贴md的图片时总是要起文件名也是一件麻烦的事，还要保证不重复。uuidgen完美解决这个问题！只要快捷键Alt+Commend+G即生成一个uuid。保证不会重复！</p>
<p><img src="../img/3cd28274-9a9c-4f1b-8fee-0594c307f9c1.png" alt="3cd28274-9a9c-4f1b-8fee-0594c307f9c1"></p>
<h3 id="atom-python-run"><a href="#atom-python-run" class="headerlink" title="atom-python-run"></a>atom-python-run</h3><p>快速python运行！<br><img src="../img/315006bb-9155-4c78-a262-7fbd3e319992.png" alt="315006bb-9155-4c78-a262-7fbd3e319992"></p>
<h3 id="markdown-preview-plus"><a href="#markdown-preview-plus" class="headerlink" title="markdown-preview-plus"></a>markdown-preview-plus</h3><p> markdown预览，支持latex公式嵌入。<br><img src="../img/f291e0ac-04ec-433b-a753-8bb83c3bd226.png" alt="f291e0ac-04ec-433b-a753-8bb83c3bd226"></p>
<h3 id="markdown-scroll-sync"><a href="#markdown-scroll-sync" class="headerlink" title="markdown-scroll-sync"></a>markdown-scroll-sync</h3><p> markdown预览时同步滚动。<br><img src="../img/6cee2b03-1e20-498c-82a1-9f34a5a55cd0.png" alt="6cee2b03-1e20-498c-82a1-9f34a5a55cd0"></p>
<h2 id="Step3-音乐"><a href="#Step3-音乐" class="headerlink" title="Step3.音乐"></a>Step3.音乐</h2><p>听歌你可以选择网页：</p>
<p><a href="http://music.163.com" target="_blank" rel="external">http://music.163.com</a></p>
<p><a href="https://youtube.com" target="_blank" rel="external">https://youtube.com</a></p>
<p>但是你有更好的选择，就是Chrome app, Netease Music!</p>
<p><img src="../img/c454aefc-269a-4501-8c0f-1c06021023c5.png" alt="c454aefc-269a-4501-8c0f-1c06021023c5"></p>
<p><img src="../img/d56fbec3-d2b5-4262-afbe-41e847a70b36.png" alt="d56fbec3-d2b5-4262-afbe-41e847a70b36"></p>
<p>chrome app的启动是不依赖与chrome的界面的，因此你完全可以在不启动chrome的情况下直接启动music！</p>
<h2 id="Step4-微信（可作为QQ的替代品）"><a href="#Step4-微信（可作为QQ的替代品）" class="headerlink" title="Step4.微信（可作为QQ的替代品）"></a>Step4.微信（可作为QQ的替代品）</h2><p>同样chrome app中安装Wechat，其实就是网页版的wechat封装成单独的app可以独立启动！这大概是我对微信刮目相看的唯一理由了。。QQ也是有chrome app的，但是选择wechat而不选择QQ是因为wechat的功能要强大的多！比如支持与好友或者手机互传文件！！！！对的你没看错是文件！！当然照片也是可以的！并且照片是支持截图后Ctrl+v直接粘贴发送的，是不是很方便。然而QQ只能发个表情包里面的表情。。</p>
<p><img src="../img/53a62b2f-2c64-4531-b933-e66cab438c64.jpg" alt="53a62b2f-2c64-4531-b933-e66cab438c64"></p>
<h2 id="Step5-office系列"><a href="#Step5-office系列" class="headerlink" title="Step5.office系列"></a>Step5.office系列</h2><p>office系列的软件有自带的liberate office，效果嘛，，谁用谁知道！….支持国产我们选择wps，完美兼容Mxx公司的几大坨。</p>
<p>wps 主页：<a href="http://wps-community.org/download.html" target="_blank" rel="external">http://wps-community.org/download.html</a></p>
<p><img src="../img/0dab9e22-085d-4162-83f7-20a417430d75.png" alt="0dab9e22-085d-4162-83f7-20a417430d75"><br><img src="../img/4152da53-40f7-4430-ad4b-2533323b3012.png" alt="4152da53-40f7-4430-ad4b-2533323b3012"><br><img src="../img/d3216ba8-b725-457e-9da3-dbd507444c6f.png" alt="d3216ba8-b725-457e-9da3-dbd507444c6f"></p>
<blockquote>
<p>Download <a href="http://ftp.debian.org/debian/pool/main/libp/libpng/libpng12-0_1.2.50-2+deb8u3_amd64.deb" target="_blank" rel="external">libpng12-0_1.2.50-2+deb8u2_amd64.deb</a>. If you use a 32 bit system, download the 32 bit deb file.<br>Install the package and then install wps-office.</p>
</blockquote>
<h2 id="Step6-Foxit-Reader"><a href="#Step6-Foxit-Reader" class="headerlink" title="Step6.Foxit Reader"></a>Step6.Foxit Reader</h2><p>Foxit Reader完美支持Linux：</p>
<p>Foxit 主页：<a href="https://www.foxitsoftware.com/pdf-reader/" target="_blank" rel="external">https://www.foxitsoftware.com/pdf-reader/</a></p>
<p><img src="../img/387400dc-1467-4222-b56b-74e966d15e48.png" alt="387400dc-1467-4222-b56b-74e966d15e48"></p>
<h2 id="Step7-视频播放器"><a href="#Step7-视频播放器" class="headerlink" title="Step7.视频播放器"></a>Step7.视频播放器</h2><p>SMplayer</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;转战Linux后尝试过不少的发行版Mint，Deepin等，换来换去最后还是换成了ubuntu。&lt;br&gt;Ubuntu17.10后回归Gnome桌面，真的越来越棒了！当然选择Linux作为日常live系统最大&lt;br&gt;的问题就是缺少很多日常必须的软件，比如QQ，office，还有一些音乐视频等娱乐软件。&lt;br&gt;本文带你打造一个完美的能够满足日常娱乐与学习的Linux系统！发行版为：Ubuntu17.10&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://ygcaicn.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://ygcaicn.github.io/tags/Linux/"/>
    
      <category term="Ubuntu" scheme="https://ygcaicn.github.io/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu17.10-ChineseInputContexts</title>
    <link href="https://ygcaicn.github.io/Linux/Ubuntu-ChineseInputContexts.html"/>
    <id>https://ygcaicn.github.io/Linux/Ubuntu-ChineseInputContexts.html</id>
    <published>2017-11-11T15:32:29.000Z</published>
    <updated>2018-01-15T10:26:31.156Z</updated>
    
    <content type="html"><![CDATA[<p>unbuntu下一些常用的软件无法输入中文，这使人很不爽，经过一段时间的努力基本解决了系统中文输入以及常用软件输入中文的问题！<br>环境为Ubuntu17.10 （17.04同样适用）。<br>常用软件包括：</p>
<ul>
<li>Atom</li>
<li>Wps</li>
<li>QtCreator</li>
</ul>
<a id="more"></a>
<h2 id="系统中文输入"><a href="#系统中文输入" class="headerlink" title="系统中文输入"></a>系统中文输入</h2><p>看图，不多说：</p>
<p><img src="../img/7c1e95b2-17a3-4322-ab84-8c09619e237e.png" alt="7c1e95b2-17a3-4322-ab84-8c09619e237e"></p>
<p><img src="../img/8f506da4-b2d3-4a23-84e3-53472b5f0320.png" alt="8f506da4-b2d3-4a23-84e3-53472b5f0320"></p>
<p><img src="../img/8a39b319-f52c-4f2d-a61a-de2f62dead49.png" alt="8a39b319-f52c-4f2d-a61a-de2f62dead49"></p>
<p><img src="../img/ddb58d66-7572-4a6f-8d9f-0d20b28ccdf8.png" alt="ddb58d66-7572-4a6f-8d9f-0d20b28ccdf8"></p>
<p>效果图：<br><img src="../img/4d3ae893-f910-4c23-8749-ef7bf963ef56.png" alt="4d3ae893-f910-4c23-8749-ef7bf963ef56"></p>
<h2 id="Qt-QtCreator"><a href="#Qt-QtCreator" class="headerlink" title="Qt QtCreator"></a>Qt QtCreator</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install fcitx-libs-qt fcitx-libs-qt5</div><div class="line"></div><div class="line">cp /usr/lib/x86_64-linux-gnu/qt5/plugins/platforminputcontexts/libfcitxplatforminputcontextplugin.so  ~/qtcreator-4.4.0/lib/Qt/plugins/platforminputcontexts/</div></pre></td></tr></table></figure>
<p>以上操作其实就是安装fcitx-libs-qt和fcitx-libs-qt5的库，然后将动态链接拷贝到qtcreator的插件目录中，至于为什么是这个目录需要你自己去发现，不过我们可以看到在该目录中已经存在ibux的动态链接库，我们只是把fcitx的加进去而已。</p>
<p><img src="../img/b7a25a45-c60d-44ba-bcaa-2ead2ca1bd4e.png" alt="b7a25a45-c60d-44ba-bcaa-2ead2ca1bd4e"></p>
<p>当然你也可以不拷贝直接将libfcitxplatforminputcontextplugin.so所在的目录加入到环境变量中应该也是可以的（我没有测试）：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo vim /etx/bash.bashrc</div></pre></td></tr></table></figure>
<p>在文件最后添加一行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">export $PATH = $PATH:/usr/lib/x86_64-linux-gnu/qt5/plugins/platforminputcontexts/</div></pre></td></tr></table></figure></p>
<p>到此重启qtcreator已经可以输入中文了。就是这么简单！<br>效果图：<br><img src="../img/fa8ee2df-6668-469f-b965-55174c5275e3.png" alt="370933ff-bb56-47de-8c4c-aca83576cf79"></p>
<h2 id="Wps"><a href="#Wps" class="headerlink" title="Wps"></a>Wps</h2><p>google搜到的解决办法,(亲测在Ubuntu17.04&amp;17.10中无效)</p>
<blockquote>
<p>wps文字不能输入中文解决  </p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ vim /usr/bin/wps</div></pre></td></tr></table></figure>
<p>修改wps启动文件：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">#!/bin/bash</div><div class="line">export XMODIFIERS=&quot;@im=fcitx&quot;</div><div class="line">export QT_IM_MODULE=&quot;fcitx&quot;</div><div class="line">gOpt=</div><div class="line">#gOptExt=-multiply</div><div class="line">gTemplateExt=(&quot;wpt&quot; &quot;dot&quot; &quot;dotx&quot;)</div></pre></td></tr></table></figure>
<p>wps writer,表格，ppt对应的启动文件分别为：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">/usr/bin/wps</div><div class="line">/usr/bin/et</div><div class="line">/usr/bin/wpp</div></pre></td></tr></table></figure>
<p><img src="../img/a419806f-81a9-4ace-8249-874e1a004b45.png" alt="a419806f-81a9-4ace-8249-874e1a004b45"></p>
<p>以上方式在17.04和17.10中亲测无效！！！</p>
<p>受到qtcreator的启示，同样将libfcitxplatforminputcontextplugin.so动态链接库拷贝到wps的目录中，wps的目录位于：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/opt/kingsoft/wps-office/office6</div></pre></td></tr></table></figure>
<p>可以看到在office6目录下有一个这样的路径：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/opt/kingsoft/wps-office/office6/qt/plugins/</div></pre></td></tr></table></figure>
<p>和qtcreator的很相似，只是没有platforminputcontexts这个下一级目录，由于强迫症就建立一个这个目录（其实不建也是可以的）把libfcitxplatforminputcontextplugin.so拷贝进来，然后启动wps发现完美解决。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">sudo mkdir /opt/kingsoft/wps-office/office6/qt/plugins/platforminputcontexts</div><div class="line"></div><div class="line">sudo cp  /usr/lib/x86_64-linux-gnu/qt5/plugins/platforminputcontexts/libfcitxplatforminputcontextplugin.so  /opt/kingsoft/wps-office/office6/qt/plugins/platforminputcontexts/</div><div class="line"></div><div class="line">fcitx-autostart</div><div class="line"></div><div class="line">wps</div></pre></td></tr></table></figure>
<p>效果图：<br><img src="../img/5e598032-adc5-48ad-a1a3-8a2cd012861a.png" alt="5e598032-adc5-48ad-a1a3-8a2cd012861a"></p>
<h2 id="Atom"><a href="#Atom" class="headerlink" title="Atom"></a>Atom</h2><p>Atom 我没有测试上面的方法，应该也是可以的。我的解决办法是编译安装。</p>
<p>Atom的官方网址：<a href="https://atom.io/" target="_blank" rel="external">https://atom.io/</a></p>
<p>binary包安装以后无法输入中文，后来采用编译安装问题的到解决。</p>
<p>编译安装参考：<a href="http://flight-manual.atom.io/hacking-atom/sections/hacking-on-atom-core/#platform-linux" target="_blank" rel="external">http://flight-manual.atom.io/hacking-atom/sections/hacking-on-atom-core/#platform-linux</a></p>
<p>效果图：<br><img src="../img/01cf646b-b789-4b42-9278-adcdec0ffed6.png" alt="01cf646b-b789-4b42-9278-adcdec0ffed6"></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>以上通过安装 fcitx-libs-qt fcitx-libs-qt5，然后将动态链接库拷贝到软件的启动目录（或者特定的库目录中）完美解决了Qtcreator，wps，Atom在Ubuntu中的中文输入问题！！Enjoy your Ubuntu!<br>&lt;</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;unbuntu下一些常用的软件无法输入中文，这使人很不爽，经过一段时间的努力基本解决了系统中文输入以及常用软件输入中文的问题！&lt;br&gt;环境为Ubuntu17.10 （17.04同样适用）。&lt;br&gt;常用软件包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Atom&lt;/li&gt;
&lt;li&gt;Wps&lt;/li&gt;
&lt;li&gt;QtCreator&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://ygcaicn.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://ygcaicn.github.io/tags/Linux/"/>
    
      <category term="Qt" scheme="https://ygcaicn.github.io/tags/Qt/"/>
    
      <category term="wps" scheme="https://ygcaicn.github.io/tags/wps/"/>
    
  </entry>
  
  <entry>
    <title>Qt-doc-struct</title>
    <link href="https://ygcaicn.github.io/Qt/qt-doc-struct.html"/>
    <id>https://ygcaicn.github.io/Qt/qt-doc-struct.html</id>
    <published>2017-11-09T16:09:40.000Z</published>
    <updated>2017-11-09T16:51:30.139Z</updated>
    
    <content type="html"><![CDATA[<p>Qt的文档写的非常棒！学习QT最重要的就是学会看官方的文档，了解文档的结构有助于快速的查询文档，解决问题。Qt官方文档的主页为<a href="http://doc.qt.io" target="_blank" rel="external">http://doc.qt.io</a><br><img src="../img/4bbdac2a-5470-4829-8a47-5cfed7253eba.png" alt="4bbdac2a-5470-4829-8a47-5cfed7253eba"></p>
<p>进入Qt Reference Documentation后可以看到Qt的文档还分为不同的分类，本文主要是介绍第一个分类：Class Lists</p>
<p><img src="../img/49e21d26-e157-40b5-acb1-3e492b9cf2d8.png" alt="49e21d26-e157-40b5-acb1-3e492b9cf2d8"></p>
<p>Class Lists中又有不同的索引方式，方便不同情景下查询：<br><img src="../img/c42b0ad4-92e7-4dcf-b09f-14bce8261eea.png" alt="c42b0ad4-92e7-4dcf-b09f-14bce8261eea"> </p>
<p>Qt的class文档大致分为3个部分，Type（数据类型），Functions（成员函数），Macros（宏）。每个部分又分为两块，前一块是一个list，简单的列举，后一块为detail，详细信息。每个类的文档都是在同一个html页面上，采用锚点相互跳转，这也是非常棒的一点！</p>
<a id="more"></a>
<h2 id="QDir-Class-类名"><a href="#QDir-Class-类名" class="headerlink" title="QDir Class 类名"></a>QDir Class <em>类名</em></h2><p><img src="../img/qdirdfadfclass.png" alt="qdirdfadfclass"></p>
<p>The QDir class provides access to directory structures and their contents. More… <em>简单介绍功能，可点击查看详细</em></p>
<table>
<thead>
<tr>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>Header:</td>
<td>#include <qdir></qdir></td>
</tr>
<tr>
<td>qmake:</td>
<td>QT += core</td>
</tr>
</tbody>
</table>
<p><em>说明header和qmake的包含操作</em></p>
<hr>
<h2 id="Public-Types-公有的数据类型"><a href="#Public-Types-公有的数据类型" class="headerlink" title="Public Types 公有的数据类型"></a>Public Types <em>公有的数据类型</em></h2><p><img src="../img/ae7e90b2-2b94-45af-819e-cb99c0f686e3.png" alt="ae7e90b2-2b94-45af-819e-cb99c0f686e3"></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">enum	Filter &#123; Dirs, AllDirs, Files, Drives, ..., CaseSensitive &#125;</div><div class="line">flags	Filters</div></pre></td></tr></table></figure>
<blockquote>
<p>The Filters type is a typedef for QFlags<filter>. It stores an OR combination of Filter values.</filter></p>
</blockquote>
<h2 id="Public-Functions-公有成员函数"><a href="#Public-Functions-公有成员函数" class="headerlink" title="Public Functions 公有成员函数"></a>Public Functions <em>公有成员函数</em></h2><p><img src="../img/baac4270-afb5-41f3-ac10-4c8d217d2e56.png" alt="baac4270-afb5-41f3-ac10-4c8d217d2e56"><br>对象可以访问的函数,编程过程中主要查阅的就是这部分。</p>
<h2 id="Static-Public-Members-静态成员函数"><a href="#Static-Public-Members-静态成员函数" class="headerlink" title="Static Public Members  静态成员函数"></a>Static Public Members  <em>静态成员函数</em></h2><p><img src="../img/74c56c41-e57f-49e2-bb0b-2863471984f8.png" alt="74c56c41-e57f-49e2-bb0b-2863471984f8"></p>
<p>解决同一个类不同对象之间的数据共享问题。主要作用是用来访问同一个类中的静态数据成员，维护对象之间的数据共享。</p>
<p>访问不依赖于对象。</p>
<p>可以通过对象与类名进行调用，一般习惯与用类名进行访问。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">static QDir	current()</div><div class="line"></div><div class="line">//example：</div><div class="line"></div><div class="line">QDir::current()</div><div class="line"></div><div class="line">//return a QDir Object of current directory.</div></pre></td></tr></table></figure>
<h2 id="Macros-宏"><a href="#Macros-宏" class="headerlink" title="Macros 宏"></a>Macros 宏</h2><p><img src="../img/747b2a9a-3760-4319-8dda-06b283649d8e.png" alt="747b2a9a-3760-4319-8dda-06b283649d8e"></p>
<hr>
<h2 id="Detailed-Description"><a href="#Detailed-Description" class="headerlink" title="Detailed Description"></a>Detailed Description</h2><p>该部分介绍QDir的整体概览。又分为小的章节进行介绍</p>
<h3 id="Navigation-and-Directory-Operations"><a href="#Navigation-and-Directory-Operations" class="headerlink" title="Navigation and Directory Operations"></a>Navigation and Directory Operations</h3><h3 id="Files-and-Directory-Contents"><a href="#Files-and-Directory-Contents" class="headerlink" title="Files and Directory Contents"></a>Files and Directory Contents</h3><h3 id="The-Current-Directory-and-Other-Special-Paths"><a href="#The-Current-Directory-and-Other-Special-Paths" class="headerlink" title="The Current Directory and Other Special Paths"></a>The Current Directory and Other Special Paths</h3><p><img src="../img/93ced37a-d761-4d88-a0d4-033002f35a25.png" alt="93ced37a-d761-4d88-a0d4-033002f35a25"></p>
<h3 id="Path-Manipulation-and-Strings"><a href="#Path-Manipulation-and-Strings" class="headerlink" title="Path Manipulation and Strings"></a>Path Manipulation and Strings</h3><h3 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h3><hr>
<h2 id="Member-Type-Documentation"><a href="#Member-Type-Documentation" class="headerlink" title="Member Type Documentation"></a>Member Type Documentation</h2><p><img src="../img/559c5e7d-9573-4d55-b9b0-e4b45f100494.png" alt="559c5e7d-9573-4d55-b9b0-e4b45f100494"></p>
<p>具体的介绍数据类型</p>
<h2 id="Member-Function-Documentation"><a href="#Member-Function-Documentation" class="headerlink" title="Member Function Documentation"></a>Member Function Documentation</h2><p><img src="../img/g3364be29-656a-4a1f-8b6e-2f96a635e4d3.png" alt="g3364be29-656a-4a1f-8b6e-2f96a635e4d3"></p>
<p><img src="../img/ee471f05-3f7e-4537-baa3-537f69c3c64f.png" alt="ee471f05-3f7e-4537-baa3-537f69c3c64f"><br>具体的介绍Function，包括static function。每个函数后有<code>See also xxx()</code>非常的方便。</p>
<h2 id="Macro-Documentation"><a href="#Macro-Documentation" class="headerlink" title="Macro Documentation"></a>Macro Documentation</h2><p><img src="../img/c70d4c00-6840-4eb5-be99-4c18cdf4fe01.png" alt="c70d4c00-6840-4eb5-be99-4c18cdf4fe01"><br>具体的介绍宏</p>
<h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><h3 id="QDir"><a href="#QDir" class="headerlink" title="QDir"></a><a href="http://doc.qt.io/qt-5/qdir.html#QDir" target="_blank" rel="external">QDir</a></h3>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Qt的文档写的非常棒！学习QT最重要的就是学会看官方的文档，了解文档的结构有助于快速的查询文档，解决问题。Qt官方文档的主页为&lt;a href=&quot;http://doc.qt.io&quot;&gt;http://doc.qt.io&lt;/a&gt;&lt;br&gt;&lt;img src=&quot;../img/4bbdac2a-5470-4829-8a47-5cfed7253eba.png&quot; alt=&quot;4bbdac2a-5470-4829-8a47-5cfed7253eba&quot;&gt;&lt;/p&gt;
&lt;p&gt;进入Qt Reference Documentation后可以看到Qt的文档还分为不同的分类，本文主要是介绍第一个分类：Class Lists&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../img/49e21d26-e157-40b5-acb1-3e492b9cf2d8.png&quot; alt=&quot;49e21d26-e157-40b5-acb1-3e492b9cf2d8&quot;&gt;&lt;/p&gt;
&lt;p&gt;Class Lists中又有不同的索引方式，方便不同情景下查询：&lt;br&gt;&lt;img src=&quot;../img/c42b0ad4-92e7-4dcf-b09f-14bce8261eea.png&quot; alt=&quot;c42b0ad4-92e7-4dcf-b09f-14bce8261eea&quot;&gt; &lt;/p&gt;
&lt;p&gt;Qt的class文档大致分为3个部分，Type（数据类型），Functions（成员函数），Macros（宏）。每个部分又分为两块，前一块是一个list，简单的列举，后一块为detail，详细信息。每个类的文档都是在同一个html页面上，采用锚点相互跳转，这也是非常棒的一点！&lt;/p&gt;
    
    </summary>
    
      <category term="Qt" scheme="https://ygcaicn.github.io/categories/Qt/"/>
    
    
      <category term="Qt" scheme="https://ygcaicn.github.io/tags/Qt/"/>
    
      <category term="cpp" scheme="https://ygcaicn.github.io/tags/cpp/"/>
    
  </entry>
  
  <entry>
    <title>TCP/IP</title>
    <link href="https://ygcaicn.github.io/Linux/TCP-IP.html"/>
    <id>https://ygcaicn.github.io/Linux/TCP-IP.html</id>
    <published>2017-10-24T12:32:55.000Z</published>
    <updated>2017-10-24T07:37:47.173Z</updated>
    
    <content type="html"><![CDATA[<h2 id="TCP-IP"><a href="#TCP-IP" class="headerlink" title="TCP/IP"></a>TCP/IP</h2><p>维基百科：<a href="https://zh.wikipedia.org/wiki/TCP/IP%E5%8D%8F%E8%AE%AE%E6%97%8F" target="_blank" rel="external">https://zh.wikipedia.org/wiki/TCP/IP%E5%8D%8F%E8%AE%AE%E6%97%8F</a></p>
<p>互联网协议族（英语：Internet Protocol Suite，缩写IPS）是一个网络通信模型，以及一整个网络传输协议家族，为互联网的基础通信架构。它常被通称为TCP/IP协议族（英语：TCP/IP Protocol Suite，或TCP/IP Protocols），简称TCP/IP[2]。因为该协议家族的两个核心协议：TCP（传输控制协议）和IP（网际协议），为该家族中最早通过的标准[3]。由于在网络通讯协议普遍采用分层的结构，当多个层次的协议共同工作时，类似计算机科学中的堆栈，因此又被称为TCP/IP协议栈（英语：TCP/IP Protocol Stack）</p>
<p>整个通信网络的任务，可以划分成不同的功能区块，即所谓的层级（layer）。用于互联网的协议可以比照TCP/IP参考模型进行分类。TCP/IP协议栈起始于第三层协议IP（网际协议）。</p>
<a id="more"></a>
<p>TCP/IP参考模型是一个抽象的分层模型，这个模型中，所有的TCP/IP系列网络协议都被归类到4个抽象的”层”中。每一抽象层创建在低一层提供的服务上，并且为高一层提供服务。 完成一些特定的任务需要众多的协议协同工作，这些协议分布在参考模型的不同层中的，因此有时称它们为一个协议栈。 TCP/IP参考模型为TCP/IP协议栈订身制作。其中IP协议只关心如何使得数据能够跨越本地网络边界的问题，而不关心如何利用传输媒体，数据如何传输。整个TCP/IP协议栈则负责解决数据如何通过许许多多个点对点通路（一个点对点通路，也称为一”跳”, 1 hop）顺利传输，由此不同的网络成员能够在许多”跳”的基础上创建相互的数据通路。</p>
<h2 id="因特网协议栈中的层"><a href="#因特网协议栈中的层" class="headerlink" title="因特网协议栈中的层"></a>因特网协议栈中的层</h2><p><img src="../img/fsdafsdfw.png" alt="fsdafsdfw"></p>
<hr>
<p>4 .  应用层application layer 例如HTTP、FTP、DNS（如BGP和RIP这样的路由协议，尽管由于各种各样的原因它们分别运行在TCP和UDP上，仍然可以将它们看作网络层的一部分）</p>
<p>3 . 传输层transport layer 例如TCP、UDP、RTP、SCTP（如OSPF这样的路由协议，尽管运行在IP上也可以看作是网络层的一部分）</p>
<p>2 .  网络互连层internet layer 对于TCP/IP来说这是因特网协议（IP）（如ICMP和IGMP这样的必须协议尽管运行在IP上，也仍然可以看作是网络互连层的一部分；ARP不运行在IP上）</p>
<p>1 . 网络接口层link layer 例如以太网、Wi-Fi、MPLS等。</p>
<h3 id="应用层"><a href="#应用层" class="headerlink" title="应用层"></a>应用层</h3><p>该层包括所有和应用程序协同工作，利用基础网络交换应用程序专用的数据的协议。 应用层是大多数普通与网络相关的程序为了通过网络与其他程序通信所使用的层。这个层的处理过程是应用特有的；数据从网络相关的程序以这种应用内部使用的格式进行传送，然后被编码成标准协议的格式。<br>一些特定的程序被认为运行在这个层上。它们提供服务直接支持用户应用。这些程序和它们对应的协议包括HTTP（万维网服务）、FTP（文件传输）、SMTP（电子邮件）、SSH（安全远程登陆）、DNS（名称&lt;-&gt; IP地址寻找）以及许多其他协议。 一旦从应用程序来的数据被编码成一个标准的应用层协议，它将被传送到IP栈的下一层。</p>
<p>在传输层，应用程序最常用的是TCP或者UDP，并且服务器应用程序经常与一个公开的端口号相联系。服务器应用程序的端口由互联网号码分配局（IANA）正式地分配，但是现今一些新协议的开发者经常选择它们自己的端口号。由于在同一个系统上很少超过少数几个的服务器应用，端口冲突引起的问题很少。应用软件通常也允许用户强制性地指定端口号作为运行参数。<br>连结外部的客户端程序通常使用系统分配的一个随机端口号。监听一个端口并且通过服务器将那个端口发送到应用的另外一个副本以创建对等连结（如IRC上的dcc文件传输）的应用也可以使用一个随机端口，但是应用程序通常允许定义一个特定的端口范围的规范以允许端口能够通过实现网络地址转换（NAT）的路由器映射到内部。</p>
<p>每一个应用层（TCP/IP参考模型的最高层）协议一般都会使用到两个传输层协议之一： 面向连接的TCP传输控制协议和无连接的包传输的UDP用户数据报文协议。</p>
<h3 id="常用的应用层协议有："><a href="#常用的应用层协议有：" class="headerlink" title="常用的应用层协议有："></a>常用的应用层协议有：</h3><p>运行在TCP协议上的协议：<br>  ● HTTP（Hypertext Transfer Protocol，超文本传输协议），主要用于普通浏览。<br>  ● HTTPS（Hypertext Transfer Protocol over Secure Socket Layer, or HTTP over SSL，安全超文本传输协议）,HTTP协议的安全版本。<br>  ● FTP（File Transfer Protocol，文件传输协议），由名知义，用于文件传输。<br>  ● POP3（Post Office Protocol, version 3，邮局协议），收邮件用。<br>  ● SMTP（Simple Mail Transfer Protocol，简单邮件传输协议），用来发送电子邮件。<br>  ● TELNET（Teletype over the Network，网络电传），通过一个终端（terminal）登陆到网络。<br>  ● SSH（Secure Shell，用于替代安全性差的TELNET），用于加密安全登陆用。<br>运行在UDP协议上的协议：<br>  ● BOOTP（Boot Protocol，启动协议），应用于无盘设备。<br>  ● NTP（Network Time Protocol，网络时间协议），用于网络同步。<br>  ● DHCP（Dynamic Host Configuration Protocol，动态主机配置协议），动态配置IP地址。<br>其他：<br>  ● DNS（Domain Name Service，域名服务），用于完成地址查找，邮件转发等工作（运行在TCP和UDP协议上）。<br>  ● ECHO（Echo Protocol，回绕协议），用于查错及测量应答时间（运行在TCP和UDP协议上）。<br>  ● SNMP（Simple Network Management Protocol，简单网络管理协议），用于网络信息的收集和网络管理。<br>  ● ARP（Address Resolution Protocol，地址解析协议），用于动态解析以太网硬件的地址。</p>
<h3 id="传输层"><a href="#传输层" class="headerlink" title="传输层"></a>传输层</h3><p>传输层的协议，能够解决诸如端到端可靠性（“数据是否已经到达目的地？”）和保证数据按照正确的顺序到达这样的问题。在TCP/IP协议组中，传输协议也包括所给数据应该送给哪个应用程序。 在TCP/IP协议组中技术上位于这个层的动态路由协议通常被认为是网络层的一部分；一个例子就是OSPF（IP协议89）。 TCP（IP协议6）是一个“可靠的”、面向连结的传输机制，它提供一种可靠的字节流保证数据完整、无损并且按顺序到达。TCP尽量连续不断地测试网络的负载并且控制发送数据的速度以避免网络过载。另外，TCP试图将数据按照规定的顺序发送。这是它与UDP不同之处，这在实时数据流或者路由高网络层丢失率应用的时候可能成为一个缺陷。 较新的SCTP也是一个“可靠的”、面向连结的传输机制。它是面向纪录而不是面向字节的，它在一个单独的连结上提供通过多路复用提供的多个子流。它也提供多路自寻址支持，其中连结终端能够被多个IP地址表示（代表多个实体接口），这样的话即使其中一个连接失败了也不中断。它最初是为电话应用开发的（在IP上传输SS7），但是也可以用于其他的应用。 UDP（IP协议号17）是一个无连结的数据报协议。它是一个“尽力传递”（best effort）或者说“不可靠”协议——不是因为它特别不可靠，而是因为它不检查数据包是否已经到达目的地，并且不保证它们按顺序到达。如果一个应用程序需要这些特性，那它必须自行检测和判断，或者使用TCP协议。 UDP的典型性应用是如流媒体（音频和视频等）这样按时到达比可靠性更重要的应用，或者如DNS查找这样的简单查询／响应应用，如果创建可靠的连结所作的额外工作将是不成比例地大。 DCCP目前正由IEFT开发。它提供TCP流动控制语义，但对于用户来说保留UDP的数据报服务模型。 TCP和UDP都用来支持一些高层的应用。任何给定网络地址的应用通过它们的TCP或者UDP端口号区分。根据惯例使一些大众所知的端口与特定的应用相联系。 RTP是为如音频和视频流这样的实时数据设计的数据报协议。RTP是使用UDP包格式作为基础的会话层，然而据说它位于因特网协议栈的传输层。</p>
<h3 id="网络互连层"><a href="#网络互连层" class="headerlink" title="网络互连层"></a>网络互连层</h3><p>TCP/IP协议族中的网络互连层（internet layer）在OSI模型中叫做网络层（network layer）。<br>正如最初所定义的，网络层解决在一个单一网络上传输数据包的问题。类似的协议有X.25和ARPANET的Host/IMP Protocol。 随着因特网思想的出现，在这个层上添加附加的功能，也就是将数据从源网络传输到目的网络。这就牵涉到在网络组成的网上选择路径将数据包传输，也就是因特网。 在因特网协议组中，IP完成数据从源发送到目的的基本任务。IP能够承载多种不同的高层协议的数据；这些协议使用一个唯一的IP协议号进行标识。ICMP和IGMP分别是1和2。 一些IP承载的协议，如ICMP（用来发送关于IP发送的诊断信息）和IGMP（用来管理多播数据），它们位于IP层之上但是完成网络层的功能，这表明因特网和OSI模型之间的不兼容性。所有的路由协议，如BGP、OSPF、和RIP实际上也是网络层的一部分，尽管它们似乎应该属于更高的协议栈。  </p>
<h3 id="网络接口层"><a href="#网络接口层" class="headerlink" title="网络接口层"></a>网络接口层</h3><p>网络接口层实际上并不是因特网协议组中的一部分，但是它是数据包从一个设备的网络层传输到另外一个设备的网络层的方法。这个过程能够在网卡的软件驱动程序中控制，也可以在韧体或者专用芯片中控制。这将完成如添加报头准备发送、通过实体媒介实际发送这样一些数据链路功能。另一端，链路层将完成数据帧接收、去除报头并且将接收到的包传到网络层。 然而，链路层并不经常这样简单。它也可能是一个虚拟专有网络（VPN）或者隧道，在这里从网络层来的包使用隧道协议和其他（或者同样的）协议组发送而不是发送到实体的接口上。VPN和隧道通常预先建好，并且它们有一些直接发送到实体接口所没有的特殊特点（例如，它可以加密经过它的数据）。由于现在链路“层”是一个完整的网络，这种协议组的递归使用可能引起混淆。但是它是一个实现常见复杂功能的一个优秀方法。（尽管需要注意预防一个已经封装并且经隧道发送下去的数据包进行再次地封装和发送）。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;TCP-IP&quot;&gt;&lt;a href=&quot;#TCP-IP&quot; class=&quot;headerlink&quot; title=&quot;TCP/IP&quot;&gt;&lt;/a&gt;TCP/IP&lt;/h2&gt;&lt;p&gt;维基百科：&lt;a href=&quot;https://zh.wikipedia.org/wiki/TCP/IP%E5%8D%8F%E8%AE%AE%E6%97%8F&quot;&gt;https://zh.wikipedia.org/wiki/TCP/IP%E5%8D%8F%E8%AE%AE%E6%97%8F&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;互联网协议族（英语：Internet Protocol Suite，缩写IPS）是一个网络通信模型，以及一整个网络传输协议家族，为互联网的基础通信架构。它常被通称为TCP/IP协议族（英语：TCP/IP Protocol Suite，或TCP/IP Protocols），简称TCP/IP[2]。因为该协议家族的两个核心协议：TCP（传输控制协议）和IP（网际协议），为该家族中最早通过的标准[3]。由于在网络通讯协议普遍采用分层的结构，当多个层次的协议共同工作时，类似计算机科学中的堆栈，因此又被称为TCP/IP协议栈（英语：TCP/IP Protocol Stack）&lt;/p&gt;
&lt;p&gt;整个通信网络的任务，可以划分成不同的功能区块，即所谓的层级（layer）。用于互联网的协议可以比照TCP/IP参考模型进行分类。TCP/IP协议栈起始于第三层协议IP（网际协议）。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://ygcaicn.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://ygcaicn.github.io/tags/Linux/"/>
    
      <category term="TCP/IP" scheme="https://ygcaicn.github.io/tags/TCP-IP/"/>
    
  </entry>
  
  <entry>
    <title>Adblock的一些软件</title>
    <link href="https://ygcaicn.github.io/%E6%9D%82%E9%A1%B9/adb.html"/>
    <id>https://ygcaicn.github.io/杂项/adb.html</id>
    <published>2017-10-16T03:02:06.000Z</published>
    <updated>2018-01-15T09:55:33.502Z</updated>
    
    <content type="html"><![CDATA[<h2 id="推荐列表"><a href="#推荐列表" class="headerlink" title="推荐列表"></a>推荐列表</h2><a id="more"></a>
<p>1.Adblock Plus （推荐）</p>
<p><a href="https://adblockplus.org/zh_CN/" target="_blank" rel="external">https://adblockplus.org/zh_CN/</a></p>
<p>2.AdBlock</p>
<p><a href="https://www.getadblock.com/" target="_blank" rel="external">https://www.getadblock.com/</a></p>
<p>3.adbyby（国产，支持去各大视频站 <code>包括https</code> 的广告，支持openwrt端）</p>
<p><a href="https://www.adbyby.com/" target="_blank" rel="external">https://www.adbyby.com/</a></p>
<p>4.adsafe (唯一比较靠谱的国产）</p>
<p><a href="http://ad-safe.com/" target="_blank" rel="external">http://ad-safe.com/</a></p>
<p>5.µBlock</p>
<p><a href="https://github.com/gorhill/uBlock" target="_blank" rel="external">https://github.com/gorhill/uBlock</a></p>
<p>6.Adblock Edge</p>
<p><a href="https://addons.mozilla.org/firefox/addon/adblock-edge/" target="_blank" rel="external">https://addons.mozilla.org/firefox/addon/adblock-edge/</a></p>
<p>7.AdGuard</p>
<p><a href="http://adguard.com/en/welcome.html" target="_blank" rel="external">http://adguard.com/en/welcome.html</a></p>
<p>8.AdFender</p>
<p><a href="http://www.adfender.com/" target="_blank" rel="external">http://www.adfender.com/</a></p>
<p>9.Bluhell Firewall</p>
<p><a href="https://addons.mozilla.org/en-US/firefox/addon/bluhell-firewall" target="_blank" rel="external">https://addons.mozilla.org/en-US/firefox/addon/bluhell-firewall</a></p>
<p>10.Proxomitron （卡饭有介绍)</p>
<p><a href="http://proximodo.sourceforge.net/" target="_blank" rel="external">http://proximodo.sourceforge.net/</a></p>
<p>11.poper-blocker</p>
<p><a href="http://wzmn.net/poper-blocker" target="_blank" rel="external">http://wzmn.net/poper-blocker</a></p>
<p>12.Updated Ad Blocker for Firefox</p>
<p><a href="https://addons.mozilla.org/en-US/firefox/addon/updated-ad-blocker-for-fire/" target="_blank" rel="external">https://addons.mozilla.org/en-US/firefox/addon/updated-ad-blocker-for-fire/</a></p>
<p>13.javascript-blocker</p>
<p><a href="http://javascript-blocker.toggleable.com/" target="_blank" rel="external">http://javascript-blocker.toggleable.com/</a></p>
<p>14.uMatrix</p>
<p><a href="https://github.com/gorhill/uMatrix" target="_blank" rel="external">https://github.com/gorhill/uMatrix</a></p>
<p>15.webmailAdBlocker （邮箱广告）</p>
<p><a href="http://jasonsavard.com/webmailAdBlocker" target="_blank" rel="external">http://jasonsavard.com/webmailAdBlocker</a></p>
<p>16.adblockvideo</p>
<p><a href="http://adblockvideo.com/" target="_blank" rel="external">http://adblockvideo.com/</a></p>
<p>17.karma-blocker</p>
<p><a href="https://github.com/arantius/karma-blocker" target="_blank" rel="external">https://github.com/arantius/karma-blocker</a></p>
<p>18.奶牛</p>
<p><a href="https://www.admuncher.com/" target="_blank" rel="external">https://www.admuncher.com/</a></p>
<h2 id="附加adb常用屏蔽（update-2017-10-24）"><a href="#附加adb常用屏蔽（update-2017-10-24）" class="headerlink" title="附加adb常用屏蔽（update 2017.10.24）"></a>附加adb常用屏蔽（update 2017.10.24）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">baidu.com###content_right</div><div class="line">baidu.com##.cr-offset</div><div class="line">baidu.com##.leftBlock</div><div class="line">mail.163.com###\31 508028782489_dvmailrecomPanelCont</div><div class="line">mail.163.com##.gWel-tabs-panel-cont</div><div class="line">mail.163.com##.gWel-tabs-list</div><div class="line">baidu.com###s_mancard_main</div><div class="line">baidu.com##.s-top-nav</div><div class="line">dazi.kukuw.com##.gg_close</div><div class="line">163.com##.col_r</div><div class="line">tech.163.com###js-ep3rdRank</div><div class="line">163.com##.gallery-tie-right</div><div class="line">163.com##.post_content_side</div><div class="line">163.com##.mt35 mod_bobo</div><div class="line">news.163.com##.clearfix.bobolist</div><div class="line">news.163.com##.mt35.mod_bobo</div><div class="line">||img1.cache.netease.com/f2e/www/index2014/images/sprite_dw2.png</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;推荐列表&quot;&gt;&lt;a href=&quot;#推荐列表&quot; class=&quot;headerlink&quot; title=&quot;推荐列表&quot;&gt;&lt;/a&gt;推荐列表&lt;/h2&gt;
    
    </summary>
    
      <category term="杂项" scheme="https://ygcaicn.github.io/categories/%E6%9D%82%E9%A1%B9/"/>
    
    
  </entry>
  
  <entry>
    <title>VIP视频解析+去广告教程</title>
    <link href="https://ygcaicn.github.io/Network/VIP%E8%A7%86%E9%A2%91%E8%A7%A3%E6%9E%90-%E5%8E%BB%E5%B9%BF%E5%91%8A.html"/>
    <id>https://ygcaicn.github.io/Network/VIP视频解析-去广告.html</id>
    <published>2017-07-22T12:32:55.000Z</published>
    <updated>2018-01-15T10:38:30.729Z</updated>
    
    <content type="html"><![CDATA[<h1 id="VIP视频解析-去广告教程"><a href="#VIP视频解析-去广告教程" class="headerlink" title="VIP视频解析+去广告教程"></a>VIP视频解析+去广告教程</h1><h2 id="Step1-打开视频网站"><a href="#Step1-打开视频网站" class="headerlink" title="Step1.打开视频网站"></a>Step1.打开视频网站</h2><p>这里以爱奇艺为例 <a href="http://www.iqiyi.com" target="_blank" rel="external">http://www.iqiyi.com</a> 打开首页看到类似下面的界面：</p>
<p><img src="http://i.imgur.com/ZQhMuKf.png" alt="Imgur"></p>
<a id="more"></a>
<h2 id="Step2-找到你要看的视频"><a href="#Step2-找到你要看的视频" class="headerlink" title="Step2.找到你要看的视频"></a>Step2.找到你要看的视频</h2><p>在视频网站中找到你想要看的视频，看到类似下面的界面：</p>
<p><img src="http://i.imgur.com/tmSUnQl.png" alt="Imgur"></p>
<ul>
<li><code>点击1</code> 指的地方，这里可以看到选择是一个需要VIP才能观看的《河神EP04》，这里无意冒犯出版商版权，多有得罪，提倡大家购买正版观看！</li>
<li><code>复制2</code> 指的链接</li>
</ul>
<h2 id="Step3-打开VIP视频解析-去广告"><a href="#Step3-打开VIP视频解析-去广告" class="headerlink" title="Step3.打开VIP视频解析+去广告"></a>Step3.打开<a href="http://blog.cumtpn.com/vipvideo" target="_blank" rel="external">VIP视频解析+去广告</a></h2><p>将刚才复制的链接粘贴到输入框中，入下图所示：<br><img src="../img/55197baf-3d81-4d57-96fb-d6d227e0ec14.png" alt="55197baf-3d81-4d57-96fb-d6d227e0ec14"></p>
<ul>
<li><code>1→</code>为输入框，输入在视频网站找到的视频链接</li>
<li><code>2→</code>为解析接口选择，在无法解析的情况下可以在这里换解析接口，另外支持自定义解析接口。</li>
<li><code>3→</code>为理解播放按钮，点击即可观看，并且没有广告哟！<br><img src="../img/d25c9418-e38c-47e0-a5d6-9d26a1c9e5b0.png" alt="d25c9418-e38c-47e0-a5d6-9d26a1c9e5b0"><h2 id="Step4-分享"><a href="#Step4-分享" class="headerlink" title="Step4.分享"></a>Step4.分享</h2>浏览器地址栏中的链接复制下来发送给好友，好友打开直接可以观看当前的影片！</li>
</ul>
<p><img src="../img/f8065bce-9676-4c04-afd5-1fe227ed94ce.png" alt="f8065bce-9676-4c04-afd5-1fe227ed94ce"></p>
<p>支持的网站：</p>
<p><img src="../img/91f751df-6680-409d-81ad-ad201ffa4d90.png" alt="91f751df-6680-409d-81ad-ad201ffa4d90"></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;VIP视频解析-去广告教程&quot;&gt;&lt;a href=&quot;#VIP视频解析-去广告教程&quot; class=&quot;headerlink&quot; title=&quot;VIP视频解析+去广告教程&quot;&gt;&lt;/a&gt;VIP视频解析+去广告教程&lt;/h1&gt;&lt;h2 id=&quot;Step1-打开视频网站&quot;&gt;&lt;a href=&quot;#Step1-打开视频网站&quot; class=&quot;headerlink&quot; title=&quot;Step1.打开视频网站&quot;&gt;&lt;/a&gt;Step1.打开视频网站&lt;/h2&gt;&lt;p&gt;这里以爱奇艺为例 &lt;a href=&quot;http://www.iqiyi.com&quot;&gt;http://www.iqiyi.com&lt;/a&gt; 打开首页看到类似下面的界面：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/ZQhMuKf.png&quot; alt=&quot;Imgur&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Network" scheme="https://ygcaicn.github.io/categories/Network/"/>
    
    
      <category term="VIP视频" scheme="https://ygcaicn.github.io/tags/VIP%E8%A7%86%E9%A2%91/"/>
    
  </entry>
  
  <entry>
    <title>关于win10version1703 多引导（grub引导）的问题</title>
    <link href="https://ygcaicn.github.io/Linux/win10-1703-grub.html"/>
    <id>https://ygcaicn.github.io/Linux/win10-1703-grub.html</id>
    <published>2017-06-01T12:32:55.000Z</published>
    <updated>2017-06-01T02:15:58.515Z</updated>
    
    <content type="html"><![CDATA[<h1 id="关于win10调包grub引导的过程"><a href="#关于win10调包grub引导的过程" class="headerlink" title="关于win10调包grub引导的过程"></a>关于win10调包grub引导的过程</h1><p>2017.05.31日中午更新了win10 1703推送的更新，一切由此变的不开心。。。</p>
<p>往常一直正常的grub引导出问题了，bios启动项中ubuntu这个item还在，不过不幸运的是即使你选择这项引导进行开机进入的依然是windows。这就让人很生气。</p>
<p>好在我还有移动硬盘的linux，当然你用live盘也是可以的。进去移动硬盘linux后按照上篇文章讲的方法修复了grub。再次进入bios选择ubuntu启动，没什么问题一下就进入了grub熟悉的界面。成功进入了内置硬盘的linuxmint。<br><a id="more"></a></p>
<p>本来以为故事到此就结束了呢，骂也骂过了，问题也修复了，万万万万没有想到的是我从win关机之后首先发现了第一个小问题：bios的启动项顺序发生了变化，以往我都是将grub放到第一启动项的，现在变成win是第一项。<br>然后接着来了一个大问题：第二项的ubuntu选项（也就是grub引导程序grubx64.efi）选择从该项启动以后又直接进入了win。到这时候我就已经有了不好的预感。同样从硬盘进入linux看看什么情况，先修复了grub</p>
<p>via.一下操作均在live linux下操作</p>
<h2 id="安装修复grub"><a href="#安装修复grub" class="headerlink" title="安装修复grub"></a>安装修复grub</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">jachin-Inspiron-5548 ubuntu # sudo grub-install --target x86_64-efi --efi-directory /mnt/esp --boot-directory=/mnt/boot</div><div class="line">Installing for x86_64-efi platform.</div><div class="line">Installation finished. No error reported.</div></pre></td></tr></table></figure>
<h2 id="grubx64-efi文件"><a href="#grubx64-efi文件" class="headerlink" title="grubx64.efi文件"></a>grubx64.efi文件</h2><pre><code>jachin-Inspiron-5548 ubuntu # ll -h grubx64.efi
-rwx------ 1 root root 118K May 31 09:45 grubx64.efi*
</code></pre><p>同样修复万以后grub一切正常，重复上次的操作，进入win，关机win，选择grub启动项。和上次结果一样又进了win。。再进入移动硬盘的linux</p>
<h2 id="重启win后grubx64-efi文件"><a href="#重启win后grubx64-efi文件" class="headerlink" title="重启win后grubx64.efi文件"></a>重启win后grubx64.efi文件</h2><pre><code>jachin-Inspiron-5548 ubuntu # ll -h grubx64.efi
-rwx------ 1 root root  74K May 31 09:45 grubx64.efi*
</code></pre><p>发现了猫腻，万恶的Mxx公司竟然修改了grubx64.efi文件。。。</p>
<p>总结一下就是：</p>
<ol>
<li>win会调包（sda1@efi）/EFI/ubuntu/grubx64.efi文件</li>
<li>win会自动调整启动项的顺序，把自己条boot1</li>
<li>linux下win的分区不能挂载，之前是开着快速启动也可以挂载的，现在不行了。这个关掉快速启动可以解决，没办法果断关掉。</li>
</ol>
<h1 id="尝试的一些方法"><a href="#尝试的一些方法" class="headerlink" title="尝试的一些方法"></a>尝试的一些方法</h1><h2 id="修改grubx64-efi的文件名（失败）"><a href="#修改grubx64-efi的文件名（失败）" class="headerlink" title="修改grubx64.efi的文件名（失败）"></a>修改grubx64.efi的文件名（失败）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">cp grubx64.efi mgrubx64.efi </div><div class="line"></div><div class="line">jachin-Inspiron-5548 ubuntu # ll -h</div><div class="line">total 240K</div><div class="line">drwxr-xr-x 2 root root 2.0K May 31 10:18 ./</div><div class="line">drwxr-xr-x 5 root root 2.0K May 28 00:45 ../</div><div class="line">-rwxr-xr-x 1 root root 118K May 31 10:09 grubx64.efi*</div><div class="line">-rwxr-xr-x 1 root root 118K May 31 10:18 mgrubx64.efi*</div></pre></td></tr></table></figure>
<p>启动过win之后：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">jachin-Inspiron-5548 ubuntu # ll -h</div><div class="line">total 78K</div><div class="line">drwxr-xr-x 2 root root 2.0K May 31 10:18 ./</div><div class="line">drwxr-xr-x 5 root root 2.0K May 28 00:45 ../</div><div class="line">-rwxr-xr-x 1 root root 74K May 31 10:09 grubx64.efi*</div><div class="line">-rwxr-xr-x 1 root root 0K May 31 10:18 mgrubx64.efi*</div></pre></td></tr></table></figure>
<p>可以看到（sda1@efi）/EFI/ubuntu/grubx64.efi文件被调包，（sda1@efi）/EFI/ubuntu/mgrubx64.efi这个更是直接被清空。</p>
<h2 id="修改grubx64-efi所在的文件夹"><a href="#修改grubx64-efi所在的文件夹" class="headerlink" title="修改grubx64.efi所在的文件夹"></a>修改grubx64.efi所在的文件夹</h2><p>这样可以正常进入grub，但是bios中的启动项要手动添加。并且启动win后添加的启动项被删除了，文件倒是没有被修改，可以通过再次添加进入grub程序。</p>
<h2 id="双Esp分区"><a href="#双Esp分区" class="headerlink" title="双Esp分区"></a>双Esp分区</h2><p>将以前的esp分区划分成两个esp分区，一个专门用来存放windows的efi程序，另一个专门存放grub的efi程序（grubx64.efi）</p>
<p>先将esp分区中的win引导程序备份出来（不过后来证明我用cp备份的引导并不能正常进入win）<br>拆分分区主要就是用了gdisk工具，格式化为vfat 使用了mkfs.vfat程序，选择一个esp作为linux的引导分区，然后安装grub，还要注意修改内置硬盘系统的/etc/fstab文件中的esp分区挂载的uuid，这个尤其重要，不修改的话也是无法正常进入系统的。ps.这些操作都是在移动硬盘的linux系统中进行的。</p>
<p>这时候重启进入bios中发现自动识别出了sda2也就是我的第二块efi分区中的grub引导，第一块的win引导没有识别。我就手动添加了一下发现启动出了问题，不能正常进入win。没办法逢山开路进winPE，bcdboot修复win引导。这时候需要注意的是你要指定win引导安装在哪个esp分区。到此的话已经win和linux都可以启动了，并且grub引导不会被win调包。</p>
<p>这种解决方法相对完美，但是没有解决win将自身调整为boot1的问题。</p>
<h2 id="需要注意的问题："><a href="#需要注意的问题：" class="headerlink" title="需要注意的问题："></a>需要注意的问题：</h2><ol>
<li>拆分分区时第二个esp分区的分区号可能会排到最后，也就是数值最大。这个你可以手动调整分区号，不过开机进入内置硬盘的win后分区号按照扇区的顺序自动调整。</li>
<li>备份win的引导我是没成功，如果又winPE的话可以不备份直接删除格式化，badboot重建win引导。</li>
<li>不要考虑在win下无损调整vfat文件系统的分区。</li>
<li>fstab文件一定要修改的，要不然进不去系统。</li>
</ol>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="http://blog.cumtpn.com/Linux/Esp-grub-uefi-windows.html" target="_blank" rel="external">ESP分区格式化，修复Windows&amp;Linux引导</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;关于win10调包grub引导的过程&quot;&gt;&lt;a href=&quot;#关于win10调包grub引导的过程&quot; class=&quot;headerlink&quot; title=&quot;关于win10调包grub引导的过程&quot;&gt;&lt;/a&gt;关于win10调包grub引导的过程&lt;/h1&gt;&lt;p&gt;2017.05.31日中午更新了win10 1703推送的更新，一切由此变的不开心。。。&lt;/p&gt;
&lt;p&gt;往常一直正常的grub引导出问题了，bios启动项中ubuntu这个item还在，不过不幸运的是即使你选择这项引导进行开机进入的依然是windows。这就让人很生气。&lt;/p&gt;
&lt;p&gt;好在我还有移动硬盘的linux，当然你用live盘也是可以的。进去移动硬盘linux后按照上篇文章讲的方法修复了grub。再次进入bios选择ubuntu启动，没什么问题一下就进入了grub熟悉的界面。成功进入了内置硬盘的linuxmint。&lt;br&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://ygcaicn.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://ygcaicn.github.io/tags/Linux/"/>
    
      <category term="Grub2" scheme="https://ygcaicn.github.io/tags/Grub2/"/>
    
      <category term="Windows" scheme="https://ygcaicn.github.io/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>ESP分区格式化，修复Windows&amp;Linux引导</title>
    <link href="https://ygcaicn.github.io/Linux/Esp-grub-uefi-windows.html"/>
    <id>https://ygcaicn.github.io/Linux/Esp-grub-uefi-windows.html</id>
    <published>2017-05-14T21:32:55.000Z</published>
    <updated>2018-01-15T10:13:42.503Z</updated>
    
    <content type="html"><![CDATA[<p>ESP分区存放的UEFI引导程序，ESP分区被格式化意味着无法进入系统<br><a id="more"></a></p>
<h1 id="系统环境"><a href="#系统环境" class="headerlink" title="系统环境"></a>系统环境</h1><p>Windows10 64<br>Linuxmint 64</p>
<p>双系统</p>
<p>Windows UEFI引导<br>Linux Grub2引导</p>
<p>sda1是我的Esp分区。被我格式化过</p>
<pre><code>sudo mkfs.vfat /dev/sda1
</code></pre><p>Linux的boot是单独分区的，设备符为：/dev/sda5</p>
<h1 id="修复Linux-Grub2"><a href="#修复Linux-Grub2" class="headerlink" title="修复Linux Grub2"></a>修复Linux Grub2</h1><p>进入U盘进入live Linux</p>
<h2 id="方式一"><a href="#方式一" class="headerlink" title="方式一"></a>方式一</h2><p>从新安装grub2,</p>
<p>挂载esp分区：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo mkdir /mnt/esp</div><div class="line">sudo mount /dev/sda1 /mnt/esp</div></pre></td></tr></table></figure>
<p>挂载boot分区：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo mkdir /mnt/boot</div><div class="line">sudo mount /dev/sda5 /mnt/boot</div></pre></td></tr></table></figure>
<p><strong>Note:</strong> 这里为什么要挂载boot分区？</p>
<p>因为esp分区</p>
<p>grub-install的–boot-directory选项默认的是镜像安装位置为/boot/grub</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">--boot-directory=DIR   install GRUB images under the directory DIR/grub</div><div class="line">                       instead of the boot/grub directory</div></pre></td></tr></table></figure>
<p>为了追求与默认一致，其实也是为了以后更新方便，我们现在要在Live Linux下挂载你的boot分区，然后将Grub的镜像安装到硬盘上的Linux系统的/boot中。其实完全可以将Grub镜像安装到Esp分区中，我们在做U盘Grub时就是将镜像直接放到了Esp分区。</p>
<p>Esp分区只存放UEFI可以认识的efi程序，以及efi程序的字体文件等。</p>
<p>安装grub2:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo grub-install --target x86_64-efi --efi-directory /mnt/esp --boot-directory=/mnt/boot</div></pre></td></tr></table></figure>
<p>成功执行结果</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Installing for x86_64-efi platform.</div><div class="line">Installation finished. No error reported.</div></pre></td></tr></table></figure>
<p>错误信息类似于grub-install: error: /usr/lib/grub/x86_64-efi/modinfo.sh doesn’t exist. Please specify –target or –directory. 这样的话，就需要安装grub-pc或grub-efi之后再试。</p>
<pre><code>sudo apt-get install grub-efi -y
</code></pre><p><strong>note:</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">--efi-directory=DIR    use DIR as the EFI System Partition root</div></pre></td></tr></table></figure>
<p>生成grub.cfg</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo grub-mkconfig -o /mnt/boot/grub/grub.cfg</div></pre></td></tr></table></figure>
<p>这时候我们看一下esp分区中的内容：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">.</div><div class="line">└── EFI</div><div class="line">    └── ubuntu</div><div class="line">        └── grubx64.efi</div></pre></td></tr></table></figure>
<p>发现里面就只有一个grubx64.efi的文件。这个文件其实就是一个UEFI程序。在UEFI中可以识别这个程序，这个程序又引导CPU进入grub。那么这个程序是怎么找到Grub镜像的位置的呢？（有待查阅，这是不是意味着grub必须从新安装？方法2不可行？）</p>
<p>看看boot分区多了什么东西：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">grub</div><div class="line">├── fonts</div><div class="line">│   └── unicode.pf2</div><div class="line">├── grub.cfg</div><div class="line">├── grubenv</div><div class="line">├── locale</div><div class="line">│   ├── en_AU.mo</div><div class="line">│   ├── en_CA.mo</div><div class="line">│   ├── en_GB.mo</div><div class="line">│   └── en@quot.mo</div><div class="line">└── x86_64-efi</div><div class="line">    ├── acpi.mod</div><div class="line">    ├── adler32.mod</div><div class="line">    ├── affs.mod</div><div class="line">    ├── afs.mod</div><div class="line">    ├── ahci.mod</div><div class="line">    :</div><div class="line">    :</div><div class="line">    :</div><div class="line">    └── zfs.mod</div></pre></td></tr></table></figure>
<p>重启系统，在UEFI界面应该已经可以看到了grub的启动项。</p>
<p>启动着实进入了grub，也进入了Linux，但是进入的是emergency mode.</p>
<p>这让我百思不得其解，为什么无法进入图形界面？？？Google也没有找到答案，关键是系统没有提示有什么出错的地方。。。</p>
<p>Emergency下df -h发现有些不对的地方：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">jachin@jachin-Inspiron-5548 ~ $ df -h</div><div class="line">Filesystem      Size  Used Avail Use% Mounted on</div><div class="line">udev            3.9G     0  3.9G   0% /dev</div><div class="line">tmpfs           790M  1.5M  789M   1% /run</div><div class="line">/dev/sda7        19G   14G  4.2G  77% /</div><div class="line">tmpfs           3.9G   49M  3.9G   2% /dev/shm</div><div class="line">tmpfs           5.0M  4.0K  5.0M   1% /run/lock</div><div class="line">tmpfs           3.9G     0  3.9G   0% /sys/fs/cgroup</div><div class="line">/dev/sda5       180M  129M   39M  77% /boot</div><div class="line">cgmfs           100K     0  100K   0% /run/cgmanager/fs</div><div class="line">tmpfs           790M   36K  790M   1% /run/user/1000</div></pre></td></tr></table></figure></p>
<p>什么情况efi分区没挂载上。</p>
<p>问题解决：最后发现是/etc/fstab出了问题。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"># /etc/fstab: static file system information.</div><div class="line">#</div><div class="line"># Use &apos;blkid&apos; to print the universally unique identifier for a</div><div class="line"># device; this may be used with UUID= as a more robust way to name devices</div><div class="line"># that works even if disks are added and removed. See fstab(5).</div><div class="line">#</div><div class="line"># &lt;file system&gt; &lt;mount point&gt;   &lt;type&gt;  &lt;options&gt;       &lt;dump&gt;  &lt;pass&gt;</div><div class="line"># / was on /dev/sda7 during installation</div><div class="line">UUID=29fb7aca-a39d-485e-bcb2-4188ae03b085 /               ext4    errors=remount-ro 0       1</div><div class="line"># /boot was on /dev/sda5 during installation</div><div class="line">UUID=d5151999-209d-4a90-95f4-e4e70ab02ac7 /boot           ext4    defaults        0       2</div><div class="line"># /boot/efi was on /dev/sda1 during installation</div><div class="line">UUID=B178-A3FF  /boot/efi       vfat    umask=0077      0       1</div><div class="line"># swap was on /dev/sda6 during installation</div><div class="line">UUID=b6f30e1d-84b0-4b23-862c-82cb12773a4f none            swap    sw              0       0</div></pre></td></tr></table></figure>
<p><code>blkid</code>发现esp分区的UUID竟然与fstab中的不一样。推测是格式化会改变分区的UUID（有待查阅资料）so，把这里的UUID改了之后问题解决。成功进入Linux。</p>
<h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><p>直接拷贝一个grubx64.efi文件,到Esp分区中。</p>
<p>没有测试，不知道行不行。</p>
<h1 id="修复Windows-引导"><a href="#修复Windows-引导" class="headerlink" title="修复Windows 引导"></a>修复Windows 引导</h1><p>很简单，进入PE</p>
<p>执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">bcdboot c:\windows /s g: /f UEFI</div></pre></td></tr></table></figure></p>
<p>c:为Windows安装的盘符，g：为Esp分区的盘符。Esp分区盘符可以在Diskgens下查看。</p>
<p><code>/f UEFI</code>选项尽量加上吧，我的不加没有成功哦。</p>
<p>到此位置你的Windows已经可以启动了。</p>
<p>查看一下上面的命令都干了什么事,可以看到esp分区中只有一个目录：EFI</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line">EFI</div><div class="line">├── Boot</div><div class="line">│   └── bootx64.efi</div><div class="line">├── Microsoft</div><div class="line">│   ├── Boot</div><div class="line">│   │   ├── BCD</div><div class="line">│   │   ├── BCD.LOG</div><div class="line">│   │   ├── BCD.LOG1</div><div class="line">│   │   ├── BCD.LOG2</div><div class="line">│   │   ├── bg-BG</div><div class="line">│   │   │   ├── bootmgfw.efi.mui</div><div class="line">│   │   │   └── bootmgr.efi.mui</div><div class="line">│   │   ├── bootmgfw.efi</div><div class="line">│   │   ├── bootmgr.efi</div><div class="line">│   │   ├── BOOTSTAT.DAT</div><div class="line">│   │   ├── boot.stl</div><div class="line">│   │   ├── cs-CZ  语言文件</div><div class="line">│   │   │   ├── bootmgfw.efi.mui</div><div class="line">│   │   │   ├── bootmgr.efi.mui</div><div class="line">│   │   │   └── memtest.efi.mui</div><div class="line">│   │   ├── en-GB</div><div class="line">│   │   │   ├── bootmgfw.efi.mui</div><div class="line">│   │   │   └── bootmgr.efi.mui</div><div class="line">│   │   ├── en-US</div><div class="line">│   │   │   ├── bootmgfw.efi.mui</div><div class="line">│   │   │   ├── bootmgr.efi.mui</div><div class="line">│   │   │   └── memtest.efi.mui</div><div class="line">|   |   :</div><div class="line">|   |   :</div><div class="line">│   │   ├── zh-CN</div><div class="line">│   │   │   ├── bootmgfw.efi.mui</div><div class="line">│   │   │   ├── bootmgr.efi.mui</div><div class="line">│   │   │   └── memtest.efi.mui</div><div class="line">│   │   ├── Fonts  字体文件</div><div class="line">│   │   │   ├── chs_boot.ttf</div><div class="line">│   │   │   :</div><div class="line">│   │   │   :</div><div class="line">│   │   │   └── wgl4_boot.ttf</div><div class="line">│   │   ├── kd_02_10df.dll</div><div class="line">│   │   :</div><div class="line">│   │   :</div><div class="line">│   │   ├── kdstub.dll</div><div class="line">│   │   ├── memtest.efi</div><div class="line">│   │   ├── qps-ploc</div><div class="line">│   │   │   └── memtest.efi.mui</div><div class="line">│   │   └── Resources</div><div class="line">│   │       ├── bootres.dll</div><div class="line">│   │       ├── en-US</div><div class="line">│   │       │   └── bootres.dll.mui</div><div class="line">│   │       └── zh-CN</div><div class="line">│   │           └── bootres.dll.mui</div><div class="line">│   └── Recovery</div><div class="line">│       ├── BCD</div><div class="line">│       ├── BCD.LOG</div><div class="line">│       ├── BCD.LOG1</div><div class="line">│       └── BCD.LOG2</div><div class="line">└── ubuntu</div><div class="line">    └── grubx64.efi</div></pre></td></tr></table></figure>
<p>windows引导有几类文件：<br>efi文件memtest.efi bootmgr.efi bootmgfw.efi /Boot/bootmgfw.efi<br>字体文件 *.ttf<br>语言文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">zh-CN</div><div class="line">├── bootmgfw.efi.mui</div><div class="line">├── bootmgr.efi.mui</div><div class="line">└── memtest.efi.mui</div></pre></td></tr></table></figure></p>
<p>BCD文件 BCD引导修复这个是最重要的其他的那些文件都可以拷贝，这个不可以。所以前面的命令bcdboot主要任务就是修复这个BCD文件。当然还有其他的修复方式。</p>
<h1 id="Other-things"><a href="#Other-things" class="headerlink" title="Other things"></a>Other things</h1><p>现在系统都可以完美启动了，但是还有些不完没就是Grub的引导中没有Windows item。<br>进入Lilnux<br>执行   <code>update-grub2</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">jachin-Inspiron-5548 boot # update-grub2</div><div class="line">Generating grub configuration file ...</div><div class="line">Found linux image: /boot/vmlinuz-4.4.0-77-generic</div><div class="line">Found initrd image: /boot/initrd.img-4.4.0-77-generic</div><div class="line">Found linux image: /boot/vmlinuz-4.4.0-75-generic</div><div class="line">Found initrd image: /boot/initrd.img-4.4.0-75-generic</div><div class="line">Found Windows Boot Manager on /dev/sda1@/EFI/Microsoft/Boot/bootmgfw.efi</div><div class="line">Adding boot menu entry for EFI firmware configuration</div><div class="line">done</div></pre></td></tr></table></figure>
<p>okay,现在Grub的menu中已经有Windows选项了，到此完美修复。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;ESP分区存放的UEFI引导程序，ESP分区被格式化意味着无法进入系统&lt;br&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://ygcaicn.github.io/categories/Linux/"/>
    
    
      <category term="Grub Linux Windows" scheme="https://ygcaicn.github.io/tags/Grub-Linux-Windows/"/>
    
  </entry>
  
  <entry>
    <title>mathjax 测试</title>
    <link href="https://ygcaicn.github.io/Linux/mathjax.html"/>
    <id>https://ygcaicn.github.io/Linux/mathjax.html</id>
    <published>2017-05-05T01:57:40.000Z</published>
    <updated>2018-01-15T10:22:38.408Z</updated>
    
    <content type="html"><![CDATA[<p>$$\sum_{i=0}^n i^2 = \frac{(n^2+n)(2n+1)}{6}$$</p>
<a id="more"></a>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;$$\sum_{i=0}^n i^2 = \frac{(n^2+n)(2n+1)}{6}$$&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://ygcaicn.github.io/categories/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>【Machine Learning】机器学习：简明入门指南</title>
    <link href="https://ygcaicn.github.io/Machine-Learning/Mechine-Learning.html"/>
    <id>https://ygcaicn.github.io/Machine-Learning/Mechine-Learning.html</id>
    <published>2017-05-04T21:32:55.000Z</published>
    <updated>2017-05-04T05:52:22.504Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>本文是一篇转载自<a href="http://blog.jobbole.com/67616/" target="_blank" rel="external"><strong>伯乐在线的译文</strong></a>，英文原文是这里：<a href="https://medium.com/code-poet/80ea3ec3c471" target="_blank" rel="external"><strong>Machine Learning is Fun!</strong> — by Adam Geitgey</a></p>
</blockquote>
<p>在听到人们谈论机器学习的时候，你是不是对它的涵义只有几个模糊的认识呢？你是不是已经厌倦了在和同事交谈时只能一直点头？让我们改变一下吧！</p>
<p>本指南的读者对象是所有对机器学习有求知欲但却不知道如何开头的朋友。我猜很多人已经读过了<a href="https://en.wikipedia.org/wiki/Machine_learning" target="_blank" rel="external">“机器学习” ——维基百科词条</a>，倍感挫折，以为没人能给出一个高层次的解释。本文就是你们想要的东西。</p>
<p>本文目标在于平易近人，这意味着文中有大量的概括。但是谁在乎这些呢？只要能让读者对于ML更感兴趣，任务也就完成了。</p>
<a id="more"></a>
<h3 id="何为机器学习？"><a href="#何为机器学习？" class="headerlink" title="何为机器学习？"></a><strong>何为机器学习？</strong></h3><p>机器学习这个概念认为，对于待解问题，你无需编写任何专门的程序代码，遗传算法（generic algorithms）能够在数据集上为你得出有趣的答案。对于遗传算法，不用编码，而是将数据输入，它将在数据之上建立起它自己的逻辑。</p>
<p>举个例子，有一类算法称为分类算法，它可以将数据划分为不同的组别。一个用来识别手写数字的分类算法，不用修改一行代码，就可以用来将电子邮件分为垃圾邮件和普通邮件。算法没变，但是输入的训练数据变了，因此它得出了不同的分类逻辑。</p>
<p><img src="http://img.blog.csdn.net/20160814170910665" alt="机器学习算法是个黑盒，可以重用来解决很多不同的分类问题。"><br><em>机器学习算法是个黑盒，可以重用来解决很多不同的分类问题。</em></p>
<p>“机器学习”是一个涵盖性术语，覆盖了大量类似的遗传算法。</p>
<h3 id="两类机器学习算法"><a href="#两类机器学习算法" class="headerlink" title="两类机器学习算法"></a><strong>两类机器学习算法</strong></h3><p>你可以认为机器学习算法分为两大类：<strong>监督式学习</strong>（Supervised Learning）和<strong>非监督式学习</strong>（Unsupervised Learning）。两者区别很简单，但却非常重要。</p>
<h4 id="监督式学习"><a href="#监督式学习" class="headerlink" title="监督式学习"></a><strong>监督式学习</strong></h4><p>假设你是一名房产经纪，生意越做越大，因此你雇了一批实习生来帮你。但是问题来了——你可以看一眼房子就知道它到底值多少钱，实习生没有经验，不知道如何估价。</p>
<p>为了帮助你的实习生（也许是为了解放你自己去度个假），你决定写个小软件，可以根据房屋大小、地段以及类似房屋的成交价等因素来评估你所在地区房屋的价值。</p>
<p>你把3个月来城里每笔房屋交易都写了下来，每一单你都记录了一长串的细节——卧室数量、房屋大小、地段等等。但最重要的是，你写下了最终的成交价：</p>
<p>这是我们的“训练数据”:<br><img src="http://img.blog.csdn.net/20160814171156602" alt=""></p>
<p>我们要利用这些训练数据来编写一个程序来估算该地区其他房屋的价值：</p>
<p><img src="http://img.blog.csdn.net/20160814171239543" alt=""></p>
<p>这就称为<strong>监督式学习</strong>。你已经知道每一栋房屋的售价，换句话说，你知道问题的答案，并可以反向找出解题的逻辑。</p>
<p>为了编写软件，你将包含每一套房产的训练数据输入你的机器学习算法。算法尝试找出应该使用何种运算来得出价格数字。</p>
<p>这就像是算术练习题，算式中的运算符号都被擦去了：<br><img src="http://img.blog.csdn.net/20160814171313166" alt=""><br><em>天哪！一个阴险的学生将老师答案上的算术符号全擦去了。</em></p>
<p>看了这些题，你能明白这些测验里面是什么样的数学问题吗？你知道，你应该对算式左边的数字“做些什么”以得出算式右边的答案。</p>
<p>在监督式学习中，你是让计算机为你算出数字间的关系。而一旦你知道了解决这类特定问题所需要的数学方法后，你就可以解答同类的其它问题了。</p>
<h4 id="非监督式学习"><a href="#非监督式学习" class="headerlink" title="非监督式学习"></a><strong>非监督式学习</strong></h4><p>让我们回到开头那个房地产经纪的例子。要是你不知道每栋房子的售价怎么办？即使你所知道的只是房屋的大小、位置等信息，你也可以搞出很酷的花样。这就是所谓的非监督式学习。</p>
<p><img src="http://img.blog.csdn.net/20160814171439231" alt="即使你不是想去预测未知的数据（如价格），你也可以运用机器学习完成一些有意思的事。"><br><em>即使你不是想去预测未知的数据（如价格），你也可以运用机器学习完成一些有意思的事。</em></p>
<p>这就有点像有人给你一张纸，上面列出了很多数字，然后对你说:“我不知道这些数字有什么意义，也许你能从中找出规律或是能将它们分类，或是其它什么-祝你好运！”</p>
<p>你该怎么处理这些数据呢？首先，你可以用个算法自动地从数据中划分出不同的细分市场。也许你会发现大学附近的买房者喜欢户型小但卧室多的房子，而郊区的买房者偏好三卧室的大户型。这些信息可以直接帮助你的营销。</p>
<p>你还可以作件很酷的事，自动找出房价的离群数据，即与其它数据迥异的值。这些鹤立鸡群的房产也许是高楼大厦，而你可以将最优秀的推销员集中在这些地区，因为他们的佣金更高。</p>
<p>本文余下部分我们主要讨论监督式学习，但这并不是因为非监督式学习用处不大或是索然无味。实际上，随着算法改良，不用将数据和正确答案联系在一起，因此非监督式学习正变得越来越重要。</p>
<p>老学究请看:还有很多其它种类的机器学习算法。但初学时这样理解不错了。</p>
<h3 id="太酷了，但是评估房价真能被看作“学习”吗？"><a href="#太酷了，但是评估房价真能被看作“学习”吗？" class="headerlink" title="太酷了，但是评估房价真能被看作“学习”吗？"></a><strong>太酷了，但是评估房价真能被看作“学习”吗？</strong></h3><p>作为人类的一员，你的大脑可以应付绝大多数情况，并且没有任何明确指令也能够学习如何处理这些情况。如果你做房产经纪时间很长，你对于房产的合适定价、它的最佳营销方式以及哪些客户会感兴趣等等都会有一种本能般的“感觉”。强人工智能（Strong AI）研究的目标就是要能够用计算机复制这种能力。</p>
<p>但是目前的机器学习算法还没有那么好——它们只能专注于非常特定的、有限的问题。也许在这种情况下，“学习”更贴切的定义是“在少量范例数据的基础上找出一个等式来解决特定的问题”。</p>
<p>不幸的是，“机器在少量范例数据的基础上找出一个等式来解决特定的问题”这个名字太烂了。所以最后我们用“机器学习”取而代之。</p>
<p>当然，要是你是在50年之后来读这篇文章，那时我们已经得出了强人工智能算法，而本文看起来就像个老古董。未来的人类，你还是别读了，叫你的机器仆人给你做份三明治吧。</p>
<h3 id="让我们写代码吧"><a href="#让我们写代码吧" class="headerlink" title="让我们写代码吧!"></a><strong>让我们写代码吧!</strong></h3><p>前面例子中评估房价的程序，你打算怎么写呢？往下看之前，先思考一下吧。</p>
<p>如果你对机器学习一无所知，很有可能你会尝试写出一些基本规则来评估房价，如下：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">estimate_house_sales_price</span><span class="params">(num_of_bedrooms, sqft, neighborhood)</span>:</span></div><div class="line">  price = <span class="number">0</span></div><div class="line"></div><div class="line">  <span class="comment"># In my area, the average house costs $200 per sqft</span></div><div class="line">  price_per_sqft = <span class="number">200</span></div><div class="line"></div><div class="line">  <span class="keyword">if</span> neighborhood == <span class="string">"hipsterton"</span>:</div><div class="line">    <span class="comment"># but some areas cost a bit more</span></div><div class="line">    price_per_sqft = <span class="number">400</span></div><div class="line"></div><div class="line">  <span class="keyword">elif</span> neighborhood == <span class="string">"skid row"</span>:</div><div class="line">    <span class="comment"># and some areas cost less</span></div><div class="line">    price_per_sqft = <span class="number">100</span></div><div class="line"></div><div class="line">  <span class="comment"># start with a base price estimate based on how big the place is</span></div><div class="line">  price = price_per_sqft * sqft</div><div class="line"></div><div class="line">  <span class="comment"># now adjust our estimate based on the number of bedrooms</span></div><div class="line">  <span class="keyword">if</span> num_of_bedrooms == <span class="number">0</span>:</div><div class="line">    <span class="comment"># Studio apartments are cheap</span></div><div class="line">    price = price — <span class="number">20000</span></div><div class="line">  <span class="keyword">else</span>:</div><div class="line">    <span class="comment"># places with more bedrooms are usually</span></div><div class="line">    <span class="comment"># more valuable</span></div><div class="line">    price = price + (num_of_bedrooms * <span class="number">1000</span>)</div><div class="line"></div><div class="line"> <span class="keyword">return</span> price</div></pre></td></tr></table></figure>
<p>假如你像这样瞎忙几个小时，也许会取得一点成效，但是你的程序永不会完美，而且当价格变化时很难维护。</p>
<p>如果能让计算机找出实现上述函数功能的办法，这样岂不更好？只要返回的房价数字正确，谁会在乎函数具体干了些什么呢？</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">estimate_house_sales_price</span><span class="params">(num_of_bedrooms, sqft, neighborhood)</span>:</span></div><div class="line">  price = &lt;computer, plz do some math <span class="keyword">for</span> me&gt;</div><div class="line"></div><div class="line">  <span class="keyword">return</span> price</div></pre></td></tr></table></figure>
<p>考虑这个问题的一种角度是将房价看做一碗美味的汤，而汤中成分就是卧室数、面积和地段。如果你能算出每种成分对最终的价格有多大影响，也许就能得到各种成分混合起来形成最终价格的具体比例。</p>
<p>这样可以将你最初的程序（全是疯狂的if else语句）简化成类似如下的样子：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">estimate_house_sales_price</span><span class="params">(num_of_bedrooms, sqft, neighborhood)</span>:</span></div><div class="line"> price = <span class="number">0</span></div><div class="line"></div><div class="line"> <span class="comment"># a little pinch of this</span></div><div class="line"> price += num_of_bedrooms * <span class="number">.841231951398213</span></div><div class="line"></div><div class="line"> <span class="comment"># and a big pinch of that</span></div><div class="line"> price += sqft * <span class="number">1231.1231231</span></div><div class="line"></div><div class="line"> <span class="comment"># maybe a handful of this</span></div><div class="line"> price += neighborhood * <span class="number">2.3242341421</span></div><div class="line"></div><div class="line"> <span class="comment"># and finally, just a little extra salt for good measure</span></div><div class="line"> price += <span class="number">201.23432095</span></div><div class="line"></div><div class="line"> <span class="keyword">return</span> price</div></pre></td></tr></table></figure>
<p>请注意那些用粗体标注的神奇数字——<strong>.841231951398213</strong>, <strong>1231.1231231</strong>,<strong>2.3242341421</strong>, 和<strong>201.23432095</strong>。它们称为权重。如果我们能找出对每栋房子都适用的完美权重，我们的函数就能预测所有的房价！</p>
<p>找出最佳权重的一种笨办法如下所示：</p>
<h4 id="步骤1："><a href="#步骤1：" class="headerlink" title="步骤1："></a><strong>步骤1：</strong></h4><p>首先，将每个权重都设为1.0：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">estimate_house_sales_price</span><span class="params">(num_of_bedrooms, sqft, neighborhood)</span>:</span></div><div class="line">  price = <span class="number">0</span></div><div class="line"></div><div class="line">  <span class="comment"># a little pinch of this</span></div><div class="line">  price += num_of_bedrooms * <span class="number">1.0</span></div><div class="line"></div><div class="line">  <span class="comment"># and a big pinch of that</span></div><div class="line">  price += sqft * <span class="number">1.0</span></div><div class="line"></div><div class="line">  <span class="comment"># maybe a handful of this</span></div><div class="line">  price += neighborhood * <span class="number">1.0</span></div><div class="line"></div><div class="line">  <span class="comment"># and finally, just a little extra salt for good measure</span></div><div class="line">  price += <span class="number">1.0</span></div><div class="line"></div><div class="line">  <span class="keyword">return</span> price</div></pre></td></tr></table></figure>
<h4 id="步骤2："><a href="#步骤2：" class="headerlink" title="步骤2："></a><strong>步骤2：</strong></h4><p>将每栋房产带入你的函数运算，检验估算值与正确价格的偏离程度：</p>
<p><img src="http://img.blog.csdn.net/20160814172040052" alt="运用你的程序预测房屋价格。"><br><em>运用你的程序预测房屋价格。</em></p>
<p>例如：上表中第一套房产实际成交价为25万美元，你的函数估价为17.8万，这一套房产你就差了7.2万。</p>
<p>再将你的数据集中的每套房产估价偏离值平方后求和。假设数据集中有500套房产交易，估价偏离值平方求和总计为86,123,373美元。这就反映了你的函数现在的“正确”程度。</p>
<p>现在，将总计值除以500，得到每套房产的估价偏离平均值。将这个平均误差值称为你函数的代价。</p>
<p>如果你能调整权重使得这个代价变为0，你的函数就完美了。它意味着，根据输入的数据，你的程序对每一笔房产交易的估价都是分毫不差。而这就是我们的目标——尝试不同的权重值以使代价尽可能的低。</p>
<h4 id="步骤3："><a href="#步骤3：" class="headerlink" title="步骤3："></a><strong>步骤3：</strong></h4><p>不断重复步骤2，尝试<strong>所有可能的权重值组合</strong>。哪一个组合使得代价最接近于0，它就是你要使用的，你只要找到了这样的组合，问题就得到了解决!</p>
<h3 id="思想扰动时间"><a href="#思想扰动时间" class="headerlink" title="思想扰动时间"></a><strong>思想扰动时间</strong></h3><p>这太简单了，对吧？想一想刚才你做了些什么。你取得了一些数据，将它们输入至三个通用的简单步骤中，最后你得到了一个可以对你所在区域的房屋进行估价的函数。房价网，要当心咯！<br>但是下面的事实可能会扰乱你的思想：</p>
<p>1.过去40年来，很多领域（如语言学/翻译学）的研究表明，这种通用的“搅动数据汤”（我编造的词）式的学习算法已经胜过了需要利用真人明确规则的方法。机器学习的“笨”办法最终打败了人类专家。</p>
<p>2.你最后写出的函数真是笨，它甚至不知道什么是“面积”和“卧室数”。它知道的只是搅动，改变数字来得到正确的答案。</p>
<p>3.很可能你都不知道为何一组特殊的权重值能起效。所以你只是写出了一个你实际上并不理解却能证明的函数。</p>
<p>4.试想一下，你的程序里没有类似“面积”和“卧室数”这样的参数，而是接受了一组数字。假设每个数字代表了你车顶安装的摄像头捕捉的画面中的一个像素，再将预测的输出不称为“价格”而是叫做“方向盘转动度数”，这样你就得到了一个程序可以自动操纵你的汽车了！</p>
<p>太疯狂了，对吧？</p>
<h3 id="步骤3中的“尝试每个数字”怎么回事？"><a href="#步骤3中的“尝试每个数字”怎么回事？" class="headerlink" title="步骤3中的“尝试每个数字”怎么回事？"></a><strong>步骤3中的“尝试每个数字”怎么回事？</strong></h3><p>好吧，当然你不可能尝试所有可能的权重值来找到效果最好的组合。那可真要花很长时间，因为要尝试的数字可能无穷无尽。</p>
<p>为避免这种情况，数学家们找到了很多聪明的办法（比如<a href="https://en.wikipedia.org/wiki/Gradient_descent" target="_blank" rel="external"><strong>Gradient descent算法</strong></a>）来快速找到优秀的权重值，而不需要尝试过多。下面是其中一种：</p>
<p>首先，写出一个简单的等式表示前述步骤2，这是你的代价函数：</p>
<p><img src="http://img.blog.csdn.net/20160814172434798" alt=""></p>
<p>接着，让我们将这同一个等式用机器学习的数学术语（现在你可以忽略它们）进行重写：</p>
<p><img src="http://img.blog.csdn.net/20160814172527111" alt=""><br><em>θ表示当前的权重值。 J(θ) 意为“当前权重值对应的代价”。</em></p>
<p>这个等式表示我们的估价程序在当前权重值下偏离程度的大小。<br>如果将所有赋给卧室数和面积的可能权重值以图形形式显示，我们会得到类似下图的图表：</p>
<p><img src="http://img.blog.csdn.net/20160814172601908" alt=""><br><em>代价函数的图形像一支碗。纵轴表示代价。</em></p>
<p>图中蓝色的最低点就是代价最低的地方——即我们的程序偏离最小。最高点意味着偏离最大。所以，如果我们能找到一组权重值带领我们到达图中的最低点，我们就找到了答案！</p>
<p><img src="http://img.blog.csdn.net/20160814172634361" alt=""></p>
<p>因此，我们只需要调整权重值使我们在图上能向着最低点“走下坡路”。如果对于权重的细小调节能一直使我们保持向最低点移动，那么最终我们不用尝试太多权重值就能到达那里。</p>
<p>如果你还记得一点微积分的话，你也许记得如果你对一个函数求导，结果会告诉你函数在任一点的斜率。换句话说，对于图上给定一点，它告诉我们那条路是下坡路。我们可以利用这一点朝底部进发。</p>
<p>所以，如果我们对代价函数关于每一个权重求偏导，那么我们就可以从每一个权重中减去该值。这样可以让我们更加接近山底。一直这样做，最终我们将到达底部，得到权重的最优值。（读不懂？不用担心，接着往下读）。</p>
<p>这种找出最佳权重的办法被称为<strong>批量梯度下降</strong>，上面是对它的高度概括。如果想搞懂细节，不要害怕，继续深入下去吧。</p>
<p>当你使用机器学习算法库来解决实际问题，所有这些都已经为你准备好了。但明白一些具体细节总是有用的。</p>
<h3 id="还有什么你随便就略过了？"><a href="#还有什么你随便就略过了？" class="headerlink" title="还有什么你随便就略过了？"></a><strong>还有什么你随便就略过了？</strong></h3><p>上面我描述的三步算法被称为<strong>多元线性回归</strong>。你估算等式是在求一条能够拟合所有房价数据点的直线。然后，你再根据房价在你的直线上可能出现的位置用这个等式来估算从未见过的房屋的价格。这个想法威力强大，可以用它来解决“实际”问题。</p>
<p>但是，我为你展示的这种方法可能在简单的情况下有效，它不会在所有情况下都有用。原因之一是因为房价不会一直那么简单地跟随一条连续直线。</p>
<p>但是，幸运的是，有很多办法来处理这种情况。对于非线性数据，很多其他类型的机器学习算法可以处理（如神经网络或有核向量机）。还有很多方法运用线性回归更灵活，想到了用更复杂的线条来拟合。在所有的情况中，寻找最优权重值这一基本思路依然适用。</p>
<p>还有，我忽略了<strong>过拟合</strong>的概念。很容易碰上这样一组权重值，它们对于你原始数据集中的房价都能完美预测，但对于原始数据集之外的任何新房屋都预测不准。这种情况的解决之道也有不少（如正则化以及使用交叉验证数据集）。学会如何处理这一问题对于顺利应用机器学习至关重要。</p>
<p>换言之，基本概念非常简单，要想运用机器学习得到有用的结果还需要一些技巧和经验。但是，这是每个开发者都能学会的技巧。</p>
<h3 id="机器学习法力无边吗？"><a href="#机器学习法力无边吗？" class="headerlink" title="机器学习法力无边吗？"></a><strong>机器学习法力无边吗？</strong></h3><p>一旦你开始明白机器学习技术很容易应用于解决貌似很困难的问题（如手写识别），你心中会有一种感觉，只要有足够的数据，你就能够用机器学习解决任何问题。只需要将数据输入进去，就能看到计算机变戏法一样找出拟合数据的等式。</p>
<p>但是很重要的一点你要记住，机器学习只能对用你占有的数据实际可解的问题才适用。</p>
<p>例如，如果你建立了一个模型来根据每套房屋内盆栽数量来预测房价，它就永远不会成功。房屋内盆栽数量和房价之间没有任何的关系。所以，无论它怎么去尝试，计算机也推导不出两者之间的关系。</p>
<p><img src="http://img.blog.csdn.net/20160814172839065" alt=""><br><em>你只能对实际存在的关系建模。</em></p>
<h3 id="怎样深入学习机器学习"><a href="#怎样深入学习机器学习" class="headerlink" title="怎样深入学习机器学习"></a><strong>怎样深入学习机器学习</strong></h3><p>我认为，当前机器学习的最大问题是它主要活跃于学术界和商业研究组织中。对于圈外想要有个大体了解而不是想成为专家的人们，简单易懂的学习资料不多。但是这一情况每一天都在改善。</p>
<p>吴恩达教授（Andrew Ng）在<a href="https://www.coursera.org/learn/machine-learning" target="_blank" rel="external"><strong>Coursera上的机器学习免费课程</strong></a>非常不错。我强烈建议由此入门。任何拥有计算机科学学位、还能记住一点点数学的人应该都能理解。</p>
<p>另外，你还可以下载安装<a href="http://scikit-learn.org/stable/" target="_blank" rel="external"><code>SciKit-Learn</code></a>，用它来试验成千上万的机器学习算法。它是一个python框架，对于所有的标准算法都有“黑盒”版本。</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文是一篇转载自&lt;a href=&quot;http://blog.jobbole.com/67616/&quot;&gt;&lt;strong&gt;伯乐在线的译文&lt;/strong&gt;&lt;/a&gt;，英文原文是这里：&lt;a href=&quot;https://medium.com/code-poet/80ea3ec3c471&quot;&gt;&lt;strong&gt;Machine Learning is Fun!&lt;/strong&gt; — by Adam Geitgey&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在听到人们谈论机器学习的时候，你是不是对它的涵义只有几个模糊的认识呢？你是不是已经厌倦了在和同事交谈时只能一直点头？让我们改变一下吧！&lt;/p&gt;
&lt;p&gt;本指南的读者对象是所有对机器学习有求知欲但却不知道如何开头的朋友。我猜很多人已经读过了&lt;a href=&quot;https://en.wikipedia.org/wiki/Machine_learning&quot;&gt;“机器学习” ——维基百科词条&lt;/a&gt;，倍感挫折，以为没人能给出一个高层次的解释。本文就是你们想要的东西。&lt;/p&gt;
&lt;p&gt;本文目标在于平易近人，这意味着文中有大量的概括。但是谁在乎这些呢？只要能让读者对于ML更感兴趣，任务也就完成了。&lt;/p&gt;
    
    </summary>
    
      <category term="Machine Learning" scheme="https://ygcaicn.github.io/categories/Machine-Learning/"/>
    
    
      <category term="Machine Learning" scheme="https://ygcaicn.github.io/tags/Machine-Learning/"/>
    
  </entry>
  
  <entry>
    <title>python基础</title>
    <link href="https://ygcaicn.github.io/Python/python%E5%9F%BA%E7%A1%80.html"/>
    <id>https://ygcaicn.github.io/Python/python基础.html</id>
    <published>2017-05-04T19:25:36.000Z</published>
    <updated>2018-01-15T10:23:49.535Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Strings"><a href="#Strings" class="headerlink" title="Strings"></a>Strings</h1><blockquote>
<p>A string is a sequence of values that represent Unicode code points. All the code points in the range U+0000 - U+10FFFF can be represented in a string. Python doesn’t have a char type; instead, every code point in the string is represented as a string object with length 1. The built-in function ord() converts a code point from its string form to an integer in the range 0 - 10FFFF; chr() converts an integer in the range 0 - 10FFFF to the corresponding length 1 string object. <code>str.encode()</code> can be used to convert a str to bytes using the given text encoding, and <code>bytes.decode()</code> can be used to achieve the opposite.</p>
</blockquote>
<a id="more"></a>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#str-&gt;bytes  </span></div><div class="line">str.encode(encoding=<span class="string">'UTF-8'</span>)</div><div class="line"></div><div class="line"><span class="comment">#bytes-&gt;str  </span></div><div class="line">bytes.decode(encoding=<span class="string">'UTF-8'</span>)</div></pre></td></tr></table></figure>
<p>document <a href="https://docs.python.org/" target="_blank" rel="external">https://docs.python.org/</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">urllib  </div><div class="line">     urllib.error Exception classes raised by urllib.request.</div><div class="line">     urllib.parse Parse URLs into or assemble them from components.</div><div class="line">     urllib.request Extensible library for opening URLs.</div><div class="line">     urllib.response Response classes used by urllib.</div><div class="line">     urllib.robotparser Load a robots.txt file and answer questions about fetchability of other URLs.</div></pre></td></tr></table></figure>
<h1 id="标准数据类型"><a href="#标准数据类型" class="headerlink" title="标准数据类型"></a>标准数据类型</h1><ul>
<li>Python3 中有六个标准的数据类型：</li>
<li>Number（数字）    123</li>
<li>String（字符串）  ‘abc’/“abc”</li>
<li>List（列表）      []</li>
<li>Tuple（元组）     ()</li>
<li>Sets（集合）      ({})</li>
<li>Dictionary（字典）{key:value}<br>*</li>
</ul>
<blockquote>
<p>I have a tuple of tuples from a MySQL query like this:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">T1 = ((&apos;13&apos;, &apos;17&apos;, &apos;18&apos;, &apos;21&apos;, &apos;32&apos;),</div><div class="line">      (&apos;07&apos;, &apos;11&apos;, &apos;13&apos;, &apos;14&apos;, &apos;28&apos;),</div><div class="line">      (&apos;01&apos;, &apos;05&apos;, &apos;06&apos;, &apos;08&apos;, &apos;15&apos;, &apos;16&apos;))</div></pre></td></tr></table></figure></p>
</blockquote>
<p>I’d like to convert all the string elements into integers and put it back nicely to list of lists this time:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">T2 = [[13, 17, 18, 21, 32], [7, 11, 13, 14, 28], [1, 5, 6, 8, 15, 16]]</div></pre></td></tr></table></figure></p>
<p>I tried to achieve it with eval but didn’t get any decent result yet.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[[int(column) for column in row] for row in T1]</div></pre></td></tr></table></figure></p>
<h1 id="一张图看Python"><a href="#一张图看Python" class="headerlink" title="一张图看Python"></a>一张图看Python</h1><p><img src="http://i.imgur.com/gAdiDlB.png" alt="Imgur"></p>
<h1 id="Python网络编程-百度语音接口实例"><a href="#Python网络编程-百度语音接口实例" class="headerlink" title="Python网络编程-百度语音接口实例"></a>Python网络编程-百度语音接口实例</h1><figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#</span></div><div class="line">  <span class="number">1</span> <span class="comment">#!/usr/bin/python3</span></div><div class="line">  <span class="number">2</span></div><div class="line">  <span class="number">3</span> <span class="keyword">import</span> urllib</div><div class="line">  <span class="number">4</span> <span class="keyword">import</span> urllib.request</div><div class="line">  <span class="number">5</span> <span class="keyword">import</span> urllib.parse</div><div class="line">  <span class="number">6</span> <span class="keyword">import</span> json</div><div class="line">  <span class="number">7</span> <span class="keyword">import</span> os</div><div class="line">  <span class="number">8</span> <span class="keyword">import</span> sys</div><div class="line">  <span class="number">9</span> <span class="keyword">import</span> hashlib</div><div class="line"> <span class="number">10</span> <span class="keyword">import</span> uuid</div><div class="line"> <span class="number">11</span> <span class="keyword">import</span> base64</div><div class="line"> <span class="number">12</span></div><div class="line"> <span class="number">13</span> <span class="class"><span class="keyword">class</span> <span class="title">BaiduRest</span>:</span></div><div class="line"> <span class="number">14</span>         <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,cu_id,api_key,api_secret)</span>:</span></div><div class="line"> <span class="number">15</span>                 self.toKen_url = <span class="string">"https://openapi.baidu.com/oauth/2.0/token?grant_type=client_credentials&amp;client_id=%s&amp;client_secret=%s&amp;"</span></div><div class="line"> <span class="number">16</span>                 self.getVoice_url = <span class="string">"http://tsn.baidu.com/text2audio"</span></div><div class="line"> <span class="number">17</span>                 self.upVoice_url = <span class="string">'http://vop.baidu.com/server_api'</span></div><div class="line"> <span class="number">18</span>                 self.cu_id = cu_id</div><div class="line"> <span class="number">19</span>                 self.api_key = api_key</div><div class="line"> <span class="number">20</span>                 self.api_secret = api_secret</div><div class="line"> <span class="number">21</span>                 <span class="keyword">if</span> <span class="keyword">not</span>  os.path.isdir(<span class="string">"./cache/"</span>):</div><div class="line"> <span class="number">22</span>                         os.mkdir(<span class="string">"./cache/"</span>)</div><div class="line"> <span class="number">23</span>                         os.mkdir(<span class="string">"./cache/audio"</span>)</div><div class="line"> <span class="number">24</span>                 <span class="keyword">if</span> <span class="keyword">not</span>  os.path.isdir(<span class="string">"./cache/audio"</span>):</div><div class="line"> <span class="number">25</span>                         os.mkdir(<span class="string">"./cache/audio"</span>)</div><div class="line"> <span class="number">26</span>                 <span class="keyword">try</span>:</div><div class="line"> <span class="number">27</span>                         file_toKen = open(<span class="string">"./cache/access_toKen"</span>,<span class="string">'r'</span>)</div><div class="line"> <span class="number">28</span>                         self.toKen = file_toKen.read()</div><div class="line"> <span class="number">29</span>                 <span class="keyword">except</span> FileNotFoundError:</div><div class="line"> <span class="number">30</span>                         self.getToKen(api_key,api_secret)</div><div class="line"> <span class="number">31</span>                 <span class="keyword">pass</span></div><div class="line"> <span class="number">32</span></div><div class="line"> <span class="number">33</span></div><div class="line"> <span class="number">34</span>         <span class="function"><span class="keyword">def</span> <span class="title">getToKen</span><span class="params">(self,api_key,api_secret)</span>:</span></div><div class="line"> <span class="number">35</span>                 self.toKen_url = self.toKen_url % (api_key,api_secret)</div><div class="line"> <span class="number">36</span>                 r_str = urllib.request.urlopen(self.toKen_url).read()</div><div class="line"> <span class="number">37</span>                 r_str = r_str.decode(encoding=<span class="string">"UTF-8"</span>)</div><div class="line"> <span class="number">38</span>                 r_json = json.loads(r_str)</div><div class="line"> <span class="number">39</span>                 self.toKen = r_json[<span class="string">"access_token"</span>]</div><div class="line"> <span class="number">40</span>                 file_toKen = open(<span class="string">"./cache/access_toKen"</span>,<span class="string">"w"</span>)</div><div class="line"> <span class="number">41</span>                 file_toKen.write(self.toKen)</div><div class="line"> <span class="number">42</span>                 file_toKen.close()</div><div class="line"> <span class="number">43</span>                 <span class="keyword">pass</span></div><div class="line"> <span class="number">44</span></div><div class="line"> <span class="number">45</span>         <span class="function"><span class="keyword">def</span> <span class="title">getVoice</span><span class="params">(self,text,filename)</span>:</span></div><div class="line"> <span class="number">46</span>                 <span class="comment">#POST</span></div><div class="line"> <span class="number">47</span>                 params = urllib.parse.urlencode(&#123;<span class="string">'tex'</span>:urllib.parse.quote(text),<span class="string">'lan'</span>:<span class="string">'zh'</span>,<span class="string">'cuid'</span>:self.cu_id,<span class="string">'ctp'</span>:<span class="number">1</span>,<span class="string">'tok'</span>:urllib.parse.quote(self.toKen)&#125;)</div><div class="line"> <span class="number">48</span>                 real_url = urllib.request.Request(self.getVoice_url,params.encode(<span class="string">"utf-8"</span>))</div><div class="line"> <span class="number">49</span>                 httpResponse = urllib.request.urlopen(real_url)</div><div class="line"> <span class="number">50</span>                 <span class="keyword">if</span> httpResponse.getheader(<span class="string">'Content-type'</span>) == <span class="string">'audio/mp3'</span>:</div><div class="line"> <span class="number">51</span>                         <span class="comment">#print("toKen successful!")</span></div><div class="line"> <span class="number">52</span>                         <span class="comment">#os.system('date')</span></div><div class="line"> <span class="number">53</span>                         file_mp3 = open(filename,<span class="string">"wb+"</span>)</div><div class="line"> <span class="number">54</span>                         file_mp3.write(httpResponse.read())</div><div class="line"> <span class="number">55</span>                         file_mp3.close()</div><div class="line"> <span class="number">56</span>                 <span class="keyword">else</span>:</div><div class="line"> <span class="number">57</span>                         self.getToKen(self.api_key,self.api_secret)</div><div class="line"> <span class="number">39</span>                 self.toKen = r_json[<span class="string">"access_token"</span>]</div><div class="line"> <span class="number">40</span>                 file_toKen = open(<span class="string">"./cache/access_toKen"</span>,<span class="string">"w"</span>)</div><div class="line"> <span class="number">41</span>                 file_toKen.write(self.toKen)</div><div class="line"> <span class="number">42</span>                 file_toKen.close()</div><div class="line"> <span class="number">43</span>                 <span class="keyword">pass</span></div><div class="line"> <span class="number">44</span></div><div class="line"> <span class="number">45</span>         <span class="function"><span class="keyword">def</span> <span class="title">getVoice</span><span class="params">(self,text,filename)</span>:</span></div><div class="line"> <span class="number">46</span>                 <span class="comment">#POST</span></div><div class="line"> <span class="number">47</span>                 params = urllib.parse.urlencode(&#123;<span class="string">'tex'</span>:urllib.parse.quote(text),<span class="string">'lan'</span>:<span class="string">'zh'</span>,<span class="string">'cuid'</span>:self.cu_id,<span class="string">'ctp'</span>:<span class="number">1</span>,<span class="string">'tok'</span>:urllib.parse.quote(self.toKen)&#125;)</div><div class="line"> <span class="number">48</span>                 real_url = urllib.request.Request(self.getVoice_url,params.encode(<span class="string">"utf-8"</span>))</div><div class="line"> <span class="number">49</span>                 httpResponse = urllib.request.urlopen(real_url)</div><div class="line"> <span class="number">50</span>                 <span class="keyword">if</span> httpResponse.getheader(<span class="string">'Content-type'</span>) == <span class="string">'audio/mp3'</span>:</div><div class="line"> <span class="number">51</span>                         <span class="comment">#print("toKen successful!")</span></div><div class="line"> <span class="number">52</span>                         <span class="comment">#os.system('date')</span></div><div class="line"> <span class="number">53</span>                         file_mp3 = open(filename,<span class="string">"wb+"</span>)</div><div class="line"> <span class="number">54</span>                         file_mp3.write(httpResponse.read())</div><div class="line"> <span class="number">55</span>                         file_mp3.close()</div><div class="line"> <span class="number">56</span>                 <span class="keyword">else</span>:</div><div class="line"> <span class="number">57</span>                         self.getToKen(self.api_key,self.api_secret)</div><div class="line"> <span class="number">54</span>                         file_mp3.write(httpResponse.read())</div><div class="line"> <span class="number">54</span>                         file_mp3.write(httpResponse.read())</div><div class="line"> <span class="number">54</span>                         file_mp3.write(httpResponse.read())</div><div class="line"> <span class="number">55</span>                         file_mp3.close()</div><div class="line"> <span class="number">56</span>                 <span class="keyword">else</span>:</div><div class="line"> <span class="number">57</span>                         self.getToKen(self.api_key,self.api_secret)</div><div class="line"> <span class="number">58</span>                         self.getVoice(text,filename)</div><div class="line"> <span class="number">59</span></div><div class="line"> <span class="number">60</span>                 <span class="keyword">pass</span></div><div class="line"> <span class="number">61</span>         <span class="function"><span class="keyword">def</span> <span class="title">getText</span><span class="params">(self, filename)</span>:</span></div><div class="line"> <span class="number">62</span>                 data = &#123;&#125;</div><div class="line"> <span class="number">63</span>                 data[<span class="string">'format'</span>] = <span class="string">'wav'</span></div><div class="line"> <span class="number">64</span>                 data[<span class="string">'rate'</span>] = <span class="number">16000</span></div><div class="line"> <span class="number">65</span>                 data[<span class="string">'channel'</span>] = <span class="number">1</span></div><div class="line">  <span class="number">6</span>                 data[<span class="string">'cuid'</span>] = self.cu_id</div><div class="line"> <span class="number">67</span>                 data[<span class="string">'token'</span>] = self.toKen</div><div class="line"> <span class="number">68</span>                 wav_fp = open(filename,<span class="string">'rb'</span>)</div><div class="line"> <span class="number">69</span>                 voice_data = wav_fp.read()</div><div class="line"> <span class="number">70</span>                 data[<span class="string">'len'</span>] = len(voice_data)</div><div class="line"> <span class="number">71</span>                 data[<span class="string">'speech'</span>] = base64.b64encode(voice_data).decode(<span class="string">'utf-8'</span>)</div><div class="line"> <span class="number">72</span>                 post_data = json.dumps(data)</div><div class="line"> <span class="number">73</span>                 reque = urllib.request.Request(self.upVoice_url,post_data.encode(encoding=<span class="string">"UTF-8"</span>))</div><div class="line"> <span class="number">74</span>                 r_data = urllib.request.urlopen(reque).read()</div><div class="line"> <span class="number">75</span>                 <span class="comment"># 3.处理返回数据</span></div><div class="line"> <span class="number">76</span>                 r_json = json.loads(r_data.decode(encoding=<span class="string">'utf-8'</span>))</div><div class="line"> <span class="number">77</span>                 <span class="keyword">if</span> <span class="string">'result'</span> <span class="keyword">in</span> r_json:</div><div class="line"> <span class="number">78</span>                         <span class="keyword">return</span>  r_json[<span class="string">'result'</span>]</div><div class="line"> <span class="number">79</span>                 <span class="keyword">else</span>:</div><div class="line"> <span class="number">80</span>                         print(r_json)</div><div class="line"> <span class="number">81</span>                         <span class="keyword">return</span> r_json[<span class="string">'err_no'</span>]</div><div class="line"> <span class="number">82</span></div><div class="line"> <span class="number">83</span> <span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</div><div class="line"> <span class="number">84</span>         os.system(<span class="string">'date'</span>)</div><div class="line"> <span class="number">85</span>         api_key = <span class="string">"6PPBMVeF1BIWbXmNuUfEivK3"</span></div><div class="line"> <span class="number">86</span>         api_secret = <span class="string">"0c5ee6597954b09bee9083624ff3d9a4"</span></div><div class="line"> <span class="number">87</span>         text = sys.argv[<span class="number">1</span>]</div><div class="line"> <span class="number">88</span>         tmpname_wav = hashlib.md5(text.encode(encoding=<span class="string">"UTF-8"</span>)).hexdigest() + <span class="string">'.wav'</span></div><div class="line"> <span class="number">89</span>         tmpname_wav = <span class="string">'./cache/audio/'</span> + tmpname_wav</div><div class="line"> <span class="number">90</span>         <span class="keyword">if</span> os.path.isfile(tmpname_wav):</div><div class="line"> <span class="number">91</span>                 print(<span class="string">"exist!"</span>)</div><div class="line"> <span class="number">92</span>                 os.system(<span class="string">"omxplayer --loop \""</span> + tmpname_wav + <span class="string">'\"'</span>)</div><div class="line"> <span class="number">93</span>         <span class="keyword">else</span>:</div><div class="line"> <span class="number">94</span>                 mac = uuid.UUID(int = uuid.getnode()).hex[<span class="number">-12</span>:]</div><div class="line"> <span class="number">95</span>                 mac = <span class="string">":"</span>.join([mac[e:e+<span class="number">2</span>] <span class="keyword">for</span> e <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">11</span>,<span class="number">2</span>)])</div><div class="line"> <span class="number">96</span>                 baiduVoice = BaiduRest(mac,api_key,api_secret)</div><div class="line"> <span class="number">97</span>                 baiduVoice.getVoice(text,tmpname_wav)</div><div class="line"> <span class="number">98</span>                 os.system(<span class="string">'date'</span>)</div><div class="line"> <span class="number">99</span>                 <span class="comment">#os.system("omxplayer --loop \"" + tmpname_wav + "\"")</span></div><div class="line"><span class="number">100</span>                 print(baiduVoice.getText(tmpname_wav))</div><div class="line"><span class="number">101</span></div><div class="line"><span class="number">102</span></div></pre></td></tr></table></figure>
<h1 id="urllib-request"><a href="#urllib-request" class="headerlink" title="urllib.request"></a>urllib.request</h1><h2 id="get"><a href="#get" class="headerlink" title="get"></a>get</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">from urllib import request, parse</div><div class="line"># Base URL being accessed</div><div class="line">url = &apos;http://httpbin.org/get&apos;</div><div class="line"># Dictionary of query parameters (if any)</div><div class="line">parms = &#123;</div><div class="line">&apos;name1&apos; : &apos;value1&apos;,</div><div class="line">&apos;name2&apos; : &apos;value2&apos;</div><div class="line">&#125;</div><div class="line"># Encode the query string</div><div class="line">querystring = parse.urlencode(parms)</div><div class="line"># Make a GET request and read the response</div><div class="line">u = request.urlopen(url+&apos;?&apos; + querystring)</div><div class="line">resp_bytes = u.read()</div></pre></td></tr></table></figure>
<h2 id="post"><a href="#post" class="headerlink" title="post"></a>post</h2><h3 id="post-stand-fomer"><a href="#post-stand-fomer" class="headerlink" title="post stand fomer"></a>post stand fomer</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">from urllib import request, parse</div><div class="line"># Base URL being accessed</div><div class="line">url = &apos;http://httpbin.org/post&apos;</div><div class="line"># Dictionary of query parameters (if any)</div><div class="line">parms = &#123;</div><div class="line">&apos;name1&apos; : &apos;value1&apos;,</div><div class="line">&apos;name2&apos; : &apos;value2&apos;</div><div class="line">&#125;</div><div class="line"># Encode the query string</div><div class="line">querystring = parse.urlencode(parms)</div><div class="line"># Make a POST request and read the response</div><div class="line">res = request.urlopen(url, querystring.encode(encoding = &apos;utf-8&apos;))</div><div class="line">html_str = res.read()</div></pre></td></tr></table></figure>
<h3 id="post-json"><a href="#post-json" class="headerlink" title="post json"></a>post json</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">parms = &#123;</div><div class="line">&apos;name1&apos; : &apos;value1&apos;,</div><div class="line">&apos;name2&apos; : &apos;value2&apos;</div><div class="line">&#125;</div><div class="line">post_data = json.dumps(parms)</div><div class="line">res = urllib.request.urlopen(url,post_data.encod(encoding=&quot;utf-8&quot;))</div><div class="line">html_str =res.read()</div></pre></td></tr></table></figure>
<h2 id="header"><a href="#header" class="headerlink" title="header"></a>header</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">from urllib import request, parse</div><div class="line"></div><div class="line"># Extra headers</div><div class="line">headers = &#123;</div><div class="line">&apos;User-agent&apos; : &apos;none/ofyourbusiness&apos;,</div><div class="line">&apos;Spam&apos; : &apos;Eggs&apos;</div><div class="line">&#125;</div><div class="line">req = request.Request(url, querystring.encode(&apos;ascii&apos;), headers=headers)</div><div class="line"># Make a request and read the response</div><div class="line">res = request.urlopen(req)</div><div class="line">html_str = res.read()</div></pre></td></tr></table></figure>
<h3 id="header-example"><a href="#header-example" class="headerlink" title="header example"></a>header example</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">headers=&#123;</div><div class="line">&apos;Connection&apos;: &apos;keep-alive&apos;,</div><div class="line">&apos;Cache-Control&apos;: &apos;max-age=0&apos;,</div><div class="line">&apos;Upgrade-Insecure-Requests&apos;: 1,</div><div class="line">&apos;User-Agent&apos;: &apos;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36&apos;,</div><div class="line">&apos;Accept&apos;: &apos;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8&apos;,</div><div class="line">&apos;Accept-Encoding&apos;: &apos;gzip, deflate, sdch&apos;,</div><div class="line">&apos;Accept-Language&apos;: &apos;zh-CN,zh;q=0.8,en;q=0.6&apos;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Content-Type: application/x-www-form-urlencoded</div><div class="line">Content-Type: application/json</div></pre></td></tr></table></figure>
<h2 id="Request"><a href="#Request" class="headerlink" title="Request"></a>Request</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">GET / HTTP/1.1</div><div class="line">Host: ip.cn</div><div class="line">Connection: keep-alive</div><div class="line">Upgrade-Insecure-Requests: 1</div><div class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36</div><div class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</div><div class="line">Accept-Encoding: gzip, deflate, sdch</div><div class="line">Accept-Language: zh-CN,zh;q=0.8,en;q=0.6</div><div class="line">Cookie: UM_distinctid=15ae0d3744b437-0ebcb4eece40e4-57e1b3c-100200-15ae0d3744c42b; CNZZDATA123770=cnzz_eid%3D646344926-1484393339-%26ntime%3D1489830206</div></pre></td></tr></table></figure>
<h2 id="Response"><a href="#Response" class="headerlink" title="Response"></a>Response</h2><p>encoding:gzip</p>
<p><img src="http://i.imgur.com/gNVZvxJ.png" alt="Imgur"></p>
<p>when unzip the body,we can see:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">HTTP/1.1 200 OK</div><div class="line">Server: nginx/1.8.0</div><div class="line">Date: Sat, 18 Mar 2017 10:54:28 GMT</div><div class="line">Content-Type: text/html; charset=UTF-8</div><div class="line">Connection: keep-alive</div><div class="line">Vary: Accept-Encoding</div><div class="line">X-Powered-By: PHP/5.6.30-1~dotdeb+7.1</div><div class="line">Content-Length: 3189</div><div class="line"></div><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html&gt;</div><div class="line">&lt;head&gt;</div><div class="line">&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;</div><div class="line">&lt;link href=&quot;http://s.ip-cdn.com&quot; rel=&quot;dns-prefetch&quot; /&gt;</div><div class="line">&lt;title&gt;IP.cn - IP 地址查询 | 地理位置 | 手机归属地&lt;/title&gt;</div><div class="line">&lt;meta name=&quot;robots&quot; content=&quot;all&quot; /&gt;</div><div class="line">&lt;meta name=&quot;Keywords&quot; content=&quot;ip,ip查询,手机ip,本机ip,外网ip,ip地址查询,手机号,归属地&quot;&gt;</div><div class="line">&lt;meta name=&quot;Description&quot; content=&quot;专业本机 IP 地址查询、手机 IP 地址、地理位置查询、IP 数据库、手机号归属地查询、电话号码黄页查询，可查广告、骚扰、快递、银行、保险、房地产、中介电话。&quot;&gt;</div><div class="line">&lt;link href=&apos;http://s.ip-cdn.com/css/bootstrap.min.css&apos; rel=&apos;stylesheet&apos; type=&apos;text/css&apos;&gt;</div><div class="line">&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, minimum-scale=0.5&quot;&gt;</div><div class="line">&lt;meta name=&quot;format-detection&quot; content=&quot;telephone=no&quot;&gt;</div><div class="line">&lt;!--[if lt IE 8]&gt;</div><div class="line">&lt;script src=&quot;http://s.ip-cdn.com/js/ie8.js&quot;&gt;&lt;/script&gt;</div><div class="line">&lt;![endif]--&gt;</div><div class="line">&lt;link href=&apos;http://s.ip-cdn.com/css/main.css&apos; rel=&apos;stylesheet&apos; type=&apos;text/css&apos;&gt;</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body onLoad=&quot;document.fs.ip.focus()&quot;&gt;</div><div class="line">.</div><div class="line">.</div><div class="line">.</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><h2 id="入门"><a href="#入门" class="headerlink" title="入门"></a>入门</h2><p><a href="http://www.runoob.com/python3/python3-tutorial.html" target="_blank" rel="external">Python3教程</a></p>
<h2 id="进阶技巧"><a href="#进阶技巧" class="headerlink" title="进阶技巧"></a>进阶技巧</h2><p><a href="https://github.com/yidao620c/python3-cookbook" target="_blank" rel="external">python3-cookbook</a><br><a href="http://docspy3zh.readthedocs.io/en/latest/index.html" target="_blank" rel="external">readthedocs</a><br><a href="http://cn.python-requests.org/zh_CN/latest/" target="_blank" rel="external">python-requests</a></p>
<p>httbin.org</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Strings&quot;&gt;&lt;a href=&quot;#Strings&quot; class=&quot;headerlink&quot; title=&quot;Strings&quot;&gt;&lt;/a&gt;Strings&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;A string is a sequence of values that represent Unicode code points. All the code points in the range U+0000 - U+10FFFF can be represented in a string. Python doesn’t have a char type; instead, every code point in the string is represented as a string object with length 1. The built-in function ord() converts a code point from its string form to an integer in the range 0 - 10FFFF; chr() converts an integer in the range 0 - 10FFFF to the corresponding length 1 string object. &lt;code&gt;str.encode()&lt;/code&gt; can be used to convert a str to bytes using the given text encoding, and &lt;code&gt;bytes.decode()&lt;/code&gt; can be used to achieve the opposite.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Python" scheme="https://ygcaicn.github.io/categories/Python/"/>
    
    
      <category term="python" scheme="https://ygcaicn.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>GPT(GUID partition table)</title>
    <link href="https://ygcaicn.github.io/Linux/GPT.html"/>
    <id>https://ygcaicn.github.io/Linux/GPT.html</id>
    <published>2017-05-04T17:04:44.000Z</published>
    <updated>2018-01-15T10:17:42.885Z</updated>
    
    <content type="html"><![CDATA[<p>GPT 磁盘分区表：</p>
<p>LBA – Logical Block Adress</p>
<p>size of  LBA :512bytes(0.5KB)</p>
<p>LBA0~LBA33: GUID partition table(GPT)</p>
<p>LBA(end-33)~LBA(end): Backup GPT</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">Disk /dev/sdb: 33021952 sectors, 15.7 GiB</div><div class="line">Logical sector size: 512 bytes</div><div class="line">Disk identifier (GUID): 2A7B560E-11D2-48FE-9A16-A54069811BF4</div><div class="line">Partition table holds up to 128 entries</div><div class="line">First usable sector is 34, last usable sector is 33021918</div><div class="line">Partitions will be aligned on 2048-sector boundaries</div><div class="line">Total free space is 2014 sectors (1007.0 KiB)</div><div class="line"></div><div class="line">Number  Start (sector)    End (sector)  Size       Code  Name</div><div class="line">   1            2048        33021918   15.7 GiB    8300  Linux filesystem</div></pre></td></tr></table></figure>
<h1 id="gdisk"><a href="#gdisk" class="headerlink" title="gdisk"></a>gdisk</h1><h2 id="Command"><a href="#Command" class="headerlink" title="Command"></a>Command</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">Command (? for help): ?</div><div class="line">b	back up GPT data to a file</div><div class="line">c	change a partition&apos;s name</div><div class="line">d	delete a partition</div><div class="line">i	show detailed information on a partition</div><div class="line">l	list known partition types</div><div class="line">n	add a new partition</div><div class="line">o	create a new empty GUID partition table (GPT)</div><div class="line">p	print the partition table</div><div class="line">q	quit without saving changes</div><div class="line">r	recovery and transformation options (experts only)</div><div class="line">s	sort partitions</div><div class="line">t	change a partition&apos;s type code</div><div class="line">v	verify disk</div><div class="line">w	write table to disk and exit</div><div class="line">x	extra functionality (experts only)</div><div class="line">?	print this menu</div></pre></td></tr></table></figure>
<h2 id="Recovery-transformation"><a href="#Recovery-transformation" class="headerlink" title="Recovery/transformation"></a>Recovery/transformation</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">Recovery/transformation command (? for help): ?</div><div class="line">b	use backup GPT header (rebuilding main)</div><div class="line">c	load backup partition table from disk (rebuilding main)</div><div class="line">d	use main GPT header (rebuilding backup)</div><div class="line">e	load main partition table from disk (rebuilding backup)</div><div class="line">f	load MBR and build fresh GPT from it</div><div class="line">g	convert GPT into MBR and exit</div><div class="line">h	make hybrid MBR</div><div class="line">i	show detailed information on a partition</div><div class="line">l	load partition data from a backup file</div><div class="line">m	return to main menu</div><div class="line">o	print protective MBR data</div><div class="line">p	print the partition table</div><div class="line">q	quit without saving changes</div><div class="line">t	transform BSD disklabel partition</div><div class="line">v	verify disk</div><div class="line">w	write table to disk and exit</div><div class="line">x	extra functionality (experts only)</div><div class="line">?	print this menu</div></pre></td></tr></table></figure>
<h2 id="Expert"><a href="#Expert" class="headerlink" title="Expert"></a>Expert</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">Expert command (? for help): ?</div><div class="line">a	set attributes</div><div class="line">c	change partition GUID</div><div class="line">d	display the sector alignment value</div><div class="line">e	relocate backup data structures to the end of the disk</div><div class="line">g	change disk GUID</div><div class="line">h	recompute CHS values in protective/hybrid MBR</div><div class="line">i	show detailed information on a partition</div><div class="line">l	set the sector alignment value</div><div class="line">m	return to main menu</div><div class="line">n	create a new protective MBR</div><div class="line">o	print protective MBR data</div><div class="line">p	print the partition table</div><div class="line">q	quit without saving changes</div><div class="line">r	recovery and transformation options (experts only)</div><div class="line">s	resize partition table</div><div class="line">t	transpose two partition table entries</div><div class="line">u	replicate partition table on new device</div><div class="line">v	verify disk</div><div class="line">w	write table to disk and exit</div><div class="line">z	zap (destroy) GPT data structures and exit</div><div class="line">?	print this menu</div></pre></td></tr></table></figure>
<h1 id="partition’s-type-code"><a href="#partition’s-type-code" class="headerlink" title="partition’s type code"></a>partition’s type code</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">0700 Microsoft basic data  0c01 Microsoft reserved    2700 Windows RE          </div><div class="line">3000 ONIE boot             3001 ONIE config           3900 Plan 9              </div><div class="line">4100 PowerPC PReP boot     4200 Windows LDM data      4201 Windows LDM metadata</div><div class="line">4202 Windows Storage Spac  7501 IBM GPFS              7f00 ChromeOS kernel     </div><div class="line">7f01 ChromeOS root         7f02 ChromeOS reserved     8200 Linux swap          </div><div class="line">8300 Linux filesystem      8301 Linux reserved        8302 Linux /home         </div><div class="line">8303 Linux x86 root (/)    8304 Linux x86-64 root (/  8305 Linux ARM64 root (/)</div><div class="line">8306 Linux /srv            8307 Linux ARM32 root (/)  8400 Intel Rapid Start   </div><div class="line">8e00 Linux LVM             a500 FreeBSD disklabel     a501 FreeBSD boot        </div><div class="line">a502 FreeBSD swap          a503 FreeBSD UFS           a504 FreeBSD ZFS         </div><div class="line">a505 FreeBSD Vinum/RAID    a580 Midnight BSD data     a581 Midnight BSD boot   </div><div class="line">a582 Midnight BSD swap     a583 Midnight BSD UFS      a584 Midnight BSD ZFS    </div><div class="line">a585 Midnight BSD Vinum    a600 OpenBSD disklabel     a800 Apple UFS           </div><div class="line">a901 NetBSD swap           a902 NetBSD FFS            a903 NetBSD LFS          </div><div class="line">a904 NetBSD concatenated   a905 NetBSD encrypted      a906 NetBSD RAID         </div><div class="line">ab00 Recovery HD           af00 Apple HFS/HFS+        af01 Apple RAID          </div><div class="line">af02 Apple RAID offline    af03 Apple label           af04 AppleTV recovery    </div><div class="line">af05 Apple Core Storage    bc00 Acronis Secure Zone   be00 Solaris boot        </div><div class="line">bf00 Solaris root          bf01 Solaris /usr &amp; Mac Z  bf02 Solaris swap        </div><div class="line">bf03 Solaris backup        bf04 Solaris /var          bf05 Solaris /home       </div><div class="line">bf06 Solaris alternate se  bf07 Solaris Reserved 1    bf08 Solaris Reserved 2  </div><div class="line">bf09 Solaris Reserved 3    bf0a Solaris Reserved 4    bf0b Solaris Reserved 5  </div><div class="line">c001 HP-UX data            c002 HP-UX service         ea00 Freedesktop $BOOT   </div><div class="line">eb00 Haiku BFS             ed00 Sony system partitio  ed01 Lenovo system partit</div><div class="line">ef00 EFI System            ef01 MBR partition scheme  ef02 BIOS boot partition</div><div class="line">f800 Ceph OSD              f801 Ceph dm-crypt OSD     f802 Ceph journal        </div><div class="line">f803 Ceph dm-crypt journa  f804 Ceph disk in creatio  f805 Ceph dm-crypt disk i</div><div class="line">fb00 VMWare VMFS           fb01 VMWare reserved       fc00 VMWare kcore crash p</div><div class="line">fd00 Linux RAID</div></pre></td></tr></table></figure>
<h1 id="刻录iso镜像到U盘"><a href="#刻录iso镜像到U盘" class="headerlink" title="刻录iso镜像到U盘"></a>刻录iso镜像到U盘</h1><p><strong>必须先change a partition’s type code -&gt;EF00</strong>再 ‘dd’</p>
<h1 id="Example-disk’s-GPT"><a href="#Example-disk’s-GPT" class="headerlink" title="Example disk’s GPT"></a>Example disk’s GPT</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">Disk /dev/sda: 468862128 sectors, 223.6 GiB</div><div class="line">Logical sector size: 512 bytes</div><div class="line">Disk identifier (GUID): 4F2B2F55-48AC-4CC8-A745-605404C6BDF7</div><div class="line">Partition table holds up to 128 entries</div><div class="line">First usable sector is 34, last usable sector is 468862094</div><div class="line">Partitions will be aligned on 2048-sector boundaries</div><div class="line">Total free space is 13745 sectors (6.7 MiB)</div><div class="line"></div><div class="line">Number  Start (sector)    End (sector)  Size       Code  Name</div><div class="line">   1            4096          204799   98.0 MiB    EF00  EFI system partition</div><div class="line">   2          208896       229904940   109.5 GiB   0700  Basic data partition</div><div class="line">   3       229906432       230897663   484.0 MiB   2700  </div><div class="line">   4       230899712       426919054   93.5 GiB    0700  Basic data partition</div><div class="line">   5       426919936       427309055   190.0 MiB   8300  </div><div class="line">   6       427309056       428285951   477.0 MiB   8200  </div><div class="line">   7       428285952       468860927   19.3 GiB    8300</div></pre></td></tr></table></figure>
<h1 id="details-infomation-on-a-partition"><a href="#details-infomation-on-a-partition" class="headerlink" title="details infomation on a partition"></a>details infomation on a partition</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">Partition GUID code: C12A7328-F81F-11D2-BA4B-00A0C93EC93B (EFI System)</div><div class="line">Partition unique GUID: 00772A36-9423-43A9-B1A1-0BE031102BFB</div><div class="line">First sector: 4096 (at 2.0 MiB)</div><div class="line">Last sector: 204799 (at 100.0 MiB)</div><div class="line">Partition size: 200704 sectors (98.0 MiB)</div><div class="line">Attribute flags: 0000000000000000</div><div class="line">Partition name: &apos;EFI system partition&apos;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;GPT 磁盘分区表：&lt;/p&gt;
&lt;p&gt;LBA – Logical Block Adress&lt;/p&gt;
&lt;p&gt;size of  LBA :512bytes(0.5KB)&lt;/p&gt;
&lt;p&gt;LBA0~LBA33: GUID partition table(GPT)&lt;/p&gt;
&lt;p&gt;LBA(end-33)~LBA(end): Backup GPT&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://ygcaicn.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://ygcaicn.github.io/tags/Linux/"/>
    
      <category term="GPT" scheme="https://ygcaicn.github.io/tags/GPT/"/>
    
  </entry>
  
  <entry>
    <title>Python3 实现代理IP,伪装IP</title>
    <link href="https://ygcaicn.github.io/Python/proxy-python3.html"/>
    <id>https://ygcaicn.github.io/Python/proxy-python3.html</id>
    <published>2017-03-19T06:43:36.000Z</published>
    <updated>2018-01-15T10:23:17.745Z</updated>
    
    <content type="html"><![CDATA[<p>实现抓取代理服务器，建立ipPool,伪装外网ip</p>
<a id="more"></a>
<h1 id="Proxy"><a href="#Proxy" class="headerlink" title="Proxy"></a>Proxy</h1><figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/python3</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> urllib.request</div><div class="line"><span class="keyword">import</span> re</div><div class="line"><span class="keyword">import</span> gzip</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">ungzip</span><span class="params">(data)</span>:</span></div><div class="line">    <span class="keyword">try</span>:        <span class="comment"># try decompress</span></div><div class="line">        print(<span class="string">'compressing.....'</span>)</div><div class="line">        data = gzip.decompress(data)</div><div class="line">        print(<span class="string">'dcompress done!'</span>)</div><div class="line">    <span class="keyword">except</span>:</div><div class="line">        print(<span class="string">'without compress!'</span>)</div><div class="line">    <span class="keyword">return</span> data</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Proxy</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,url=<span class="string">'http://www.xicidaili.com/'</span>)</span>:</span></div><div class="line">        self.ipPool=[]</div><div class="line">        self.url=url</div><div class="line">        self.getipPool();</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getipPool</span><span class="params">(self)</span>:</span>     </div><div class="line">        <span class="comment">#get proxy Ip address pool from http://www.xicidaili.com/</span></div><div class="line">        <span class="comment"># Base URL being accessed</span></div><div class="line">        headers=&#123;</div><div class="line">        <span class="string">'Connection'</span>: <span class="string">'keep-alive'</span>,</div><div class="line">        <span class="string">'Cache-Control'</span>: <span class="string">'max-age=0'</span>,</div><div class="line">        <span class="string">'Upgrade-Insecure-Requests'</span>: <span class="string">'1'</span>,</div><div class="line">        <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36'</span>,</div><div class="line">        <span class="string">'Accept'</span>: <span class="string">'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8'</span>,</div><div class="line">        <span class="string">'Accept-Encoding'</span>: <span class="string">'gzip, deflate, sdch'</span>,</div><div class="line">        <span class="string">'Accept-Language'</span>: <span class="string">'zh-CN,zh;q=0.8,en;q=0.6'</span>,</div><div class="line">        &#125;</div><div class="line">        <span class="comment"># Make a GET request and read the response</span></div><div class="line">        req = urllib.request.Request(self.url,headers=headers)</div><div class="line">        response = urllib.request.urlopen(req)</div><div class="line">        res_bytes = ungzip(response.read())</div><div class="line">        html_str = res_bytes.decode(encoding=<span class="string">'utf-8'</span>)</div><div class="line"></div><div class="line">        <span class="comment"># the pattern(Regular expression) is depend on the response data from your url</span></div><div class="line">        pattern = <span class="string">r'\s*&lt;td&gt;(((2[0-4]\d|25[0-5]|[01]?\d\d?)\.)&#123;3&#125;(2[0-4]\d|25[0-5]|[01]?\d\d?))&lt;/td&gt;\s*\n\s*&lt;td&gt;(\d&#123;2,5&#125;)&lt;/td&gt;\s*\n\s*&lt;td&gt;(\w+)&lt;/td&gt;\s*\n\s*&lt;td class="country"&gt;透明&lt;/td&gt;\s*\n\s*&lt;td&gt;(HTTP|HTTPS)&lt;/td&gt;'</span></div><div class="line">        regex = re.compile(pattern)</div><div class="line">        s = regex.findall(html_str)</div><div class="line">        <span class="comment">#s = [('221.204.103.145', '103.', '103', '145', '9797', '山西太原', 'HTTP'), ...]</span></div><div class="line">        <span class="keyword">for</span> host <span class="keyword">in</span> s:</div><div class="line">            hostdict = &#123;<span class="string">'host'</span>:host[<span class="number">0</span>],<span class="string">'port'</span>:host[<span class="number">4</span>],<span class="string">'country'</span>:host[<span class="number">5</span>],<span class="string">'protocol'</span>:host[<span class="number">-1</span>]&#125;</div><div class="line">            self.ipPool.append(hostdict)</div><div class="line">        <span class="keyword">return</span> self.ipPool</div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">startProxy</span><span class="params">(self)</span>:</span></div><div class="line"></div><div class="line">        self.printIpPool();</div><div class="line">        host_num = input(<span class="string">'Please select a host:'</span>)</div><div class="line">        host_num = int(host_num.strip())        </div><div class="line">        proxy = &#123;<span class="string">'http'</span>:self.ipPool[host_num][<span class="string">'host'</span>]+<span class="string">':'</span>+self.ipPool[host_num][<span class="string">'port'</span>]&#125;</div><div class="line">        <span class="comment">#creat ProxyHandler</span></div><div class="line">        proxy_support = urllib.request.ProxyHandler(proxy)</div><div class="line">        <span class="comment">#creat Opener</span></div><div class="line">        opener = urllib.request.build_opener(proxy_support)</div><div class="line">        <span class="comment">#creat User Angent</span></div><div class="line">        <span class="comment">#opener.addheaders = [('User-Agent','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36')]</span></div><div class="line">        <span class="comment">#install OPener</span></div><div class="line">        urllib.request.install_opener(opener)</div><div class="line">        <span class="comment">#start Opener</span></div><div class="line">        <span class="keyword">pass</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">printIpPool</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(self.ipPool)):</div><div class="line">            print(i,<span class="string">":"</span>,self.ipPool[i])</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line"></div><div class="line">    url = <span class="string">"http://ip.cn/"</span></div><div class="line">    headers=&#123;</div><div class="line">    <span class="string">'Connection'</span>: <span class="string">'keep-alive'</span>,</div><div class="line">    <span class="string">'Cache-Control'</span>: <span class="string">'max-age=0'</span>,</div><div class="line">    <span class="string">'Upgrade-Insecure-Requests'</span>: <span class="string">'1'</span>,</div><div class="line">    <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36'</span>,</div><div class="line">    <span class="string">'Accept'</span>: <span class="string">'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8'</span>,</div><div class="line">    <span class="string">'Accept-Encoding'</span>: <span class="string">'gzip, deflate, sdch'</span>,</div><div class="line">    <span class="string">'Accept-Language'</span>: <span class="string">'zh-CN,zh;q=0.8,en;q=0.6'</span>,</div><div class="line">    <span class="comment">#'Cookie': 'UM_distinctid=15ae0d3744b437-0ebcb4eece40e4-57e1b3c-100200-15ae0d3744c42b; CNZZDATA123770=cnzz_eid%3D646344926-1484393339-%26ntime%3D1489830206'</span></div><div class="line">    &#125;</div><div class="line">    proxyhost = Proxy()</div><div class="line">    proxyhost.startProxy()</div><div class="line"></div><div class="line">    req = urllib.request.Request(url,headers=headers)</div><div class="line">    response = urllib.request.urlopen(req)</div><div class="line">    res_bytes = ungzip(response.read())</div><div class="line"></div><div class="line">    html_str = res_bytes.decode(encoding=<span class="string">'utf-8'</span>)</div><div class="line">    file_html = open(<span class="string">"proxy.html"</span>,<span class="string">'w'</span>,encoding = <span class="string">"utf-8"</span>)</div><div class="line">    file_html.write(html_str)</div><div class="line">    file_html.close()</div><div class="line"></div><div class="line">    <span class="comment"># the pattern(Regular expression) is depend on the response data from your url</span></div><div class="line">    <span class="comment">#pattern = r'((\d&#123;1,3&#125;\.)&#123;3&#125;\d&#123;1,3&#125;)'</span></div><div class="line">    pattern = <span class="string">r'&lt;code&gt;(((2[0-4]\d|25[0-5]|[01]?\d\d?)\.)&#123;3&#125;(2[0-4]\d|25[0-5]|[01]?\d\d?))&lt;/code&gt;'</span></div><div class="line"></div><div class="line">    pattern2 = <span class="string">r'所在地理位置：&lt;code&gt;([\s\w]*)&lt;/code&gt;'</span></div><div class="line">    my_locate = re.findall(pattern2,html_str)</div><div class="line">    my_locate = my_locate[<span class="number">0</span>]</div><div class="line">    my_ip = re.findall(pattern,html_str)</div><div class="line">    my_ip = my_ip[<span class="number">0</span>][<span class="number">0</span>]</div><div class="line">    <span class="comment">#print(html_str)</span></div><div class="line">    print(<span class="string">'my locate:'</span>,my_locate)</div><div class="line">    print(<span class="string">'my ip:'</span>,my_ip)</div></pre></td></tr></table></figure>
<h1 id="get-proxy-Ip-address-pool-from-http-www-xicidaili-com"><a href="#get-proxy-Ip-address-pool-from-http-www-xicidaili-com" class="headerlink" title="get proxy Ip address pool from http://www.xicidaili.com/"></a>get proxy Ip address pool from <a href="http://www.xicidaili.com/" target="_blank" rel="external">http://www.xicidaili.com/</a></h1><p>直接get得到主页以后，主要是写正则表达式，match得到我们需要的数据。</p>
<p>得到的html数据：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">"subtitle"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">th</span> <span class="attr">class</span>=<span class="string">"country"</span>&gt;</span>国家<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span>代理IP地址<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span>端口<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">th</span> <span class="attr">width</span>=<span class="string">"20%"</span>&gt;</span>服务器地址<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">th</span> <span class="attr">class</span>=<span class="string">"country"</span>&gt;</span>是否匿名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span>类型<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">th</span> <span class="attr">width</span>=<span class="string">"11%"</span>&gt;</span>存活时间<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">th</span> <span class="attr">width</span>=<span class="string">"12%"</span>&gt;</span>验证时间<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">"odd"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"country"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"http://fs.xicidaili.com/images/flag/cn.png"</span> <span class="attr">alt</span>=<span class="string">"Cn"</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>115.231.175.68<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>8081<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>浙江杭州<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"country"</span>&gt;</span>透明<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>HTTP<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>74天<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>不到1分钟<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">""</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"country"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"http://fs.xicidaili.com/images/flag/cn.png"</span> <span class="attr">alt</span>=<span class="string">"Cn"</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>220.191.1.130<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>8118<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>浙江杭州<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"country"</span>&gt;</span>透明<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>HTTP<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>16小时<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>1分钟前<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">"odd"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"country"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"http://fs.xicidaili.com/images/flag/cn.png"</span> <span class="attr">alt</span>=<span class="string">"Cn"</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>124.88.67.54<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>80<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>新疆乌鲁木齐<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"country"</span>&gt;</span>透明<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>HTTP<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>723天<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>13分钟前<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">""</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"country"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"http://fs.xicidaili.com/images/flag/cn.png"</span> <span class="attr">alt</span>=<span class="string">"Cn"</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>58.221.59.210<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>63000<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>江苏南通<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"country"</span>&gt;</span>透明<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>HTTP<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>362天<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>1小时前<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div></pre></td></tr></table></figure>
<p><img src="http://i.imgur.com/7h07pqS.png" alt="Imgur"></p>
<p>我们这里匹配出主机ip（host），port，country和protocol，利用<a href="http://deerchao.net/" target="_blank" rel="external">deerchao的正则表达式测试器</a>很设计出下面的正则表达式：</p>
<p><code>#the pattern(Regular expression) is depend on the response data from your url</code></p>
<p><code>pattern = r&#39;\s*&lt;td&gt;(((2[0-4]\d|25[0-5]|[01]?\d\d?)\.){3}(2[0-4]\d|25[0-5]|[01]?\d\d?))&lt;/td&gt;\s*\n\s*&lt;td&gt;(\d{2,5})&lt;/td&gt;\s*\n\s*&lt;td&gt;(\w+)&lt;/td&gt;\s*\n\s*&lt;td class=&quot;country&quot;&gt;透明&lt;/td&gt;\s*\n\s*&lt;td&gt;(HTTP|HTTPS)&lt;/td&gt;&#39;</code></p>
<p>最终的效果：<br>    运行程序，会提示我们选择一个代理服务器，程序然后会去访问<a href="http://ip.cn" target="_blank" rel="external">ip.cn</a>,通过返回的数据我们解析得到外网IP，会发现这和我们选择的代理服务器信息是一致的而不是我们自己的外网地址。ip伪装成功。</p>
<p><img src="http://i.imgur.com/XIxBJUK.png" alt="Imgur"></p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>正则表达式：<a href="http://deerchao.net/tutorials/regex/regex.htm" target="_blank" rel="external">http://deerchao.net/tutorials/regex/regex.htm</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;实现抓取代理服务器，建立ipPool,伪装外网ip&lt;/p&gt;
    
    </summary>
    
      <category term="Python" scheme="https://ygcaicn.github.io/categories/Python/"/>
    
    
      <category term="Python3" scheme="https://ygcaicn.github.io/tags/Python3/"/>
    
      <category term="正则表达式" scheme="https://ygcaicn.github.io/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
      <category term="IP伪装" scheme="https://ygcaicn.github.io/tags/IP%E4%BC%AA%E8%A3%85/"/>
    
      <category term="代理" scheme="https://ygcaicn.github.io/tags/%E4%BB%A3%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>LEDE-Mt7620a-newifiY1</title>
    <link href="https://ygcaicn.github.io/%E5%B5%8C%E5%85%A5%E5%BC%8F/LEDE-Mt7620a-newifiY1.html"/>
    <id>https://ygcaicn.github.io/嵌入式/LEDE-Mt7620a-newifiY1.html</id>
    <published>2017-03-17T03:56:12.000Z</published>
    <updated>2018-01-15T10:22:08.174Z</updated>
    
    <content type="html"><![CDATA[<p>LEDE:<br><a href="https://downloads.lede-project.org" target="_blank" rel="external">https://downloads.lede-project.org</a></p>
<p>LEDE Packages(mipsel_24kc):<a href="http://openwrt-dist.sourceforge.net/packages/LEDE/base/mipsel_24kc/" target="_blank" rel="external">http://openwrt-dist.sourceforge.net/packages/LEDE/base/mipsel_24kc/</a></p>
<a id="more"></a>
<hr>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">root@LEDE:/tmp# opkg install libudns_0.4-1_mipsel_24kc.ipk</div><div class="line">Installing libudns (0.4-1) to root...</div><div class="line">Configuring libudns.</div><div class="line">root@LEDE:/tmp# opkg install shadowsocks-libev_3.0.3-1_mipsel_24kc.ipk luci-app-shadowsocks_1.6.2-1_all.ipk</div><div class="line">Installing shadowsocks-libev (3.0.3-1) to root...</div><div class="line">Installing libev (4.22-1) to root...</div><div class="line">Downloading http://downloads.lede-project.org/releases/17.01.0/packages/mipsel_24kc/packages/libev_4.22-1_mipsel_24kc.ipk</div><div class="line">Installing libpcre (8.40-1) to root...</div><div class="line">Downloading http://downloads.lede-project.org/releases/17.01.0/packages/mipsel_24kc/packages/libpcre_8.40-1_mipsel_24kc.ipk</div><div class="line">Installing libsodium (1.0.11-2) to root...</div><div class="line">Downloading http://downloads.lede-project.org/releases/17.01.0/packages/mipsel_24kc/packages/libsodium_1.0.11-2_mipsel_24kc.ipk</div><div class="line">Installing libmbedtls (2.4.0-2) to root...</div><div class="line">Downloading http://downloads.lede-project.org/releases/17.01.0/packages/mipsel_24kc/base/libmbedtls_2.4.0-2_mipsel_24kc.ipk</div><div class="line">Installing luci-app-shadowsocks (1.6.2-1) to root...</div><div class="line">Configuring libev.</div><div class="line">Configuring libpcre.</div><div class="line">Configuring libsodium.</div><div class="line">Configuring libmbedtls.</div><div class="line">Configuring shadowsocks-libev.</div><div class="line">Configuring luci-app-shadowsocks.</div></pre></td></tr></table></figure>
<hr>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">root@LEDE:/tmp# opkg install ChinaDNS_1.3.2-4_mipsel_24kc.ipk luci-app-chinadns_1.6.0-1_all.ipk</div><div class="line">Installing ChinaDNS (1.3.2-4) to root...</div><div class="line">Installing luci-app-chinadns (1.6.0-1) to root...</div><div class="line">Configuring ChinaDNS.</div><div class="line">Configuring luci-app-chinadns.</div></pre></td></tr></table></figure>
<hr>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">root@LEDE:/tmp# opkg install dns-forwarder_1.1.1-1_mipsel_24kc.ipk luci-app-dns-forwarder_1.6.0-1_all.ipk</div><div class="line">Installing dns-forwarder (1.1.1-1) to root...</div><div class="line">Installing luci-app-dns-forwarder (1.6.0-1) to root...</div><div class="line">Configuring dns-forwarder.</div><div class="line">Configuring luci-app-dns-forwarder.</div></pre></td></tr></table></figure>
<hr>
<h1 id="Kcptun-Shadowsocks"><a href="#Kcptun-Shadowsocks" class="headerlink" title="Kcptun+Shadowsocks"></a>Kcptun+Shadowsocks</h1><p>open source Project：</p>
<ul>
<li>openwrt kcptun <a href="https://github.com/bettermanbao/openwrt-kcptun" target="_blank" rel="external">https://github.com/bettermanbao/openwrt-kcptun</a></li>
<li>More details please refer to <a href="https://github.com/xtaci/kcptun" target="_blank" rel="external">https://github.com/xtaci/kcptun</a></li>
<li>luci-app-kcptun please refer to <a href="https://github.com/kuoruan/luci-app-kcptun" target="_blank" rel="external">https://github.com/kuoruan/luci-app-kcptun</a></li>
<li>GUI for KCPTun windows client <a href="https://github.com/dfdragon/kcptun_gclient" target="_blank" rel="external">https://github.com/dfdragon/kcptun_gclient</a></li>
<li>Kcptun for Android <a href="https://github.com/shadowsocks/kcptun-android" target="_blank" rel="external">https://github.com/shadowsocks/kcptun-android</a></li>
</ul>
<blockquote>
<p>两端参数必须一致的有:</p>
<p>datashard –前向纠错<br>  parityshard –前向纠错\<br>  nocomp –压缩\<br>  key –密钥\<br>  crypt –加密算法\<br>  其余为两边可独立设定的参数</p>
</blockquote>
<hr>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nocomp;mtu=1200;parityshard=0;key=waggywn@10000 dscp=46;mode=fast;crypt=salsa20;sndwnd=1024;rcvwnd=2048</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;LEDE:&lt;br&gt;&lt;a href=&quot;https://downloads.lede-project.org&quot;&gt;https://downloads.lede-project.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;LEDE Packages(mipsel_24kc):&lt;a href=&quot;http://openwrt-dist.sourceforge.net/packages/LEDE/base/mipsel_24kc/&quot;&gt;http://openwrt-dist.sourceforge.net/packages/LEDE/base/mipsel_24kc/&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="嵌入式" scheme="https://ygcaicn.github.io/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
    
      <category term="Linux" scheme="https://ygcaicn.github.io/tags/Linux/"/>
    
      <category term="openwrt" scheme="https://ygcaicn.github.io/tags/openwrt/"/>
    
      <category term="路由器" scheme="https://ygcaicn.github.io/tags/%E8%B7%AF%E7%94%B1%E5%99%A8/"/>
    
      <category term="LEDE" scheme="https://ygcaicn.github.io/tags/LEDE/"/>
    
  </entry>
  
  <entry>
    <title>help-linux</title>
    <link href="https://ygcaicn.github.io/Linux/help-linux.html"/>
    <id>https://ygcaicn.github.io/Linux/help-linux.html</id>
    <published>2017-03-16T02:01:55.000Z</published>
    <updated>2018-01-15T10:21:26.740Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Help-Linux"><a href="#Help-Linux" class="headerlink" title="Help Linux"></a>Help Linux</h1><h2 id="Ubuntu"><a href="#Ubuntu" class="headerlink" title="Ubuntu"></a><em>Ubuntu</em></h2><h3 id="发行版列表WIKI"><a href="#发行版列表WIKI" class="headerlink" title="发行版列表WIKI"></a><a href="https://zh.wikipedia.org/wiki/Ubuntu%E5%8F%91%E8%A1%8C%E7%89%88%E5%88%97%E8%A1%A8" target="_blank" rel="external">发行版列表WIKI</a></h3><p>Ubuntu版本的命名规则是根据正式版发行的年月命名，Ubuntu 8.10也就意味着2008年10月发行的Ubuntu，研发人员与使用者可从版本号码就知道正式发布的时间。Ubuntu是基于Debian开发的Linux发行版，Debian的开发代号来自于电影玩具总动员，不过，Ubuntu各版本的代号却固定是形容词加上动物名称，而且这2个词的英文首字母一定是相同的。从Ubuntu 6.06开始，两个词的首字母按照英文字母表的排列顺序取用</p>
<p><img src="http://i.imgur.com/ApYN4RB.png" alt="Imgur"></p>
<a id="more"></a>
<h3 id="manpage"><a href="#manpage" class="headerlink" title="manpage"></a><a href="http://manpages.ubuntu.com/manpages/" target="_blank" rel="external">manpage</a></h3><p>按照开发代号分类了各个版本的man,也可以通过Toolsbar的版本号直接选择相应的版本。</p>
<p><a href="http://manpages.ubuntu.com/manpages/" target="_blank" rel="external"><img src="http://i.imgur.com/m0Qbhj5.png" alt="Imgur"></a><br><a href="http://manpages.ubuntu.com/manpages/" target="_blank" rel="external"><img src="http://i.imgur.com/YrRlIc8.png" alt="Imgur"></a></p>
<h3 id="help-Ubuntu"><a href="#help-Ubuntu" class="headerlink" title="help Ubuntu"></a><a href="https://help.ubuntu.com/" target="_blank" rel="external">help Ubuntu</a></h3><p>同样按照版本号和开发代号进行了分类，同时文档的类型分为Desktop，Server，InstallGuide。</p>
<p><a href="https://help.ubuntu.com/" target="_blank" rel="external"><img src="http://i.imgur.com/HvItDsN.png" alt="Imgur"></a></p>
<h2 id="Debian"><a href="#Debian" class="headerlink" title="Debian"></a><em>Debian</em></h2><p><a href="https://www.debian.org/" target="_blank" rel="external">Debian</a></p>
<p><a href="https://www.debian.org/doc/manuals/debian-reference/" target="_blank" rel="external">Debian 中文参考手册</a></p>
<h2 id="Raspberry"><a href="#Raspberry" class="headerlink" title="Raspberry"></a><em>Raspberry</em></h2><p><a href="https://www.raspberrypi.org/documentation/raspbian/" target="_blank" rel="external">Raspbian</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Help-Linux&quot;&gt;&lt;a href=&quot;#Help-Linux&quot; class=&quot;headerlink&quot; title=&quot;Help Linux&quot;&gt;&lt;/a&gt;Help Linux&lt;/h1&gt;&lt;h2 id=&quot;Ubuntu&quot;&gt;&lt;a href=&quot;#Ubuntu&quot; class=&quot;headerlink&quot; title=&quot;Ubuntu&quot;&gt;&lt;/a&gt;&lt;em&gt;Ubuntu&lt;/em&gt;&lt;/h2&gt;&lt;h3 id=&quot;发行版列表WIKI&quot;&gt;&lt;a href=&quot;#发行版列表WIKI&quot; class=&quot;headerlink&quot; title=&quot;发行版列表WIKI&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://zh.wikipedia.org/wiki/Ubuntu%E5%8F%91%E8%A1%8C%E7%89%88%E5%88%97%E8%A1%A8&quot;&gt;发行版列表WIKI&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Ubuntu版本的命名规则是根据正式版发行的年月命名，Ubuntu 8.10也就意味着2008年10月发行的Ubuntu，研发人员与使用者可从版本号码就知道正式发布的时间。Ubuntu是基于Debian开发的Linux发行版，Debian的开发代号来自于电影玩具总动员，不过，Ubuntu各版本的代号却固定是形容词加上动物名称，而且这2个词的英文首字母一定是相同的。从Ubuntu 6.06开始，两个词的首字母按照英文字母表的排列顺序取用&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/ApYN4RB.png&quot; alt=&quot;Imgur&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://ygcaicn.github.io/categories/Linux/"/>
    
    
      <category term="linux" scheme="https://ygcaicn.github.io/tags/linux/"/>
    
      <category term="ubuntu" scheme="https://ygcaicn.github.io/tags/ubuntu/"/>
    
      <category term="debian" scheme="https://ygcaicn.github.io/tags/debian/"/>
    
      <category term="raspberry" scheme="https://ygcaicn.github.io/tags/raspberry/"/>
    
  </entry>
  
  <entry>
    <title>Markdown 基础语法</title>
    <link href="https://ygcaicn.github.io/%E6%9D%82%E9%A1%B9/markdown.html"/>
    <id>https://ygcaicn.github.io/杂项/markdown.html</id>
    <published>2017-03-05T22:58:19.000Z</published>
    <updated>2018-01-15T10:22:24.425Z</updated>
    
    <content type="html"><![CDATA[<p>JOHN GRUBER定义的<a href="http://daringfireball.net/projects/markdown/syntax" target="_blank" rel="external">markdown语法</a>。</p>
<a id="more"></a>
<h1 id="段落与换行"><a href="#段落与换行" class="headerlink" title="段落与换行"></a>段落与换行</h1><p>1.段落的前后必须空行：空行指的是什么内容都没有，或者只有空白符（空格或制表符）</p>
<p>相邻两行文本，如果中间没有空行会显示在一行中（换行符被转换成为空格）</p>
<p>2.如果需要在段落内加入换行（<code>&lt;br/&gt;</code>）<br>可以在前一行的末尾加入至少两个空格，然后换行写其他的文字</p>
<p>3.Markdown中的多数区域都需要在两个空行之间</p>
<h1 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h1><h2 id="Setext格式"><a href="#Setext格式" class="headerlink" title="Setext格式"></a>Setext格式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">H1</div><div class="line">====</div><div class="line"></div><div class="line">H2</div><div class="line">----</div></pre></td></tr></table></figure>
<p>渲染效果：（不包含上下的分隔线）</p>
<hr>
<h1 id="H1"><a href="#H1" class="headerlink" title="H1"></a>H1</h1><h2 id="H2"><a href="#H2" class="headerlink" title="H2"></a>H2</h2><hr>
<h2 id="atx格式"><a href="#atx格式" class="headerlink" title="atx格式"></a>atx格式</h2><ul>
<li>可以使用对称的<code>#</code>包括文本：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">## H2 ##</div><div class="line"></div><div class="line">### H3 ###</div></pre></td></tr></table></figure>
<p><del>对于有道云笔记文本和<code>#</code>之间必须有空格。</del> 标准语法就是这样的。</p>
<p>渲染效果：</p>
<hr>
<h2 id="H2-1"><a href="#H2-1" class="headerlink" title="H2"></a>H2</h2><h3 id="H3"><a href="#H3" class="headerlink" title="H3"></a>H3</h3><hr>
<ul>
<li>也可以只在左边使用<code>#</code>:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">### H3</div><div class="line"></div><div class="line">#### H4</div></pre></td></tr></table></figure>
<p>渲染效果：</p>
<hr>
<h3 id="H3-1"><a href="#H3-1" class="headerlink" title="H3"></a>H3</h3><h4 id="H4"><a href="#H4" class="headerlink" title="H4"></a>H4</h4><hr>
<p>JOHN’s <a href="http://daringfireball.net/projects/markdown/syntax#header" target="_blank" rel="external">Heaser</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">HEADERS</div><div class="line"></div><div class="line">Markdown supports two styles of headers, Setext and atx.</div><div class="line"></div><div class="line">Setext-style headers are “underlined” using equal signs (for first-level headers) and dashes (for second-level headers). For example:</div><div class="line"></div><div class="line">This is an H1</div><div class="line">=============</div><div class="line"></div><div class="line">This is an H2</div><div class="line">-------------</div><div class="line">Any number of underlining =’s or -’s will work.</div><div class="line"></div><div class="line">Atx-style headers use 1-6 hash characters at the start of the line, corresponding to header levels 1-6. For example:</div><div class="line"></div><div class="line"># This is an H1</div><div class="line"></div><div class="line">## This is an H2</div><div class="line"></div><div class="line">###### This is an H6</div><div class="line">Optionally, you may “close” atx-style headers. This is purely cosmetic — you can use this if you think it looks better. The closing hashes don’t even need to match the number of hashes used to open the header. (The number of opening hashes determines the header level.) :</div><div class="line"></div><div class="line"># This is an H1 #</div><div class="line"></div><div class="line">## This is an H2 ##</div><div class="line"></div><div class="line">### This is an H3 ######</div></pre></td></tr></table></figure>
<p>各种Markdown软件的渲染结果可能会有一些差别，但是了解一下标准的语法是没坏处的。</p>
<h1 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h1><h2 id="1-引用内容"><a href="#1-引用内容" class="headerlink" title="1.引用内容"></a>1.引用内容</h2><p>在段落或者内容前使用<code>&gt;</code>符号，就可以将这段内容标记为‘引用’的内容（<code>&lt;blockquote&gt;</code>）:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&gt;引用内容</div></pre></td></tr></table></figure>
<p>渲染效果：</p>
<hr>
<blockquote>
<p>引用内容</p>
</blockquote>
<hr>
<h2 id="2-多行引用"><a href="#2-多行引用" class="headerlink" title="2.多行引用"></a>2.多行引用</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&gt;多行引用</div><div class="line">&gt;可以在每一行前加`&gt;`符号</div></pre></td></tr></table></figure>
<p>渲染效果：</p>
<hr>
<blockquote>
<p>多行引用<br>可以在每一行前加<code>&gt;</code>符号</p>
</blockquote>
<hr>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&gt;如果仅在第一行使用`&gt;`,</div><div class="line">后面相邻的行即使省略`&gt;`，也会变成引用内容</div></pre></td></tr></table></figure>
<p>渲染效果：</p>
<hr>
<blockquote>
<p>如果仅在第一行使用<code>&gt;</code>,<br>后面相邻的行即使省略<code>&gt;</code>，也会变成引用内容</p>
</blockquote>
<hr>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&gt;如果引用的内容需要换行，  </div><div class="line">&gt;可以在行尾添加两个空格</div><div class="line">&gt;</div><div class="line">&gt;或者在引用内容中加一个空行</div></pre></td></tr></table></figure>
<p>渲染效果：</p>
<hr>
<blockquote>
<p>如果引用的内容需要换行，<br>可以在行尾添加两个空格</p>
<p>或者在引用内容中加一个空行</p>
</blockquote>
<hr>
<h2 id="3-嵌套引用"><a href="#3-嵌套引用" class="headerlink" title="3.嵌套引用"></a>3.嵌套引用</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&gt;也可以在引用中</div><div class="line">&gt;&gt;使用嵌套的引用</div></pre></td></tr></table></figure>
<p>渲染效果：</p>
<hr>
<blockquote>
<p>也可以在引用中</p>
<blockquote>
<p>使用嵌套的引用</p>
</blockquote>
</blockquote>
<hr>
<h2 id="4-其它Markdown"><a href="#4-其它Markdown" class="headerlink" title="4.其它Markdown"></a>4.其它Markdown</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&gt;在引用中可以使用其它任何*Markdown*语法</div></pre></td></tr></table></figure>
<p>渲染效果：</p>
<hr>
<blockquote>
<p>在引用中可以使用其它任何<em>Markdown</em>语法</p>
</blockquote>
<hr>
<h1 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h1><h2 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">* 可以使用`*`作为标记</div><div class="line">- 也可以使用`-`</div><div class="line">+ 或者`+`</div></pre></td></tr></table></figure>
<p>渲染效果：</p>
<hr>
<ul>
<li>可以使用<code>*</code>作为标记</li>
</ul>
<ul>
<li>也可以使用<code>-</code></li>
</ul>
<ul>
<li>或者<code>+</code></li>
</ul>
<hr>
<h2 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">1. 有序列表以数字和`.`开始；</div><div class="line">2. 数字的序列并不会影响生成列表的序列；</div><div class="line">4. 但是仍然推荐按照自然顺序（1.2.3...）编写</div></pre></td></tr></table></figure>
<p>渲染效果：</p>
<hr>
<ol>
<li>有序列表以数字和<code>.</code>开始；</li>
<li>数字的序列并不会影响生成列表的序列；</li>
<li>但是仍然推荐按照自然顺序（1.2.3…）编写</li>
</ol>
<hr>
<h2 id="嵌套的列表"><a href="#嵌套的列表" class="headerlink" title="嵌套的列表"></a>嵌套的列表</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">1. 第一层</div><div class="line">    + 1-1</div><div class="line">    + 1-2</div><div class="line">    + 1-3</div><div class="line">2. 无序列表和有序列表可以随意相互嵌套</div><div class="line">    1. 2-1</div><div class="line">    2. 2-2</div><div class="line">    3. 2-3</div></pre></td></tr></table></figure>
<p>渲染效果：</p>
<hr>
<ol>
<li>第一层<ul>
<li>1-1</li>
<li>1-2</li>
<li>1-3</li>
</ul>
</li>
<li>无序列表和有序列表可以随意相互嵌套<ol>
<li>2-1</li>
<li>2-2</li>
<li>2-3</li>
</ol>
</li>
</ol>
<hr>
<h2 id="语法和用法"><a href="#语法和用法" class="headerlink" title="语法和用法"></a>语法和用法</h2><ol>
<li>无序列表项的开始是：符号 空格；</li>
<li>有序列表项的开始是：数字 <code>.</code> 空格；</li>
<li>空格至少为一个，多个空格将被解析为一个；</li>
<li>如果仅需要在行前显示数字和<code>.</code>:  </li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">05\. 可以使用：数字\. 来取消显示为列表</div></pre></td></tr></table></figure>
<p>05. 可以使用：数字\. 来取消显示为列表</p>
<h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><h2 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h2><p>可以使用缩进来插入代码块：</p>
<pre><code>&lt;html&gt;
    &lt;title&gt;&lt;/title&gt;
&lt;/html&gt;
</code></pre><p>代码块前后至少有一个空行，切每行代码前至少有一个Tab或者四个空格；</p>
<h2 id="行内代码"><a href="#行内代码" class="headerlink" title="行内代码"></a>行内代码</h2><p>通过<code>`，插入行内代码（</code>是Tab键上边、数字<code>1</code>键左侧的按键）；</p>
<p>例如<code>&lt;title&gt;Markdown&lt;/title&gt;</code></p>
<h2 id="转换规则"><a href="#转换规则" class="headerlink" title="转换规则"></a>转换规则</h2><p>代码块中的文本（包括Markdown语法）都会显示为原始内容，而特殊字符会被转换为HTML<a href="https://zh.wikipedia.org/wiki/XML%E4%B8%8EHTML%E5%AD%97%E7%AC%A6%E5%AE%9E%E4%BD%93%E5%BC%95%E7%94%A8%E5%88%97%E8%A1%A8" target="_blank" rel="external">字符实体</a></p>
<h1 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h1><ol>
<li>可以在一行中使用三个或更多的<code>*</code>,<code>-</code>或<code>_</code>来添加分隔线(<hr>):</li>
<li>多个字符之间可以有空格（空白符），但不能有其它字符：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">***</div><div class="line">------</div><div class="line">_____</div><div class="line"></div><div class="line">*   *   *</div><div class="line">_ _ _</div></pre></td></tr></table></figure>
<p>渲染效果：</p>
<h2 id=""><a href="#" class="headerlink" title="*"></a><em>*</em></h2><hr>
<hr>
<hr>
<h1 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h1><h2 id="行内式"><a href="#行内式" class="headerlink" title="行内式"></a>行内式</h2><p>格式为：<code>[link text](URL  &quot;title text&quot;)</code></p>
<p><code>[Google](http://www.google.com)</code><br><a href="http://www.google.com" target="_blank" rel="external">Google</a></p>
<p><code>[icon](./images/icon.png)</code><br><a href="./images/icon.png">icon</a></p>
<p>超链接的title就是鼠标放上去（不是点击）时就弹出来的提示：</p>
<p><code>[Google](http://www.google.com &quot;Google Title&quot;)</code></p>
<p>注：title text使用’或者”都是可以的。</p>
<p><a href="http://www.google.com" title="Google Title" target="_blank" rel="external">Google</a></p>
<h2 id="参考式"><a href="#参考式" class="headerlink" title="参考式"></a>参考式</h2><p>参考式链接的写法相当于行内式拆分成两部分，并通过一个识别符连链接两部分。参考式能尽量保持文章的结构简单，也方便统一管理URL</p>
<ol>
<li>链接格式</li>
</ol>
<p>第一个方括号为链接文本，第二个方括号为 链接独有的标识符，可以是字母、数字、空格或标点符号。<strong>标识符是不区分大小写的</strong></p>
<p><code>[link text][link-sign]</code></p>
<ol>
<li>链接内容</li>
</ol>
<p>其中URL可以使用&lt;&gt;包起来，title可以使用’’、””、 ()包括（考虑到兼容性，建议使用引号），title部分也可以换行来写；</p>
<p>链接内容的定义可以放在同一个文件的任意位置；</p>
<ol>
<li>备注</li>
</ol>
<p>可以省略标识符，直接使用link text作为标识符。</p>
<p>这种情况下第二个方括号可以为空或者直接省略第二个方括号。</p>
<p>参考格式的优点在于可以在多个不同的位置引用同一个URL。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">[Google][google-link]  </div><div class="line">[Baidu][baidu-link]  </div><div class="line">[QQ][]  </div><div class="line">[Amazon]</div><div class="line"></div><div class="line">[google-link]: http://www.google.com &quot;Google Title&quot;</div><div class="line">[baidu-link]: http://www.baidu.com &quot;Baidu Title&quot;</div><div class="line">[QQ]: http://www.qq.com &quot;QQ Title&quot;</div><div class="line">[Amazon]: http://www.amazon.com &quot;amazon title&quot;</div></pre></td></tr></table></figure>
<p>渲染效果：</p>
<hr>
<p><a href="http://www.google.com" title="Google Title" target="_blank" rel="external">Google</a><br><a href="http://www.baidu.com" title="Baidu Title" target="_blank" rel="external">Baidu</a><br><a href="http://www.qq.com" title="QQ Title" target="_blank" rel="external">QQ</a><br><a href="http://www.amazon.com" title="amazon title" target="_blank" rel="external">Amazon</a></p>
<hr>
<h2 id="自动链接"><a href="#自动链接" class="headerlink" title="自动链接"></a>自动链接</h2><p>使用<code>&lt;&gt;</code>包括的URL或者邮箱地址会被自动的转换为超链接：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;http://www.google.com&gt;   </div><div class="line">&lt;123@email.com&gt;</div></pre></td></tr></table></figure>
<p>渲染效果：</p>
<p><a href="http://www.google.com" target="_blank" rel="external">http://www.google.com</a><br><a href="&#109;&#x61;&#x69;&#108;&#x74;&#x6f;&#x3a;&#49;&#x32;&#51;&#x40;&#101;&#109;&#97;&#x69;&#108;&#46;&#99;&#111;&#x6d;">&#49;&#x32;&#51;&#x40;&#101;&#109;&#97;&#x69;&#108;&#46;&#99;&#111;&#x6d;</a></p>
<p>这种方式适合行内较短的链接，会使用URL作为超链接文章，邮箱地址会自动编码，以逃避抓取机器人。</p>
<h1 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h1><p>插入图片的语法和插入超链接的语法基本一致，只是在最前面多一个<code>!</code>。也分为行内式和参考式两种。</p>
<h2 id="行内式-1"><a href="#行内式-1" class="headerlink" title="行内式"></a>行内式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">![Imgur](http://i.imgur.com/YACdsVS.jpg)</div></pre></td></tr></table></figure>
<p><img src="http://i.imgur.com/YACdsVS.jpg" alt="Imgur" title="rosse"></p>
<p>方括号部分是图片的替代文本，括号中的’title’部分和连接是一样的，是可选的。</p>
<h2 id="参考式-1"><a href="#参考式-1" class="headerlink" title="参考式"></a>参考式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">![Imgur][rosse]</div><div class="line"></div><div class="line">[rosse]: http://i.imgur.com/YACdsVS.jpg &quot;rosse&quot;</div></pre></td></tr></table></figure>
<p><img src="http://i.imgur.com/YACdsVS.jpg" alt="Imgur" title="rosse"></p>
<h2 id="指定图片的大小"><a href="#指定图片的大小" class="headerlink" title="指定图片的大小"></a>指定图片的大小</h2><p>Markdown不支持指定图片的大小，不过可以通过直接插入<img>标签来指定相关属性：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;img src=&quot;http://i.imgur.com/YACdsVS.jpg&quot; alt=&quot;rosse&quot; title=&quot;rosse&quot; width=&quot;50&quot; height=&quot;30&quot;/&gt;</div></pre></td></tr></table></figure>
<p><img src="http://i.imgur.com/YACdsVS.jpg" alt="rosse" title="rosse" width="50" height="30"></p>
<p>注：这在有道云笔记里是不支持的！</p>
<h1 id="强调"><a href="#强调" class="headerlink" title="强调"></a>强调</h1><ol>
<li>使用<code>* *</code>或<code>_ _</code>包括的文本会被转换为<em></em>,通常表现为斜体。</li>
<li>使用<code>** **</code>或<code>__ __</code>包括的文本会被转换为<strong></strong>,通常表现为加粗。</li>
<li>用来包括文本的<em>或_内侧不能有空白，否则</em> _将不会被转换。</li>
<li>如果需要在文本中成对显示*或者_，可以在符号前加入<code>\</code>即可。</li>
<li>强调的特殊符号必须成对使用。</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">*Hello world!*  </div><div class="line">_Hello world!_  </div><div class="line">**Hello world!**  </div><div class="line">__Hello world!__  </div><div class="line">\*Hello world!\*  </div><div class="line">\_Hello world!\_</div></pre></td></tr></table></figure>
<p><em>Hello world!</em><br><em>Hello world!</em><br><strong>Hello world!</strong><br><strong>Hello world!</strong><br>*Hello world!*<br>_Hello world!_  </p>
<h1 id="字符转义"><a href="#字符转义" class="headerlink" title="字符转义"></a>字符转义</h1><p>反斜线 <code>\</code>用于插入在Markdown语法中有特殊作用的字符。</p>
<p>这些字符包括：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">\  </div><div class="line">`  </div><div class="line">_  </div><div class="line">&#123;&#125;  </div><div class="line">[]  </div><div class="line">()  </div><div class="line">#  </div><div class="line">+  </div><div class="line">-  </div><div class="line">_  </div><div class="line">&apos;  </div><div class="line">.  </div><div class="line">!</div></pre></td></tr></table></figure>
<h1 id="Markdown-扩展语法"><a href="#Markdown-扩展语法" class="headerlink" title="Markdown 扩展语法"></a>Markdown 扩展语法</h1><p>Markdown标准 本身包含的功能有限，所以产生了许多第三方的扩展语法，如<a href="https://help.github.com/categories/writing-on-github/" target="_blank" rel="external">Github Flavored Markdown</a>。</p>
<h1 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h1><p>用<code>~~ ~~</code>包括的内容将以删除线的形式展现。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">~~删除线~~</div></pre></td></tr></table></figure>
<p><del>删除线</del></p>
<h1 id="代码块和语法高亮"><a href="#代码块和语法高亮" class="headerlink" title="代码块和语法高亮"></a>代码块和语法高亮</h1><h2 id="代码块-1"><a href="#代码块-1" class="headerlink" title="代码块"></a>代码块</h2><ol>
<li>与缩进添加代码块不同，这里使用 \<figure class="highlight plain"><figcaption><span>来包含多行代码。```需要单独占一行。</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">2. 在第一组```之后添加代码的语言，如&apos;javascript&apos;或者&apos;js&apos;，即可以将代码标记为Javascript。</div><div class="line"></div><div class="line"></div><div class="line">    ```c++</div><div class="line">    include&lt;iostream&gt;</div><div class="line">    using namespace std;</div><div class="line"></div><div class="line">    int main(void)</div><div class="line">    &#123;</div><div class="line">        cout &lt;&lt; &quot;Hello world!&quot;;</div><div class="line">        return 0;</div><div class="line">    &#125;</div></pre></td></tr></table></figure></li>
</ol>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">include&lt;iostream&gt;</div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"Hello world!"</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<pre><code><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">window</span>.addEventListener(<span class="string">'load'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;<span class="built_in">console</span>.log(<span class="string">'window loaded'</span>);&#125;);</div></pre></td></tr></table></figure>
</code></pre><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">window</span>.addEventListener(<span class="string">'load'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;<span class="built_in">console</span>.log(<span class="string">'window loaded'</span>);&#125;);</div></pre></td></tr></table></figure>
<h1 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h1><h2 id="单元格和表头"><a href="#单元格和表头" class="headerlink" title="单元格和表头"></a>单元格和表头</h2><ol>
<li>使用<code>|</code>来分隔不同的单元格，使用来分隔表头和其它行。</li>
<li>为了美观，可以使用空格对齐不同的单元格，并在左右两侧都使用 <code>|</code>来标记单元格边界。</li>
<li>在表头下方的分隔线中加入 <code>:</code>，即可标记下方单元格内容的对齐方式。单元格内容默认为左对齐，表头内容会一直居中对齐。</li>
<li>表格中可以插入其它Markdown内容的行内标记，比如超链接等。</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">| name      |   age     |</div><div class="line">|---------- |-----------|</div><div class="line">|LearnShare |   12      |</div><div class="line">|Mike       |   20      |</div></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>name</th>
<th>age</th>
</tr>
</thead>
<tbody>
<tr>
<td>LearnShare</td>
<td>12</td>
</tr>
<tr>
<td>Mike</td>
<td>20</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th style="text-align:right">name</th>
<th>age</th>
<th>blog</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:right">LearnShare</td>
<td>12</td>
<td><a href="http://www.blog.cumtpn.com" target="_blank" rel="external">Learn</a></td>
</tr>
<tr>
<td style="text-align:right">Mike</td>
<td>20</td>
<td><img src="http://i.imgur.com/YACdsVS.jpg" alt="Imgur" title="rosse"></td>
</tr>
</tbody>
</table>
<h1 id="Task-list"><a href="#Task-list" class="headerlink" title="Task list"></a>Task list</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">- [ ] Eat</div><div class="line">- [x] Code</div><div class="line">    - [x] HTML</div><div class="line">    - [X] CSS</div><div class="line">    - [ ] Javascipt</div><div class="line">- [ ]Sleep</div></pre></td></tr></table></figure>
<ul>
<li>[ ] Eat</li>
<li>[x] Code<ul>
<li>[x] HTML</li>
<li>[x] CSS</li>
<li>[ ] Javascipt</li>
</ul>
</li>
<li>[ ]Sleep</li>
</ul>
<h1 id="编辑器与扩展"><a href="#编辑器与扩展" class="headerlink" title="编辑器与扩展"></a>编辑器与扩展</h1><p>这部分给大家介绍一些可以用来书写、编辑Markdown的工具，包括独立客户端、编辑器/IDE插件，以及WEB的工具，排名不分先后。</p>
<p>也欢迎你来推荐自己喜欢的工具和插件。</p>
<ul>
<li><a href="https://markdownpad.com" target="_blank" rel="external">MarkdownPad</a> Windows</li>
<li><a href="http://www.texts.io/" target="_blank" rel="external">Text</a> Windows OSX</li>
<li><a href="http://code52.org/DownmarkerWPF/" target="_blank" rel="external">MarkPad</a> Windows</li>
<li><a href="http://www.mdcharm.com/" target="_blank" rel="external">MdCharm</a> Windows Linux</li>
<li><a href="http://mike-ward.net/markdownedit/" target="_blank" rel="external">Mardown Edit</a> Windows</li>
<li><a href="https://cloose.github.io/CuteMarkEd/" target="_blank" rel="external">CuteMarkEd</a>Windows Linux</li>
<li><a href="http://pad.haroopress.com/" target="_blank" rel="external">Haroopad</a> Windows OSX Linux</li>
<li><a href="http://25.io/mou/" target="_blank" rel="external">Mou</a> OSX</li>
<li><a href="http://macdown.uranusjr.com/" target="_blank" rel="external">MacDown</a> OSX</li>
<li><a href="http://www.markdownpro.com/" target="_blank" rel="external">Markdown Pro</a> OSX</li>
<li><a href="http://sourceforge.net/projects/retext/" target="_blank" rel="external">ReText</a>Linux</li>
<li><a href="https://github.com/jonschlinkert/sublime-markdown-extended" target="_blank" rel="external">sublime-markdown-extended</a>Sublime Text</li>
<li><a href="https://github.com/atom/markdown-preview" target="_blank" rel="external">Atom Markdown Preview</a>Atom</li>
<li><a href="https://github.com/nicoulaj/idea-markdown" target="_blank" rel="external">IDEA Markdown</a>IDEA</li>
<li><a href="https://www.zybuluo.com/cmd/" target="_blank" rel="external">cmd Markdown</a>Windows OSX Linux web</li>
<li><a href="https://stackedit.io" target="_blank" rel="external">StactEdit</a>Web</li>
<li><a href="http://dillinger.io" target="_blank" rel="external">Dillinger</a>Web</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;JOHN GRUBER定义的&lt;a href=&quot;http://daringfireball.net/projects/markdown/syntax&quot;&gt;markdown语法&lt;/a&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="杂项" scheme="https://ygcaicn.github.io/categories/%E6%9D%82%E9%A1%B9/"/>
    
    
      <category term="markdown" scheme="https://ygcaicn.github.io/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>CentOS下载及版本选择--Linux版本，下载</title>
    <link href="https://ygcaicn.github.io/Linux/CentOS%E4%B8%8B%E8%BD%BD%E5%8F%8A%E7%89%88%E6%9C%AC%E9%80%89%E6%8B%A9-Linux%E7%89%88%E6%9C%AC%EF%BC%8C%E4%B8%8B%E8%BD%BD.html"/>
    <id>https://ygcaicn.github.io/Linux/CentOS下载及版本选择-Linux版本，下载.html</id>
    <published>2017-01-16T04:02:06.000Z</published>
    <updated>2018-01-15T09:58:46.582Z</updated>
    
    <content type="html"><![CDATA[<p>CentOS 是一个企业级的 Linux 发行版本，它源于 Red Hat 1 免费公开的源代码。<br>CentOS 完全遵守 Red Hat 的再发行政策，并且以功能上的兼容性为目标。CentOS 对组件的修改主要是去除上游供应商的商标及美工。</p>
<a id="more"></a>
<h1 id="镜像目录结构："><a href="#镜像目录结构：" class="headerlink" title="镜像目录结构："></a>镜像目录结构：</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">0_README.txt                                       22-May-2016 13:52    2210</div><div class="line">CentOS-6.8-x86_64-LiveCD.iso                       22-May-2016 22:18    702M</div><div class="line">CentOS-6.8-x86_64-LiveCD.torrent                   25-May-2016 18:01     28K</div><div class="line">CentOS-6.8-x86_64-LiveDVD.iso                      22-May-2016 21:38      2G</div><div class="line">CentOS-6.8-x86_64-LiveDVD.torrent                  25-May-2016 18:01     76K</div><div class="line">CentOS-6.8-x86_64-bin-DVD1.iso                     23-May-2016 07:53      4G</div><div class="line">CentOS-6.8-x86_64-bin-DVD1to2.torrent              25-May-2016 18:01    229K</div><div class="line">CentOS-6.8-x86_64-bin-DVD2.iso                     23-May-2016 07:53      2G</div><div class="line">CentOS-6.8-x86_64-minimal.iso                      24-May-2016 00:37    447M</div><div class="line">CentOS-6.8-x86_64-minimal.torrent                  25-May-2016 18:01     18K</div><div class="line">CentOS-6.8-x86_64-netinstall.iso                   22-May-2016 14:07    228M</div><div class="line">CentOS-6.8-x86_64-netinstall.torrent               25-May-2016 18:01    9799</div><div class="line">README.txt                                         22-May-2016 13:52    2210</div><div class="line">md5sum.txt                                         24-May-2016 00:41     388</div><div class="line">md5sum.txt.asc                                     25-May-2016 17:57    1271</div><div class="line">sha1sum.txt                                        24-May-2016 00:41     436</div><div class="line">sha1sum.txt.asc                                    25-May-2016 17:57    1319</div><div class="line">sha256sum.txt                                      24-May-2016 00:41     580</div><div class="line">sha256sum.txt.asc                                  25-May-2016 17:58    1463</div></pre></td></tr></table></figure>
<h1 id="README-txt有说明"><a href="#README-txt有说明" class="headerlink" title="README.txt有说明"></a>README.txt有说明</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">What images are in this directory</div><div class="line"></div><div class="line">CentOS-6.8-x86_64-netinstall.iso</div><div class="line">  This is the network install and rescue image.</div><div class="line">  This image is designed to be burned onto a CD. You then boot your computer off the CD.</div><div class="line"></div><div class="line">CentOS-6.8-x86_64-minimal.iso</div><div class="line">  The aim of this image is to install a very basic CentOS 6.8 system, with the minimum of packages needed to have a functional system.</div><div class="line">  Please burn this image onto a CD and boot your computer off it. A preselected set of packages will be installed on your system. Everything else needs to be installed using yum.</div><div class="line">  Please read http://wiki.centos.org/Manuals/ReleaseNotes/CentOSMinimalCD6.8 for more details about this image.</div><div class="line">  The set of packages installed by this image is identical to the one installed when choosing the group named &quot;Minimal&quot; from the full DVD image.</div><div class="line"></div><div class="line">CentOS-6.8-x86_64-bin-DVD1.iso</div><div class="line">CentOS-6.8-x86_64-bin-DVD2.iso</div><div class="line">  These two dvd images contain the entire base distribution.</div><div class="line">  Please burn DVD1 onto a DVD and boot your computer off it.</div><div class="line">  A basic install will not need DVD2.</div><div class="line">  After the installation is complete, please run &quot;yum update&quot; in order to update your system.</div><div class="line"></div><div class="line">CentOS-6.8-x86_64-LiveCD.iso</div><div class="line">  This is a CD live image of CentOS 6.8 designed to be burned onto a CD. You then boot your computer using that CD.</div><div class="line">  Please read http://wiki.centos.org/Manuals/ReleaseNotes/CentOSLiveCD6.8 for more details about this image.</div><div class="line">  The disk can also be used to install CentOS 6.8 onto your computer but without offering any package selection options at install time.</div><div class="line"></div><div class="line">CentOS-6.8-x86_64-LiveDVD.iso</div><div class="line">  This is a DVD live image of CentOS 6.8 designed to be burned onto a DVD. You then boot your computer using that DVD.</div><div class="line">  Please read http://wiki.centos.org/Manuals/ReleaseNotes/CentOSLiveDVD6.8 for more details about this image.</div><div class="line">  The disk can also be used to install CentOS 6.8 onto your computer but without offering any package selection options at install time.</div><div class="line"></div><div class="line"> Remember that in order to be able to partition your disk you will need to run the GUI installer which in turns needs enough RAM. The same is true for the network setup step.</div><div class="line"> The release notes ( http://wiki.centos.org/Manuals/ReleaseNotes/CentOS6.8 ) provide more details about these aspects.</div></pre></td></tr></table></figure>
<h1 id="LiveDVD-LiveCD-DVD"><a href="#LiveDVD-LiveCD-DVD" class="headerlink" title="LiveDVD-LiveCD-DVD"></a>LiveDVD-LiveCD-DVD</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">CentOS-6.8-x86_64-LiveCD.iso</div><div class="line"></div><div class="line">CentOS-6.8-x86_64-LiveDVD.iso</div></pre></td></tr></table></figure>
<p>这两个live版不许要安装到硬盘，可以直接从介质启动系统。<br>LiveCD版——相比LiveDVD是个精简的光盘CentOS系统。体积更小，便于维护使用。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">CentOS-6.8-x86_64-bin-DVD1.iso</div><div class="line"></div><div class="line">CentOS-6.8-x86_64-bin-DVD2.iso</div></pre></td></tr></table></figure>
<p>这两个镜像是系统安装的镜像，需要安装到硬盘才能使用。DVD1用与基础安装，DVD2为附加RPM包，安装系统时只需要用到DVD1。<br>另外这两个镜像可以作为本地yum源使用。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">CentOS-6.8-x86_64-minimal.iso</div></pre></td></tr></table></figure>
<p>最小化安装镜像，very basic CentOS 6.8 system。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">CentOS-6.8-x86_64-netinstall.iso</div></pre></td></tr></table></figure>
<p>网络安装镜像，需要联网才能进行安装。</p>
<h2 id="参考文档：https-wiki-centos-org-zh-Manuals-ReleaseNotes-CentOS6-8"><a href="#参考文档：https-wiki-centos-org-zh-Manuals-ReleaseNotes-CentOS6-8" class="headerlink" title="参考文档：https://wiki.centos.org/zh/Manuals/ReleaseNotes/CentOS6.8"></a>参考文档：<a href="https://wiki.centos.org/zh/Manuals/ReleaseNotes/CentOS6.8" target="_blank" rel="external">https://wiki.centos.org/zh/Manuals/ReleaseNotes/CentOS6.8</a></h2><p>#Linux下载开源镜像站：</p>
<h2 id="1-企业贡献："><a href="#1-企业贡献：" class="headerlink" title="1.企业贡献："></a>1.企业贡献：</h2><p>　　搜狐开源镜像站：<a href="http://mirrors.sohu.com/" target="_blank" rel="external">http://mirrors.sohu.com/</a></p>
<p>　　网易开源镜像站：<a href="http://mirrors.163.com/" target="_blank" rel="external">http://mirrors.163.com/</a></p>
<h2 id="2-大学教学："><a href="#2-大学教学：" class="headerlink" title="2.大学教学："></a>2.大学教学：</h2><p>　　北京理工大学：</p>
<p>　　<a href="http://mirror.bit.edu.cn" target="_blank" rel="external">http://mirror.bit.edu.cn</a> (IPv4 only)</p>
<p>　　<a href="http://mirror.bit6.edu.cn" target="_blank" rel="external">http://mirror.bit6.edu.cn</a> (IPv6 only)</p>
<p>　　北京交通大学：</p>
<p>　　<a href="http://mirror.bjtu.edu.cn" target="_blank" rel="external">http://mirror.bjtu.edu.cn</a> (IPv4 only)</p>
<p>　　<a href="http://mirror6.bjtu.edu.cn" target="_blank" rel="external">http://mirror6.bjtu.edu.cn</a> (IPv6 only)</p>
<p>　　<a href="http://debian.bjtu.edu.cn" target="_blank" rel="external">http://debian.bjtu.edu.cn</a> (IPv4+IPv6)</p>
<p>　　兰州大学：<a href="http://mirror.lzu.edu.cn/" target="_blank" rel="external">http://mirror.lzu.edu.cn/</a></p>
<p>　　厦门大学：<a href="http://mirrors.xmu.edu.cn/" target="_blank" rel="external">http://mirrors.xmu.edu.cn/</a></p>
<p>　　上海交通大学：</p>
<p>　　<a href="http://ftp.sjtu.edu.cn/" target="_blank" rel="external">http://ftp.sjtu.edu.cn/</a> (IPv4 only)</p>
<p>　　<a href="http://ftp6.sjtu.edu.cn" target="_blank" rel="external">http://ftp6.sjtu.edu.cn</a> (IPv6 only)</p>
<p>　　清华大学：</p>
<p>　　<a href="http://mirrors.tuna.tsinghua.edu.cn/" target="_blank" rel="external">http://mirrors.tuna.tsinghua.edu.cn/</a> (IPv4+IPv6)</p>
<p>　　<a href="http://mirrors.6.tuna.tsinghua.edu.cn/" target="_blank" rel="external">http://mirrors.6.tuna.tsinghua.edu.cn/</a> (IPv6 only)</p>
<p>　　<a href="http://mirrors.4.tuna.tsinghua.edu.cn/" target="_blank" rel="external">http://mirrors.4.tuna.tsinghua.edu.cn/</a> (IPv4 only)</p>
<p>　　天津大学：<a href="http://mirror.tju.edu.cn/" target="_blank" rel="external">http://mirror.tju.edu.cn/</a></p>
<p>　　中国科学技术大学：</p>
<p>　　<a href="http://mirrors.ustc.edu.cn/" target="_blank" rel="external">http://mirrors.ustc.edu.cn/</a> (IPv4+IPv6)</p>
<p>　　<a href="http://mirrors4.ustc.edu.cn/" target="_blank" rel="external">http://mirrors4.ustc.edu.cn/</a></p>
<p>　　<a href="http://mirrors6.ustc.edu.cn/" target="_blank" rel="external">http://mirrors6.ustc.edu.cn/</a></p>
<p>　　西南大学：<a href="http://linux.swu.edu.cn/swudownload/Distributions/" target="_blank" rel="external">http://linux.swu.edu.cn/swudownload/Distributions/</a></p>
<p>　　东北大学：</p>
<p>　　<a href="http://mirror.neu.edu.cn/" target="_blank" rel="external">http://mirror.neu.edu.cn/</a> (IPv4 only)</p>
<p>　　<a href="http://mirror.neu6.edu.cn/" target="_blank" rel="external">http://mirror.neu6.edu.cn/</a> (IPv6 only)</p>
<p>　　电子科技大学：</p>
<p>　　<a href="http://ubuntu.uestc.edu.cn/" target="_blank" rel="external">http://ubuntu.uestc.edu.cn/</a></p>
<p>　　青岛大学：<a href="http://mirror.qdu.edu.cn/" target="_blank" rel="external">http://mirror.qdu.edu.cn/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;CentOS 是一个企业级的 Linux 发行版本，它源于 Red Hat 1 免费公开的源代码。&lt;br&gt;CentOS 完全遵守 Red Hat 的再发行政策，并且以功能上的兼容性为目标。CentOS 对组件的修改主要是去除上游供应商的商标及美工。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://ygcaicn.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://ygcaicn.github.io/tags/Linux/"/>
    
  </entry>
  
</feed>

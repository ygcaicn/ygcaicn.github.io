<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jachin</title>
  <subtitle>Impossible is I’m possible!!!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://ygcaicn.github.io/"/>
  <updated>2018-05-19T19:01:52.050Z</updated>
  <id>https://ygcaicn.github.io/</id>
  
  <author>
    <name>PN结</name>
    <email>ygcaicn@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Ubuntu解决QQ难题(Tim)</title>
    <link href="https://ygcaicn.github.io/Linux/Linux-ubuntu-qq.html"/>
    <id>https://ygcaicn.github.io/Linux/Linux-ubuntu-qq.html</id>
    <published>2018-05-19T18:30:42.000Z</published>
    <updated>2018-05-19T19:01:52.050Z</updated>
    
    <content type="html"><![CDATA[<p>使用Ubuntu作为日常生活、工作、学习环境有一点最大的问题就是QQ，博主最近发现一个近乎完美的方案！</p>
<p>首先说明wine可以解决这个问题，但是我也尝试安装过wine占用两个G空间不说零零散散装了一大堆各种依赖库，而这些库可能只有wine才会用的到，这怎么能符合完美、极简主义呢！！！果断放弃这种方案。<br>本文介绍使用docker安装的方法使用Tim，与系统隔离，不需要自己配置weine，占用707M空间，能记住密码，能发送图片语音红包，能够接收发送文件，能远程，展示了解到的bug只有不能开视频。<br><a id="more"></a></p>
<h1 id="Step1-安装"><a href="#Step1-安装" class="headerlink" title="Step1.安装"></a>Step1.安装</h1><p>安装很简单，一条命令，并且不会零散的安装的导出都是。。</p>
<p>  docker push bestwu/qq:office</p>
<h1 id="Step-建立启动脚本"><a href="#Step-建立启动脚本" class="headerlink" title="Step.建立启动脚本"></a>Step.建立启动脚本</h1><p>新建~/opt/qq.sh下如一下内容：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#/usr/bin/env bash</span><br><span class="line">  docker run -d  \</span><br><span class="line">    --device /dev/snd \</span><br><span class="line">    -v /tmp/.X11-unix:/tmp/.X11-unix \</span><br><span class="line">    -v $HOME/TencentFiles:/TencentFiles \</span><br><span class="line">    -v $HOME:/home/jachin\</span><br><span class="line">    -e DISPLAY=unix$DISPLAY \</span><br><span class="line">    -e XMODIFIERS=@im=fcitx \</span><br><span class="line">    -e QT_IM_MODULE=fcitx \</span><br><span class="line">    -e GTK_IM_MODULE=fcitx \</span><br><span class="line">    -e AUDIO_GID=`getent group audio | cut -d: -f3` \</span><br><span class="line">    -e VIDEO_GID=`getent group video | cut -d: -f3` \</span><br><span class="line">    -e GID=`id -g` \</span><br><span class="line">    -e UID=`id -u` \</span><br><span class="line">    bestwu/qq:office</span><br></pre></td></tr></table></figure>
<p>脚本中的-v选项是指定与qq共享的录，冒号前面的对应主机的实际目录，冒号后面的是对应在Tim中的路径，注意按照自己的实际情况修改。</p>
<p>然后在命令行chmod +x ~/opt/qq.sh</p>
<p>然后新建~/.local/share/applications/tim.desktop</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[Desktop Entry]</span><br><span class="line">Categories=Network;InstantMessaging;</span><br><span class="line">Exec=/home/jachin/app/ubuntu/qq.sh</span><br><span class="line">Icon=tim</span><br><span class="line">Name=Wine QQ</span><br><span class="line">NoDisplay=false</span><br><span class="line">StartupNotify=true</span><br><span class="line">Terminal=0</span><br><span class="line">Type=Application</span><br><span class="line">Name[en_US]=TIM</span><br><span class="line">Name[zn_CN]=TIM</span><br></pre></td></tr></table></figure>
<p>下载个Tim的图标命名为tim.png  放置到   ~/.local/share/icons/Papirus/scalable/apps/tim.png然后就能在应用中看到QQ的图标了，到此大功告成！</p>
<p>  docker images#查看安装的容器<br><img src="../img/6b2085ec-55fd-431a-b846-fab7c1a5fcec.png" alt="6b2085ec-55fd-431a-b846-fab7c1a5fcec"></p>
<p><img src="../img/f510eee8-0492-414a-8e8e-9bebabcac661.png" alt="f510eee8-0492-414a-8e8e-9bebabcac661"></p>
<h1 id="每天进步一点点"><a href="#每天进步一点点" class="headerlink" title="每天进步一点点!!!!"></a>每天进步一点点!!!!</h1><h2 id="impossible-is-I’m-possible"><a href="#impossible-is-I’m-possible" class="headerlink" title="impossible is I’m possible!!!"></a><strong>impossible is I’m possible!!!</strong></h2>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用Ubuntu作为日常生活、工作、学习环境有一点最大的问题就是QQ，博主最近发现一个近乎完美的方案！&lt;/p&gt;
&lt;p&gt;首先说明wine可以解决这个问题，但是我也尝试安装过wine占用两个G空间不说零零散散装了一大堆各种依赖库，而这些库可能只有wine才会用的到，这怎么能符合完美、极简主义呢！！！果断放弃这种方案。&lt;br&gt;本文介绍使用docker安装的方法使用Tim，与系统隔离，不需要自己配置weine，占用707M空间，能记住密码，能发送图片语音红包，能够接收发送文件，能远程，展示了解到的bug只有不能开视频。&lt;br&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://ygcaicn.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://ygcaicn.github.io/tags/Linux/"/>
    
      <category term="Ubuntu" scheme="https://ygcaicn.github.io/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>百度云不限速下载</title>
    <link href="https://ygcaicn.github.io/Linux/Linux-baidudisk-download.html"/>
    <id>https://ygcaicn.github.io/Linux/Linux-baidudisk-download.html</id>
    <published>2018-05-19T18:09:42.000Z</published>
    <updated>2018-05-19T18:22:31.684Z</updated>
    
    <content type="html"><![CDATA[<p>百度云下载一直是一个烦人的问题，无奈会员又太贵。。。各种工具又都不靠普</p>
<p>百度云下载限速的原理是按廉洁数算的，一个链接给几十KB的速度，各种下载工具无非就是采用多线程下载的方法解除限速。<br>总结起来就是先生成下载链接，然后用多线程下载工具进行下载。大家比较熟悉的可能是aria2c,但是它最大的进程数目为16,16*几十Kb也就是几百KB的速度。下面讲解在Ubuntu上的另一个下载工具：axel<br>平台：Ubuntu 18.04 4.15.0-20-generic</p>
<a id="more"></a>
<h1 id="Step1-获取下载链接"><a href="#Step1-获取下载链接" class="headerlink" title="Step1. 获取下载链接"></a>Step1. 获取下载链接</h1><p>获取下载链接的方法有很多一下介绍两种：</p>
<ul>
<li><h2 id="从浏览器直接点击下载会生成下载链接，然后复制下载链接待用，取消下载。"><a href="#从浏览器直接点击下载会生成下载链接，然后复制下载链接待用，取消下载。" class="headerlink" title="从浏览器直接点击下载会生成下载链接，然后复制下载链接待用，取消下载。"></a>从浏览器直接点击下载会生成下载链接，然后复制下载链接待用，取消下载。</h2><p><img src="../img/1d643fe7-1caf-4efd-b55f-d82a5fc6f24f.png" alt="1d643fe7-1caf-4efd-b55f-d82a5fc6f24f"></p>
</li>
</ul>
<ul>
<li><h2 id="安装油猴脚本管理器，然后安装相应的脚本"><a href="#安装油猴脚本管理器，然后安装相应的脚本" class="headerlink" title="安装油猴脚本管理器，然后安装相应的脚本"></a>安装油猴脚本管理器，然后安装相应的脚本</h2>油猴脚本管理器：<a href="https://tampermonkey.net/" target="_blank" rel="noopener">https://tampermonkey.net/</a></li>
</ul>
<p><img src="../img/980eeb96-4e7f-46f2-8198-f0922da5bf48.png" alt="980eeb96-4e7f-46f2-8198-f0922da5bf48 "><br>Chrome打开，点击安装Stable版即可。</p>
<p>脚本：<a href="https://greasyfork.org/zh-CN/scripts/by-site/baidu.com" target="_blank" rel="noopener">https://greasyfork.org/zh-CN/scripts/by-site/baidu.com</a><br><img src="../img/c778d634-d739-4adf-88ce-1651fbbe9668.png" alt="c778d634-d739-4adf-88ce-1651fbbe9668"><br>脚本网站有很多不限于这一个，进去后搜索使用于baidu.com的脚本，找个比较新点的，得分高的下载即可。然后打开百度云(<a href="https://pan.baidu.com" target="_blank" rel="noopener">https://pan.baidu.com</a>)，或则百度云分享链接就能看到下载助手或则是导出链接的字样。<br><img src="../img/4bb22410-b8e7-4f4c-8e31-68343af548f4.png" alt="4bb22410-b8e7-4f4c-8e31-68343af548f4"></p>
<ul>
<li><h2 id="使用Chrome插件"><a href="#使用Chrome插件" class="headerlink" title="使用Chrome插件"></a>使用Chrome插件</h2>类似的插进有很多，这里给出一个BaiduExporter<br><a href="https://github.com/acgotaku/BaiduExporter" target="_blank" rel="noopener">https://github.com/acgotaku/BaiduExporter</a></li>
</ul>
<h1 id="Step2-axel登场"><a href="#Step2-axel登场" class="headerlink" title="Step2.axel登场"></a>Step2.axel登场</h1><h2 id="安装axel"><a href="#安装axel" class="headerlink" title="安装axel"></a>安装axel</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update &amp;&amp; sudo apt-get install axel</span><br></pre></td></tr></table></figure>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">Usage: axel [options] url1 [url2] [url...]</span><br><span class="line"></span><br><span class="line">#指定最大速度（字节/秒）</span><br><span class="line">--max-speed=x		-s x	Specify maximum speed (bytes per second)</span><br><span class="line"># 最大链接数</span><br><span class="line">--num-connections=x	-n x	Specify maximum number of connections</span><br><span class="line"># 最大重定向次数</span><br><span class="line">--max-redirect=x		Specify maximum number of redirections</span><br><span class="line"># 输出文件指定文件名</span><br><span class="line">--output=f		-o f	Specify local output file</span><br><span class="line"># 服务器数目</span><br><span class="line">--search[=n]		-S[n]	Search for mirrors and download from n servers</span><br><span class="line"># 强制使用ipv4</span><br><span class="line">--ipv4			-4	Use the IPv4 protocol</span><br><span class="line"># 强制使用ipv6</span><br><span class="line">--ipv6			-6	Use the IPv6 protocol</span><br><span class="line"># 指定Http请求的Header</span><br><span class="line">--header=x		-H x	Add HTTP header string</span><br><span class="line"># 指定Http请求的user-agent</span><br><span class="line">--user-agent=x		-U x	Set user agent</span><br><span class="line"># 不使用代理</span><br><span class="line">--no-proxy		-N	Just don&apos;t use any proxy server</span><br><span class="line"># 不验证SSL密钥</span><br><span class="line">--insecure		-k	Don&apos;t verify the SSL certificate</span><br><span class="line"># 如果文件已经存在跳过下载</span><br><span class="line">--no-clobber		-c	Skip download if file already exists</span><br><span class="line"># 静默模式</span><br><span class="line">--quiet			-q	Leave stdout alone</span><br><span class="line"># 详细输出信息</span><br><span class="line">--verbose		-v	More status information</span><br><span class="line"># 显示进度条</span><br><span class="line">--alternate		-a	Alternate progress indicator</span><br><span class="line"># 帮助</span><br><span class="line">--help			-h	This information</span><br><span class="line"># 设置连接超时</span><br><span class="line">--timeout=x		-T x	Set I/O and connection timeout</span><br><span class="line"># 查看版本号</span><br><span class="line">--version		-V	Version information</span><br></pre></td></tr></table></figure>
<h1 id="Step3-正式下载"><a href="#Step3-正式下载" class="headerlink" title="Step3.正式下载"></a>Step3.正式下载</h1><p>主要用axel的-n选项进行加速，百度云一般每个链接给几十KB的速度，因此我们链接数目越多下载速度越快！当然还跟你的带宽有关100MB的带宽-n 1000足够慢速下载了。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">axel -n 1000 &quot;https://d.pcs.baidu.com/file/32a06e6f67e2567e799300b7f09c4b06?fid=3928561930-250528-591861579041114&amp;dstime=1526751194&amp;rt=sh&amp;sign=FDtAERV-DCb740ccc5511e5e8fedcff06b081203-bkeG852xirZ02HOQHHOi5tBWbzc%3D&amp;expires=8h&amp;chkv=1&amp;chkbd=0&amp;chkpc=&amp;dp-logid=3225304149957301357&amp;dp-callid=0&amp;r=674737288&quot;</span><br></pre></td></tr></table></figure></p>
<p>注意链接左右的引号不能丢，因为链接内有特殊符号！！！<br>网上有些说的要加ua选项、header选项什么的，2018.05.20亲测不需要加直接就能下载！100M带宽下载12MB/s。</p>
<p><img src="../img/9db692a0-5e32-43e4-b4fe-bf9cca5d3dec.png" alt="9db692a0-5e32-43e4-b4fe-bf9cca5d3dec"></p>
<p>以上就是百度云不限速下载的整个步骤，各种下载工具很多都是利用这个思路实现的。</p>
<h1 id="每天进步一点点"><a href="#每天进步一点点" class="headerlink" title="每天进步一点点!!!!"></a>每天进步一点点!!!!</h1><h2 id="impossible-is-I’m-possible"><a href="#impossible-is-I’m-possible" class="headerlink" title="impossible is I’m possible!!!"></a><strong>impossible is I’m possible!!!</strong></h2>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;百度云下载一直是一个烦人的问题，无奈会员又太贵。。。各种工具又都不靠普&lt;/p&gt;
&lt;p&gt;百度云下载限速的原理是按廉洁数算的，一个链接给几十KB的速度，各种下载工具无非就是采用多线程下载的方法解除限速。&lt;br&gt;总结起来就是先生成下载链接，然后用多线程下载工具进行下载。大家比较熟悉的可能是aria2c,但是它最大的进程数目为16,16*几十Kb也就是几百KB的速度。下面讲解在Ubuntu上的另一个下载工具：axel&lt;br&gt;平台：Ubuntu 18.04 4.15.0-20-generic&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://ygcaicn.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://ygcaicn.github.io/tags/Linux/"/>
    
      <category term="Ubuntu" scheme="https://ygcaicn.github.io/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>Live Ubuntu快速布局</title>
    <link href="https://ygcaicn.github.io/Linux/Ubuntu-new.html"/>
    <id>https://ygcaicn.github.io/Linux/Ubuntu-new.html</id>
    <published>2018-03-22T18:38:42.000Z</published>
    <updated>2018-03-22T18:49:30.506Z</updated>
    
    <content type="html"><![CDATA[<p>进入live Ubuntu 如何快速布局工作环境呢？</p>
<h1 id="Go"><a href="#Go" class="headerlink" title="Go!"></a>Go!</h1><a id="more"></a>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget http://blog.cumtpn.com/newu.sh</span><br><span class="line">chmod +x newu.sh</span><br><span class="line">sudo ./newu.sh</span><br></pre></td></tr></table></figure>
<p>静候5分钟！</p>
<h1 id="newu-sh"><a href="#newu-sh" class="headerlink" title="newu.sh"></a>newu.sh</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env bash</span><br><span class="line"></span><br><span class="line"># Color</span><br><span class="line">red=&apos;\033[0;31m&apos;</span><br><span class="line">green=&apos;\033[0;32m&apos;</span><br><span class="line">yellow=&apos;\033[0;33m&apos;</span><br><span class="line">plain=&apos;\033[0m&apos;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[[ $EUID -ne 0 ]] &amp;&amp; echo -e  &quot;[$&#123;red&#125;Error$&#123;plain&#125;] This script must be run as root!\n$&#123;green&#125;Maybe you want \&quot;sudo ./newu.sh\&quot;$&#123;plain&#125;&quot; &amp;&amp; exit 1</span><br><span class="line">echo -e &quot;[$&#123;yellow&#125;root access!$&#123;plain&#125;]&quot;</span><br><span class="line"></span><br><span class="line">pre_install()&#123;</span><br><span class="line">    type wget &amp;&gt; /dev/null</span><br><span class="line">    [[ $? -eq 0 ]] &amp;&amp; apt-get update &amp;&amp; apt-get install -y wget</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">add_repo()&#123;</span><br><span class="line">cat&lt;&lt;EOF &gt; /etc/apt/sources.list.d/google-chrome.list</span><br><span class="line">deb [arch=amd64] https://dl.google.com/linux/chrome/deb/ stable main</span><br><span class="line">deb [arch=amd64] https://repo.fdzh.org/chrome/deb/ stable main</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">mv /etc/apt/sources.list /etc/apt/sources.list.bak</span><br><span class="line"></span><br><span class="line">cat&lt;&lt;EOF &gt; /etc/apt/sources.list</span><br><span class="line">deb http://cn.archive.ubuntu.com/ubuntu/ artful main restricted universe multiverse</span><br><span class="line">deb http://security.ubuntu.com/ubuntu artful-security main restricted universe multiverse</span><br><span class="line">deb http://cn.archive.ubuntu.com/ubuntu/ artful-updates main restricted universe multiverse</span><br><span class="line">EOF</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">add_key()&#123;</span><br><span class="line">    wget -q  -O - https://dl.google.com/linux/linux_signing_key.pub | apt-key add -</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># shadowsocks</span><br><span class="line">shadowsocks_install()&#123;</span><br><span class="line">    pushd /tmp</span><br><span class="line">    wget -q --no-check-certificate https://bootstrap.pypa.io/get-pip.py</span><br><span class="line">    python get-pip.py</span><br><span class="line">    rm get-pip.py</span><br><span class="line">    pip install shadowsocks</span><br><span class="line">    popd</span><br><span class="line">&#125;</span><br><span class="line">SwitchyOmega_install()&#123;</span><br><span class="line">    wget -q --no-check-certificate https://github.com/FelisCatus/SwitchyOmega/releases/download/v2.5.10/SwitchyOmega_Chromium.crx</span><br><span class="line">    [ -e SwitchyOmega_Chromium.crx ] &amp;&amp; [ -s SwitchyOmega_Chromium.crx ] &amp;&amp; echo -e &quot;$&#123;green&#125;Downloaded SwitchyOmega_Chromium at current directory please open google-chrome install it!$&#123;plain&#125;&quot;</span><br><span class="line">    if ! [ -e SwitchyOmega_Chromium.crx ]</span><br><span class="line">    then</span><br><span class="line">        wget -q --no-check-certificate http://blog.cumtpn.com/SwitchyOmega_Chromium.crx</span><br><span class="line">        [ -e SwitchyOmega_Chromium.crx ] &amp;&amp; [ -s SwitchyOmega_Chromium.crx ] &amp;&amp; echo -e &quot;$&#123;green&#125;Downloaded SwitchyOmega_Chromium at current directory please open google-chrome install it!$&#123;plain&#125;&quot;</span><br><span class="line">    fi</span><br><span class="line"></span><br><span class="line">    echo -e &quot;[$&#123;green&#125;Ref$&#123;plain&#125;]  https://github.com/FelisCatus/SwitchyOmega/wiki/GFWList&quot;</span><br><span class="line">    echo -e &quot;[$&#123;green&#125;Con$&#123;plain&#125;]  Import profile SwitchyOmega.bak&quot;</span><br><span class="line">    cat&lt;&lt;EOF &gt; SwitchyOmega.bak</span><br><span class="line">&#123;&quot;+GFWed&quot;:&#123;&quot;bypassList&quot;:[&#123;&quot;conditionType&quot;:&quot;BypassCondition&quot;,&quot;pattern&quot;:&quot;&lt;local&gt;&quot;&#125;],&quot;color&quot;:&quot;#99ccee&quot;,&quot;fallbackProxy&quot;:&#123;&quot;host&quot;:&quot;127.0.0.1&quot;,&quot;port&quot;:1080,&quot;scheme&quot;:&quot;socks5&quot;&#125;,&quot;name&quot;:&quot;GFWed&quot;,&quot;profileType&quot;:&quot;FixedProfile&quot;,&quot;revision&quot;:&quot;153abe56d04&quot;&#125;,&quot;+__ruleListOf_自动切换&quot;:&#123;&quot;color&quot;:&quot;#99dd99&quot;,&quot;defaultProfileName&quot;:&quot;direct&quot;,&quot;format&quot;:&quot;AutoProxy&quot;,&quot;matchProfileName&quot;:&quot;GFWed&quot;,&quot;name&quot;:&quot;__ruleListOf_自动切换&quot;,&quot;profileType&quot;:&quot;RuleListProfile&quot;,&quot;revision&quot;:&quot;153abdf798a&quot;,&quot;ruleList&quot;:&quot;&quot;,&quot;sourceUrl&quot;:&quot;https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt&quot;,&quot;lastUpdate&quot;:null&#125;,&quot;+自动切换&quot;:&#123;&quot;color&quot;:&quot;#99dd99&quot;,&quot;defaultProfileName&quot;:&quot;__ruleListOf_自动切换&quot;,&quot;name&quot;:&quot;自动切换&quot;,&quot;profileType&quot;:&quot;SwitchProfile&quot;,&quot;revision&quot;:&quot;153abd3207f&quot;,&quot;rules&quot;:[&#123;&quot;condition&quot;:&#123;&quot;conditionType&quot;:&quot;HostWildcardCondition&quot;,&quot;pattern&quot;:&quot;raw.githubusercontent.com&quot;&#125;,&quot;profileName&quot;:&quot;GFWed&quot;&#125;]&#125;,&quot;-confirmDeletion&quot;:true,&quot;-downloadInterval&quot;:1440,&quot;-enableQuickSwitch&quot;:false,&quot;-monitorWebRequests&quot;:true,&quot;-quickSwitchProfiles&quot;:[],&quot;-refreshOnProfileChange&quot;:true,&quot;-revertProxyChanges&quot;:true,&quot;-showInspectMenu&quot;:true,&quot;-startupProfileName&quot;:&quot;&quot;,&quot;schemaVersion&quot;:2&#125;</span><br><span class="line">EOF</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">install_all()&#123;</span><br><span class="line">    apt-get update</span><br><span class="line">    apt-get install -y guake</span><br><span class="line">    apt-get install -y vim</span><br><span class="line">    apt-get install -y google-chrome-stable</span><br><span class="line">    shadowsocks_install</span><br><span class="line">    echo -e &quot;$&#123;yellow&#125;Please enter shadowsocks server:$&#123;plain&#125;&quot;</span><br><span class="line">    while [[ -z &quot;$&#123;ss_ip&#125;&quot; ]]; do</span><br><span class="line">        read -p &quot;shadowsocks server:&quot; ss_ip</span><br><span class="line">        [ -z $&#123;ss_ip&#125; ] &amp;&amp; ss_ip=45.55.181.140</span><br><span class="line">    done</span><br><span class="line"></span><br><span class="line">    echo -e &quot;$&#123;yellow&#125;Please enter shadowsocks password:$&#123;plain&#125;&quot;</span><br><span class="line">    while [[ -z &quot;$&#123;ss_pwd&#125;&quot; ]]; do</span><br><span class="line">        read -p &quot;shadowsocks password:&quot; ss_pwd</span><br><span class="line">        [ -z $&#123;ss_pwd&#125; ] &amp;&amp; ss_pwd=waggywn@10000</span><br><span class="line">    done</span><br><span class="line"></span><br><span class="line">    echo -e &quot;$&#123;yellow&#125;Please enter shadowsocks port:$&#123;plain&#125;&quot;</span><br><span class="line">    read -p &quot;shadowsocks port(Default 6566):&quot; ss_port</span><br><span class="line">    [[ -z $&#123;ss_port&#125; ]] &amp;&amp; ss_port=6566</span><br><span class="line"></span><br><span class="line">    echo -e &quot;$&#123;yellow&#125;Please enter shadowsocks method:$&#123;plain&#125;&quot;</span><br><span class="line">    read -p &quot;shadowsocks method(Default aes-256-cfb):&quot; ss_method</span><br><span class="line">    [[ -z $&#123;ss_method&#125; ]] &amp;&amp; ss_method=&quot;aes-256-cfb&quot;</span><br><span class="line"></span><br><span class="line">    sslocal -d start -q -s $&#123;ss_ip&#125; -p $&#123;ss_port&#125; -m $&#123;ss_method&#125; -k $&#123;ss_pwd&#125; -l 1080</span><br><span class="line">    echo -e &quot;$&#123;green&#125;Start sslocal at 127.0.0.1:1080 $&#123;plain&#125;&quot;</span><br><span class="line"></span><br><span class="line">    SwitchyOmega_install</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">pre_install</span><br><span class="line">add_repo</span><br><span class="line">add_key</span><br><span class="line">install_all</span><br></pre></td></tr></table></figure>
<h1 id="每天进步一点点"><a href="#每天进步一点点" class="headerlink" title="每天进步一点点!!!"></a>每天进步一点点!!!</h1><h2 id="impossible-is-I’m-possible"><a href="#impossible-is-I’m-possible" class="headerlink" title="impossible is I’m possible!!!"></a><strong>impossible is I’m possible!!!</strong></h2>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;进入live Ubuntu 如何快速布局工作环境呢？&lt;/p&gt;
&lt;h1 id=&quot;Go&quot;&gt;&lt;a href=&quot;#Go&quot; class=&quot;headerlink&quot; title=&quot;Go!&quot;&gt;&lt;/a&gt;Go!&lt;/h1&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://ygcaicn.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://ygcaicn.github.io/tags/Linux/"/>
    
      <category term="Ubuntu" scheme="https://ygcaicn.github.io/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu17 aria2c安装使用手记</title>
    <link href="https://ygcaicn.github.io/Linux/ubuntu17-aria2c.html"/>
    <id>https://ygcaicn.github.io/Linux/ubuntu17-aria2c.html</id>
    <published>2018-01-16T04:09:42.000Z</published>
    <updated>2018-01-16T09:29:23.526Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>aria2 is a utility for downloading files. The supported protocols are HTTP(S), FTP, SFTP, BitTorrent, and Metalink. aria2 can download a file from multiple sources/protocols and tries to utilize your maximum download bandwidth. It supports downloading a file from HTTP(S)/FTP /SFTP and BitTorrent at the same time, while the data downloaded from HTTP(S)/FTP/SFTP is uploaded to the BitTorrent swarm. Using Metalink chunk checksums, aria2 automatically validates chunks of data while downloading a file.</p>
</blockquote>
<a id="more"></a>
<h1 id="0x01-安装环境："><a href="#0x01-安装环境：" class="headerlink" title="0x01.安装环境："></a>0x01.安装环境：</h1><ul>
<li><p>Ubuntu17.10</p>
</li>
<li><p>参考：<a href="http://aria2c.com/usage.html" target="_blank" rel="noopener">http://aria2c.com/usage.html</a></p>
</li>
</ul>
<h1 id="0x02"><a href="#0x02" class="headerlink" title="0x02."></a>0x02.</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install aria2</span><br><span class="line">sudo mkdir /etc/aria2c</span><br><span class="line">sudo touch /etc/aria2c/aria2.conf</span><br><span class="line">sudo touch /etc/aria2c/aria2.session</span><br><span class="line">chowm -R [your_name] /etc/aria2c</span><br></pre></td></tr></table></figure>
<h2 id="bash-aliases"><a href="#bash-aliases" class="headerlink" title="~/.bash_aliases"></a>~/.bash_aliases</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#aria</span><br><span class="line">alias aria2=&apos;aria2c --conf-path=/etc/aria2c/aria2.conf&apos;</span><br></pre></td></tr></table></figure>
<p>修改完成后 <code>source ~/.bash_aliases</code></p>
<h2 id="Downloads"><a href="#Downloads" class="headerlink" title="Downloads"></a>Downloads</h2><p>打开命令行输入啊aria2,然后用浏览器打开<a href="http://aria2c.com/便可以添加任务！" target="_blank" rel="noopener">http://aria2c.com/便可以添加任务！</a></p>
<h1 id="0x03-百度网盘插件"><a href="#0x03-百度网盘插件" class="headerlink" title="0x03. 百度网盘插件"></a>0x03. 百度网盘插件</h1><p><a href="https://blog.icehoney.me/posts/2015-01-31-Aria2-download" target="_blank" rel="noopener">https://blog.icehoney.me/posts/2015-01-31-Aria2-download</a></p>
<h1 id="0x04-每天进步一点点"><a href="#0x04-每天进步一点点" class="headerlink" title="0x04.每天进步一点点!!!"></a>0x04.每天进步一点点!!!</h1><h2 id="impossible-is-I’m-possible"><a href="#impossible-is-I’m-possible" class="headerlink" title="impossible is I’m possible!!!"></a><strong>impossible is I’m possible!!!</strong></h2>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;aria2 is a utility for downloading files. The supported protocols are HTTP(S), FTP, SFTP, BitTorrent, and Metalink. aria2 can download a file from multiple sources/protocols and tries to utilize your maximum download bandwidth. It supports downloading a file from HTTP(S)/FTP /SFTP and BitTorrent at the same time, while the data downloaded from HTTP(S)/FTP/SFTP is uploaded to the BitTorrent swarm. Using Metalink chunk checksums, aria2 automatically validates chunks of data while downloading a file.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://ygcaicn.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://ygcaicn.github.io/tags/Linux/"/>
    
      <category term="Ubuntu" scheme="https://ygcaicn.github.io/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>Linux下python3测试网速</title>
    <link href="https://ygcaicn.github.io/python3/py3-networkrate.html"/>
    <id>https://ygcaicn.github.io/python3/py3-networkrate.html</id>
    <published>2018-01-15T12:09:42.000Z</published>
    <updated>2018-01-15T13:16:44.618Z</updated>
    
    <content type="html"><![CDATA[<h1 id="python3实现"><a href="#python3实现" class="headerlink" title="python3实现"></a>python3实现</h1><p>python3学习中写的一个小程序，有时候还挺有用，贴出来做记录！</p>
<a id="more"></a>
<p>依赖系统的net-tools工具，也就是ifconfig命令。<br>实现原理利用ifconfig查看网卡发送和接受的数据多少，利用re匹配出需要的数据，利用time模块计时算出<br>1s内发送或者接收数据的多少！</p>
<p><em>Note</em> 依赖系统的net-tools工具，也就是ifconfig命令。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install net-tools</span><br></pre></td></tr></table></figure></p>
<p>python3代码：<br><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_total</span><span class="params">(xdata)</span>:</span></span><br><span class="line">    s = set([(e[<span class="number">0</span>],e[<span class="number">2</span>]) <span class="keyword">for</span> e <span class="keyword">in</span> xdata])</span><br><span class="line">    d = dict(s)</span><br><span class="line">    d.pop(<span class="string">'lo'</span>)</span><br><span class="line">    l=list(d.values())</span><br><span class="line">    li = [int(i) <span class="keyword">for</span> i <span class="keyword">in</span> l]</span><br><span class="line">    <span class="keyword">return</span> sum(li)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show</span><span class="params">(delta)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> delta &lt; <span class="number">1024</span>:</span><br><span class="line">        n = int(delta)</span><br><span class="line">        s = <span class="string">'B'</span></span><br><span class="line">    <span class="keyword">elif</span> delta &lt; <span class="number">1024</span>*<span class="number">1024</span>:</span><br><span class="line">        n = delta//<span class="number">1024</span></span><br><span class="line">        s = <span class="string">'KB'</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        n = round(delta/(<span class="number">1024</span>*<span class="number">1024</span>),<span class="number">1</span>)</span><br><span class="line">        s = <span class="string">'MB'</span></span><br><span class="line">    <span class="keyword">return</span> str(n)+s+<span class="string">'/S'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    cmd = [<span class="string">'ifconfig'</span>]</span><br><span class="line">    rx_pat = re.compile(<span class="string">r'\b(\w+)\b:(.+\s+)+?RX.+?bytes\s+(\d+)'</span>)</span><br><span class="line">    tx_pat = re.compile(<span class="string">r'\b(\w+)\b:(.+\s+)+?TX.+?bytes\s+(\d+)'</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">            out_bytes = subprocess.check_output(cmd)</span><br><span class="line">            out_str = out_bytes.decode(<span class="string">'utf-8'</span>)</span><br><span class="line">            rx = rx_pat.findall(out_str)</span><br><span class="line">            tx = tx_pat.findall(out_str)</span><br><span class="line">            rx_data1 = get_total(rx)</span><br><span class="line">            tx_data1 = get_total(tx)</span><br><span class="line">            time.sleep(<span class="number">1</span>)</span><br><span class="line">            out_bytes = subprocess.check_output(cmd)</span><br><span class="line">            out_str = out_bytes.decode(<span class="string">'utf-8'</span>)</span><br><span class="line">            rx = rx_pat.findall(out_str)</span><br><span class="line">            tx = tx_pat.findall(out_str)</span><br><span class="line">            rx_data2 = get_total(rx)</span><br><span class="line">            tx_data2 = get_total(tx)</span><br><span class="line">            subprocess.call(<span class="string">"clear"</span>)</span><br><span class="line">            print(<span class="string">"↑:"</span>+show(tx_data2-tx_data1))</span><br><span class="line">            print(<span class="string">"↓:"</span>+show(rx_data2-rx_data1))       </span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span> subprocess.CalledProcessError <span class="keyword">as</span> e:</span><br><span class="line">        out_bytes = e.output    <span class="comment"># Output generated before error</span></span><br><span class="line">        code = e.returncode     <span class="comment"># Return code</span></span><br></pre></td></tr></table></figure></p>
<h1 id="其他软件包实现–iftop"><a href="#其他软件包实现–iftop" class="headerlink" title="其他软件包实现–iftop"></a>其他软件包实现–iftop</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install iftop</span><br><span class="line">sudo iftop -n</span><br></pre></td></tr></table></figure>
<h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><ul>
<li><a href="http://os.51cto.com/art/201404/435279.htm" target="_blank" rel="noopener">http://os.51cto.com/art/201404/435279.htm</a></li>
</ul>
<h1 id="每天进步一点点"><a href="#每天进步一点点" class="headerlink" title="每天进步一点点!!!"></a>每天进步一点点!!!</h1><h2 id="impossible-is-I’m-possible"><a href="#impossible-is-I’m-possible" class="headerlink" title="impossible is I’m possible!!!"></a><strong>impossible is I’m possible!!!</strong></h2>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;python3实现&quot;&gt;&lt;a href=&quot;#python3实现&quot; class=&quot;headerlink&quot; title=&quot;python3实现&quot;&gt;&lt;/a&gt;python3实现&lt;/h1&gt;&lt;p&gt;python3学习中写的一个小程序，有时候还挺有用，贴出来做记录！&lt;/p&gt;
    
    </summary>
    
      <category term="python3" scheme="https://ygcaicn.github.io/categories/python3/"/>
    
    
      <category term="Linux" scheme="https://ygcaicn.github.io/tags/Linux/"/>
    
      <category term="Ubuntu" scheme="https://ygcaicn.github.io/tags/Ubuntu/"/>
    
      <category term="python3" scheme="https://ygcaicn.github.io/tags/python3/"/>
    
  </entry>
  
  <entry>
    <title>build-live-ubuntu --2</title>
    <link href="https://ygcaicn.github.io/Linux/build-live-ubuntu2.html"/>
    <id>https://ygcaicn.github.io/Linux/build-live-ubuntu2.html</id>
    <published>2018-01-15T04:09:42.000Z</published>
    <updated>2018-01-15T10:04:40.317Z</updated>
    
    <content type="html"><![CDATA[<p>在上次介绍了一些基础的常用软件之后决定进一步探索！在知乎找到了一篇很棒的讨论，链接如下：<br><a href="https://www.zhihu.com/question/19811112" target="_blank" rel="noopener">https://www.zhihu.com/question/19811112</a>通过实践找出了我比较满意的软件。<br>由于本人电脑只有240G的固盘，电脑性能一般，因此对与内存和硬盘都是相当的奢侈，能原配的就不去搞些华丽胡哨的<br>东西，本着能简单绝不复杂，能默认绝不修改的原则去测试一些软件，以及一些脚本，特此记录以备后查！</p>
<a id="more"></a>
<h1 id="No-1-Guake-Terminal"><a href="#No-1-Guake-Terminal" class="headerlink" title="No.1 Guake Terminal"></a>No.1 Guake Terminal</h1><p>这个名字有点意思，‘挂科’Terminal。。。功能很简单快速打开Terminal，或许你认为Ctrl+Alt+T（或者自己设置一个快捷键）去开Terminal也是一件很简单的事。没错我以前也是这么认为的，但是遇到了Guake后我改变了看法，特别是需要开多个Terminal的时候（高手都不需要开多个，一个都能全搞定！）系统的Terminal显的不方便，还有就是临时开一个<br>Terminal的时候很可能用完就不去关然后在那积攒了很多。Guake Terminal就是来解决这些问题的！一键弹出（默认F12），失去焦点自动关闭，可以开启多个Tab，可以自定义Appearance。<br><img src="../img/82bdf788-4c0c-4238-a94c-bf6e7e2e2106.png" alt="82bdf788-4c0c-4238-a94c-bf6e7e2e2106"></p>
<h1 id="No-2-bash-aliases"><a href="#No-2-bash-aliases" class="headerlink" title="No.2 ~/.bash_aliases"></a>No.2 ~/.bash_aliases</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">m_basedir=&apos;/media/jachin/Software&apos;</span><br><span class="line">#cd</span><br><span class="line">alias pydir=&apos;cd $&#123;m_basedir&#125;/python&apos;</span><br><span class="line">alias soft=&apos;cd $&#123;m_basedir&#125;&apos;</span><br><span class="line">alias gitdir=&apos;cd $&#123;m_basedir&#125;/Github&apos;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#python3 -m venv</span><br><span class="line">alias pyvenv=&apos;python3 -m venv&apos;</span><br><span class="line">alias pyenv=&apos;pydir &amp;&amp; source ./ENV/bin/activate&apos;</span><br><span class="line"></span><br><span class="line">#atom</span><br><span class="line">alias atoma=&apos;atom -a&apos;</span><br><span class="line"></span><br><span class="line">#blog</span><br><span class="line">alias blogdir=&apos;cd $&#123;m_basedir&#125;/Github/blog-hexo&apos;</span><br><span class="line">alias blog=&apos;pushd $&#123;m_basedir&#125;/Github/blog-hexo &amp;&amp; atom -a ./  &amp;&amp; popd&apos;</span><br><span class="line">alias blogd=&apos;pushd $&#123;m_basedir&#125;/Github/blog-hexo &amp;&amp; hexo d -g  &amp;&amp; popd&apos;</span><br><span class="line">alias blogs=&apos;pushd $&#123;m_basedir&#125;/Github/blog-hexo &amp;&amp; hexo s -g  &amp;&amp; popd&apos;</span><br></pre></td></tr></table></figure>
<p>配置后我只要F12 blog便用atom打开了我的blog目录，写完之后只要blogd就会执行上传！真的很方便！还可以写很多的快捷命令，搭配GuakeTerminal简直完美！有点像win下Listary。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">pydir #进入python的目录</span><br><span class="line">pyenv #进入python的目录并进入venv</span><br><span class="line">atoma #以append的方式将目录添加到atom中</span><br><span class="line"></span><br><span class="line">blogdir #进入到blog的目录</span><br><span class="line">blog    #用atom打开blog目录</span><br><span class="line">blogd   #上传</span><br><span class="line">blogs   #本地测试</span><br></pre></td></tr></table></figure>
<h1 id="No-3-Draw-io"><a href="#No-3-Draw-io" class="headerlink" title="No.3 Draw.io"></a>No.3 <a href="https://www.draw.io/" target="_blank" rel="noopener">Draw.io</a></h1><p>有很多的模板可以使用，支持存储在本地，Github，google drive等，在线版的viso！</p>
<p><img src="../img/6fd4b766-2a6b-42a9-b27e-1536f8d993c6.png" alt="6fd4b766-2a6b-42a9-b27e-1536f8d993c6"></p>
<h1 id="No-4-有道云笔记"><a href="#No-4-有道云笔记" class="headerlink" title="No.4 有道云笔记"></a>No.4 有道云笔记</h1><p>网易一向很良心，不像某讯。我以前是大象的忠实粉丝，在一次有道云笔记更新以后（支持新的网页版，和markdow的那次更新）我开始慢慢转移到了有道云！markdown，和网页版凭这两点就选择它了！因为我又能少装一个软件了。<br><img src="../img/c1c639a7-7a2a-4998-81cd-3f78055eba5b.png" alt="c1c639a7-7a2a-4998-81cd-3f78055eba5b"></p>
<h1 id="每天进步一点点"><a href="#每天进步一点点" class="headerlink" title="每天进步一点点!!!"></a>每天进步一点点!!!</h1><h2 id="impossible-is-I’m-possible"><a href="#impossible-is-I’m-possible" class="headerlink" title="impossible is I’m possible!!!"></a><strong>impossible is I’m possible!!!</strong></h2>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在上次介绍了一些基础的常用软件之后决定进一步探索！在知乎找到了一篇很棒的讨论，链接如下：&lt;br&gt;&lt;a href=&quot;https://www.zhihu.com/question/19811112&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.zhihu.com/question/19811112&lt;/a&gt;通过实践找出了我比较满意的软件。&lt;br&gt;由于本人电脑只有240G的固盘，电脑性能一般，因此对与内存和硬盘都是相当的奢侈，能原配的就不去搞些华丽胡哨的&lt;br&gt;东西，本着能简单绝不复杂，能默认绝不修改的原则去测试一些软件，以及一些脚本，特此记录以备后查！&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://ygcaicn.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://ygcaicn.github.io/tags/Linux/"/>
    
      <category term="Ubuntu" scheme="https://ygcaicn.github.io/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>build-live-ubuntu打造日常使用Ubuntu</title>
    <link href="https://ygcaicn.github.io/Linux/build-live-ubuntu.html"/>
    <id>https://ygcaicn.github.io/Linux/build-live-ubuntu.html</id>
    <published>2017-11-11T04:09:42.000Z</published>
    <updated>2018-01-14T19:22:28.687Z</updated>
    
    <content type="html"><![CDATA[<p>转战Linux后尝试过不少的发行版Mint，Deepin等，换来换去最后还是换成了ubuntu。<br>Ubuntu17.10后回归Gnome桌面，真的越来越棒了！当然选择Linux作为日常live系统最大<br>的问题就是缺少很多日常必须的软件，比如QQ，office，还有一些音乐视频等娱乐软件。<br>本文带你打造一个完美的能够满足日常娱乐与学习的Linux系统！发行版为：Ubuntu17.10</p>
<a id="more"></a>
<h2 id="美图"><a href="#美图" class="headerlink" title="美图"></a>美图</h2><p>几张系统美图：<br><img src="../img/b207a505-34c5-4236-898d-21de1c7dd91e.png" alt="b207a505-34c5-4236-898d-21de1c7dd91e"><br><img src="../img/e0a9cda0-3cac-4dd4-88cb-2e201d649880.png" alt="e0a9cda0-3cac-4dd4-88cb-2e201d649880"><br><img src="../img/a3f9ed8c-efba-423d-a62d-420514282260.png" alt="a3f9ed8c-efba-423d-a62d-420514282260"><br><img src="../img/731747dc-79eb-42c0-bf02-bb98602a463a.png" alt="731747dc-79eb-42c0-bf02-bb98602a463a"><br><img src="../img/98343370-eb6a-4b11-9fe2-e0c558bf1e0d.png" alt="98343370-eb6a-4b11-9fe2-e0c558bf1e0d"></p>
<h2 id="Step1-浏览器Chrome-amp-FireFox"><a href="#Step1-浏览器Chrome-amp-FireFox" class="headerlink" title="Step1.浏览器Chrome&amp;FireFox"></a>Step1.浏览器Chrome&amp;FireFox</h2><p>浏览器是日常使用的top1。在Ubuntu下也有很多浏览器可以选择，我的搭配为Chrome为主，FireFox为辅。选择Chrome后可以在Chrome的基础上安装很多的Chrome App。</p>
<h3 id="Chrome"><a href="#Chrome" class="headerlink" title="Chrome"></a>Chrome</h3><p>Chrome主页：<a href="https://www.google.com/chrome/browser/desktop/index.html#" target="_blank" rel="noopener">https://www.google.com/chrome/browser/desktop/index.html#</a><br>（需要梯子自寻）</p>
<p>Chrome安装很简单在上面的链接中下着二进制包安装即可！</p>
<p><img src="../img/62c4e42a-5a98-4f11-921b-1954821b3451.png" alt="62c4e42a-5a98-4f11-921b-1954821b3451"></p>
<h3 id="FireFox"><a href="#FireFox" class="headerlink" title="FireFox"></a>FireFox</h3><p>Firefox主页：<a href="https://www.mozilla.org/en-US/firefox/new/" target="_blank" rel="noopener">https://www.mozilla.org/en-US/firefox/new/</a><br><img src="../img/d4329e63-1f7f-4863-8733-8309e37a8eb1.png" alt="d4329e63-1f7f-4863-8733-8309e37a8eb1"></p>
<h2 id="Step2-编辑器Atom"><a href="#Step2-编辑器Atom" class="headerlink" title="Step2. 编辑器Atom"></a>Step2. 编辑器<a href="https://atom.io" target="_blank" rel="noopener">Atom</a></h2><p>Atom主页：<a href="https://atom.io" target="_blank" rel="noopener">https://atom.io</a><br>程序员最不可缺少的就是一个好的编辑器。Atom是万能的，开源，有很多的扩展包可以使用。</p>
<p><img src="../img/96878ad6-346d-43a3-a1b7-7851683c8219.png" alt="96878ad6-346d-43a3-a1b7-7851683c8219"></p>
<p>必须扩展包：</p>
<h3 id="Sublime-Style-Column-Celection"><a href="#Sublime-Style-Column-Celection" class="headerlink" title="Sublime-Style-Column-Celection"></a>Sublime-Style-Column-Celection</h3><p>区块编辑支持<br><img src="../img/d24863a2-5697-411f-b9ad-35c032a2467a.png" alt="d24863a2-5697-411f-b9ad-35c032a2467a"><br><img src="../img/e319e32b-da3b-4814-b514-68f79f829e35.png" alt="e319e32b-da3b-4814-b514-68f79f829e35"></p>
<h3 id="gcc-make-run"><a href="#gcc-make-run" class="headerlink" title="gcc-make-run"></a>gcc-make-run</h3><p>c文件快速编译运行<br><img src="../img/93120020-fa27-445e-a77e-de0d38df843a.png" alt="93120020-fa27-445e-a77e-de0d38df843a"></p>
<h3 id="markdown-image-paste"><a href="#markdown-image-paste" class="headerlink" title="markdown-image-paste"></a>markdown-image-paste</h3><p>最棒的插件之一！！！在md文件编辑中，截图以后直接打出文件名然后Ctrl+V将图片存到配置好的目录中，并生成Markdow 图片链接。<br><img src="../img/719a6b00-d384-4b08-8656-85c24e4b3444.png" alt="719a6b00-d384-4b08-8656-85c24e4b3444"></p>
<h3 id="uuidgen"><a href="#uuidgen" class="headerlink" title="uuidgen"></a>uuidgen</h3><p>在粘贴md的图片时总是要起文件名也是一件麻烦的事，还要保证不重复。uuidgen完美解决这个问题！只要快捷键Alt+Commend+G即生成一个uuid。保证不会重复！</p>
<p><img src="../img/3cd28274-9a9c-4f1b-8fee-0594c307f9c1.png" alt="3cd28274-9a9c-4f1b-8fee-0594c307f9c1"></p>
<h3 id="atom-python-run"><a href="#atom-python-run" class="headerlink" title="atom-python-run"></a>atom-python-run</h3><p>快速python运行！<br><img src="../img/315006bb-9155-4c78-a262-7fbd3e319992.png" alt="315006bb-9155-4c78-a262-7fbd3e319992"></p>
<h3 id="markdown-preview-plus"><a href="#markdown-preview-plus" class="headerlink" title="markdown-preview-plus"></a>markdown-preview-plus</h3><p> markdown预览，支持latex公式嵌入。<br><img src="../img/f291e0ac-04ec-433b-a753-8bb83c3bd226.png" alt="f291e0ac-04ec-433b-a753-8bb83c3bd226"></p>
<h3 id="markdown-scroll-sync"><a href="#markdown-scroll-sync" class="headerlink" title="markdown-scroll-sync"></a>markdown-scroll-sync</h3><p> markdown预览时同步滚动。<br><img src="../img/6cee2b03-1e20-498c-82a1-9f34a5a55cd0.png" alt="6cee2b03-1e20-498c-82a1-9f34a5a55cd0"></p>
<h2 id="Step3-音乐"><a href="#Step3-音乐" class="headerlink" title="Step3.音乐"></a>Step3.音乐</h2><p>听歌你可以选择网页：</p>
<p><a href="http://music.163.com" target="_blank" rel="noopener">http://music.163.com</a></p>
<p><a href="https://youtube.com" target="_blank" rel="noopener">https://youtube.com</a></p>
<p>但是你有更好的选择，就是Chrome app, Netease Music!</p>
<p><img src="../img/c454aefc-269a-4501-8c0f-1c06021023c5.png" alt="c454aefc-269a-4501-8c0f-1c06021023c5"></p>
<p><img src="../img/d56fbec3-d2b5-4262-afbe-41e847a70b36.png" alt="d56fbec3-d2b5-4262-afbe-41e847a70b36"></p>
<p>chrome app的启动是不依赖与chrome的界面的，因此你完全可以在不启动chrome的情况下直接启动music！</p>
<h2 id="Step4-微信（可作为QQ的替代品）"><a href="#Step4-微信（可作为QQ的替代品）" class="headerlink" title="Step4.微信（可作为QQ的替代品）"></a>Step4.微信（可作为QQ的替代品）</h2><p>同样chrome app中安装Wechat，其实就是网页版的wechat封装成单独的app可以独立启动！这大概是我对微信刮目相看的唯一理由了。。QQ也是有chrome app的，但是选择wechat而不选择QQ是因为wechat的功能要强大的多！比如支持与好友或者手机互传文件！！！！对的你没看错是文件！！当然照片也是可以的！并且照片是支持截图后Ctrl+v直接粘贴发送的，是不是很方便。然而QQ只能发个表情包里面的表情。。</p>
<p><img src="../img/53a62b2f-2c64-4531-b933-e66cab438c64.jpg" alt="53a62b2f-2c64-4531-b933-e66cab438c64"></p>
<h2 id="Step5-office系列"><a href="#Step5-office系列" class="headerlink" title="Step5.office系列"></a>Step5.office系列</h2><p>office系列的软件有自带的liberate office，效果嘛，，谁用谁知道！….支持国产我们选择wps，完美兼容Mxx公司的几大坨。</p>
<p>wps 主页：<a href="http://wps-community.org/download.html" target="_blank" rel="noopener">http://wps-community.org/download.html</a></p>
<p><img src="../img/0dab9e22-085d-4162-83f7-20a417430d75.png" alt="0dab9e22-085d-4162-83f7-20a417430d75"><br><img src="../img/4152da53-40f7-4430-ad4b-2533323b3012.png" alt="4152da53-40f7-4430-ad4b-2533323b3012"><br><img src="../img/d3216ba8-b725-457e-9da3-dbd507444c6f.png" alt="d3216ba8-b725-457e-9da3-dbd507444c6f"></p>
<blockquote>
<p>Download <a href="http://ftp.debian.org/debian/pool/main/libp/libpng/libpng12-0_1.2.50-2+deb8u3_amd64.deb" target="_blank" rel="noopener">libpng12-0_1.2.50-2+deb8u2_amd64.deb</a>. If you use a 32 bit system, download the 32 bit deb file.<br>Install the package and then install wps-office.</p>
</blockquote>
<h2 id="Step6-Foxit-Reader"><a href="#Step6-Foxit-Reader" class="headerlink" title="Step6.Foxit Reader"></a>Step6.Foxit Reader</h2><p>Foxit Reader完美支持Linux：</p>
<p>Foxit 主页：<a href="https://www.foxitsoftware.com/pdf-reader/" target="_blank" rel="noopener">https://www.foxitsoftware.com/pdf-reader/</a></p>
<p><img src="../img/387400dc-1467-4222-b56b-74e966d15e48.png" alt="387400dc-1467-4222-b56b-74e966d15e48"></p>
<h2 id="Step7-视频播放器"><a href="#Step7-视频播放器" class="headerlink" title="Step7.视频播放器"></a>Step7.视频播放器</h2><p>SMplayer</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;转战Linux后尝试过不少的发行版Mint，Deepin等，换来换去最后还是换成了ubuntu。&lt;br&gt;Ubuntu17.10后回归Gnome桌面，真的越来越棒了！当然选择Linux作为日常live系统最大&lt;br&gt;的问题就是缺少很多日常必须的软件，比如QQ，office，还有一些音乐视频等娱乐软件。&lt;br&gt;本文带你打造一个完美的能够满足日常娱乐与学习的Linux系统！发行版为：Ubuntu17.10&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://ygcaicn.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://ygcaicn.github.io/tags/Linux/"/>
    
      <category term="Ubuntu" scheme="https://ygcaicn.github.io/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu17.10-ChineseInputContexts</title>
    <link href="https://ygcaicn.github.io/Linux/Ubuntu-ChineseInputContexts.html"/>
    <id>https://ygcaicn.github.io/Linux/Ubuntu-ChineseInputContexts.html</id>
    <published>2017-11-11T02:32:29.000Z</published>
    <updated>2018-01-15T10:26:31.156Z</updated>
    
    <content type="html"><![CDATA[<p>unbuntu下一些常用的软件无法输入中文，这使人很不爽，经过一段时间的努力基本解决了系统中文输入以及常用软件输入中文的问题！<br>环境为Ubuntu17.10 （17.04同样适用）。<br>常用软件包括：</p>
<ul>
<li>Atom</li>
<li>Wps</li>
<li>QtCreator</li>
</ul>
<a id="more"></a>
<h2 id="系统中文输入"><a href="#系统中文输入" class="headerlink" title="系统中文输入"></a>系统中文输入</h2><p>看图，不多说：</p>
<p><img src="../img/7c1e95b2-17a3-4322-ab84-8c09619e237e.png" alt="7c1e95b2-17a3-4322-ab84-8c09619e237e"></p>
<p><img src="../img/8f506da4-b2d3-4a23-84e3-53472b5f0320.png" alt="8f506da4-b2d3-4a23-84e3-53472b5f0320"></p>
<p><img src="../img/8a39b319-f52c-4f2d-a61a-de2f62dead49.png" alt="8a39b319-f52c-4f2d-a61a-de2f62dead49"></p>
<p><img src="../img/ddb58d66-7572-4a6f-8d9f-0d20b28ccdf8.png" alt="ddb58d66-7572-4a6f-8d9f-0d20b28ccdf8"></p>
<p>效果图：<br><img src="../img/4d3ae893-f910-4c23-8749-ef7bf963ef56.png" alt="4d3ae893-f910-4c23-8749-ef7bf963ef56"></p>
<h2 id="Qt-QtCreator"><a href="#Qt-QtCreator" class="headerlink" title="Qt QtCreator"></a>Qt QtCreator</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install fcitx-libs-qt fcitx-libs-qt5</span><br><span class="line"></span><br><span class="line">cp /usr/lib/x86_64-linux-gnu/qt5/plugins/platforminputcontexts/libfcitxplatforminputcontextplugin.so  ~/qtcreator-4.4.0/lib/Qt/plugins/platforminputcontexts/</span><br></pre></td></tr></table></figure>
<p>以上操作其实就是安装fcitx-libs-qt和fcitx-libs-qt5的库，然后将动态链接拷贝到qtcreator的插件目录中，至于为什么是这个目录需要你自己去发现，不过我们可以看到在该目录中已经存在ibux的动态链接库，我们只是把fcitx的加进去而已。</p>
<p><img src="../img/b7a25a45-c60d-44ba-bcaa-2ead2ca1bd4e.png" alt="b7a25a45-c60d-44ba-bcaa-2ead2ca1bd4e"></p>
<p>当然你也可以不拷贝直接将libfcitxplatforminputcontextplugin.so所在的目录加入到环境变量中应该也是可以的（我没有测试）：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etx/bash.bashrc</span><br></pre></td></tr></table></figure>
<p>在文件最后添加一行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export $PATH = $PATH:/usr/lib/x86_64-linux-gnu/qt5/plugins/platforminputcontexts/</span><br></pre></td></tr></table></figure></p>
<p>到此重启qtcreator已经可以输入中文了。就是这么简单！<br>效果图：<br><img src="../img/fa8ee2df-6668-469f-b965-55174c5275e3.png" alt="370933ff-bb56-47de-8c4c-aca83576cf79"></p>
<h2 id="Wps"><a href="#Wps" class="headerlink" title="Wps"></a>Wps</h2><p>google搜到的解决办法,(亲测在Ubuntu17.04&amp;17.10中无效)</p>
<blockquote>
<p>wps文字不能输入中文解决  </p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vim /usr/bin/wps</span><br></pre></td></tr></table></figure>
<p>修改wps启动文件：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">export XMODIFIERS=&quot;@im=fcitx&quot;</span><br><span class="line">export QT_IM_MODULE=&quot;fcitx&quot;</span><br><span class="line">gOpt=</span><br><span class="line">#gOptExt=-multiply</span><br><span class="line">gTemplateExt=(&quot;wpt&quot; &quot;dot&quot; &quot;dotx&quot;)</span><br></pre></td></tr></table></figure>
<p>wps writer,表格，ppt对应的启动文件分别为：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/wps</span><br><span class="line">/usr/bin/et</span><br><span class="line">/usr/bin/wpp</span><br></pre></td></tr></table></figure>
<p><img src="../img/a419806f-81a9-4ace-8249-874e1a004b45.png" alt="a419806f-81a9-4ace-8249-874e1a004b45"></p>
<p>以上方式在17.04和17.10中亲测无效！！！</p>
<p>受到qtcreator的启示，同样将libfcitxplatforminputcontextplugin.so动态链接库拷贝到wps的目录中，wps的目录位于：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/opt/kingsoft/wps-office/office6</span><br></pre></td></tr></table></figure>
<p>可以看到在office6目录下有一个这样的路径：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/opt/kingsoft/wps-office/office6/qt/plugins/</span><br></pre></td></tr></table></figure>
<p>和qtcreator的很相似，只是没有platforminputcontexts这个下一级目录，由于强迫症就建立一个这个目录（其实不建也是可以的）把libfcitxplatforminputcontextplugin.so拷贝进来，然后启动wps发现完美解决。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir /opt/kingsoft/wps-office/office6/qt/plugins/platforminputcontexts</span><br><span class="line"></span><br><span class="line">sudo cp  /usr/lib/x86_64-linux-gnu/qt5/plugins/platforminputcontexts/libfcitxplatforminputcontextplugin.so  /opt/kingsoft/wps-office/office6/qt/plugins/platforminputcontexts/</span><br><span class="line"></span><br><span class="line">fcitx-autostart</span><br><span class="line"></span><br><span class="line">wps</span><br></pre></td></tr></table></figure>
<p>效果图：<br><img src="../img/5e598032-adc5-48ad-a1a3-8a2cd012861a.png" alt="5e598032-adc5-48ad-a1a3-8a2cd012861a"></p>
<h2 id="Atom"><a href="#Atom" class="headerlink" title="Atom"></a>Atom</h2><p>Atom 我没有测试上面的方法，应该也是可以的。我的解决办法是编译安装。</p>
<p>Atom的官方网址：<a href="https://atom.io/" target="_blank" rel="noopener">https://atom.io/</a></p>
<p>binary包安装以后无法输入中文，后来采用编译安装问题的到解决。</p>
<p>编译安装参考：<a href="http://flight-manual.atom.io/hacking-atom/sections/hacking-on-atom-core/#platform-linux" target="_blank" rel="noopener">http://flight-manual.atom.io/hacking-atom/sections/hacking-on-atom-core/#platform-linux</a></p>
<p>效果图：<br><img src="../img/01cf646b-b789-4b42-9278-adcdec0ffed6.png" alt="01cf646b-b789-4b42-9278-adcdec0ffed6"></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>以上通过安装 fcitx-libs-qt fcitx-libs-qt5，然后将动态链接库拷贝到软件的启动目录（或者特定的库目录中）完美解决了Qtcreator，wps，Atom在Ubuntu中的中文输入问题！！Enjoy your Ubuntu!<br>&lt;</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;unbuntu下一些常用的软件无法输入中文，这使人很不爽，经过一段时间的努力基本解决了系统中文输入以及常用软件输入中文的问题！&lt;br&gt;环境为Ubuntu17.10 （17.04同样适用）。&lt;br&gt;常用软件包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Atom&lt;/li&gt;
&lt;li&gt;Wps&lt;/li&gt;
&lt;li&gt;QtCreator&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://ygcaicn.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://ygcaicn.github.io/tags/Linux/"/>
    
      <category term="Qt" scheme="https://ygcaicn.github.io/tags/Qt/"/>
    
      <category term="wps" scheme="https://ygcaicn.github.io/tags/wps/"/>
    
  </entry>
  
  <entry>
    <title>Qt-doc-struct</title>
    <link href="https://ygcaicn.github.io/Qt/qt-doc-struct.html"/>
    <id>https://ygcaicn.github.io/Qt/qt-doc-struct.html</id>
    <published>2017-11-09T03:09:40.000Z</published>
    <updated>2017-11-09T16:51:30.140Z</updated>
    
    <content type="html"><![CDATA[<p>Qt的文档写的非常棒！学习QT最重要的就是学会看官方的文档，了解文档的结构有助于快速的查询文档，解决问题。Qt官方文档的主页为<a href="http://doc.qt.io" target="_blank" rel="noopener">http://doc.qt.io</a><br><img src="../img/4bbdac2a-5470-4829-8a47-5cfed7253eba.png" alt="4bbdac2a-5470-4829-8a47-5cfed7253eba"></p>
<p>进入Qt Reference Documentation后可以看到Qt的文档还分为不同的分类，本文主要是介绍第一个分类：Class Lists</p>
<p><img src="../img/49e21d26-e157-40b5-acb1-3e492b9cf2d8.png" alt="49e21d26-e157-40b5-acb1-3e492b9cf2d8"></p>
<p>Class Lists中又有不同的索引方式，方便不同情景下查询：<br><img src="../img/c42b0ad4-92e7-4dcf-b09f-14bce8261eea.png" alt="c42b0ad4-92e7-4dcf-b09f-14bce8261eea"> </p>
<p>Qt的class文档大致分为3个部分，Type（数据类型），Functions（成员函数），Macros（宏）。每个部分又分为两块，前一块是一个list，简单的列举，后一块为detail，详细信息。每个类的文档都是在同一个html页面上，采用锚点相互跳转，这也是非常棒的一点！</p>
<a id="more"></a>
<h2 id="QDir-Class-类名"><a href="#QDir-Class-类名" class="headerlink" title="QDir Class 类名"></a>QDir Class <em>类名</em></h2><p><img src="../img/qdirdfadfclass.png" alt="qdirdfadfclass"></p>
<p>The QDir class provides access to directory structures and their contents. More… <em>简单介绍功能，可点击查看详细</em></p>
<table>
<thead>
<tr>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>Header:</td>
<td>#include <qdir></qdir></td>
</tr>
<tr>
<td>qmake:</td>
<td>QT += core</td>
</tr>
</tbody>
</table>
<p><em>说明header和qmake的包含操作</em></p>
<hr>
<h2 id="Public-Types-公有的数据类型"><a href="#Public-Types-公有的数据类型" class="headerlink" title="Public Types 公有的数据类型"></a>Public Types <em>公有的数据类型</em></h2><p><img src="../img/ae7e90b2-2b94-45af-819e-cb99c0f686e3.png" alt="ae7e90b2-2b94-45af-819e-cb99c0f686e3"></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">enum	Filter &#123; Dirs, AllDirs, Files, Drives, ..., CaseSensitive &#125;</span><br><span class="line">flags	Filters</span><br></pre></td></tr></table></figure>
<blockquote>
<p>The Filters type is a typedef for QFlags<filter>. It stores an OR combination of Filter values.</filter></p>
</blockquote>
<h2 id="Public-Functions-公有成员函数"><a href="#Public-Functions-公有成员函数" class="headerlink" title="Public Functions 公有成员函数"></a>Public Functions <em>公有成员函数</em></h2><p><img src="../img/baac4270-afb5-41f3-ac10-4c8d217d2e56.png" alt="baac4270-afb5-41f3-ac10-4c8d217d2e56"><br>对象可以访问的函数,编程过程中主要查阅的就是这部分。</p>
<h2 id="Static-Public-Members-静态成员函数"><a href="#Static-Public-Members-静态成员函数" class="headerlink" title="Static Public Members  静态成员函数"></a>Static Public Members  <em>静态成员函数</em></h2><p><img src="../img/74c56c41-e57f-49e2-bb0b-2863471984f8.png" alt="74c56c41-e57f-49e2-bb0b-2863471984f8"></p>
<p>解决同一个类不同对象之间的数据共享问题。主要作用是用来访问同一个类中的静态数据成员，维护对象之间的数据共享。</p>
<p>访问不依赖于对象。</p>
<p>可以通过对象与类名进行调用，一般习惯与用类名进行访问。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">static QDir	current()</span><br><span class="line"></span><br><span class="line">//example：</span><br><span class="line"></span><br><span class="line">QDir::current()</span><br><span class="line"></span><br><span class="line">//return a QDir Object of current directory.</span><br></pre></td></tr></table></figure>
<h2 id="Macros-宏"><a href="#Macros-宏" class="headerlink" title="Macros 宏"></a>Macros 宏</h2><p><img src="../img/747b2a9a-3760-4319-8dda-06b283649d8e.png" alt="747b2a9a-3760-4319-8dda-06b283649d8e"></p>
<hr>
<h2 id="Detailed-Description"><a href="#Detailed-Description" class="headerlink" title="Detailed Description"></a>Detailed Description</h2><p>该部分介绍QDir的整体概览。又分为小的章节进行介绍</p>
<h3 id="Navigation-and-Directory-Operations"><a href="#Navigation-and-Directory-Operations" class="headerlink" title="Navigation and Directory Operations"></a>Navigation and Directory Operations</h3><h3 id="Files-and-Directory-Contents"><a href="#Files-and-Directory-Contents" class="headerlink" title="Files and Directory Contents"></a>Files and Directory Contents</h3><h3 id="The-Current-Directory-and-Other-Special-Paths"><a href="#The-Current-Directory-and-Other-Special-Paths" class="headerlink" title="The Current Directory and Other Special Paths"></a>The Current Directory and Other Special Paths</h3><p><img src="../img/93ced37a-d761-4d88-a0d4-033002f35a25.png" alt="93ced37a-d761-4d88-a0d4-033002f35a25"></p>
<h3 id="Path-Manipulation-and-Strings"><a href="#Path-Manipulation-and-Strings" class="headerlink" title="Path Manipulation and Strings"></a>Path Manipulation and Strings</h3><h3 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h3><hr>
<h2 id="Member-Type-Documentation"><a href="#Member-Type-Documentation" class="headerlink" title="Member Type Documentation"></a>Member Type Documentation</h2><p><img src="../img/559c5e7d-9573-4d55-b9b0-e4b45f100494.png" alt="559c5e7d-9573-4d55-b9b0-e4b45f100494"></p>
<p>具体的介绍数据类型</p>
<h2 id="Member-Function-Documentation"><a href="#Member-Function-Documentation" class="headerlink" title="Member Function Documentation"></a>Member Function Documentation</h2><p><img src="../img/g3364be29-656a-4a1f-8b6e-2f96a635e4d3.png" alt="g3364be29-656a-4a1f-8b6e-2f96a635e4d3"></p>
<p><img src="../img/ee471f05-3f7e-4537-baa3-537f69c3c64f.png" alt="ee471f05-3f7e-4537-baa3-537f69c3c64f"><br>具体的介绍Function，包括static function。每个函数后有<code>See also xxx()</code>非常的方便。</p>
<h2 id="Macro-Documentation"><a href="#Macro-Documentation" class="headerlink" title="Macro Documentation"></a>Macro Documentation</h2><p><img src="../img/c70d4c00-6840-4eb5-be99-4c18cdf4fe01.png" alt="c70d4c00-6840-4eb5-be99-4c18cdf4fe01"><br>具体的介绍宏</p>
<h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><h3 id="QDir"><a href="#QDir" class="headerlink" title="QDir"></a><a href="http://doc.qt.io/qt-5/qdir.html#QDir" target="_blank" rel="noopener">QDir</a></h3>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Qt的文档写的非常棒！学习QT最重要的就是学会看官方的文档，了解文档的结构有助于快速的查询文档，解决问题。Qt官方文档的主页为&lt;a href=&quot;http://doc.qt.io&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://doc.qt.io&lt;/a&gt;&lt;br&gt;&lt;img src=&quot;../img/4bbdac2a-5470-4829-8a47-5cfed7253eba.png&quot; alt=&quot;4bbdac2a-5470-4829-8a47-5cfed7253eba&quot;&gt;&lt;/p&gt;
&lt;p&gt;进入Qt Reference Documentation后可以看到Qt的文档还分为不同的分类，本文主要是介绍第一个分类：Class Lists&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../img/49e21d26-e157-40b5-acb1-3e492b9cf2d8.png&quot; alt=&quot;49e21d26-e157-40b5-acb1-3e492b9cf2d8&quot;&gt;&lt;/p&gt;
&lt;p&gt;Class Lists中又有不同的索引方式，方便不同情景下查询：&lt;br&gt;&lt;img src=&quot;../img/c42b0ad4-92e7-4dcf-b09f-14bce8261eea.png&quot; alt=&quot;c42b0ad4-92e7-4dcf-b09f-14bce8261eea&quot;&gt; &lt;/p&gt;
&lt;p&gt;Qt的class文档大致分为3个部分，Type（数据类型），Functions（成员函数），Macros（宏）。每个部分又分为两块，前一块是一个list，简单的列举，后一块为detail，详细信息。每个类的文档都是在同一个html页面上，采用锚点相互跳转，这也是非常棒的一点！&lt;/p&gt;
    
    </summary>
    
      <category term="Qt" scheme="https://ygcaicn.github.io/categories/Qt/"/>
    
    
      <category term="Qt" scheme="https://ygcaicn.github.io/tags/Qt/"/>
    
      <category term="cpp" scheme="https://ygcaicn.github.io/tags/cpp/"/>
    
  </entry>
  
  <entry>
    <title>TCP/IP</title>
    <link href="https://ygcaicn.github.io/Linux/TCP-IP.html"/>
    <id>https://ygcaicn.github.io/Linux/TCP-IP.html</id>
    <published>2017-10-24T00:32:55.000Z</published>
    <updated>2017-10-24T07:37:47.173Z</updated>
    
    <content type="html"><![CDATA[<h2 id="TCP-IP"><a href="#TCP-IP" class="headerlink" title="TCP/IP"></a>TCP/IP</h2><p>维基百科：<a href="https://zh.wikipedia.org/wiki/TCP/IP%E5%8D%8F%E8%AE%AE%E6%97%8F" target="_blank" rel="noopener">https://zh.wikipedia.org/wiki/TCP/IP%E5%8D%8F%E8%AE%AE%E6%97%8F</a></p>
<p>互联网协议族（英语：Internet Protocol Suite，缩写IPS）是一个网络通信模型，以及一整个网络传输协议家族，为互联网的基础通信架构。它常被通称为TCP/IP协议族（英语：TCP/IP Protocol Suite，或TCP/IP Protocols），简称TCP/IP[2]。因为该协议家族的两个核心协议：TCP（传输控制协议）和IP（网际协议），为该家族中最早通过的标准[3]。由于在网络通讯协议普遍采用分层的结构，当多个层次的协议共同工作时，类似计算机科学中的堆栈，因此又被称为TCP/IP协议栈（英语：TCP/IP Protocol Stack）</p>
<p>整个通信网络的任务，可以划分成不同的功能区块，即所谓的层级（layer）。用于互联网的协议可以比照TCP/IP参考模型进行分类。TCP/IP协议栈起始于第三层协议IP（网际协议）。</p>
<a id="more"></a>
<p>TCP/IP参考模型是一个抽象的分层模型，这个模型中，所有的TCP/IP系列网络协议都被归类到4个抽象的”层”中。每一抽象层创建在低一层提供的服务上，并且为高一层提供服务。 完成一些特定的任务需要众多的协议协同工作，这些协议分布在参考模型的不同层中的，因此有时称它们为一个协议栈。 TCP/IP参考模型为TCP/IP协议栈订身制作。其中IP协议只关心如何使得数据能够跨越本地网络边界的问题，而不关心如何利用传输媒体，数据如何传输。整个TCP/IP协议栈则负责解决数据如何通过许许多多个点对点通路（一个点对点通路，也称为一”跳”, 1 hop）顺利传输，由此不同的网络成员能够在许多”跳”的基础上创建相互的数据通路。</p>
<h2 id="因特网协议栈中的层"><a href="#因特网协议栈中的层" class="headerlink" title="因特网协议栈中的层"></a>因特网协议栈中的层</h2><p><img src="../img/fsdafsdfw.png" alt="fsdafsdfw"></p>
<hr>
<p>4 .  应用层application layer 例如HTTP、FTP、DNS（如BGP和RIP这样的路由协议，尽管由于各种各样的原因它们分别运行在TCP和UDP上，仍然可以将它们看作网络层的一部分）</p>
<p>3 . 传输层transport layer 例如TCP、UDP、RTP、SCTP（如OSPF这样的路由协议，尽管运行在IP上也可以看作是网络层的一部分）</p>
<p>2 .  网络互连层internet layer 对于TCP/IP来说这是因特网协议（IP）（如ICMP和IGMP这样的必须协议尽管运行在IP上，也仍然可以看作是网络互连层的一部分；ARP不运行在IP上）</p>
<p>1 . 网络接口层link layer 例如以太网、Wi-Fi、MPLS等。</p>
<h3 id="应用层"><a href="#应用层" class="headerlink" title="应用层"></a>应用层</h3><p>该层包括所有和应用程序协同工作，利用基础网络交换应用程序专用的数据的协议。 应用层是大多数普通与网络相关的程序为了通过网络与其他程序通信所使用的层。这个层的处理过程是应用特有的；数据从网络相关的程序以这种应用内部使用的格式进行传送，然后被编码成标准协议的格式。<br>一些特定的程序被认为运行在这个层上。它们提供服务直接支持用户应用。这些程序和它们对应的协议包括HTTP（万维网服务）、FTP（文件传输）、SMTP（电子邮件）、SSH（安全远程登陆）、DNS（名称&lt;-&gt; IP地址寻找）以及许多其他协议。 一旦从应用程序来的数据被编码成一个标准的应用层协议，它将被传送到IP栈的下一层。</p>
<p>在传输层，应用程序最常用的是TCP或者UDP，并且服务器应用程序经常与一个公开的端口号相联系。服务器应用程序的端口由互联网号码分配局（IANA）正式地分配，但是现今一些新协议的开发者经常选择它们自己的端口号。由于在同一个系统上很少超过少数几个的服务器应用，端口冲突引起的问题很少。应用软件通常也允许用户强制性地指定端口号作为运行参数。<br>连结外部的客户端程序通常使用系统分配的一个随机端口号。监听一个端口并且通过服务器将那个端口发送到应用的另外一个副本以创建对等连结（如IRC上的dcc文件传输）的应用也可以使用一个随机端口，但是应用程序通常允许定义一个特定的端口范围的规范以允许端口能够通过实现网络地址转换（NAT）的路由器映射到内部。</p>
<p>每一个应用层（TCP/IP参考模型的最高层）协议一般都会使用到两个传输层协议之一： 面向连接的TCP传输控制协议和无连接的包传输的UDP用户数据报文协议。</p>
<h3 id="常用的应用层协议有："><a href="#常用的应用层协议有：" class="headerlink" title="常用的应用层协议有："></a>常用的应用层协议有：</h3><p>运行在TCP协议上的协议：<br>  ● HTTP（Hypertext Transfer Protocol，超文本传输协议），主要用于普通浏览。<br>  ● HTTPS（Hypertext Transfer Protocol over Secure Socket Layer, or HTTP over SSL，安全超文本传输协议）,HTTP协议的安全版本。<br>  ● FTP（File Transfer Protocol，文件传输协议），由名知义，用于文件传输。<br>  ● POP3（Post Office Protocol, version 3，邮局协议），收邮件用。<br>  ● SMTP（Simple Mail Transfer Protocol，简单邮件传输协议），用来发送电子邮件。<br>  ● TELNET（Teletype over the Network，网络电传），通过一个终端（terminal）登陆到网络。<br>  ● SSH（Secure Shell，用于替代安全性差的TELNET），用于加密安全登陆用。<br>运行在UDP协议上的协议：<br>  ● BOOTP（Boot Protocol，启动协议），应用于无盘设备。<br>  ● NTP（Network Time Protocol，网络时间协议），用于网络同步。<br>  ● DHCP（Dynamic Host Configuration Protocol，动态主机配置协议），动态配置IP地址。<br>其他：<br>  ● DNS（Domain Name Service，域名服务），用于完成地址查找，邮件转发等工作（运行在TCP和UDP协议上）。<br>  ● ECHO（Echo Protocol，回绕协议），用于查错及测量应答时间（运行在TCP和UDP协议上）。<br>  ● SNMP（Simple Network Management Protocol，简单网络管理协议），用于网络信息的收集和网络管理。<br>  ● ARP（Address Resolution Protocol，地址解析协议），用于动态解析以太网硬件的地址。</p>
<h3 id="传输层"><a href="#传输层" class="headerlink" title="传输层"></a>传输层</h3><p>传输层的协议，能够解决诸如端到端可靠性（“数据是否已经到达目的地？”）和保证数据按照正确的顺序到达这样的问题。在TCP/IP协议组中，传输协议也包括所给数据应该送给哪个应用程序。 在TCP/IP协议组中技术上位于这个层的动态路由协议通常被认为是网络层的一部分；一个例子就是OSPF（IP协议89）。 TCP（IP协议6）是一个“可靠的”、面向连结的传输机制，它提供一种可靠的字节流保证数据完整、无损并且按顺序到达。TCP尽量连续不断地测试网络的负载并且控制发送数据的速度以避免网络过载。另外，TCP试图将数据按照规定的顺序发送。这是它与UDP不同之处，这在实时数据流或者路由高网络层丢失率应用的时候可能成为一个缺陷。 较新的SCTP也是一个“可靠的”、面向连结的传输机制。它是面向纪录而不是面向字节的，它在一个单独的连结上提供通过多路复用提供的多个子流。它也提供多路自寻址支持，其中连结终端能够被多个IP地址表示（代表多个实体接口），这样的话即使其中一个连接失败了也不中断。它最初是为电话应用开发的（在IP上传输SS7），但是也可以用于其他的应用。 UDP（IP协议号17）是一个无连结的数据报协议。它是一个“尽力传递”（best effort）或者说“不可靠”协议——不是因为它特别不可靠，而是因为它不检查数据包是否已经到达目的地，并且不保证它们按顺序到达。如果一个应用程序需要这些特性，那它必须自行检测和判断，或者使用TCP协议。 UDP的典型性应用是如流媒体（音频和视频等）这样按时到达比可靠性更重要的应用，或者如DNS查找这样的简单查询／响应应用，如果创建可靠的连结所作的额外工作将是不成比例地大。 DCCP目前正由IEFT开发。它提供TCP流动控制语义，但对于用户来说保留UDP的数据报服务模型。 TCP和UDP都用来支持一些高层的应用。任何给定网络地址的应用通过它们的TCP或者UDP端口号区分。根据惯例使一些大众所知的端口与特定的应用相联系。 RTP是为如音频和视频流这样的实时数据设计的数据报协议。RTP是使用UDP包格式作为基础的会话层，然而据说它位于因特网协议栈的传输层。</p>
<h3 id="网络互连层"><a href="#网络互连层" class="headerlink" title="网络互连层"></a>网络互连层</h3><p>TCP/IP协议族中的网络互连层（internet layer）在OSI模型中叫做网络层（network layer）。<br>正如最初所定义的，网络层解决在一个单一网络上传输数据包的问题。类似的协议有X.25和ARPANET的Host/IMP Protocol。 随着因特网思想的出现，在这个层上添加附加的功能，也就是将数据从源网络传输到目的网络。这就牵涉到在网络组成的网上选择路径将数据包传输，也就是因特网。 在因特网协议组中，IP完成数据从源发送到目的的基本任务。IP能够承载多种不同的高层协议的数据；这些协议使用一个唯一的IP协议号进行标识。ICMP和IGMP分别是1和2。 一些IP承载的协议，如ICMP（用来发送关于IP发送的诊断信息）和IGMP（用来管理多播数据），它们位于IP层之上但是完成网络层的功能，这表明因特网和OSI模型之间的不兼容性。所有的路由协议，如BGP、OSPF、和RIP实际上也是网络层的一部分，尽管它们似乎应该属于更高的协议栈。  </p>
<h3 id="网络接口层"><a href="#网络接口层" class="headerlink" title="网络接口层"></a>网络接口层</h3><p>网络接口层实际上并不是因特网协议组中的一部分，但是它是数据包从一个设备的网络层传输到另外一个设备的网络层的方法。这个过程能够在网卡的软件驱动程序中控制，也可以在韧体或者专用芯片中控制。这将完成如添加报头准备发送、通过实体媒介实际发送这样一些数据链路功能。另一端，链路层将完成数据帧接收、去除报头并且将接收到的包传到网络层。 然而，链路层并不经常这样简单。它也可能是一个虚拟专有网络（VPN）或者隧道，在这里从网络层来的包使用隧道协议和其他（或者同样的）协议组发送而不是发送到实体的接口上。VPN和隧道通常预先建好，并且它们有一些直接发送到实体接口所没有的特殊特点（例如，它可以加密经过它的数据）。由于现在链路“层”是一个完整的网络，这种协议组的递归使用可能引起混淆。但是它是一个实现常见复杂功能的一个优秀方法。（尽管需要注意预防一个已经封装并且经隧道发送下去的数据包进行再次地封装和发送）。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;TCP-IP&quot;&gt;&lt;a href=&quot;#TCP-IP&quot; class=&quot;headerlink&quot; title=&quot;TCP/IP&quot;&gt;&lt;/a&gt;TCP/IP&lt;/h2&gt;&lt;p&gt;维基百科：&lt;a href=&quot;https://zh.wikipedia.org/wiki/TCP/IP%E5%8D%8F%E8%AE%AE%E6%97%8F&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://zh.wikipedia.org/wiki/TCP/IP%E5%8D%8F%E8%AE%AE%E6%97%8F&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;互联网协议族（英语：Internet Protocol Suite，缩写IPS）是一个网络通信模型，以及一整个网络传输协议家族，为互联网的基础通信架构。它常被通称为TCP/IP协议族（英语：TCP/IP Protocol Suite，或TCP/IP Protocols），简称TCP/IP[2]。因为该协议家族的两个核心协议：TCP（传输控制协议）和IP（网际协议），为该家族中最早通过的标准[3]。由于在网络通讯协议普遍采用分层的结构，当多个层次的协议共同工作时，类似计算机科学中的堆栈，因此又被称为TCP/IP协议栈（英语：TCP/IP Protocol Stack）&lt;/p&gt;
&lt;p&gt;整个通信网络的任务，可以划分成不同的功能区块，即所谓的层级（layer）。用于互联网的协议可以比照TCP/IP参考模型进行分类。TCP/IP协议栈起始于第三层协议IP（网际协议）。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://ygcaicn.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://ygcaicn.github.io/tags/Linux/"/>
    
      <category term="TCP/IP" scheme="https://ygcaicn.github.io/tags/TCP-IP/"/>
    
  </entry>
  
  <entry>
    <title>Adblock的一些软件</title>
    <link href="https://ygcaicn.github.io/%E6%9D%82%E9%A1%B9/adb.html"/>
    <id>https://ygcaicn.github.io/杂项/adb.html</id>
    <published>2017-10-15T15:02:06.000Z</published>
    <updated>2018-01-15T09:55:33.502Z</updated>
    
    <content type="html"><![CDATA[<h2 id="推荐列表"><a href="#推荐列表" class="headerlink" title="推荐列表"></a>推荐列表</h2><a id="more"></a>
<p>1.Adblock Plus （推荐）</p>
<p><a href="https://adblockplus.org/zh_CN/" target="_blank" rel="noopener">https://adblockplus.org/zh_CN/</a></p>
<p>2.AdBlock</p>
<p><a href="https://www.getadblock.com/" target="_blank" rel="noopener">https://www.getadblock.com/</a></p>
<p>3.adbyby（国产，支持去各大视频站 <code>包括https</code> 的广告，支持openwrt端）</p>
<p><a href="https://www.adbyby.com/" target="_blank" rel="noopener">https://www.adbyby.com/</a></p>
<p>4.adsafe (唯一比较靠谱的国产）</p>
<p><a href="http://ad-safe.com/" target="_blank" rel="noopener">http://ad-safe.com/</a></p>
<p>5.µBlock</p>
<p><a href="https://github.com/gorhill/uBlock" target="_blank" rel="noopener">https://github.com/gorhill/uBlock</a></p>
<p>6.Adblock Edge</p>
<p><a href="https://addons.mozilla.org/firefox/addon/adblock-edge/" target="_blank" rel="noopener">https://addons.mozilla.org/firefox/addon/adblock-edge/</a></p>
<p>7.AdGuard</p>
<p><a href="http://adguard.com/en/welcome.html" target="_blank" rel="noopener">http://adguard.com/en/welcome.html</a></p>
<p>8.AdFender</p>
<p><a href="http://www.adfender.com/" target="_blank" rel="noopener">http://www.adfender.com/</a></p>
<p>9.Bluhell Firewall</p>
<p><a href="https://addons.mozilla.org/en-US/firefox/addon/bluhell-firewall" target="_blank" rel="noopener">https://addons.mozilla.org/en-US/firefox/addon/bluhell-firewall</a></p>
<p>10.Proxomitron （卡饭有介绍)</p>
<p><a href="http://proximodo.sourceforge.net/" target="_blank" rel="noopener">http://proximodo.sourceforge.net/</a></p>
<p>11.poper-blocker</p>
<p><a href="http://wzmn.net/poper-blocker" target="_blank" rel="noopener">http://wzmn.net/poper-blocker</a></p>
<p>12.Updated Ad Blocker for Firefox</p>
<p><a href="https://addons.mozilla.org/en-US/firefox/addon/updated-ad-blocker-for-fire/" target="_blank" rel="noopener">https://addons.mozilla.org/en-US/firefox/addon/updated-ad-blocker-for-fire/</a></p>
<p>13.javascript-blocker</p>
<p><a href="http://javascript-blocker.toggleable.com/" target="_blank" rel="noopener">http://javascript-blocker.toggleable.com/</a></p>
<p>14.uMatrix</p>
<p><a href="https://github.com/gorhill/uMatrix" target="_blank" rel="noopener">https://github.com/gorhill/uMatrix</a></p>
<p>15.webmailAdBlocker （邮箱广告）</p>
<p><a href="http://jasonsavard.com/webmailAdBlocker" target="_blank" rel="noopener">http://jasonsavard.com/webmailAdBlocker</a></p>
<p>16.adblockvideo</p>
<p><a href="http://adblockvideo.com/" target="_blank" rel="noopener">http://adblockvideo.com/</a></p>
<p>17.karma-blocker</p>
<p><a href="https://github.com/arantius/karma-blocker" target="_blank" rel="noopener">https://github.com/arantius/karma-blocker</a></p>
<p>18.奶牛</p>
<p><a href="https://www.admuncher.com/" target="_blank" rel="noopener">https://www.admuncher.com/</a></p>
<h2 id="附加adb常用屏蔽（update-2017-10-24）"><a href="#附加adb常用屏蔽（update-2017-10-24）" class="headerlink" title="附加adb常用屏蔽（update 2017.10.24）"></a>附加adb常用屏蔽（update 2017.10.24）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">baidu.com###content_right</span><br><span class="line">baidu.com##.cr-offset</span><br><span class="line">baidu.com##.leftBlock</span><br><span class="line">mail.163.com###\31 508028782489_dvmailrecomPanelCont</span><br><span class="line">mail.163.com##.gWel-tabs-panel-cont</span><br><span class="line">mail.163.com##.gWel-tabs-list</span><br><span class="line">baidu.com###s_mancard_main</span><br><span class="line">baidu.com##.s-top-nav</span><br><span class="line">dazi.kukuw.com##.gg_close</span><br><span class="line">163.com##.col_r</span><br><span class="line">tech.163.com###js-ep3rdRank</span><br><span class="line">163.com##.gallery-tie-right</span><br><span class="line">163.com##.post_content_side</span><br><span class="line">163.com##.mt35 mod_bobo</span><br><span class="line">news.163.com##.clearfix.bobolist</span><br><span class="line">news.163.com##.mt35.mod_bobo</span><br><span class="line">||img1.cache.netease.com/f2e/www/index2014/images/sprite_dw2.png</span><br></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;推荐列表&quot;&gt;&lt;a href=&quot;#推荐列表&quot; class=&quot;headerlink&quot; title=&quot;推荐列表&quot;&gt;&lt;/a&gt;推荐列表&lt;/h2&gt;
    
    </summary>
    
      <category term="杂项" scheme="https://ygcaicn.github.io/categories/%E6%9D%82%E9%A1%B9/"/>
    
    
  </entry>
  
  <entry>
    <title>VIP视频解析+去广告教程</title>
    <link href="https://ygcaicn.github.io/Network/VIP%E8%A7%86%E9%A2%91%E8%A7%A3%E6%9E%90-%E5%8E%BB%E5%B9%BF%E5%91%8A.html"/>
    <id>https://ygcaicn.github.io/Network/VIP视频解析-去广告.html</id>
    <published>2017-07-22T00:32:55.000Z</published>
    <updated>2018-01-15T10:38:30.729Z</updated>
    
    <content type="html"><![CDATA[<h1 id="VIP视频解析-去广告教程"><a href="#VIP视频解析-去广告教程" class="headerlink" title="VIP视频解析+去广告教程"></a>VIP视频解析+去广告教程</h1><h2 id="Step1-打开视频网站"><a href="#Step1-打开视频网站" class="headerlink" title="Step1.打开视频网站"></a>Step1.打开视频网站</h2><p>这里以爱奇艺为例 <a href="http://www.iqiyi.com" target="_blank" rel="noopener">http://www.iqiyi.com</a> 打开首页看到类似下面的界面：</p>
<p><img src="http://i.imgur.com/ZQhMuKf.png" alt="Imgur"></p>
<a id="more"></a>
<h2 id="Step2-找到你要看的视频"><a href="#Step2-找到你要看的视频" class="headerlink" title="Step2.找到你要看的视频"></a>Step2.找到你要看的视频</h2><p>在视频网站中找到你想要看的视频，看到类似下面的界面：</p>
<p><img src="http://i.imgur.com/tmSUnQl.png" alt="Imgur"></p>
<ul>
<li><code>点击1</code> 指的地方，这里可以看到选择是一个需要VIP才能观看的《河神EP04》，这里无意冒犯出版商版权，多有得罪，提倡大家购买正版观看！</li>
<li><code>复制2</code> 指的链接</li>
</ul>
<h2 id="Step3-打开VIP视频解析-去广告"><a href="#Step3-打开VIP视频解析-去广告" class="headerlink" title="Step3.打开VIP视频解析+去广告"></a>Step3.打开<a href="http://blog.cumtpn.com/vipvideo" target="_blank" rel="noopener">VIP视频解析+去广告</a></h2><p>将刚才复制的链接粘贴到输入框中，入下图所示：<br><img src="../img/55197baf-3d81-4d57-96fb-d6d227e0ec14.png" alt="55197baf-3d81-4d57-96fb-d6d227e0ec14"></p>
<ul>
<li><code>1→</code>为输入框，输入在视频网站找到的视频链接</li>
<li><code>2→</code>为解析接口选择，在无法解析的情况下可以在这里换解析接口，另外支持自定义解析接口。</li>
<li><code>3→</code>为理解播放按钮，点击即可观看，并且没有广告哟！<br><img src="../img/d25c9418-e38c-47e0-a5d6-9d26a1c9e5b0.png" alt="d25c9418-e38c-47e0-a5d6-9d26a1c9e5b0"><h2 id="Step4-分享"><a href="#Step4-分享" class="headerlink" title="Step4.分享"></a>Step4.分享</h2>浏览器地址栏中的链接复制下来发送给好友，好友打开直接可以观看当前的影片！</li>
</ul>
<p><img src="../img/f8065bce-9676-4c04-afd5-1fe227ed94ce.png" alt="f8065bce-9676-4c04-afd5-1fe227ed94ce"></p>
<p>支持的网站：</p>
<p><img src="../img/91f751df-6680-409d-81ad-ad201ffa4d90.png" alt="91f751df-6680-409d-81ad-ad201ffa4d90"></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;VIP视频解析-去广告教程&quot;&gt;&lt;a href=&quot;#VIP视频解析-去广告教程&quot; class=&quot;headerlink&quot; title=&quot;VIP视频解析+去广告教程&quot;&gt;&lt;/a&gt;VIP视频解析+去广告教程&lt;/h1&gt;&lt;h2 id=&quot;Step1-打开视频网站&quot;&gt;&lt;a href=&quot;#Step1-打开视频网站&quot; class=&quot;headerlink&quot; title=&quot;Step1.打开视频网站&quot;&gt;&lt;/a&gt;Step1.打开视频网站&lt;/h2&gt;&lt;p&gt;这里以爱奇艺为例 &lt;a href=&quot;http://www.iqiyi.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://www.iqiyi.com&lt;/a&gt; 打开首页看到类似下面的界面：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/ZQhMuKf.png&quot; alt=&quot;Imgur&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Network" scheme="https://ygcaicn.github.io/categories/Network/"/>
    
    
      <category term="VIP视频" scheme="https://ygcaicn.github.io/tags/VIP%E8%A7%86%E9%A2%91/"/>
    
  </entry>
  
  <entry>
    <title>关于win10version1703 多引导（grub引导）的问题</title>
    <link href="https://ygcaicn.github.io/Linux/win10-1703-grub.html"/>
    <id>https://ygcaicn.github.io/Linux/win10-1703-grub.html</id>
    <published>2017-06-01T00:32:55.000Z</published>
    <updated>2017-06-01T02:15:58.516Z</updated>
    
    <content type="html"><![CDATA[<h1 id="关于win10调包grub引导的过程"><a href="#关于win10调包grub引导的过程" class="headerlink" title="关于win10调包grub引导的过程"></a>关于win10调包grub引导的过程</h1><p>2017.05.31日中午更新了win10 1703推送的更新，一切由此变的不开心。。。</p>
<p>往常一直正常的grub引导出问题了，bios启动项中ubuntu这个item还在，不过不幸运的是即使你选择这项引导进行开机进入的依然是windows。这就让人很生气。</p>
<p>好在我还有移动硬盘的linux，当然你用live盘也是可以的。进去移动硬盘linux后按照上篇文章讲的方法修复了grub。再次进入bios选择ubuntu启动，没什么问题一下就进入了grub熟悉的界面。成功进入了内置硬盘的linuxmint。<br><a id="more"></a></p>
<p>本来以为故事到此就结束了呢，骂也骂过了，问题也修复了，万万万万没有想到的是我从win关机之后首先发现了第一个小问题：bios的启动项顺序发生了变化，以往我都是将grub放到第一启动项的，现在变成win是第一项。<br>然后接着来了一个大问题：第二项的ubuntu选项（也就是grub引导程序grubx64.efi）选择从该项启动以后又直接进入了win。到这时候我就已经有了不好的预感。同样从硬盘进入linux看看什么情况，先修复了grub</p>
<p>via.一下操作均在live linux下操作</p>
<h2 id="安装修复grub"><a href="#安装修复grub" class="headerlink" title="安装修复grub"></a>安装修复grub</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">jachin-Inspiron-5548 ubuntu # sudo grub-install --target x86_64-efi --efi-directory /mnt/esp --boot-directory=/mnt/boot</span><br><span class="line">Installing for x86_64-efi platform.</span><br><span class="line">Installation finished. No error reported.</span><br></pre></td></tr></table></figure>
<h2 id="grubx64-efi文件"><a href="#grubx64-efi文件" class="headerlink" title="grubx64.efi文件"></a>grubx64.efi文件</h2><pre><code>jachin-Inspiron-5548 ubuntu # ll -h grubx64.efi
-rwx------ 1 root root 118K May 31 09:45 grubx64.efi*
</code></pre><p>同样修复万以后grub一切正常，重复上次的操作，进入win，关机win，选择grub启动项。和上次结果一样又进了win。。再进入移动硬盘的linux</p>
<h2 id="重启win后grubx64-efi文件"><a href="#重启win后grubx64-efi文件" class="headerlink" title="重启win后grubx64.efi文件"></a>重启win后grubx64.efi文件</h2><pre><code>jachin-Inspiron-5548 ubuntu # ll -h grubx64.efi
-rwx------ 1 root root  74K May 31 09:45 grubx64.efi*
</code></pre><p>发现了猫腻，万恶的Mxx公司竟然修改了grubx64.efi文件。。。</p>
<p>总结一下就是：</p>
<ol>
<li>win会调包（sda1@efi）/EFI/ubuntu/grubx64.efi文件</li>
<li>win会自动调整启动项的顺序，把自己条boot1</li>
<li>linux下win的分区不能挂载，之前是开着快速启动也可以挂载的，现在不行了。这个关掉快速启动可以解决，没办法果断关掉。</li>
</ol>
<h1 id="尝试的一些方法"><a href="#尝试的一些方法" class="headerlink" title="尝试的一些方法"></a>尝试的一些方法</h1><h2 id="修改grubx64-efi的文件名（失败）"><a href="#修改grubx64-efi的文件名（失败）" class="headerlink" title="修改grubx64.efi的文件名（失败）"></a>修改grubx64.efi的文件名（失败）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cp grubx64.efi mgrubx64.efi </span><br><span class="line"></span><br><span class="line">jachin-Inspiron-5548 ubuntu # ll -h</span><br><span class="line">total 240K</span><br><span class="line">drwxr-xr-x 2 root root 2.0K May 31 10:18 ./</span><br><span class="line">drwxr-xr-x 5 root root 2.0K May 28 00:45 ../</span><br><span class="line">-rwxr-xr-x 1 root root 118K May 31 10:09 grubx64.efi*</span><br><span class="line">-rwxr-xr-x 1 root root 118K May 31 10:18 mgrubx64.efi*</span><br></pre></td></tr></table></figure>
<p>启动过win之后：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">jachin-Inspiron-5548 ubuntu # ll -h</span><br><span class="line">total 78K</span><br><span class="line">drwxr-xr-x 2 root root 2.0K May 31 10:18 ./</span><br><span class="line">drwxr-xr-x 5 root root 2.0K May 28 00:45 ../</span><br><span class="line">-rwxr-xr-x 1 root root 74K May 31 10:09 grubx64.efi*</span><br><span class="line">-rwxr-xr-x 1 root root 0K May 31 10:18 mgrubx64.efi*</span><br></pre></td></tr></table></figure>
<p>可以看到（sda1@efi）/EFI/ubuntu/grubx64.efi文件被调包，（sda1@efi）/EFI/ubuntu/mgrubx64.efi这个更是直接被清空。</p>
<h2 id="修改grubx64-efi所在的文件夹"><a href="#修改grubx64-efi所在的文件夹" class="headerlink" title="修改grubx64.efi所在的文件夹"></a>修改grubx64.efi所在的文件夹</h2><p>这样可以正常进入grub，但是bios中的启动项要手动添加。并且启动win后添加的启动项被删除了，文件倒是没有被修改，可以通过再次添加进入grub程序。</p>
<h2 id="双Esp分区"><a href="#双Esp分区" class="headerlink" title="双Esp分区"></a>双Esp分区</h2><p>将以前的esp分区划分成两个esp分区，一个专门用来存放windows的efi程序，另一个专门存放grub的efi程序（grubx64.efi）</p>
<p>先将esp分区中的win引导程序备份出来（不过后来证明我用cp备份的引导并不能正常进入win）<br>拆分分区主要就是用了gdisk工具，格式化为vfat 使用了mkfs.vfat程序，选择一个esp作为linux的引导分区，然后安装grub，还要注意修改内置硬盘系统的/etc/fstab文件中的esp分区挂载的uuid，这个尤其重要，不修改的话也是无法正常进入系统的。ps.这些操作都是在移动硬盘的linux系统中进行的。</p>
<p>这时候重启进入bios中发现自动识别出了sda2也就是我的第二块efi分区中的grub引导，第一块的win引导没有识别。我就手动添加了一下发现启动出了问题，不能正常进入win。没办法逢山开路进winPE，bcdboot修复win引导。这时候需要注意的是你要指定win引导安装在哪个esp分区。到此的话已经win和linux都可以启动了，并且grub引导不会被win调包。</p>
<p>这种解决方法相对完美，但是没有解决win将自身调整为boot1的问题。</p>
<h2 id="需要注意的问题："><a href="#需要注意的问题：" class="headerlink" title="需要注意的问题："></a>需要注意的问题：</h2><ol>
<li>拆分分区时第二个esp分区的分区号可能会排到最后，也就是数值最大。这个你可以手动调整分区号，不过开机进入内置硬盘的win后分区号按照扇区的顺序自动调整。</li>
<li>备份win的引导我是没成功，如果又winPE的话可以不备份直接删除格式化，badboot重建win引导。</li>
<li>不要考虑在win下无损调整vfat文件系统的分区。</li>
<li>fstab文件一定要修改的，要不然进不去系统。</li>
</ol>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="http://blog.cumtpn.com/Linux/Esp-grub-uefi-windows.html" target="_blank" rel="noopener">ESP分区格式化，修复Windows&amp;Linux引导</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;关于win10调包grub引导的过程&quot;&gt;&lt;a href=&quot;#关于win10调包grub引导的过程&quot; class=&quot;headerlink&quot; title=&quot;关于win10调包grub引导的过程&quot;&gt;&lt;/a&gt;关于win10调包grub引导的过程&lt;/h1&gt;&lt;p&gt;2017.05.31日中午更新了win10 1703推送的更新，一切由此变的不开心。。。&lt;/p&gt;
&lt;p&gt;往常一直正常的grub引导出问题了，bios启动项中ubuntu这个item还在，不过不幸运的是即使你选择这项引导进行开机进入的依然是windows。这就让人很生气。&lt;/p&gt;
&lt;p&gt;好在我还有移动硬盘的linux，当然你用live盘也是可以的。进去移动硬盘linux后按照上篇文章讲的方法修复了grub。再次进入bios选择ubuntu启动，没什么问题一下就进入了grub熟悉的界面。成功进入了内置硬盘的linuxmint。&lt;br&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://ygcaicn.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://ygcaicn.github.io/tags/Linux/"/>
    
      <category term="Grub2" scheme="https://ygcaicn.github.io/tags/Grub2/"/>
    
      <category term="Windows" scheme="https://ygcaicn.github.io/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>ESP分区格式化，修复Windows&amp;Linux引导</title>
    <link href="https://ygcaicn.github.io/Linux/Esp-grub-uefi-windows.html"/>
    <id>https://ygcaicn.github.io/Linux/Esp-grub-uefi-windows.html</id>
    <published>2017-05-14T09:32:55.000Z</published>
    <updated>2018-01-15T10:13:42.503Z</updated>
    
    <content type="html"><![CDATA[<p>ESP分区存放的UEFI引导程序，ESP分区被格式化意味着无法进入系统<br><a id="more"></a></p>
<h1 id="系统环境"><a href="#系统环境" class="headerlink" title="系统环境"></a>系统环境</h1><p>Windows10 64<br>Linuxmint 64</p>
<p>双系统</p>
<p>Windows UEFI引导<br>Linux Grub2引导</p>
<p>sda1是我的Esp分区。被我格式化过</p>
<pre><code>sudo mkfs.vfat /dev/sda1
</code></pre><p>Linux的boot是单独分区的，设备符为：/dev/sda5</p>
<h1 id="修复Linux-Grub2"><a href="#修复Linux-Grub2" class="headerlink" title="修复Linux Grub2"></a>修复Linux Grub2</h1><p>进入U盘进入live Linux</p>
<h2 id="方式一"><a href="#方式一" class="headerlink" title="方式一"></a>方式一</h2><p>从新安装grub2,</p>
<p>挂载esp分区：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir /mnt/esp</span><br><span class="line">sudo mount /dev/sda1 /mnt/esp</span><br></pre></td></tr></table></figure>
<p>挂载boot分区：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir /mnt/boot</span><br><span class="line">sudo mount /dev/sda5 /mnt/boot</span><br></pre></td></tr></table></figure>
<p><strong>Note:</strong> 这里为什么要挂载boot分区？</p>
<p>因为esp分区</p>
<p>grub-install的–boot-directory选项默认的是镜像安装位置为/boot/grub</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">--boot-directory=DIR   install GRUB images under the directory DIR/grub</span><br><span class="line">                       instead of the boot/grub directory</span><br></pre></td></tr></table></figure>
<p>为了追求与默认一致，其实也是为了以后更新方便，我们现在要在Live Linux下挂载你的boot分区，然后将Grub的镜像安装到硬盘上的Linux系统的/boot中。其实完全可以将Grub镜像安装到Esp分区中，我们在做U盘Grub时就是将镜像直接放到了Esp分区。</p>
<p>Esp分区只存放UEFI可以认识的efi程序，以及efi程序的字体文件等。</p>
<p>安装grub2:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo grub-install --target x86_64-efi --efi-directory /mnt/esp --boot-directory=/mnt/boot</span><br></pre></td></tr></table></figure>
<p>成功执行结果</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Installing for x86_64-efi platform.</span><br><span class="line">Installation finished. No error reported.</span><br></pre></td></tr></table></figure>
<p>错误信息类似于grub-install: error: /usr/lib/grub/x86_64-efi/modinfo.sh doesn’t exist. Please specify –target or –directory. 这样的话，就需要安装grub-pc或grub-efi之后再试。</p>
<pre><code>sudo apt-get install grub-efi -y
</code></pre><p><strong>note:</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--efi-directory=DIR    use DIR as the EFI System Partition root</span><br></pre></td></tr></table></figure>
<p>生成grub.cfg</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo grub-mkconfig -o /mnt/boot/grub/grub.cfg</span><br></pre></td></tr></table></figure>
<p>这时候我们看一下esp分区中的内容：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">└── EFI</span><br><span class="line">    └── ubuntu</span><br><span class="line">        └── grubx64.efi</span><br></pre></td></tr></table></figure>
<p>发现里面就只有一个grubx64.efi的文件。这个文件其实就是一个UEFI程序。在UEFI中可以识别这个程序，这个程序又引导CPU进入grub。那么这个程序是怎么找到Grub镜像的位置的呢？（有待查阅，这是不是意味着grub必须从新安装？方法2不可行？）</p>
<p>看看boot分区多了什么东西：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">grub</span><br><span class="line">├── fonts</span><br><span class="line">│   └── unicode.pf2</span><br><span class="line">├── grub.cfg</span><br><span class="line">├── grubenv</span><br><span class="line">├── locale</span><br><span class="line">│   ├── en_AU.mo</span><br><span class="line">│   ├── en_CA.mo</span><br><span class="line">│   ├── en_GB.mo</span><br><span class="line">│   └── en@quot.mo</span><br><span class="line">└── x86_64-efi</span><br><span class="line">    ├── acpi.mod</span><br><span class="line">    ├── adler32.mod</span><br><span class="line">    ├── affs.mod</span><br><span class="line">    ├── afs.mod</span><br><span class="line">    ├── ahci.mod</span><br><span class="line">    :</span><br><span class="line">    :</span><br><span class="line">    :</span><br><span class="line">    └── zfs.mod</span><br></pre></td></tr></table></figure>
<p>重启系统，在UEFI界面应该已经可以看到了grub的启动项。</p>
<p>启动着实进入了grub，也进入了Linux，但是进入的是emergency mode.</p>
<p>这让我百思不得其解，为什么无法进入图形界面？？？Google也没有找到答案，关键是系统没有提示有什么出错的地方。。。</p>
<p>Emergency下df -h发现有些不对的地方：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">jachin@jachin-Inspiron-5548 ~ $ df -h</span><br><span class="line">Filesystem      Size  Used Avail Use% Mounted on</span><br><span class="line">udev            3.9G     0  3.9G   0% /dev</span><br><span class="line">tmpfs           790M  1.5M  789M   1% /run</span><br><span class="line">/dev/sda7        19G   14G  4.2G  77% /</span><br><span class="line">tmpfs           3.9G   49M  3.9G   2% /dev/shm</span><br><span class="line">tmpfs           5.0M  4.0K  5.0M   1% /run/lock</span><br><span class="line">tmpfs           3.9G     0  3.9G   0% /sys/fs/cgroup</span><br><span class="line">/dev/sda5       180M  129M   39M  77% /boot</span><br><span class="line">cgmfs           100K     0  100K   0% /run/cgmanager/fs</span><br><span class="line">tmpfs           790M   36K  790M   1% /run/user/1000</span><br></pre></td></tr></table></figure></p>
<p>什么情况efi分区没挂载上。</p>
<p>问题解决：最后发现是/etc/fstab出了问题。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># /etc/fstab: static file system information.</span><br><span class="line">#</span><br><span class="line"># Use &apos;blkid&apos; to print the universally unique identifier for a</span><br><span class="line"># device; this may be used with UUID= as a more robust way to name devices</span><br><span class="line"># that works even if disks are added and removed. See fstab(5).</span><br><span class="line">#</span><br><span class="line"># &lt;file system&gt; &lt;mount point&gt;   &lt;type&gt;  &lt;options&gt;       &lt;dump&gt;  &lt;pass&gt;</span><br><span class="line"># / was on /dev/sda7 during installation</span><br><span class="line">UUID=29fb7aca-a39d-485e-bcb2-4188ae03b085 /               ext4    errors=remount-ro 0       1</span><br><span class="line"># /boot was on /dev/sda5 during installation</span><br><span class="line">UUID=d5151999-209d-4a90-95f4-e4e70ab02ac7 /boot           ext4    defaults        0       2</span><br><span class="line"># /boot/efi was on /dev/sda1 during installation</span><br><span class="line">UUID=B178-A3FF  /boot/efi       vfat    umask=0077      0       1</span><br><span class="line"># swap was on /dev/sda6 during installation</span><br><span class="line">UUID=b6f30e1d-84b0-4b23-862c-82cb12773a4f none            swap    sw              0       0</span><br></pre></td></tr></table></figure>
<p><code>blkid</code>发现esp分区的UUID竟然与fstab中的不一样。推测是格式化会改变分区的UUID（有待查阅资料）so，把这里的UUID改了之后问题解决。成功进入Linux。</p>
<h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><p>直接拷贝一个grubx64.efi文件,到Esp分区中。</p>
<p>没有测试，不知道行不行。</p>
<h1 id="修复Windows-引导"><a href="#修复Windows-引导" class="headerlink" title="修复Windows 引导"></a>修复Windows 引导</h1><p>很简单，进入PE</p>
<p>执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bcdboot c:\windows /s g: /f UEFI</span><br></pre></td></tr></table></figure></p>
<p>c:为Windows安装的盘符，g：为Esp分区的盘符。Esp分区盘符可以在Diskgens下查看。</p>
<p><code>/f UEFI</code>选项尽量加上吧，我的不加没有成功哦。</p>
<p>到此位置你的Windows已经可以启动了。</p>
<p>查看一下上面的命令都干了什么事,可以看到esp分区中只有一个目录：EFI</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">EFI</span><br><span class="line">├── Boot</span><br><span class="line">│   └── bootx64.efi</span><br><span class="line">├── Microsoft</span><br><span class="line">│   ├── Boot</span><br><span class="line">│   │   ├── BCD</span><br><span class="line">│   │   ├── BCD.LOG</span><br><span class="line">│   │   ├── BCD.LOG1</span><br><span class="line">│   │   ├── BCD.LOG2</span><br><span class="line">│   │   ├── bg-BG</span><br><span class="line">│   │   │   ├── bootmgfw.efi.mui</span><br><span class="line">│   │   │   └── bootmgr.efi.mui</span><br><span class="line">│   │   ├── bootmgfw.efi</span><br><span class="line">│   │   ├── bootmgr.efi</span><br><span class="line">│   │   ├── BOOTSTAT.DAT</span><br><span class="line">│   │   ├── boot.stl</span><br><span class="line">│   │   ├── cs-CZ  语言文件</span><br><span class="line">│   │   │   ├── bootmgfw.efi.mui</span><br><span class="line">│   │   │   ├── bootmgr.efi.mui</span><br><span class="line">│   │   │   └── memtest.efi.mui</span><br><span class="line">│   │   ├── en-GB</span><br><span class="line">│   │   │   ├── bootmgfw.efi.mui</span><br><span class="line">│   │   │   └── bootmgr.efi.mui</span><br><span class="line">│   │   ├── en-US</span><br><span class="line">│   │   │   ├── bootmgfw.efi.mui</span><br><span class="line">│   │   │   ├── bootmgr.efi.mui</span><br><span class="line">│   │   │   └── memtest.efi.mui</span><br><span class="line">|   |   :</span><br><span class="line">|   |   :</span><br><span class="line">│   │   ├── zh-CN</span><br><span class="line">│   │   │   ├── bootmgfw.efi.mui</span><br><span class="line">│   │   │   ├── bootmgr.efi.mui</span><br><span class="line">│   │   │   └── memtest.efi.mui</span><br><span class="line">│   │   ├── Fonts  字体文件</span><br><span class="line">│   │   │   ├── chs_boot.ttf</span><br><span class="line">│   │   │   :</span><br><span class="line">│   │   │   :</span><br><span class="line">│   │   │   └── wgl4_boot.ttf</span><br><span class="line">│   │   ├── kd_02_10df.dll</span><br><span class="line">│   │   :</span><br><span class="line">│   │   :</span><br><span class="line">│   │   ├── kdstub.dll</span><br><span class="line">│   │   ├── memtest.efi</span><br><span class="line">│   │   ├── qps-ploc</span><br><span class="line">│   │   │   └── memtest.efi.mui</span><br><span class="line">│   │   └── Resources</span><br><span class="line">│   │       ├── bootres.dll</span><br><span class="line">│   │       ├── en-US</span><br><span class="line">│   │       │   └── bootres.dll.mui</span><br><span class="line">│   │       └── zh-CN</span><br><span class="line">│   │           └── bootres.dll.mui</span><br><span class="line">│   └── Recovery</span><br><span class="line">│       ├── BCD</span><br><span class="line">│       ├── BCD.LOG</span><br><span class="line">│       ├── BCD.LOG1</span><br><span class="line">│       └── BCD.LOG2</span><br><span class="line">└── ubuntu</span><br><span class="line">    └── grubx64.efi</span><br></pre></td></tr></table></figure>
<p>windows引导有几类文件：<br>efi文件memtest.efi bootmgr.efi bootmgfw.efi /Boot/bootmgfw.efi<br>字体文件 *.ttf<br>语言文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">zh-CN</span><br><span class="line">├── bootmgfw.efi.mui</span><br><span class="line">├── bootmgr.efi.mui</span><br><span class="line">└── memtest.efi.mui</span><br></pre></td></tr></table></figure></p>
<p>BCD文件 BCD引导修复这个是最重要的其他的那些文件都可以拷贝，这个不可以。所以前面的命令bcdboot主要任务就是修复这个BCD文件。当然还有其他的修复方式。</p>
<h1 id="Other-things"><a href="#Other-things" class="headerlink" title="Other things"></a>Other things</h1><p>现在系统都可以完美启动了，但是还有些不完没就是Grub的引导中没有Windows item。<br>进入Lilnux<br>执行   <code>update-grub2</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">jachin-Inspiron-5548 boot # update-grub2</span><br><span class="line">Generating grub configuration file ...</span><br><span class="line">Found linux image: /boot/vmlinuz-4.4.0-77-generic</span><br><span class="line">Found initrd image: /boot/initrd.img-4.4.0-77-generic</span><br><span class="line">Found linux image: /boot/vmlinuz-4.4.0-75-generic</span><br><span class="line">Found initrd image: /boot/initrd.img-4.4.0-75-generic</span><br><span class="line">Found Windows Boot Manager on /dev/sda1@/EFI/Microsoft/Boot/bootmgfw.efi</span><br><span class="line">Adding boot menu entry for EFI firmware configuration</span><br><span class="line">done</span><br></pre></td></tr></table></figure>
<p>okay,现在Grub的menu中已经有Windows选项了，到此完美修复。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;ESP分区存放的UEFI引导程序，ESP分区被格式化意味着无法进入系统&lt;br&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://ygcaicn.github.io/categories/Linux/"/>
    
    
      <category term="Grub Linux Windows" scheme="https://ygcaicn.github.io/tags/Grub-Linux-Windows/"/>
    
  </entry>
  
  <entry>
    <title>mathjax 测试</title>
    <link href="https://ygcaicn.github.io/Linux/mathjax.html"/>
    <id>https://ygcaicn.github.io/Linux/mathjax.html</id>
    <published>2017-05-04T13:57:40.000Z</published>
    <updated>2018-01-15T10:22:38.408Z</updated>
    
    <content type="html"><![CDATA[<p>$$\sum_{i=0}^n i^2 = \frac{(n^2+n)(2n+1)}{6}$$</p>
<a id="more"></a>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;$$\sum_{i=0}^n i^2 = \frac{(n^2+n)(2n+1)}{6}$$&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://ygcaicn.github.io/categories/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>【Machine Learning】机器学习：简明入门指南</title>
    <link href="https://ygcaicn.github.io/Machine-Learning/Mechine-Learning.html"/>
    <id>https://ygcaicn.github.io/Machine-Learning/Mechine-Learning.html</id>
    <published>2017-05-04T09:32:55.000Z</published>
    <updated>2017-05-04T05:52:22.505Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>本文是一篇转载自<a href="http://blog.jobbole.com/67616/" target="_blank" rel="noopener"><strong>伯乐在线的译文</strong></a>，英文原文是这里：<a href="https://medium.com/code-poet/80ea3ec3c471" target="_blank" rel="noopener"><strong>Machine Learning is Fun!</strong> — by Adam Geitgey</a></p>
</blockquote>
<p>在听到人们谈论机器学习的时候，你是不是对它的涵义只有几个模糊的认识呢？你是不是已经厌倦了在和同事交谈时只能一直点头？让我们改变一下吧！</p>
<p>本指南的读者对象是所有对机器学习有求知欲但却不知道如何开头的朋友。我猜很多人已经读过了<a href="https://en.wikipedia.org/wiki/Machine_learning" target="_blank" rel="noopener">“机器学习” ——维基百科词条</a>，倍感挫折，以为没人能给出一个高层次的解释。本文就是你们想要的东西。</p>
<p>本文目标在于平易近人，这意味着文中有大量的概括。但是谁在乎这些呢？只要能让读者对于ML更感兴趣，任务也就完成了。</p>
<a id="more"></a>
<h3 id="何为机器学习？"><a href="#何为机器学习？" class="headerlink" title="何为机器学习？"></a><strong>何为机器学习？</strong></h3><p>机器学习这个概念认为，对于待解问题，你无需编写任何专门的程序代码，遗传算法（generic algorithms）能够在数据集上为你得出有趣的答案。对于遗传算法，不用编码，而是将数据输入，它将在数据之上建立起它自己的逻辑。</p>
<p>举个例子，有一类算法称为分类算法，它可以将数据划分为不同的组别。一个用来识别手写数字的分类算法，不用修改一行代码，就可以用来将电子邮件分为垃圾邮件和普通邮件。算法没变，但是输入的训练数据变了，因此它得出了不同的分类逻辑。</p>
<p><img src="http://img.blog.csdn.net/20160814170910665" alt="机器学习算法是个黑盒，可以重用来解决很多不同的分类问题。"><br><em>机器学习算法是个黑盒，可以重用来解决很多不同的分类问题。</em></p>
<p>“机器学习”是一个涵盖性术语，覆盖了大量类似的遗传算法。</p>
<h3 id="两类机器学习算法"><a href="#两类机器学习算法" class="headerlink" title="两类机器学习算法"></a><strong>两类机器学习算法</strong></h3><p>你可以认为机器学习算法分为两大类：<strong>监督式学习</strong>（Supervised Learning）和<strong>非监督式学习</strong>（Unsupervised Learning）。两者区别很简单，但却非常重要。</p>
<h4 id="监督式学习"><a href="#监督式学习" class="headerlink" title="监督式学习"></a><strong>监督式学习</strong></h4><p>假设你是一名房产经纪，生意越做越大，因此你雇了一批实习生来帮你。但是问题来了——你可以看一眼房子就知道它到底值多少钱，实习生没有经验，不知道如何估价。</p>
<p>为了帮助你的实习生（也许是为了解放你自己去度个假），你决定写个小软件，可以根据房屋大小、地段以及类似房屋的成交价等因素来评估你所在地区房屋的价值。</p>
<p>你把3个月来城里每笔房屋交易都写了下来，每一单你都记录了一长串的细节——卧室数量、房屋大小、地段等等。但最重要的是，你写下了最终的成交价：</p>
<p>这是我们的“训练数据”:<br><img src="http://img.blog.csdn.net/20160814171156602" alt=""></p>
<p>我们要利用这些训练数据来编写一个程序来估算该地区其他房屋的价值：</p>
<p><img src="http://img.blog.csdn.net/20160814171239543" alt=""></p>
<p>这就称为<strong>监督式学习</strong>。你已经知道每一栋房屋的售价，换句话说，你知道问题的答案，并可以反向找出解题的逻辑。</p>
<p>为了编写软件，你将包含每一套房产的训练数据输入你的机器学习算法。算法尝试找出应该使用何种运算来得出价格数字。</p>
<p>这就像是算术练习题，算式中的运算符号都被擦去了：<br><img src="http://img.blog.csdn.net/20160814171313166" alt=""><br><em>天哪！一个阴险的学生将老师答案上的算术符号全擦去了。</em></p>
<p>看了这些题，你能明白这些测验里面是什么样的数学问题吗？你知道，你应该对算式左边的数字“做些什么”以得出算式右边的答案。</p>
<p>在监督式学习中，你是让计算机为你算出数字间的关系。而一旦你知道了解决这类特定问题所需要的数学方法后，你就可以解答同类的其它问题了。</p>
<h4 id="非监督式学习"><a href="#非监督式学习" class="headerlink" title="非监督式学习"></a><strong>非监督式学习</strong></h4><p>让我们回到开头那个房地产经纪的例子。要是你不知道每栋房子的售价怎么办？即使你所知道的只是房屋的大小、位置等信息，你也可以搞出很酷的花样。这就是所谓的非监督式学习。</p>
<p><img src="http://img.blog.csdn.net/20160814171439231" alt="即使你不是想去预测未知的数据（如价格），你也可以运用机器学习完成一些有意思的事。"><br><em>即使你不是想去预测未知的数据（如价格），你也可以运用机器学习完成一些有意思的事。</em></p>
<p>这就有点像有人给你一张纸，上面列出了很多数字，然后对你说:“我不知道这些数字有什么意义，也许你能从中找出规律或是能将它们分类，或是其它什么-祝你好运！”</p>
<p>你该怎么处理这些数据呢？首先，你可以用个算法自动地从数据中划分出不同的细分市场。也许你会发现大学附近的买房者喜欢户型小但卧室多的房子，而郊区的买房者偏好三卧室的大户型。这些信息可以直接帮助你的营销。</p>
<p>你还可以作件很酷的事，自动找出房价的离群数据，即与其它数据迥异的值。这些鹤立鸡群的房产也许是高楼大厦，而你可以将最优秀的推销员集中在这些地区，因为他们的佣金更高。</p>
<p>本文余下部分我们主要讨论监督式学习，但这并不是因为非监督式学习用处不大或是索然无味。实际上，随着算法改良，不用将数据和正确答案联系在一起，因此非监督式学习正变得越来越重要。</p>
<p>老学究请看:还有很多其它种类的机器学习算法。但初学时这样理解不错了。</p>
<h3 id="太酷了，但是评估房价真能被看作“学习”吗？"><a href="#太酷了，但是评估房价真能被看作“学习”吗？" class="headerlink" title="太酷了，但是评估房价真能被看作“学习”吗？"></a><strong>太酷了，但是评估房价真能被看作“学习”吗？</strong></h3><p>作为人类的一员，你的大脑可以应付绝大多数情况，并且没有任何明确指令也能够学习如何处理这些情况。如果你做房产经纪时间很长，你对于房产的合适定价、它的最佳营销方式以及哪些客户会感兴趣等等都会有一种本能般的“感觉”。强人工智能（Strong AI）研究的目标就是要能够用计算机复制这种能力。</p>
<p>但是目前的机器学习算法还没有那么好——它们只能专注于非常特定的、有限的问题。也许在这种情况下，“学习”更贴切的定义是“在少量范例数据的基础上找出一个等式来解决特定的问题”。</p>
<p>不幸的是，“机器在少量范例数据的基础上找出一个等式来解决特定的问题”这个名字太烂了。所以最后我们用“机器学习”取而代之。</p>
<p>当然，要是你是在50年之后来读这篇文章，那时我们已经得出了强人工智能算法，而本文看起来就像个老古董。未来的人类，你还是别读了，叫你的机器仆人给你做份三明治吧。</p>
<h3 id="让我们写代码吧"><a href="#让我们写代码吧" class="headerlink" title="让我们写代码吧!"></a><strong>让我们写代码吧!</strong></h3><p>前面例子中评估房价的程序，你打算怎么写呢？往下看之前，先思考一下吧。</p>
<p>如果你对机器学习一无所知，很有可能你会尝试写出一些基本规则来评估房价，如下：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">estimate_house_sales_price</span><span class="params">(num_of_bedrooms, sqft, neighborhood)</span>:</span></span><br><span class="line">  price = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># In my area, the average house costs $200 per sqft</span></span><br><span class="line">  price_per_sqft = <span class="number">200</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> neighborhood == <span class="string">"hipsterton"</span>:</span><br><span class="line">    <span class="comment"># but some areas cost a bit more</span></span><br><span class="line">    price_per_sqft = <span class="number">400</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">elif</span> neighborhood == <span class="string">"skid row"</span>:</span><br><span class="line">    <span class="comment"># and some areas cost less</span></span><br><span class="line">    price_per_sqft = <span class="number">100</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># start with a base price estimate based on how big the place is</span></span><br><span class="line">  price = price_per_sqft * sqft</span><br><span class="line"></span><br><span class="line">  <span class="comment"># now adjust our estimate based on the number of bedrooms</span></span><br><span class="line">  <span class="keyword">if</span> num_of_bedrooms == <span class="number">0</span>:</span><br><span class="line">    <span class="comment"># Studio apartments are cheap</span></span><br><span class="line">    price = price — <span class="number">20000</span></span><br><span class="line">  <span class="keyword">else</span>:</span><br><span class="line">    <span class="comment"># places with more bedrooms are usually</span></span><br><span class="line">    <span class="comment"># more valuable</span></span><br><span class="line">    price = price + (num_of_bedrooms * <span class="number">1000</span>)</span><br><span class="line"></span><br><span class="line"> <span class="keyword">return</span> price</span><br></pre></td></tr></table></figure>
<p>假如你像这样瞎忙几个小时，也许会取得一点成效，但是你的程序永不会完美，而且当价格变化时很难维护。</p>
<p>如果能让计算机找出实现上述函数功能的办法，这样岂不更好？只要返回的房价数字正确，谁会在乎函数具体干了些什么呢？</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">estimate_house_sales_price</span><span class="params">(num_of_bedrooms, sqft, neighborhood)</span>:</span></span><br><span class="line">  price = &lt;computer, plz do some math <span class="keyword">for</span> me&gt;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> price</span><br></pre></td></tr></table></figure>
<p>考虑这个问题的一种角度是将房价看做一碗美味的汤，而汤中成分就是卧室数、面积和地段。如果你能算出每种成分对最终的价格有多大影响，也许就能得到各种成分混合起来形成最终价格的具体比例。</p>
<p>这样可以将你最初的程序（全是疯狂的if else语句）简化成类似如下的样子：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">estimate_house_sales_price</span><span class="params">(num_of_bedrooms, sqft, neighborhood)</span>:</span></span><br><span class="line"> price = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"> <span class="comment"># a little pinch of this</span></span><br><span class="line"> price += num_of_bedrooms * <span class="number">.841231951398213</span></span><br><span class="line"></span><br><span class="line"> <span class="comment"># and a big pinch of that</span></span><br><span class="line"> price += sqft * <span class="number">1231.1231231</span></span><br><span class="line"></span><br><span class="line"> <span class="comment"># maybe a handful of this</span></span><br><span class="line"> price += neighborhood * <span class="number">2.3242341421</span></span><br><span class="line"></span><br><span class="line"> <span class="comment"># and finally, just a little extra salt for good measure</span></span><br><span class="line"> price += <span class="number">201.23432095</span></span><br><span class="line"></span><br><span class="line"> <span class="keyword">return</span> price</span><br></pre></td></tr></table></figure>
<p>请注意那些用粗体标注的神奇数字——<strong>.841231951398213</strong>, <strong>1231.1231231</strong>,<strong>2.3242341421</strong>, 和<strong>201.23432095</strong>。它们称为权重。如果我们能找出对每栋房子都适用的完美权重，我们的函数就能预测所有的房价！</p>
<p>找出最佳权重的一种笨办法如下所示：</p>
<h4 id="步骤1："><a href="#步骤1：" class="headerlink" title="步骤1："></a><strong>步骤1：</strong></h4><p>首先，将每个权重都设为1.0：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">estimate_house_sales_price</span><span class="params">(num_of_bedrooms, sqft, neighborhood)</span>:</span></span><br><span class="line">  price = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># a little pinch of this</span></span><br><span class="line">  price += num_of_bedrooms * <span class="number">1.0</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># and a big pinch of that</span></span><br><span class="line">  price += sqft * <span class="number">1.0</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># maybe a handful of this</span></span><br><span class="line">  price += neighborhood * <span class="number">1.0</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># and finally, just a little extra salt for good measure</span></span><br><span class="line">  price += <span class="number">1.0</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> price</span><br></pre></td></tr></table></figure>
<h4 id="步骤2："><a href="#步骤2：" class="headerlink" title="步骤2："></a><strong>步骤2：</strong></h4><p>将每栋房产带入你的函数运算，检验估算值与正确价格的偏离程度：</p>
<p><img src="http://img.blog.csdn.net/20160814172040052" alt="运用你的程序预测房屋价格。"><br><em>运用你的程序预测房屋价格。</em></p>
<p>例如：上表中第一套房产实际成交价为25万美元，你的函数估价为17.8万，这一套房产你就差了7.2万。</p>
<p>再将你的数据集中的每套房产估价偏离值平方后求和。假设数据集中有500套房产交易，估价偏离值平方求和总计为86,123,373美元。这就反映了你的函数现在的“正确”程度。</p>
<p>现在，将总计值除以500，得到每套房产的估价偏离平均值。将这个平均误差值称为你函数的代价。</p>
<p>如果你能调整权重使得这个代价变为0，你的函数就完美了。它意味着，根据输入的数据，你的程序对每一笔房产交易的估价都是分毫不差。而这就是我们的目标——尝试不同的权重值以使代价尽可能的低。</p>
<h4 id="步骤3："><a href="#步骤3：" class="headerlink" title="步骤3："></a><strong>步骤3：</strong></h4><p>不断重复步骤2，尝试<strong>所有可能的权重值组合</strong>。哪一个组合使得代价最接近于0，它就是你要使用的，你只要找到了这样的组合，问题就得到了解决!</p>
<h3 id="思想扰动时间"><a href="#思想扰动时间" class="headerlink" title="思想扰动时间"></a><strong>思想扰动时间</strong></h3><p>这太简单了，对吧？想一想刚才你做了些什么。你取得了一些数据，将它们输入至三个通用的简单步骤中，最后你得到了一个可以对你所在区域的房屋进行估价的函数。房价网，要当心咯！<br>但是下面的事实可能会扰乱你的思想：</p>
<p>1.过去40年来，很多领域（如语言学/翻译学）的研究表明，这种通用的“搅动数据汤”（我编造的词）式的学习算法已经胜过了需要利用真人明确规则的方法。机器学习的“笨”办法最终打败了人类专家。</p>
<p>2.你最后写出的函数真是笨，它甚至不知道什么是“面积”和“卧室数”。它知道的只是搅动，改变数字来得到正确的答案。</p>
<p>3.很可能你都不知道为何一组特殊的权重值能起效。所以你只是写出了一个你实际上并不理解却能证明的函数。</p>
<p>4.试想一下，你的程序里没有类似“面积”和“卧室数”这样的参数，而是接受了一组数字。假设每个数字代表了你车顶安装的摄像头捕捉的画面中的一个像素，再将预测的输出不称为“价格”而是叫做“方向盘转动度数”，这样你就得到了一个程序可以自动操纵你的汽车了！</p>
<p>太疯狂了，对吧？</p>
<h3 id="步骤3中的“尝试每个数字”怎么回事？"><a href="#步骤3中的“尝试每个数字”怎么回事？" class="headerlink" title="步骤3中的“尝试每个数字”怎么回事？"></a><strong>步骤3中的“尝试每个数字”怎么回事？</strong></h3><p>好吧，当然你不可能尝试所有可能的权重值来找到效果最好的组合。那可真要花很长时间，因为要尝试的数字可能无穷无尽。</p>
<p>为避免这种情况，数学家们找到了很多聪明的办法（比如<a href="https://en.wikipedia.org/wiki/Gradient_descent" target="_blank" rel="noopener"><strong>Gradient descent算法</strong></a>）来快速找到优秀的权重值，而不需要尝试过多。下面是其中一种：</p>
<p>首先，写出一个简单的等式表示前述步骤2，这是你的代价函数：</p>
<p><img src="http://img.blog.csdn.net/20160814172434798" alt=""></p>
<p>接着，让我们将这同一个等式用机器学习的数学术语（现在你可以忽略它们）进行重写：</p>
<p><img src="http://img.blog.csdn.net/20160814172527111" alt=""><br><em>θ表示当前的权重值。 J(θ) 意为“当前权重值对应的代价”。</em></p>
<p>这个等式表示我们的估价程序在当前权重值下偏离程度的大小。<br>如果将所有赋给卧室数和面积的可能权重值以图形形式显示，我们会得到类似下图的图表：</p>
<p><img src="http://img.blog.csdn.net/20160814172601908" alt=""><br><em>代价函数的图形像一支碗。纵轴表示代价。</em></p>
<p>图中蓝色的最低点就是代价最低的地方——即我们的程序偏离最小。最高点意味着偏离最大。所以，如果我们能找到一组权重值带领我们到达图中的最低点，我们就找到了答案！</p>
<p><img src="http://img.blog.csdn.net/20160814172634361" alt=""></p>
<p>因此，我们只需要调整权重值使我们在图上能向着最低点“走下坡路”。如果对于权重的细小调节能一直使我们保持向最低点移动，那么最终我们不用尝试太多权重值就能到达那里。</p>
<p>如果你还记得一点微积分的话，你也许记得如果你对一个函数求导，结果会告诉你函数在任一点的斜率。换句话说，对于图上给定一点，它告诉我们那条路是下坡路。我们可以利用这一点朝底部进发。</p>
<p>所以，如果我们对代价函数关于每一个权重求偏导，那么我们就可以从每一个权重中减去该值。这样可以让我们更加接近山底。一直这样做，最终我们将到达底部，得到权重的最优值。（读不懂？不用担心，接着往下读）。</p>
<p>这种找出最佳权重的办法被称为<strong>批量梯度下降</strong>，上面是对它的高度概括。如果想搞懂细节，不要害怕，继续深入下去吧。</p>
<p>当你使用机器学习算法库来解决实际问题，所有这些都已经为你准备好了。但明白一些具体细节总是有用的。</p>
<h3 id="还有什么你随便就略过了？"><a href="#还有什么你随便就略过了？" class="headerlink" title="还有什么你随便就略过了？"></a><strong>还有什么你随便就略过了？</strong></h3><p>上面我描述的三步算法被称为<strong>多元线性回归</strong>。你估算等式是在求一条能够拟合所有房价数据点的直线。然后，你再根据房价在你的直线上可能出现的位置用这个等式来估算从未见过的房屋的价格。这个想法威力强大，可以用它来解决“实际”问题。</p>
<p>但是，我为你展示的这种方法可能在简单的情况下有效，它不会在所有情况下都有用。原因之一是因为房价不会一直那么简单地跟随一条连续直线。</p>
<p>但是，幸运的是，有很多办法来处理这种情况。对于非线性数据，很多其他类型的机器学习算法可以处理（如神经网络或有核向量机）。还有很多方法运用线性回归更灵活，想到了用更复杂的线条来拟合。在所有的情况中，寻找最优权重值这一基本思路依然适用。</p>
<p>还有，我忽略了<strong>过拟合</strong>的概念。很容易碰上这样一组权重值，它们对于你原始数据集中的房价都能完美预测，但对于原始数据集之外的任何新房屋都预测不准。这种情况的解决之道也有不少（如正则化以及使用交叉验证数据集）。学会如何处理这一问题对于顺利应用机器学习至关重要。</p>
<p>换言之，基本概念非常简单，要想运用机器学习得到有用的结果还需要一些技巧和经验。但是，这是每个开发者都能学会的技巧。</p>
<h3 id="机器学习法力无边吗？"><a href="#机器学习法力无边吗？" class="headerlink" title="机器学习法力无边吗？"></a><strong>机器学习法力无边吗？</strong></h3><p>一旦你开始明白机器学习技术很容易应用于解决貌似很困难的问题（如手写识别），你心中会有一种感觉，只要有足够的数据，你就能够用机器学习解决任何问题。只需要将数据输入进去，就能看到计算机变戏法一样找出拟合数据的等式。</p>
<p>但是很重要的一点你要记住，机器学习只能对用你占有的数据实际可解的问题才适用。</p>
<p>例如，如果你建立了一个模型来根据每套房屋内盆栽数量来预测房价，它就永远不会成功。房屋内盆栽数量和房价之间没有任何的关系。所以，无论它怎么去尝试，计算机也推导不出两者之间的关系。</p>
<p><img src="http://img.blog.csdn.net/20160814172839065" alt=""><br><em>你只能对实际存在的关系建模。</em></p>
<h3 id="怎样深入学习机器学习"><a href="#怎样深入学习机器学习" class="headerlink" title="怎样深入学习机器学习"></a><strong>怎样深入学习机器学习</strong></h3><p>我认为，当前机器学习的最大问题是它主要活跃于学术界和商业研究组织中。对于圈外想要有个大体了解而不是想成为专家的人们，简单易懂的学习资料不多。但是这一情况每一天都在改善。</p>
<p>吴恩达教授（Andrew Ng）在<a href="https://www.coursera.org/learn/machine-learning" target="_blank" rel="noopener"><strong>Coursera上的机器学习免费课程</strong></a>非常不错。我强烈建议由此入门。任何拥有计算机科学学位、还能记住一点点数学的人应该都能理解。</p>
<p>另外，你还可以下载安装<a href="http://scikit-learn.org/stable/" target="_blank" rel="noopener"><code>SciKit-Learn</code></a>，用它来试验成千上万的机器学习算法。它是一个python框架，对于所有的标准算法都有“黑盒”版本。</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文是一篇转载自&lt;a href=&quot;http://blog.jobbole.com/67616/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;strong&gt;伯乐在线的译文&lt;/strong&gt;&lt;/a&gt;，英文原文是这里：&lt;a href=&quot;https://medium.com/code-poet/80ea3ec3c471&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;strong&gt;Machine Learning is Fun!&lt;/strong&gt; — by Adam Geitgey&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在听到人们谈论机器学习的时候，你是不是对它的涵义只有几个模糊的认识呢？你是不是已经厌倦了在和同事交谈时只能一直点头？让我们改变一下吧！&lt;/p&gt;
&lt;p&gt;本指南的读者对象是所有对机器学习有求知欲但却不知道如何开头的朋友。我猜很多人已经读过了&lt;a href=&quot;https://en.wikipedia.org/wiki/Machine_learning&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;“机器学习” ——维基百科词条&lt;/a&gt;，倍感挫折，以为没人能给出一个高层次的解释。本文就是你们想要的东西。&lt;/p&gt;
&lt;p&gt;本文目标在于平易近人，这意味着文中有大量的概括。但是谁在乎这些呢？只要能让读者对于ML更感兴趣，任务也就完成了。&lt;/p&gt;
    
    </summary>
    
      <category term="Machine Learning" scheme="https://ygcaicn.github.io/categories/Machine-Learning/"/>
    
    
      <category term="Machine Learning" scheme="https://ygcaicn.github.io/tags/Machine-Learning/"/>
    
  </entry>
  
  <entry>
    <title>python基础</title>
    <link href="https://ygcaicn.github.io/python3/python%E5%9F%BA%E7%A1%80.html"/>
    <id>https://ygcaicn.github.io/python3/python基础.html</id>
    <published>2017-05-04T07:25:36.000Z</published>
    <updated>2018-01-15T13:21:33.926Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Strings"><a href="#Strings" class="headerlink" title="Strings"></a>Strings</h1><blockquote>
<p>A string is a sequence of values that represent Unicode code points. All the code points in the range U+0000 - U+10FFFF can be represented in a string. Python doesn’t have a char type; instead, every code point in the string is represented as a string object with length 1. The built-in function ord() converts a code point from its string form to an integer in the range 0 - 10FFFF; chr() converts an integer in the range 0 - 10FFFF to the corresponding length 1 string object. <code>str.encode()</code> can be used to convert a str to bytes using the given text encoding, and <code>bytes.decode()</code> can be used to achieve the opposite.</p>
</blockquote>
<a id="more"></a>
<figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#str-&gt;bytes  </span></span><br><span class="line">str.encode(encoding=<span class="string">'UTF-8'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#bytes-&gt;str  </span></span><br><span class="line">bytes.decode(encoding=<span class="string">'UTF-8'</span>)</span><br></pre></td></tr></table></figure>
<p>document <a href="https://docs.python.org/" target="_blank" rel="noopener">https://docs.python.org/</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">urllib  </span><br><span class="line">     urllib.error Exception classes raised by urllib.request.</span><br><span class="line">     urllib.parse Parse URLs into or assemble them from components.</span><br><span class="line">     urllib.request Extensible library for opening URLs.</span><br><span class="line">     urllib.response Response classes used by urllib.</span><br><span class="line">     urllib.robotparser Load a robots.txt file and answer questions about fetchability of other URLs.</span><br></pre></td></tr></table></figure>
<h1 id="标准数据类型"><a href="#标准数据类型" class="headerlink" title="标准数据类型"></a>标准数据类型</h1><ul>
<li>Python3 中有六个标准的数据类型：</li>
<li>Number（数字）    123</li>
<li>String（字符串）  ‘abc’/“abc”</li>
<li>List（列表）      []</li>
<li>Tuple（元组）     ()</li>
<li>Sets（集合）      ({})</li>
<li>Dictionary（字典）{key:value}<br>*</li>
</ul>
<blockquote>
<p>I have a tuple of tuples from a MySQL query like this:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">T1 = ((&apos;13&apos;, &apos;17&apos;, &apos;18&apos;, &apos;21&apos;, &apos;32&apos;),</span><br><span class="line">      (&apos;07&apos;, &apos;11&apos;, &apos;13&apos;, &apos;14&apos;, &apos;28&apos;),</span><br><span class="line">      (&apos;01&apos;, &apos;05&apos;, &apos;06&apos;, &apos;08&apos;, &apos;15&apos;, &apos;16&apos;))</span><br></pre></td></tr></table></figure></p>
</blockquote>
<p>I’d like to convert all the string elements into integers and put it back nicely to list of lists this time:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">T2 = [[13, 17, 18, 21, 32], [7, 11, 13, 14, 28], [1, 5, 6, 8, 15, 16]]</span><br></pre></td></tr></table></figure></p>
<p>I tried to achieve it with eval but didn’t get any decent result yet.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[[int(column) for column in row] for row in T1]</span><br></pre></td></tr></table></figure></p>
<h1 id="一张图看Python"><a href="#一张图看Python" class="headerlink" title="一张图看Python"></a>一张图看Python</h1><p><img src="http://i.imgur.com/gAdiDlB.png" alt="Imgur"></p>
<h1 id="Python网络编程-百度语音接口实例"><a href="#Python网络编程-百度语音接口实例" class="headerlink" title="Python网络编程-百度语音接口实例"></a>Python网络编程-百度语音接口实例</h1><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#</span></span><br><span class="line">  <span class="number">1</span> <span class="comment">#!/usr/bin/python3</span></span><br><span class="line">  <span class="number">2</span></span><br><span class="line">  <span class="number">3</span> <span class="keyword">import</span> urllib</span><br><span class="line">  <span class="number">4</span> <span class="keyword">import</span> urllib.request</span><br><span class="line">  <span class="number">5</span> <span class="keyword">import</span> urllib.parse</span><br><span class="line">  <span class="number">6</span> <span class="keyword">import</span> json</span><br><span class="line">  <span class="number">7</span> <span class="keyword">import</span> os</span><br><span class="line">  <span class="number">8</span> <span class="keyword">import</span> sys</span><br><span class="line">  <span class="number">9</span> <span class="keyword">import</span> hashlib</span><br><span class="line"> <span class="number">10</span> <span class="keyword">import</span> uuid</span><br><span class="line"> <span class="number">11</span> <span class="keyword">import</span> base64</span><br><span class="line"> <span class="number">12</span></span><br><span class="line"> <span class="number">13</span> <span class="class"><span class="keyword">class</span> <span class="title">BaiduRest</span>:</span></span><br><span class="line"> <span class="number">14</span>         <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,cu_id,api_key,api_secret)</span>:</span></span><br><span class="line"> <span class="number">15</span>                 self.toKen_url = <span class="string">"https://openapi.baidu.com/oauth/2.0/token?grant_type=client_credentials&amp;client_id=%s&amp;client_secret=%s&amp;"</span></span><br><span class="line"> <span class="number">16</span>                 self.getVoice_url = <span class="string">"http://tsn.baidu.com/text2audio"</span></span><br><span class="line"> <span class="number">17</span>                 self.upVoice_url = <span class="string">'http://vop.baidu.com/server_api'</span></span><br><span class="line"> <span class="number">18</span>                 self.cu_id = cu_id</span><br><span class="line"> <span class="number">19</span>                 self.api_key = api_key</span><br><span class="line"> <span class="number">20</span>                 self.api_secret = api_secret</span><br><span class="line"> <span class="number">21</span>                 <span class="keyword">if</span> <span class="keyword">not</span>  os.path.isdir(<span class="string">"./cache/"</span>):</span><br><span class="line"> <span class="number">22</span>                         os.mkdir(<span class="string">"./cache/"</span>)</span><br><span class="line"> <span class="number">23</span>                         os.mkdir(<span class="string">"./cache/audio"</span>)</span><br><span class="line"> <span class="number">24</span>                 <span class="keyword">if</span> <span class="keyword">not</span>  os.path.isdir(<span class="string">"./cache/audio"</span>):</span><br><span class="line"> <span class="number">25</span>                         os.mkdir(<span class="string">"./cache/audio"</span>)</span><br><span class="line"> <span class="number">26</span>                 <span class="keyword">try</span>:</span><br><span class="line"> <span class="number">27</span>                         file_toKen = open(<span class="string">"./cache/access_toKen"</span>,<span class="string">'r'</span>)</span><br><span class="line"> <span class="number">28</span>                         self.toKen = file_toKen.read()</span><br><span class="line"> <span class="number">29</span>                 <span class="keyword">except</span> FileNotFoundError:</span><br><span class="line"> <span class="number">30</span>                         self.getToKen(api_key,api_secret)</span><br><span class="line"> <span class="number">31</span>                 <span class="keyword">pass</span></span><br><span class="line"> <span class="number">32</span></span><br><span class="line"> <span class="number">33</span></span><br><span class="line"> <span class="number">34</span>         <span class="function"><span class="keyword">def</span> <span class="title">getToKen</span><span class="params">(self,api_key,api_secret)</span>:</span></span><br><span class="line"> <span class="number">35</span>                 self.toKen_url = self.toKen_url % (api_key,api_secret)</span><br><span class="line"> <span class="number">36</span>                 r_str = urllib.request.urlopen(self.toKen_url).read()</span><br><span class="line"> <span class="number">37</span>                 r_str = r_str.decode(encoding=<span class="string">"UTF-8"</span>)</span><br><span class="line"> <span class="number">38</span>                 r_json = json.loads(r_str)</span><br><span class="line"> <span class="number">39</span>                 self.toKen = r_json[<span class="string">"access_token"</span>]</span><br><span class="line"> <span class="number">40</span>                 file_toKen = open(<span class="string">"./cache/access_toKen"</span>,<span class="string">"w"</span>)</span><br><span class="line"> <span class="number">41</span>                 file_toKen.write(self.toKen)</span><br><span class="line"> <span class="number">42</span>                 file_toKen.close()</span><br><span class="line"> <span class="number">43</span>                 <span class="keyword">pass</span></span><br><span class="line"> <span class="number">44</span></span><br><span class="line"> <span class="number">45</span>         <span class="function"><span class="keyword">def</span> <span class="title">getVoice</span><span class="params">(self,text,filename)</span>:</span></span><br><span class="line"> <span class="number">46</span>                 <span class="comment">#POST</span></span><br><span class="line"> <span class="number">47</span>                 params = urllib.parse.urlencode(&#123;<span class="string">'tex'</span>:urllib.parse.quote(text),<span class="string">'lan'</span>:<span class="string">'zh'</span>,<span class="string">'cuid'</span>:self.cu_id,<span class="string">'ctp'</span>:<span class="number">1</span>,<span class="string">'tok'</span>:urllib.parse.quote(self.toKen)&#125;)</span><br><span class="line"> <span class="number">48</span>                 real_url = urllib.request.Request(self.getVoice_url,params.encode(<span class="string">"utf-8"</span>))</span><br><span class="line"> <span class="number">49</span>                 httpResponse = urllib.request.urlopen(real_url)</span><br><span class="line"> <span class="number">50</span>                 <span class="keyword">if</span> httpResponse.getheader(<span class="string">'Content-type'</span>) == <span class="string">'audio/mp3'</span>:</span><br><span class="line"> <span class="number">51</span>                         <span class="comment">#print("toKen successful!")</span></span><br><span class="line"> <span class="number">52</span>                         <span class="comment">#os.system('date')</span></span><br><span class="line"> <span class="number">53</span>                         file_mp3 = open(filename,<span class="string">"wb+"</span>)</span><br><span class="line"> <span class="number">54</span>                         file_mp3.write(httpResponse.read())</span><br><span class="line"> <span class="number">55</span>                         file_mp3.close()</span><br><span class="line"> <span class="number">56</span>                 <span class="keyword">else</span>:</span><br><span class="line"> <span class="number">57</span>                         self.getToKen(self.api_key,self.api_secret)</span><br><span class="line"> <span class="number">39</span>                 self.toKen = r_json[<span class="string">"access_token"</span>]</span><br><span class="line"> <span class="number">40</span>                 file_toKen = open(<span class="string">"./cache/access_toKen"</span>,<span class="string">"w"</span>)</span><br><span class="line"> <span class="number">41</span>                 file_toKen.write(self.toKen)</span><br><span class="line"> <span class="number">42</span>                 file_toKen.close()</span><br><span class="line"> <span class="number">43</span>                 <span class="keyword">pass</span></span><br><span class="line"> <span class="number">44</span></span><br><span class="line"> <span class="number">45</span>         <span class="function"><span class="keyword">def</span> <span class="title">getVoice</span><span class="params">(self,text,filename)</span>:</span></span><br><span class="line"> <span class="number">46</span>                 <span class="comment">#POST</span></span><br><span class="line"> <span class="number">47</span>                 params = urllib.parse.urlencode(&#123;<span class="string">'tex'</span>:urllib.parse.quote(text),<span class="string">'lan'</span>:<span class="string">'zh'</span>,<span class="string">'cuid'</span>:self.cu_id,<span class="string">'ctp'</span>:<span class="number">1</span>,<span class="string">'tok'</span>:urllib.parse.quote(self.toKen)&#125;)</span><br><span class="line"> <span class="number">48</span>                 real_url = urllib.request.Request(self.getVoice_url,params.encode(<span class="string">"utf-8"</span>))</span><br><span class="line"> <span class="number">49</span>                 httpResponse = urllib.request.urlopen(real_url)</span><br><span class="line"> <span class="number">50</span>                 <span class="keyword">if</span> httpResponse.getheader(<span class="string">'Content-type'</span>) == <span class="string">'audio/mp3'</span>:</span><br><span class="line"> <span class="number">51</span>                         <span class="comment">#print("toKen successful!")</span></span><br><span class="line"> <span class="number">52</span>                         <span class="comment">#os.system('date')</span></span><br><span class="line"> <span class="number">53</span>                         file_mp3 = open(filename,<span class="string">"wb+"</span>)</span><br><span class="line"> <span class="number">54</span>                         file_mp3.write(httpResponse.read())</span><br><span class="line"> <span class="number">55</span>                         file_mp3.close()</span><br><span class="line"> <span class="number">56</span>                 <span class="keyword">else</span>:</span><br><span class="line"> <span class="number">57</span>                         self.getToKen(self.api_key,self.api_secret)</span><br><span class="line"> <span class="number">54</span>                         file_mp3.write(httpResponse.read())</span><br><span class="line"> <span class="number">54</span>                         file_mp3.write(httpResponse.read())</span><br><span class="line"> <span class="number">54</span>                         file_mp3.write(httpResponse.read())</span><br><span class="line"> <span class="number">55</span>                         file_mp3.close()</span><br><span class="line"> <span class="number">56</span>                 <span class="keyword">else</span>:</span><br><span class="line"> <span class="number">57</span>                         self.getToKen(self.api_key,self.api_secret)</span><br><span class="line"> <span class="number">58</span>                         self.getVoice(text,filename)</span><br><span class="line"> <span class="number">59</span></span><br><span class="line"> <span class="number">60</span>                 <span class="keyword">pass</span></span><br><span class="line"> <span class="number">61</span>         <span class="function"><span class="keyword">def</span> <span class="title">getText</span><span class="params">(self, filename)</span>:</span></span><br><span class="line"> <span class="number">62</span>                 data = &#123;&#125;</span><br><span class="line"> <span class="number">63</span>                 data[<span class="string">'format'</span>] = <span class="string">'wav'</span></span><br><span class="line"> <span class="number">64</span>                 data[<span class="string">'rate'</span>] = <span class="number">16000</span></span><br><span class="line"> <span class="number">65</span>                 data[<span class="string">'channel'</span>] = <span class="number">1</span></span><br><span class="line">  <span class="number">6</span>                 data[<span class="string">'cuid'</span>] = self.cu_id</span><br><span class="line"> <span class="number">67</span>                 data[<span class="string">'token'</span>] = self.toKen</span><br><span class="line"> <span class="number">68</span>                 wav_fp = open(filename,<span class="string">'rb'</span>)</span><br><span class="line"> <span class="number">69</span>                 voice_data = wav_fp.read()</span><br><span class="line"> <span class="number">70</span>                 data[<span class="string">'len'</span>] = len(voice_data)</span><br><span class="line"> <span class="number">71</span>                 data[<span class="string">'speech'</span>] = base64.b64encode(voice_data).decode(<span class="string">'utf-8'</span>)</span><br><span class="line"> <span class="number">72</span>                 post_data = json.dumps(data)</span><br><span class="line"> <span class="number">73</span>                 reque = urllib.request.Request(self.upVoice_url,post_data.encode(encoding=<span class="string">"UTF-8"</span>))</span><br><span class="line"> <span class="number">74</span>                 r_data = urllib.request.urlopen(reque).read()</span><br><span class="line"> <span class="number">75</span>                 <span class="comment"># 3.处理返回数据</span></span><br><span class="line"> <span class="number">76</span>                 r_json = json.loads(r_data.decode(encoding=<span class="string">'utf-8'</span>))</span><br><span class="line"> <span class="number">77</span>                 <span class="keyword">if</span> <span class="string">'result'</span> <span class="keyword">in</span> r_json:</span><br><span class="line"> <span class="number">78</span>                         <span class="keyword">return</span>  r_json[<span class="string">'result'</span>]</span><br><span class="line"> <span class="number">79</span>                 <span class="keyword">else</span>:</span><br><span class="line"> <span class="number">80</span>                         print(r_json)</span><br><span class="line"> <span class="number">81</span>                         <span class="keyword">return</span> r_json[<span class="string">'err_no'</span>]</span><br><span class="line"> <span class="number">82</span></span><br><span class="line"> <span class="number">83</span> <span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line"> <span class="number">84</span>         os.system(<span class="string">'date'</span>)</span><br><span class="line"> <span class="number">85</span>         api_key = <span class="string">"6PPBMVeF1BIWbXmNuUfEivK3"</span></span><br><span class="line"> <span class="number">86</span>         api_secret = <span class="string">"0c5ee6597954b09bee9083624ff3d9a4"</span></span><br><span class="line"> <span class="number">87</span>         text = sys.argv[<span class="number">1</span>]</span><br><span class="line"> <span class="number">88</span>         tmpname_wav = hashlib.md5(text.encode(encoding=<span class="string">"UTF-8"</span>)).hexdigest() + <span class="string">'.wav'</span></span><br><span class="line"> <span class="number">89</span>         tmpname_wav = <span class="string">'./cache/audio/'</span> + tmpname_wav</span><br><span class="line"> <span class="number">90</span>         <span class="keyword">if</span> os.path.isfile(tmpname_wav):</span><br><span class="line"> <span class="number">91</span>                 print(<span class="string">"exist!"</span>)</span><br><span class="line"> <span class="number">92</span>                 os.system(<span class="string">"omxplayer --loop \""</span> + tmpname_wav + <span class="string">'\"'</span>)</span><br><span class="line"> <span class="number">93</span>         <span class="keyword">else</span>:</span><br><span class="line"> <span class="number">94</span>                 mac = uuid.UUID(int = uuid.getnode()).hex[<span class="number">-12</span>:]</span><br><span class="line"> <span class="number">95</span>                 mac = <span class="string">":"</span>.join([mac[e:e+<span class="number">2</span>] <span class="keyword">for</span> e <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">11</span>,<span class="number">2</span>)])</span><br><span class="line"> <span class="number">96</span>                 baiduVoice = BaiduRest(mac,api_key,api_secret)</span><br><span class="line"> <span class="number">97</span>                 baiduVoice.getVoice(text,tmpname_wav)</span><br><span class="line"> <span class="number">98</span>                 os.system(<span class="string">'date'</span>)</span><br><span class="line"> <span class="number">99</span>                 <span class="comment">#os.system("omxplayer --loop \"" + tmpname_wav + "\"")</span></span><br><span class="line"><span class="number">100</span>                 print(baiduVoice.getText(tmpname_wav))</span><br><span class="line"><span class="number">101</span></span><br><span class="line"><span class="number">102</span></span><br></pre></td></tr></table></figure>
<h1 id="urllib-request"><a href="#urllib-request" class="headerlink" title="urllib.request"></a>urllib.request</h1><h2 id="get"><a href="#get" class="headerlink" title="get"></a>get</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">from urllib import request, parse</span><br><span class="line"># Base URL being accessed</span><br><span class="line">url = &apos;http://httpbin.org/get&apos;</span><br><span class="line"># Dictionary of query parameters (if any)</span><br><span class="line">parms = &#123;</span><br><span class="line">&apos;name1&apos; : &apos;value1&apos;,</span><br><span class="line">&apos;name2&apos; : &apos;value2&apos;</span><br><span class="line">&#125;</span><br><span class="line"># Encode the query string</span><br><span class="line">querystring = parse.urlencode(parms)</span><br><span class="line"># Make a GET request and read the response</span><br><span class="line">u = request.urlopen(url+&apos;?&apos; + querystring)</span><br><span class="line">resp_bytes = u.read()</span><br></pre></td></tr></table></figure>
<h2 id="post"><a href="#post" class="headerlink" title="post"></a>post</h2><h3 id="post-stand-fomer"><a href="#post-stand-fomer" class="headerlink" title="post stand fomer"></a>post stand fomer</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">from urllib import request, parse</span><br><span class="line"># Base URL being accessed</span><br><span class="line">url = &apos;http://httpbin.org/post&apos;</span><br><span class="line"># Dictionary of query parameters (if any)</span><br><span class="line">parms = &#123;</span><br><span class="line">&apos;name1&apos; : &apos;value1&apos;,</span><br><span class="line">&apos;name2&apos; : &apos;value2&apos;</span><br><span class="line">&#125;</span><br><span class="line"># Encode the query string</span><br><span class="line">querystring = parse.urlencode(parms)</span><br><span class="line"># Make a POST request and read the response</span><br><span class="line">res = request.urlopen(url, querystring.encode(encoding = &apos;utf-8&apos;))</span><br><span class="line">html_str = res.read()</span><br></pre></td></tr></table></figure>
<h3 id="post-json"><a href="#post-json" class="headerlink" title="post json"></a>post json</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">parms = &#123;</span><br><span class="line">&apos;name1&apos; : &apos;value1&apos;,</span><br><span class="line">&apos;name2&apos; : &apos;value2&apos;</span><br><span class="line">&#125;</span><br><span class="line">post_data = json.dumps(parms)</span><br><span class="line">res = urllib.request.urlopen(url,post_data.encod(encoding=&quot;utf-8&quot;))</span><br><span class="line">html_str =res.read()</span><br></pre></td></tr></table></figure>
<h2 id="header"><a href="#header" class="headerlink" title="header"></a>header</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">from urllib import request, parse</span><br><span class="line"></span><br><span class="line"># Extra headers</span><br><span class="line">headers = &#123;</span><br><span class="line">&apos;User-agent&apos; : &apos;none/ofyourbusiness&apos;,</span><br><span class="line">&apos;Spam&apos; : &apos;Eggs&apos;</span><br><span class="line">&#125;</span><br><span class="line">req = request.Request(url, querystring.encode(&apos;ascii&apos;), headers=headers)</span><br><span class="line"># Make a request and read the response</span><br><span class="line">res = request.urlopen(req)</span><br><span class="line">html_str = res.read()</span><br></pre></td></tr></table></figure>
<h3 id="header-example"><a href="#header-example" class="headerlink" title="header example"></a>header example</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">headers=&#123;</span><br><span class="line">&apos;Connection&apos;: &apos;keep-alive&apos;,</span><br><span class="line">&apos;Cache-Control&apos;: &apos;max-age=0&apos;,</span><br><span class="line">&apos;Upgrade-Insecure-Requests&apos;: 1,</span><br><span class="line">&apos;User-Agent&apos;: &apos;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36&apos;,</span><br><span class="line">&apos;Accept&apos;: &apos;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8&apos;,</span><br><span class="line">&apos;Accept-Encoding&apos;: &apos;gzip, deflate, sdch&apos;,</span><br><span class="line">&apos;Accept-Language&apos;: &apos;zh-CN,zh;q=0.8,en;q=0.6&apos;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Type: application/json</span><br></pre></td></tr></table></figure>
<h2 id="Request"><a href="#Request" class="headerlink" title="Request"></a>Request</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">GET / HTTP/1.1</span><br><span class="line">Host: ip.cn</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</span><br><span class="line">Accept-Encoding: gzip, deflate, sdch</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,en;q=0.6</span><br><span class="line">Cookie: UM_distinctid=15ae0d3744b437-0ebcb4eece40e4-57e1b3c-100200-15ae0d3744c42b; CNZZDATA123770=cnzz_eid%3D646344926-1484393339-%26ntime%3D1489830206</span><br></pre></td></tr></table></figure>
<h2 id="Response"><a href="#Response" class="headerlink" title="Response"></a>Response</h2><p>encoding:gzip</p>
<p><img src="http://i.imgur.com/gNVZvxJ.png" alt="Imgur"></p>
<p>when unzip the body,we can see:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Server: nginx/1.8.0</span><br><span class="line">Date: Sat, 18 Mar 2017 10:54:28 GMT</span><br><span class="line">Content-Type: text/html; charset=UTF-8</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Vary: Accept-Encoding</span><br><span class="line">X-Powered-By: PHP/5.6.30-1~dotdeb+7.1</span><br><span class="line">Content-Length: 3189</span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;</span><br><span class="line">&lt;link href=&quot;http://s.ip-cdn.com&quot; rel=&quot;dns-prefetch&quot; /&gt;</span><br><span class="line">&lt;title&gt;IP.cn - IP 地址查询 | 地理位置 | 手机归属地&lt;/title&gt;</span><br><span class="line">&lt;meta name=&quot;robots&quot; content=&quot;all&quot; /&gt;</span><br><span class="line">&lt;meta name=&quot;Keywords&quot; content=&quot;ip,ip查询,手机ip,本机ip,外网ip,ip地址查询,手机号,归属地&quot;&gt;</span><br><span class="line">&lt;meta name=&quot;Description&quot; content=&quot;专业本机 IP 地址查询、手机 IP 地址、地理位置查询、IP 数据库、手机号归属地查询、电话号码黄页查询，可查广告、骚扰、快递、银行、保险、房地产、中介电话。&quot;&gt;</span><br><span class="line">&lt;link href=&apos;http://s.ip-cdn.com/css/bootstrap.min.css&apos; rel=&apos;stylesheet&apos; type=&apos;text/css&apos;&gt;</span><br><span class="line">&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, minimum-scale=0.5&quot;&gt;</span><br><span class="line">&lt;meta name=&quot;format-detection&quot; content=&quot;telephone=no&quot;&gt;</span><br><span class="line">&lt;!--[if lt IE 8]&gt;</span><br><span class="line">&lt;script src=&quot;http://s.ip-cdn.com/js/ie8.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;![endif]--&gt;</span><br><span class="line">&lt;link href=&apos;http://s.ip-cdn.com/css/main.css&apos; rel=&apos;stylesheet&apos; type=&apos;text/css&apos;&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body onLoad=&quot;document.fs.ip.focus()&quot;&gt;</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><h2 id="入门"><a href="#入门" class="headerlink" title="入门"></a>入门</h2><p><a href="http://www.runoob.com/python3/python3-tutorial.html" target="_blank" rel="noopener">Python3教程</a></p>
<h2 id="进阶技巧"><a href="#进阶技巧" class="headerlink" title="进阶技巧"></a>进阶技巧</h2><p><a href="https://github.com/yidao620c/python3-cookbook" target="_blank" rel="noopener">python3-cookbook</a><br><a href="http://docspy3zh.readthedocs.io/en/latest/index.html" target="_blank" rel="noopener">readthedocs</a><br><a href="http://cn.python-requests.org/zh_CN/latest/" target="_blank" rel="noopener">python-requests</a></p>
<p>httbin.org</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Strings&quot;&gt;&lt;a href=&quot;#Strings&quot; class=&quot;headerlink&quot; title=&quot;Strings&quot;&gt;&lt;/a&gt;Strings&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;A string is a sequence of values that represent Unicode code points. All the code points in the range U+0000 - U+10FFFF can be represented in a string. Python doesn’t have a char type; instead, every code point in the string is represented as a string object with length 1. The built-in function ord() converts a code point from its string form to an integer in the range 0 - 10FFFF; chr() converts an integer in the range 0 - 10FFFF to the corresponding length 1 string object. &lt;code&gt;str.encode()&lt;/code&gt; can be used to convert a str to bytes using the given text encoding, and &lt;code&gt;bytes.decode()&lt;/code&gt; can be used to achieve the opposite.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="python3" scheme="https://ygcaicn.github.io/categories/python3/"/>
    
    
      <category term="python" scheme="https://ygcaicn.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>GPT(GUID partition table)</title>
    <link href="https://ygcaicn.github.io/Linux/GPT.html"/>
    <id>https://ygcaicn.github.io/Linux/GPT.html</id>
    <published>2017-05-04T05:04:44.000Z</published>
    <updated>2018-05-17T17:09:56.797Z</updated>
    
    <content type="html"><![CDATA[<p>GPT 磁盘分区表：</p>
<p>LBA – Logical Block Adress</p>
<p>size of  LBA :512bytes(0.5KB)</p>
<p>LBA0~LBA33: GUID partition table(GPT)</p>
<p>LBA(end-33)~LBA(end): Backup GPT</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Disk /dev/sdb: 33021952 sectors, 15.7 GiB</span><br><span class="line">Logical sector size: 512 bytes</span><br><span class="line">Disk identifier (GUID): 2A7B560E-11D2-48FE-9A16-A54069811BF4</span><br><span class="line">Partition table holds up to 128 entries</span><br><span class="line">First usable sector is 34, last usable sector is 33021918</span><br><span class="line">Partitions will be aligned on 2048-sector boundaries</span><br><span class="line">Total free space is 2014 sectors (1007.0 KiB)</span><br><span class="line"></span><br><span class="line">Number  Start (sector)    End (sector)  Size       Code  Name</span><br><span class="line">   1            2048        33021918   15.7 GiB    8300  Linux filesystem</span><br></pre></td></tr></table></figure>
<h1 id="gdisk"><a href="#gdisk" class="headerlink" title="gdisk"></a>gdisk</h1><h2 id="Command"><a href="#Command" class="headerlink" title="Command"></a>Command</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Command (? for help): ?</span><br><span class="line">b	back up GPT data to a file</span><br><span class="line">c	change a partition&apos;s name</span><br><span class="line">d	delete a partition</span><br><span class="line">i	show detailed information on a partition</span><br><span class="line">l	list known partition types</span><br><span class="line">n	add a new partition</span><br><span class="line">o	create a new empty GUID partition table (GPT)</span><br><span class="line">p	print the partition table</span><br><span class="line">q	quit without saving changes</span><br><span class="line">r	recovery and transformation options (experts only)</span><br><span class="line">s	sort partitions</span><br><span class="line">t	change a partition&apos;s type code</span><br><span class="line">v	verify disk</span><br><span class="line">w	write table to disk and exit</span><br><span class="line">x	extra functionality (experts only)</span><br><span class="line">?	print this menu</span><br></pre></td></tr></table></figure>
<h2 id="Recovery-transformation"><a href="#Recovery-transformation" class="headerlink" title="Recovery/transformation"></a>Recovery/transformation</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Recovery/transformation command (? for help): ?</span><br><span class="line">b	use backup GPT header (rebuilding main)</span><br><span class="line">c	load backup partition table from disk (rebuilding main)</span><br><span class="line">d	use main GPT header (rebuilding backup)</span><br><span class="line">e	load main partition table from disk (rebuilding backup)</span><br><span class="line">f	load MBR and build fresh GPT from it</span><br><span class="line">g	convert GPT into MBR and exit</span><br><span class="line">h	make hybrid MBR</span><br><span class="line">i	show detailed information on a partition</span><br><span class="line">l	load partition data from a backup file</span><br><span class="line">m	return to main menu</span><br><span class="line">o	print protective MBR data</span><br><span class="line">p	print the partition table</span><br><span class="line">q	quit without saving changes</span><br><span class="line">t	transform BSD disklabel partition</span><br><span class="line">v	verify disk</span><br><span class="line">w	write table to disk and exit</span><br><span class="line">x	extra functionality (experts only)</span><br><span class="line">?	print this menu</span><br></pre></td></tr></table></figure>
<h2 id="Expert"><a href="#Expert" class="headerlink" title="Expert"></a>Expert</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">Expert command (? for help): ?</span><br><span class="line">a	set attributes</span><br><span class="line">c	change partition GUID</span><br><span class="line">d	display the sector alignment value</span><br><span class="line">e	relocate backup data structures to the end of the disk</span><br><span class="line">g	change disk GUID</span><br><span class="line">h	recompute CHS values in protective/hybrid MBR</span><br><span class="line">i	show detailed information on a partition</span><br><span class="line">l	set the sector alignment value</span><br><span class="line">m	return to main menu</span><br><span class="line">n	create a new protective MBR</span><br><span class="line">o	print protective MBR data</span><br><span class="line">p	print the partition table</span><br><span class="line">q	quit without saving changes</span><br><span class="line">r	recovery and transformation options (experts only)</span><br><span class="line">s	resize partition table</span><br><span class="line">t	transpose two partition table entries</span><br><span class="line">u	replicate partition table on new device</span><br><span class="line">v	verify disk</span><br><span class="line">w	write table to disk and exit</span><br><span class="line">z	zap (destroy) GPT data structures and exit</span><br><span class="line">?	print this menu</span><br></pre></td></tr></table></figure>
<h1 id="partition’s-type-code"><a href="#partition’s-type-code" class="headerlink" title="partition’s type code"></a>partition’s type code</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">0700 Microsoft basic data  0c01 Microsoft reserved    2700 Windows RE          </span><br><span class="line">3000 ONIE boot             3001 ONIE config           3900 Plan 9              </span><br><span class="line">4100 PowerPC PReP boot     4200 Windows LDM data      4201 Windows LDM metadata</span><br><span class="line">4202 Windows Storage Spac  7501 IBM GPFS              7f00 ChromeOS kernel     </span><br><span class="line">7f01 ChromeOS root         7f02 ChromeOS reserved     8200 Linux swap          </span><br><span class="line">8300 Linux filesystem      8301 Linux reserved        8302 Linux /home         </span><br><span class="line">8303 Linux x86 root (/)    8304 Linux x86-64 root (/  8305 Linux ARM64 root (/)</span><br><span class="line">8306 Linux /srv            8307 Linux ARM32 root (/)  8400 Intel Rapid Start   </span><br><span class="line">8e00 Linux LVM             a500 FreeBSD disklabel     a501 FreeBSD boot        </span><br><span class="line">a502 FreeBSD swap          a503 FreeBSD UFS           a504 FreeBSD ZFS         </span><br><span class="line">a505 FreeBSD Vinum/RAID    a580 Midnight BSD data     a581 Midnight BSD boot   </span><br><span class="line">a582 Midnight BSD swap     a583 Midnight BSD UFS      a584 Midnight BSD ZFS    </span><br><span class="line">a585 Midnight BSD Vinum    a600 OpenBSD disklabel     a800 Apple UFS           </span><br><span class="line">a901 NetBSD swap           a902 NetBSD FFS            a903 NetBSD LFS          </span><br><span class="line">a904 NetBSD concatenated   a905 NetBSD encrypted      a906 NetBSD RAID         </span><br><span class="line">ab00 Recovery HD           af00 Apple HFS/HFS+        af01 Apple RAID          </span><br><span class="line">af02 Apple RAID offline    af03 Apple label           af04 AppleTV recovery    </span><br><span class="line">af05 Apple Core Storage    bc00 Acronis Secure Zone   be00 Solaris boot        </span><br><span class="line">bf00 Solaris root          bf01 Solaris /usr &amp; Mac Z  bf02 Solaris swap        </span><br><span class="line">bf03 Solaris backup        bf04 Solaris /var          bf05 Solaris /home       </span><br><span class="line">bf06 Solaris alternate se  bf07 Solaris Reserved 1    bf08 Solaris Reserved 2  </span><br><span class="line">bf09 Solaris Reserved 3    bf0a Solaris Reserved 4    bf0b Solaris Reserved 5  </span><br><span class="line">c001 HP-UX data            c002 HP-UX service         ea00 Freedesktop $BOOT   </span><br><span class="line">eb00 Haiku BFS             ed00 Sony system partitio  ed01 Lenovo system partit</span><br><span class="line">ef00 EFI System            ef01 MBR partition scheme  ef02 BIOS boot partition</span><br><span class="line">f800 Ceph OSD              f801 Ceph dm-crypt OSD     f802 Ceph journal        </span><br><span class="line">f803 Ceph dm-crypt journa  f804 Ceph disk in creatio  f805 Ceph dm-crypt disk i</span><br><span class="line">fb00 VMWare VMFS           fb01 VMWare reserved       fc00 VMWare kcore crash p</span><br><span class="line">fd00 Linux RAID</span><br></pre></td></tr></table></figure>
<h1 id="刻录iso镜像到U盘"><a href="#刻录iso镜像到U盘" class="headerlink" title="刻录iso镜像到U盘"></a>刻录iso镜像到U盘</h1><p><strong>必须先change a partition’s type code -&gt;EF00</strong>再 ‘dd’</p>
<h1 id="Example-disk’s-GPT"><a href="#Example-disk’s-GPT" class="headerlink" title="Example disk’s GPT"></a>Example disk’s GPT</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Disk /dev/sda: 468862128 sectors, 223.6 GiB</span><br><span class="line">Logical sector size: 512 bytes</span><br><span class="line">Disk identifier (GUID): 4F2B2F55-48AC-4CC8-A745-605404C6BDF7</span><br><span class="line">Partition table holds up to 128 entries</span><br><span class="line">First usable sector is 34, last usable sector is 468862094</span><br><span class="line">Partitions will be aligned on 2048-sector boundaries</span><br><span class="line">Total free space is 13745 sectors (6.7 MiB)</span><br><span class="line"></span><br><span class="line">Number  Start (sector)    End (sector)  Size       Code  Name</span><br><span class="line">   1            4096          204799   98.0 MiB    EF00  EFI system partition</span><br><span class="line">   2          208896       229904940   109.5 GiB   0700  Basic data partition</span><br><span class="line">   3       229906432       230897663   484.0 MiB   2700  </span><br><span class="line">   4       230899712       426919054   93.5 GiB    0700  Basic data partition</span><br><span class="line">   5       426919936       427309055   190.0 MiB   8300  </span><br><span class="line">   6       427309056       428285951   477.0 MiB   8200  </span><br><span class="line">   7       428285952       468860927   19.3 GiB    8300</span><br></pre></td></tr></table></figure>
<h1 id="details-infomation-on-a-partition"><a href="#details-infomation-on-a-partition" class="headerlink" title="details infomation on a partition"></a>details infomation on a partition</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Partition GUID code: C12A7328-F81F-11D2-BA4B-00A0C93EC93B (EFI System)</span><br><span class="line">Partition unique GUID: 00772A36-9423-43A9-B1A1-0BE031102BFB</span><br><span class="line">First sector: 4096 (at 2.0 MiB)</span><br><span class="line">Last sector: 204799 (at 100.0 MiB)</span><br><span class="line">Partition size: 200704 sectors (98.0 MiB)</span><br><span class="line">Attribute flags: 0000000000000000</span><br><span class="line">Partition name: &apos;EFI system partition&apos;</span><br></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;GPT 磁盘分区表：&lt;/p&gt;
&lt;p&gt;LBA – Logical Block Adress&lt;/p&gt;
&lt;p&gt;size of  LBA :512bytes(0.5KB)&lt;/p&gt;
&lt;p&gt;LBA0~LBA33: GUID partition table(GPT)&lt;/p&gt;
&lt;p&gt;LBA(end-33)~LBA(end): Backup GPT&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://ygcaicn.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://ygcaicn.github.io/tags/Linux/"/>
    
      <category term="GPT" scheme="https://ygcaicn.github.io/tags/GPT/"/>
    
  </entry>
  
  <entry>
    <title>Python3 实现代理IP,伪装IP</title>
    <link href="https://ygcaicn.github.io/python3/proxy-python3.html"/>
    <id>https://ygcaicn.github.io/python3/proxy-python3.html</id>
    <published>2017-03-18T18:43:36.000Z</published>
    <updated>2018-01-15T13:21:48.246Z</updated>
    
    <content type="html"><![CDATA[<p>实现抓取代理服务器，建立ipPool,伪装外网ip</p>
<a id="more"></a>
<h1 id="Proxy"><a href="#Proxy" class="headerlink" title="Proxy"></a>Proxy</h1><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> gzip</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ungzip</span><span class="params">(data)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:        <span class="comment"># try decompress</span></span><br><span class="line">        print(<span class="string">'compressing.....'</span>)</span><br><span class="line">        data = gzip.decompress(data)</span><br><span class="line">        print(<span class="string">'dcompress done!'</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        print(<span class="string">'without compress!'</span>)</span><br><span class="line">    <span class="keyword">return</span> data</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Proxy</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,url=<span class="string">'http://www.xicidaili.com/'</span>)</span>:</span></span><br><span class="line">        self.ipPool=[]</span><br><span class="line">        self.url=url</span><br><span class="line">        self.getipPool();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getipPool</span><span class="params">(self)</span>:</span>     </span><br><span class="line">        <span class="comment">#get proxy Ip address pool from http://www.xicidaili.com/</span></span><br><span class="line">        <span class="comment"># Base URL being accessed</span></span><br><span class="line">        headers=&#123;</span><br><span class="line">        <span class="string">'Connection'</span>: <span class="string">'keep-alive'</span>,</span><br><span class="line">        <span class="string">'Cache-Control'</span>: <span class="string">'max-age=0'</span>,</span><br><span class="line">        <span class="string">'Upgrade-Insecure-Requests'</span>: <span class="string">'1'</span>,</span><br><span class="line">        <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36'</span>,</span><br><span class="line">        <span class="string">'Accept'</span>: <span class="string">'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8'</span>,</span><br><span class="line">        <span class="string">'Accept-Encoding'</span>: <span class="string">'gzip, deflate, sdch'</span>,</span><br><span class="line">        <span class="string">'Accept-Language'</span>: <span class="string">'zh-CN,zh;q=0.8,en;q=0.6'</span>,</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"># Make a GET request and read the response</span></span><br><span class="line">        req = urllib.request.Request(self.url,headers=headers)</span><br><span class="line">        response = urllib.request.urlopen(req)</span><br><span class="line">        res_bytes = ungzip(response.read())</span><br><span class="line">        html_str = res_bytes.decode(encoding=<span class="string">'utf-8'</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># the pattern(Regular expression) is depend on the response data from your url</span></span><br><span class="line">        pattern = <span class="string">r'\s*&lt;td&gt;(((2[0-4]\d|25[0-5]|[01]?\d\d?)\.)&#123;3&#125;(2[0-4]\d|25[0-5]|[01]?\d\d?))&lt;/td&gt;\s*\n\s*&lt;td&gt;(\d&#123;2,5&#125;)&lt;/td&gt;\s*\n\s*&lt;td&gt;(\w+)&lt;/td&gt;\s*\n\s*&lt;td class="country"&gt;透明&lt;/td&gt;\s*\n\s*&lt;td&gt;(HTTP|HTTPS)&lt;/td&gt;'</span></span><br><span class="line">        regex = re.compile(pattern)</span><br><span class="line">        s = regex.findall(html_str)</span><br><span class="line">        <span class="comment">#s = [('221.204.103.145', '103.', '103', '145', '9797', '山西太原', 'HTTP'), ...]</span></span><br><span class="line">        <span class="keyword">for</span> host <span class="keyword">in</span> s:</span><br><span class="line">            hostdict = &#123;<span class="string">'host'</span>:host[<span class="number">0</span>],<span class="string">'port'</span>:host[<span class="number">4</span>],<span class="string">'country'</span>:host[<span class="number">5</span>],<span class="string">'protocol'</span>:host[<span class="number">-1</span>]&#125;</span><br><span class="line">            self.ipPool.append(hostdict)</span><br><span class="line">        <span class="keyword">return</span> self.ipPool</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">startProxy</span><span class="params">(self)</span>:</span></span><br><span class="line"></span><br><span class="line">        self.printIpPool();</span><br><span class="line">        host_num = input(<span class="string">'Please select a host:'</span>)</span><br><span class="line">        host_num = int(host_num.strip())        </span><br><span class="line">        proxy = &#123;<span class="string">'http'</span>:self.ipPool[host_num][<span class="string">'host'</span>]+<span class="string">':'</span>+self.ipPool[host_num][<span class="string">'port'</span>]&#125;</span><br><span class="line">        <span class="comment">#creat ProxyHandler</span></span><br><span class="line">        proxy_support = urllib.request.ProxyHandler(proxy)</span><br><span class="line">        <span class="comment">#creat Opener</span></span><br><span class="line">        opener = urllib.request.build_opener(proxy_support)</span><br><span class="line">        <span class="comment">#creat User Angent</span></span><br><span class="line">        <span class="comment">#opener.addheaders = [('User-Agent','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36')]</span></span><br><span class="line">        <span class="comment">#install OPener</span></span><br><span class="line">        urllib.request.install_opener(opener)</span><br><span class="line">        <span class="comment">#start Opener</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">printIpPool</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(self.ipPool)):</span><br><span class="line">            print(i,<span class="string">":"</span>,self.ipPool[i])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line"></span><br><span class="line">    url = <span class="string">"http://ip.cn/"</span></span><br><span class="line">    headers=&#123;</span><br><span class="line">    <span class="string">'Connection'</span>: <span class="string">'keep-alive'</span>,</span><br><span class="line">    <span class="string">'Cache-Control'</span>: <span class="string">'max-age=0'</span>,</span><br><span class="line">    <span class="string">'Upgrade-Insecure-Requests'</span>: <span class="string">'1'</span>,</span><br><span class="line">    <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36'</span>,</span><br><span class="line">    <span class="string">'Accept'</span>: <span class="string">'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8'</span>,</span><br><span class="line">    <span class="string">'Accept-Encoding'</span>: <span class="string">'gzip, deflate, sdch'</span>,</span><br><span class="line">    <span class="string">'Accept-Language'</span>: <span class="string">'zh-CN,zh;q=0.8,en;q=0.6'</span>,</span><br><span class="line">    <span class="comment">#'Cookie': 'UM_distinctid=15ae0d3744b437-0ebcb4eece40e4-57e1b3c-100200-15ae0d3744c42b; CNZZDATA123770=cnzz_eid%3D646344926-1484393339-%26ntime%3D1489830206'</span></span><br><span class="line">    &#125;</span><br><span class="line">    proxyhost = Proxy()</span><br><span class="line">    proxyhost.startProxy()</span><br><span class="line"></span><br><span class="line">    req = urllib.request.Request(url,headers=headers)</span><br><span class="line">    response = urllib.request.urlopen(req)</span><br><span class="line">    res_bytes = ungzip(response.read())</span><br><span class="line"></span><br><span class="line">    html_str = res_bytes.decode(encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">    file_html = open(<span class="string">"proxy.html"</span>,<span class="string">'w'</span>,encoding = <span class="string">"utf-8"</span>)</span><br><span class="line">    file_html.write(html_str)</span><br><span class="line">    file_html.close()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># the pattern(Regular expression) is depend on the response data from your url</span></span><br><span class="line">    <span class="comment">#pattern = r'((\d&#123;1,3&#125;\.)&#123;3&#125;\d&#123;1,3&#125;)'</span></span><br><span class="line">    pattern = <span class="string">r'&lt;code&gt;(((2[0-4]\d|25[0-5]|[01]?\d\d?)\.)&#123;3&#125;(2[0-4]\d|25[0-5]|[01]?\d\d?))&lt;/code&gt;'</span></span><br><span class="line"></span><br><span class="line">    pattern2 = <span class="string">r'所在地理位置：&lt;code&gt;([\s\w]*)&lt;/code&gt;'</span></span><br><span class="line">    my_locate = re.findall(pattern2,html_str)</span><br><span class="line">    my_locate = my_locate[<span class="number">0</span>]</span><br><span class="line">    my_ip = re.findall(pattern,html_str)</span><br><span class="line">    my_ip = my_ip[<span class="number">0</span>][<span class="number">0</span>]</span><br><span class="line">    <span class="comment">#print(html_str)</span></span><br><span class="line">    print(<span class="string">'my locate:'</span>,my_locate)</span><br><span class="line">    print(<span class="string">'my ip:'</span>,my_ip)</span><br></pre></td></tr></table></figure>
<h1 id="get-proxy-Ip-address-pool-from-http-www-xicidaili-com"><a href="#get-proxy-Ip-address-pool-from-http-www-xicidaili-com" class="headerlink" title="get proxy Ip address pool from http://www.xicidaili.com/"></a>get proxy Ip address pool from <a href="http://www.xicidaili.com/" target="_blank" rel="noopener">http://www.xicidaili.com/</a></h1><p>直接get得到主页以后，主要是写正则表达式，match得到我们需要的数据。</p>
<p>得到的html数据：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">"subtitle"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span> <span class="attr">class</span>=<span class="string">"country"</span>&gt;</span>国家<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span>代理IP地址<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span>端口<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span> <span class="attr">width</span>=<span class="string">"20%"</span>&gt;</span>服务器地址<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span> <span class="attr">class</span>=<span class="string">"country"</span>&gt;</span>是否匿名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span>类型<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">th</span> <span class="attr">width</span>=<span class="string">"11%"</span>&gt;</span>存活时间<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span> <span class="attr">width</span>=<span class="string">"12%"</span>&gt;</span>验证时间<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">"odd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"country"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"http://fs.xicidaili.com/images/flag/cn.png"</span> <span class="attr">alt</span>=<span class="string">"Cn"</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>115.231.175.68<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>8081<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>浙江杭州<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"country"</span>&gt;</span>透明<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>HTTP<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>74天<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>不到1分钟<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"country"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"http://fs.xicidaili.com/images/flag/cn.png"</span> <span class="attr">alt</span>=<span class="string">"Cn"</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>220.191.1.130<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>8118<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>浙江杭州<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"country"</span>&gt;</span>透明<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>HTTP<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>16小时<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>1分钟前<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">"odd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"country"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"http://fs.xicidaili.com/images/flag/cn.png"</span> <span class="attr">alt</span>=<span class="string">"Cn"</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>124.88.67.54<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>80<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>新疆乌鲁木齐<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"country"</span>&gt;</span>透明<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>HTTP<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>723天<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>13分钟前<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"country"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"http://fs.xicidaili.com/images/flag/cn.png"</span> <span class="attr">alt</span>=<span class="string">"Cn"</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>58.221.59.210<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>63000<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>江苏南通<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"country"</span>&gt;</span>透明<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>HTTP<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>362天<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>1小时前<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="http://i.imgur.com/7h07pqS.png" alt="Imgur"></p>
<p>我们这里匹配出主机ip（host），port，country和protocol，利用<a href="http://deerchao.net/" target="_blank" rel="noopener">deerchao的正则表达式测试器</a>很设计出下面的正则表达式：</p>
<p><code>#the pattern(Regular expression) is depend on the response data from your url</code></p>
<p><code>pattern = r&#39;\s*&lt;td&gt;(((2[0-4]\d|25[0-5]|[01]?\d\d?)\.){3}(2[0-4]\d|25[0-5]|[01]?\d\d?))&lt;/td&gt;\s*\n\s*&lt;td&gt;(\d{2,5})&lt;/td&gt;\s*\n\s*&lt;td&gt;(\w+)&lt;/td&gt;\s*\n\s*&lt;td class=&quot;country&quot;&gt;透明&lt;/td&gt;\s*\n\s*&lt;td&gt;(HTTP|HTTPS)&lt;/td&gt;&#39;</code></p>
<p>最终的效果：<br>    运行程序，会提示我们选择一个代理服务器，程序然后会去访问<a href="http://ip.cn" target="_blank" rel="noopener">ip.cn</a>,通过返回的数据我们解析得到外网IP，会发现这和我们选择的代理服务器信息是一致的而不是我们自己的外网地址。ip伪装成功。</p>
<p><img src="http://i.imgur.com/XIxBJUK.png" alt="Imgur"></p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>正则表达式：<a href="http://deerchao.net/tutorials/regex/regex.htm" target="_blank" rel="noopener">http://deerchao.net/tutorials/regex/regex.htm</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;实现抓取代理服务器，建立ipPool,伪装外网ip&lt;/p&gt;
    
    </summary>
    
      <category term="python3" scheme="https://ygcaicn.github.io/categories/python3/"/>
    
    
      <category term="Python3" scheme="https://ygcaicn.github.io/tags/Python3/"/>
    
      <category term="正则表达式" scheme="https://ygcaicn.github.io/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
      <category term="IP伪装" scheme="https://ygcaicn.github.io/tags/IP%E4%BC%AA%E8%A3%85/"/>
    
      <category term="代理" scheme="https://ygcaicn.github.io/tags/%E4%BB%A3%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>LEDE-Mt7620a-newifiY1</title>
    <link href="https://ygcaicn.github.io/%E5%B5%8C%E5%85%A5%E5%BC%8F/LEDE-Mt7620a-newifiY1.html"/>
    <id>https://ygcaicn.github.io/嵌入式/LEDE-Mt7620a-newifiY1.html</id>
    <published>2017-03-16T15:56:12.000Z</published>
    <updated>2018-01-15T10:22:08.174Z</updated>
    
    <content type="html"><![CDATA[<p>LEDE:<br><a href="https://downloads.lede-project.org" target="_blank" rel="noopener">https://downloads.lede-project.org</a></p>
<p>LEDE Packages(mipsel_24kc):<a href="http://openwrt-dist.sourceforge.net/packages/LEDE/base/mipsel_24kc/" target="_blank" rel="noopener">http://openwrt-dist.sourceforge.net/packages/LEDE/base/mipsel_24kc/</a></p>
<a id="more"></a>
<hr>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">root@LEDE:/tmp# opkg install libudns_0.4-1_mipsel_24kc.ipk</span><br><span class="line">Installing libudns (0.4-1) to root...</span><br><span class="line">Configuring libudns.</span><br><span class="line">root@LEDE:/tmp# opkg install shadowsocks-libev_3.0.3-1_mipsel_24kc.ipk luci-app-shadowsocks_1.6.2-1_all.ipk</span><br><span class="line">Installing shadowsocks-libev (3.0.3-1) to root...</span><br><span class="line">Installing libev (4.22-1) to root...</span><br><span class="line">Downloading http://downloads.lede-project.org/releases/17.01.0/packages/mipsel_24kc/packages/libev_4.22-1_mipsel_24kc.ipk</span><br><span class="line">Installing libpcre (8.40-1) to root...</span><br><span class="line">Downloading http://downloads.lede-project.org/releases/17.01.0/packages/mipsel_24kc/packages/libpcre_8.40-1_mipsel_24kc.ipk</span><br><span class="line">Installing libsodium (1.0.11-2) to root...</span><br><span class="line">Downloading http://downloads.lede-project.org/releases/17.01.0/packages/mipsel_24kc/packages/libsodium_1.0.11-2_mipsel_24kc.ipk</span><br><span class="line">Installing libmbedtls (2.4.0-2) to root...</span><br><span class="line">Downloading http://downloads.lede-project.org/releases/17.01.0/packages/mipsel_24kc/base/libmbedtls_2.4.0-2_mipsel_24kc.ipk</span><br><span class="line">Installing luci-app-shadowsocks (1.6.2-1) to root...</span><br><span class="line">Configuring libev.</span><br><span class="line">Configuring libpcre.</span><br><span class="line">Configuring libsodium.</span><br><span class="line">Configuring libmbedtls.</span><br><span class="line">Configuring shadowsocks-libev.</span><br><span class="line">Configuring luci-app-shadowsocks.</span><br></pre></td></tr></table></figure>
<hr>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@LEDE:/tmp# opkg install ChinaDNS_1.3.2-4_mipsel_24kc.ipk luci-app-chinadns_1.6.0-1_all.ipk</span><br><span class="line">Installing ChinaDNS (1.3.2-4) to root...</span><br><span class="line">Installing luci-app-chinadns (1.6.0-1) to root...</span><br><span class="line">Configuring ChinaDNS.</span><br><span class="line">Configuring luci-app-chinadns.</span><br></pre></td></tr></table></figure>
<hr>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@LEDE:/tmp# opkg install dns-forwarder_1.1.1-1_mipsel_24kc.ipk luci-app-dns-forwarder_1.6.0-1_all.ipk</span><br><span class="line">Installing dns-forwarder (1.1.1-1) to root...</span><br><span class="line">Installing luci-app-dns-forwarder (1.6.0-1) to root...</span><br><span class="line">Configuring dns-forwarder.</span><br><span class="line">Configuring luci-app-dns-forwarder.</span><br></pre></td></tr></table></figure>
<hr>
<h1 id="Kcptun-Shadowsocks"><a href="#Kcptun-Shadowsocks" class="headerlink" title="Kcptun+Shadowsocks"></a>Kcptun+Shadowsocks</h1><p>open source Project：</p>
<ul>
<li>openwrt kcptun <a href="https://github.com/bettermanbao/openwrt-kcptun" target="_blank" rel="noopener">https://github.com/bettermanbao/openwrt-kcptun</a></li>
<li>More details please refer to <a href="https://github.com/xtaci/kcptun" target="_blank" rel="noopener">https://github.com/xtaci/kcptun</a></li>
<li>luci-app-kcptun please refer to <a href="https://github.com/kuoruan/luci-app-kcptun" target="_blank" rel="noopener">https://github.com/kuoruan/luci-app-kcptun</a></li>
<li>GUI for KCPTun windows client <a href="https://github.com/dfdragon/kcptun_gclient" target="_blank" rel="noopener">https://github.com/dfdragon/kcptun_gclient</a></li>
<li>Kcptun for Android <a href="https://github.com/shadowsocks/kcptun-android" target="_blank" rel="noopener">https://github.com/shadowsocks/kcptun-android</a></li>
</ul>
<blockquote>
<p>两端参数必须一致的有:</p>
<p>datashard –前向纠错<br>  parityshard –前向纠错\<br>  nocomp –压缩\<br>  key –密钥\<br>  crypt –加密算法\<br>  其余为两边可独立设定的参数</p>
</blockquote>
<hr>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nocomp;mtu=1200;parityshard=0;key=waggywn@10000 dscp=46;mode=fast;crypt=salsa20;sndwnd=1024;rcvwnd=2048</span><br></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;LEDE:&lt;br&gt;&lt;a href=&quot;https://downloads.lede-project.org&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://downloads.lede-project.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;LEDE Packages(mipsel_24kc):&lt;a href=&quot;http://openwrt-dist.sourceforge.net/packages/LEDE/base/mipsel_24kc/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://openwrt-dist.sourceforge.net/packages/LEDE/base/mipsel_24kc/&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="嵌入式" scheme="https://ygcaicn.github.io/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
    
    
      <category term="Linux" scheme="https://ygcaicn.github.io/tags/Linux/"/>
    
      <category term="openwrt" scheme="https://ygcaicn.github.io/tags/openwrt/"/>
    
      <category term="路由器" scheme="https://ygcaicn.github.io/tags/%E8%B7%AF%E7%94%B1%E5%99%A8/"/>
    
      <category term="LEDE" scheme="https://ygcaicn.github.io/tags/LEDE/"/>
    
  </entry>
  
</feed>

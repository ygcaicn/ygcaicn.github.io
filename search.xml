<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[build-live-ubuntu --2]]></title>
      <url>https://ygcaicn.github.io/Linux/build-live-ubuntu2.html</url>
      <content type="html"><![CDATA[<p>在上次介绍了一些基础的常用软件之后决定进一步探索！在知乎找到了一篇很棒的讨论，链接如下：<br><a href="https://www.zhihu.com/question/19811112" target="_blank" rel="external">https://www.zhihu.com/question/19811112</a>通过实践找出了我比较满意的软件。<br>由于本人电脑只有240G的固盘，电脑性能一般，因此对与内存和硬盘都是相当的奢侈，能原配的就不去搞些华丽胡哨的<br>东西，本着能简单绝不复杂，能默认绝不修改的原则去测试一些软件，以及一些脚本，特此记录以备后查！</p>
<a id="more"></a>
<h1 id="No-1-Guake-Terminal"><a href="#No-1-Guake-Terminal" class="headerlink" title="No.1 Guake Terminal"></a>No.1 Guake Terminal</h1><p>这个名字有点意思，‘挂科’Terminal。。。功能很简单快速打开Terminal，或许你认为Ctrl+Alt+T（或者自己设置一个快捷键）去开Terminal也是一件很简单的事。没错我以前也是这么认为的，但是遇到了Guake后我改变了看法，特别是需要开多个Terminal的时候（高手都不需要开多个，一个都能全搞定！）系统的Terminal显的不方便，还有就是临时开一个<br>Terminal的时候很可能用完就不去关然后在那积攒了很多。Guake Terminal就是来解决这些问题的！一键弹出（默认F12），失去焦点自动关闭，可以开启多个Tab，可以自定义Appearance。<br><img src="../img/82bdf788-4c0c-4238-a94c-bf6e7e2e2106.png" alt="82bdf788-4c0c-4238-a94c-bf6e7e2e2106"></p>
<h1 id="No-2-bash-aliases"><a href="#No-2-bash-aliases" class="headerlink" title="No.2 ~/.bash_aliases"></a>No.2 ~/.bash_aliases</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">m_basedir=&apos;/media/jachin/Software&apos;</div><div class="line">#cd</div><div class="line">alias pydir=&apos;cd $&#123;m_basedir&#125;/python&apos;</div><div class="line">alias soft=&apos;cd $&#123;m_basedir&#125;&apos;</div><div class="line">alias gitdir=&apos;cd $&#123;m_basedir&#125;/Github&apos;</div><div class="line"></div><div class="line"></div><div class="line">#python3 -m venv</div><div class="line">alias pyvenv=&apos;python3 -m venv&apos;</div><div class="line">alias pyenv=&apos;pydir &amp;&amp; source ./ENV/bin/activate&apos;</div><div class="line"></div><div class="line">#atom</div><div class="line">alias atoma=&apos;atom -a&apos;</div><div class="line"></div><div class="line">#blog</div><div class="line">alias blogdir=&apos;cd $&#123;m_basedir&#125;/Github/blog-hexo&apos;</div><div class="line">alias blog=&apos;pushd $&#123;m_basedir&#125;/Github/blog-hexo &amp;&amp; atom -a ./  &amp;&amp; popd&apos;</div><div class="line">alias blogd=&apos;pushd $&#123;m_basedir&#125;/Github/blog-hexo &amp;&amp; hexo d -g  &amp;&amp; popd&apos;</div><div class="line">alias blogs=&apos;pushd $&#123;m_basedir&#125;/Github/blog-hexo &amp;&amp; hexo s -g  &amp;&amp; popd&apos;</div></pre></td></tr></table></figure>
<p>配置后我只要F12 blog便用atom打开了我的blog目录，写完之后只要blogd就会执行上传！真的很方便！还可以写很多的快捷命令，搭配GuakeTerminal简直完美！有点像win下Listary。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">pydir #进入python的目录</div><div class="line">pyenv #进入python的目录并进入venv</div><div class="line">atoma #以append的方式将目录添加到atom中</div><div class="line"></div><div class="line">blogdir #进入到blog的目录</div><div class="line">blog    #用atom打开blog目录</div><div class="line">blogd   #上传</div><div class="line">blogs   #本地测试</div></pre></td></tr></table></figure>
<h1 id="No-3-Draw-io"><a href="#No-3-Draw-io" class="headerlink" title="No.3 Draw.io"></a>No.3 <a href="https://www.draw.io/" target="_blank" rel="external">Draw.io</a></h1><p>有很多的模板可以使用，支持存储在本地，Github，google drive等，在线版的viso！</p>
<p><img src="../img/6fd4b766-2a6b-42a9-b27e-1536f8d993c6.png" alt="6fd4b766-2a6b-42a9-b27e-1536f8d993c6"></p>
<h1 id="No-4-有道云笔记"><a href="#No-4-有道云笔记" class="headerlink" title="No.4 有道云笔记"></a>No.4 有道云笔记</h1><p>网易一向很良心，不像某讯。我以前是大象的忠实粉丝，在一次有道云笔记更新以后（支持新的网页版，和markdow的那次更新）我开始慢慢转移到了有道云！markdown，和网页版凭这两点就选择它了！因为我又能少装一个软件了。<br><img src="../img/c1c639a7-7a2a-4998-81cd-3f78055eba5b.png" alt="c1c639a7-7a2a-4998-81cd-3f78055eba5b"></p>
<h1 id="每天进步一点点"><a href="#每天进步一点点" class="headerlink" title="每天进步一点点!!!"></a>每天进步一点点!!!</h1><h2 id="impossible-is-I’m-possible"><a href="#impossible-is-I’m-possible" class="headerlink" title="impossible is I’m possible!!!"></a><strong>impossible is I’m possible!!!</strong></h2>]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[build-live-ubuntu打造日常使用Ubuntu]]></title>
      <url>https://ygcaicn.github.io/Linux/build-live-ubuntu.html</url>
      <content type="html"><![CDATA[<p>转战Linux后尝试过不少的发行版Mint，Deepin等，换来换去最后还是换成了ubuntu。<br>Ubuntu17.10后回归Gnome桌面，真的越来越棒了！当然选择Linux作为日常live系统最大<br>的问题就是缺少很多日常必须的软件，比如QQ，office，还有一些音乐视频等娱乐软件。<br>本文带你打造一个完美的能够满足日常娱乐与学习的Linux系统！发行版为：Ubuntu17.10</p>
<a id="more"></a>
<h2 id="美图"><a href="#美图" class="headerlink" title="美图"></a>美图</h2><p>几张系统美图：<br><img src="../img/b207a505-34c5-4236-898d-21de1c7dd91e.png" alt="b207a505-34c5-4236-898d-21de1c7dd91e"><br><img src="../img/e0a9cda0-3cac-4dd4-88cb-2e201d649880.png" alt="e0a9cda0-3cac-4dd4-88cb-2e201d649880"><br><img src="../img/a3f9ed8c-efba-423d-a62d-420514282260.png" alt="a3f9ed8c-efba-423d-a62d-420514282260"><br><img src="../img/731747dc-79eb-42c0-bf02-bb98602a463a.png" alt="731747dc-79eb-42c0-bf02-bb98602a463a"><br><img src="../img/98343370-eb6a-4b11-9fe2-e0c558bf1e0d.png" alt="98343370-eb6a-4b11-9fe2-e0c558bf1e0d"></p>
<h2 id="Step1-浏览器Chrome-amp-FireFox"><a href="#Step1-浏览器Chrome-amp-FireFox" class="headerlink" title="Step1.浏览器Chrome&amp;FireFox"></a>Step1.浏览器Chrome&amp;FireFox</h2><p>浏览器是日常使用的top1。在Ubuntu下也有很多浏览器可以选择，我的搭配为Chrome为主，FireFox为辅。选择Chrome后可以在Chrome的基础上安装很多的Chrome App。</p>
<h3 id="Chrome"><a href="#Chrome" class="headerlink" title="Chrome"></a>Chrome</h3><p>Chrome主页：<a href="https://www.google.com/chrome/browser/desktop/index.html#" target="_blank" rel="external">https://www.google.com/chrome/browser/desktop/index.html#</a><br>（需要梯子自寻）</p>
<p>Chrome安装很简单在上面的链接中下着二进制包安装即可！</p>
<p><img src="../img/62c4e42a-5a98-4f11-921b-1954821b3451.png" alt="62c4e42a-5a98-4f11-921b-1954821b3451"></p>
<h3 id="FireFox"><a href="#FireFox" class="headerlink" title="FireFox"></a>FireFox</h3><p>Firefox主页：<a href="https://www.mozilla.org/en-US/firefox/new/" target="_blank" rel="external">https://www.mozilla.org/en-US/firefox/new/</a><br><img src="../img/d4329e63-1f7f-4863-8733-8309e37a8eb1.png" alt="d4329e63-1f7f-4863-8733-8309e37a8eb1"></p>
<h2 id="Step2-编辑器Atom"><a href="#Step2-编辑器Atom" class="headerlink" title="Step2. 编辑器Atom"></a>Step2. 编辑器<a href="https://atom.io" target="_blank" rel="external">Atom</a></h2><p>Atom主页：<a href="https://atom.io" target="_blank" rel="external">https://atom.io</a><br>程序员最不可缺少的就是一个好的编辑器。Atom是万能的，开源，有很多的扩展包可以使用。</p>
<p><img src="../img/96878ad6-346d-43a3-a1b7-7851683c8219.png" alt="96878ad6-346d-43a3-a1b7-7851683c8219"></p>
<p>必须扩展包：</p>
<h3 id="Sublime-Style-Column-Celection"><a href="#Sublime-Style-Column-Celection" class="headerlink" title="Sublime-Style-Column-Celection"></a>Sublime-Style-Column-Celection</h3><p>区块编辑支持<br><img src="../img/d24863a2-5697-411f-b9ad-35c032a2467a.png" alt="d24863a2-5697-411f-b9ad-35c032a2467a"><br><img src="../img/e319e32b-da3b-4814-b514-68f79f829e35.png" alt="e319e32b-da3b-4814-b514-68f79f829e35"></p>
<h3 id="gcc-make-run"><a href="#gcc-make-run" class="headerlink" title="gcc-make-run"></a>gcc-make-run</h3><p>c文件快速编译运行<br><img src="../img/93120020-fa27-445e-a77e-de0d38df843a.png" alt="93120020-fa27-445e-a77e-de0d38df843a"></p>
<h3 id="markdown-image-paste"><a href="#markdown-image-paste" class="headerlink" title="markdown-image-paste"></a>markdown-image-paste</h3><p>最棒的插件之一！！！在md文件编辑中，截图以后直接打出文件名然后Ctrl+V将图片存到配置好的目录中，并生成Markdow 图片链接。<br><img src="../img/719a6b00-d384-4b08-8656-85c24e4b3444.png" alt="719a6b00-d384-4b08-8656-85c24e4b3444"></p>
<h3 id="uuidgen"><a href="#uuidgen" class="headerlink" title="uuidgen"></a>uuidgen</h3><p>在粘贴md的图片时总是要起文件名也是一件麻烦的事，还要保证不重复。uuidgen完美解决这个问题！只要快捷键Alt+Commend+G即生成一个uuid。保证不会重复！</p>
<p><img src="../img/3cd28274-9a9c-4f1b-8fee-0594c307f9c1.png" alt="3cd28274-9a9c-4f1b-8fee-0594c307f9c1"></p>
<h3 id="atom-python-run"><a href="#atom-python-run" class="headerlink" title="atom-python-run"></a>atom-python-run</h3><p>快速python运行！<br><img src="../img/315006bb-9155-4c78-a262-7fbd3e319992.png" alt="315006bb-9155-4c78-a262-7fbd3e319992"></p>
<h3 id="markdown-preview-plus"><a href="#markdown-preview-plus" class="headerlink" title="markdown-preview-plus"></a>markdown-preview-plus</h3><p> markdown预览，支持latex公式嵌入。<br><img src="../img/f291e0ac-04ec-433b-a753-8bb83c3bd226.png" alt="f291e0ac-04ec-433b-a753-8bb83c3bd226"></p>
<h3 id="markdown-scroll-sync"><a href="#markdown-scroll-sync" class="headerlink" title="markdown-scroll-sync"></a>markdown-scroll-sync</h3><p> markdown预览时同步滚动。<br><img src="../img/6cee2b03-1e20-498c-82a1-9f34a5a55cd0.png" alt="6cee2b03-1e20-498c-82a1-9f34a5a55cd0"></p>
<h2 id="Step3-音乐"><a href="#Step3-音乐" class="headerlink" title="Step3.音乐"></a>Step3.音乐</h2><p>听歌你可以选择网页：</p>
<p><a href="http://music.163.com" target="_blank" rel="external">http://music.163.com</a></p>
<p><a href="https://youtube.com" target="_blank" rel="external">https://youtube.com</a></p>
<p>但是你有更好的选择，就是Chrome app, Netease Music!</p>
<p><img src="../img/c454aefc-269a-4501-8c0f-1c06021023c5.png" alt="c454aefc-269a-4501-8c0f-1c06021023c5"></p>
<p><img src="../img/d56fbec3-d2b5-4262-afbe-41e847a70b36.png" alt="d56fbec3-d2b5-4262-afbe-41e847a70b36"></p>
<p>chrome app的启动是不依赖与chrome的界面的，因此你完全可以在不启动chrome的情况下直接启动music！</p>
<h2 id="Step4-微信（可作为QQ的替代品）"><a href="#Step4-微信（可作为QQ的替代品）" class="headerlink" title="Step4.微信（可作为QQ的替代品）"></a>Step4.微信（可作为QQ的替代品）</h2><p>同样chrome app中安装Wechat，其实就是网页版的wechat封装成单独的app可以独立启动！这大概是我对微信刮目相看的唯一理由了。。QQ也是有chrome app的，但是选择wechat而不选择QQ是因为wechat的功能要强大的多！比如支持与好友或者手机互传文件！！！！对的你没看错是文件！！当然照片也是可以的！并且照片是支持截图后Ctrl+v直接粘贴发送的，是不是很方便。然而QQ只能发个表情包里面的表情。。</p>
<p><img src="../img/53a62b2f-2c64-4531-b933-e66cab438c64.jpg" alt="53a62b2f-2c64-4531-b933-e66cab438c64"></p>
<h2 id="Step5-office系列"><a href="#Step5-office系列" class="headerlink" title="Step5.office系列"></a>Step5.office系列</h2><p>office系列的软件有自带的liberate office，效果嘛，，谁用谁知道！….支持国产我们选择wps，完美兼容Mxx公司的几大坨。</p>
<p>wps 主页：<a href="http://wps-community.org/download.html" target="_blank" rel="external">http://wps-community.org/download.html</a></p>
<p><img src="../img/0dab9e22-085d-4162-83f7-20a417430d75.png" alt="0dab9e22-085d-4162-83f7-20a417430d75"><br><img src="../img/4152da53-40f7-4430-ad4b-2533323b3012.png" alt="4152da53-40f7-4430-ad4b-2533323b3012"><br><img src="../img/d3216ba8-b725-457e-9da3-dbd507444c6f.png" alt="d3216ba8-b725-457e-9da3-dbd507444c6f"></p>
<blockquote>
<p>Download <a href="http://ftp.debian.org/debian/pool/main/libp/libpng/libpng12-0_1.2.50-2+deb8u3_amd64.deb" target="_blank" rel="external">libpng12-0_1.2.50-2+deb8u2_amd64.deb</a>. If you use a 32 bit system, download the 32 bit deb file.<br>Install the package and then install wps-office.</p>
</blockquote>
<h2 id="Step6-Foxit-Reader"><a href="#Step6-Foxit-Reader" class="headerlink" title="Step6.Foxit Reader"></a>Step6.Foxit Reader</h2><p>Foxit Reader完美支持Linux：</p>
<p>Foxit 主页：<a href="https://www.foxitsoftware.com/pdf-reader/" target="_blank" rel="external">https://www.foxitsoftware.com/pdf-reader/</a></p>
<p><img src="../img/387400dc-1467-4222-b56b-74e966d15e48.png" alt="387400dc-1467-4222-b56b-74e966d15e48"></p>
<h2 id="Step7-视频播放器"><a href="#Step7-视频播放器" class="headerlink" title="Step7.视频播放器"></a>Step7.视频播放器</h2><p>SMplayer</p>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Ubuntu17.10-ChineseInputContexts]]></title>
      <url>https://ygcaicn.github.io/Linux/Ubuntu-ChineseInputContexts.html</url>
      <content type="html"><![CDATA[<p>unbuntu下一些常用的软件无法输入中文，这使人很不爽，经过一段时间的努力基本解决了系统中文输入以及常用软件输入中文的问题！<br>环境为Ubuntu17.10 （17.04同样适用）。<br>常用软件包括：</p>
<ul>
<li>Atom</li>
<li>Wps</li>
<li>QtCreator</li>
</ul>
<a id="more"></a>
<h2 id="系统中文输入"><a href="#系统中文输入" class="headerlink" title="系统中文输入"></a>系统中文输入</h2><p>看图，不多说：</p>
<p><img src="../img/7c1e95b2-17a3-4322-ab84-8c09619e237e.png" alt="7c1e95b2-17a3-4322-ab84-8c09619e237e"></p>
<p><img src="../img/8f506da4-b2d3-4a23-84e3-53472b5f0320.png" alt="8f506da4-b2d3-4a23-84e3-53472b5f0320"></p>
<p><img src="../img/8a39b319-f52c-4f2d-a61a-de2f62dead49.png" alt="8a39b319-f52c-4f2d-a61a-de2f62dead49"></p>
<p><img src="../img/ddb58d66-7572-4a6f-8d9f-0d20b28ccdf8.png" alt="ddb58d66-7572-4a6f-8d9f-0d20b28ccdf8"></p>
<p>效果图：<br><img src="../img/4d3ae893-f910-4c23-8749-ef7bf963ef56.png" alt="4d3ae893-f910-4c23-8749-ef7bf963ef56"></p>
<h2 id="Qt-QtCreator"><a href="#Qt-QtCreator" class="headerlink" title="Qt QtCreator"></a>Qt QtCreator</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install fcitx-libs-qt fcitx-libs-qt5</div><div class="line"></div><div class="line">cp /usr/lib/x86_64-linux-gnu/qt5/plugins/platforminputcontexts/libfcitxplatforminputcontextplugin.so  ~/qtcreator-4.4.0/lib/Qt/plugins/platforminputcontexts/</div></pre></td></tr></table></figure>
<p>以上操作其实就是安装fcitx-libs-qt和fcitx-libs-qt5的库，然后将动态链接拷贝到qtcreator的插件目录中，至于为什么是这个目录需要你自己去发现，不过我们可以看到在该目录中已经存在ibux的动态链接库，我们只是把fcitx的加进去而已。</p>
<p><img src="../img/b7a25a45-c60d-44ba-bcaa-2ead2ca1bd4e.png" alt="b7a25a45-c60d-44ba-bcaa-2ead2ca1bd4e"></p>
<p>当然你也可以不拷贝直接将libfcitxplatforminputcontextplugin.so所在的目录加入到环境变量中应该也是可以的（我没有测试）：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo vim /etx/bash.bashrc</div></pre></td></tr></table></figure>
<p>在文件最后添加一行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">export $PATH = $PATH:/usr/lib/x86_64-linux-gnu/qt5/plugins/platforminputcontexts/</div></pre></td></tr></table></figure></p>
<p>到此重启qtcreator已经可以输入中文了。就是这么简单！<br>效果图：<br><img src="../img/fa8ee2df-6668-469f-b965-55174c5275e3.png" alt="370933ff-bb56-47de-8c4c-aca83576cf79"></p>
<h2 id="Wps"><a href="#Wps" class="headerlink" title="Wps"></a>Wps</h2><p>google搜到的解决办法,(亲测在Ubuntu17.04&amp;17.10中无效)</p>
<blockquote>
<p>wps文字不能输入中文解决  </p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ vim /usr/bin/wps</div></pre></td></tr></table></figure>
<p>修改wps启动文件：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">#!/bin/bash</div><div class="line">export XMODIFIERS=&quot;@im=fcitx&quot;</div><div class="line">export QT_IM_MODULE=&quot;fcitx&quot;</div><div class="line">gOpt=</div><div class="line">#gOptExt=-multiply</div><div class="line">gTemplateExt=(&quot;wpt&quot; &quot;dot&quot; &quot;dotx&quot;)</div></pre></td></tr></table></figure>
<p>wps writer,表格，ppt对应的启动文件分别为：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">/usr/bin/wps</div><div class="line">/usr/bin/et</div><div class="line">/usr/bin/wpp</div></pre></td></tr></table></figure>
<p><img src="../img/a419806f-81a9-4ace-8249-874e1a004b45.png" alt="a419806f-81a9-4ace-8249-874e1a004b45"></p>
<p>以上方式在17.04和17.10中亲测无效！！！</p>
<p>受到qtcreator的启示，同样将libfcitxplatforminputcontextplugin.so动态链接库拷贝到wps的目录中，wps的目录位于：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/opt/kingsoft/wps-office/office6</div></pre></td></tr></table></figure>
<p>可以看到在office6目录下有一个这样的路径：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/opt/kingsoft/wps-office/office6/qt/plugins/</div></pre></td></tr></table></figure>
<p>和qtcreator的很相似，只是没有platforminputcontexts这个下一级目录，由于强迫症就建立一个这个目录（其实不建也是可以的）把libfcitxplatforminputcontextplugin.so拷贝进来，然后启动wps发现完美解决。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">sudo mkdir /opt/kingsoft/wps-office/office6/qt/plugins/platforminputcontexts</div><div class="line"></div><div class="line">sudo cp  /usr/lib/x86_64-linux-gnu/qt5/plugins/platforminputcontexts/libfcitxplatforminputcontextplugin.so  /opt/kingsoft/wps-office/office6/qt/plugins/platforminputcontexts/</div><div class="line"></div><div class="line">fcitx-autostart</div><div class="line"></div><div class="line">wps</div></pre></td></tr></table></figure>
<p>效果图：<br><img src="../img/5e598032-adc5-48ad-a1a3-8a2cd012861a.png" alt="5e598032-adc5-48ad-a1a3-8a2cd012861a"></p>
<h2 id="Atom"><a href="#Atom" class="headerlink" title="Atom"></a>Atom</h2><p>Atom 我没有测试上面的方法，应该也是可以的。我的解决办法是编译安装。</p>
<p>Atom的官方网址：<a href="https://atom.io/" target="_blank" rel="external">https://atom.io/</a></p>
<p>binary包安装以后无法输入中文，后来采用编译安装问题的到解决。</p>
<p>编译安装参考：<a href="http://flight-manual.atom.io/hacking-atom/sections/hacking-on-atom-core/#platform-linux" target="_blank" rel="external">http://flight-manual.atom.io/hacking-atom/sections/hacking-on-atom-core/#platform-linux</a></p>
<p>效果图：<br><img src="../img/01cf646b-b789-4b42-9278-adcdec0ffed6.png" alt="01cf646b-b789-4b42-9278-adcdec0ffed6"></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>以上通过安装 fcitx-libs-qt fcitx-libs-qt5，然后将动态链接库拷贝到软件的启动目录（或者特定的库目录中）完美解决了Qtcreator，wps，Atom在Ubuntu中的中文输入问题！！Enjoy your Ubuntu!<br>&lt;</p>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Qt </tag>
            
            <tag> wps </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Qt-doc-struct]]></title>
      <url>https://ygcaicn.github.io/Qt/qt-doc-struct.html</url>
      <content type="html"><![CDATA[<p>Qt的文档写的非常棒！学习QT最重要的就是学会看官方的文档，了解文档的结构有助于快速的查询文档，解决问题。Qt官方文档的主页为<a href="http://doc.qt.io" target="_blank" rel="external">http://doc.qt.io</a><br><img src="../img/4bbdac2a-5470-4829-8a47-5cfed7253eba.png" alt="4bbdac2a-5470-4829-8a47-5cfed7253eba"></p>
<p>进入Qt Reference Documentation后可以看到Qt的文档还分为不同的分类，本文主要是介绍第一个分类：Class Lists</p>
<p><img src="../img/49e21d26-e157-40b5-acb1-3e492b9cf2d8.png" alt="49e21d26-e157-40b5-acb1-3e492b9cf2d8"></p>
<p>Class Lists中又有不同的索引方式，方便不同情景下查询：<br><img src="../img/c42b0ad4-92e7-4dcf-b09f-14bce8261eea.png" alt="c42b0ad4-92e7-4dcf-b09f-14bce8261eea"> </p>
<p>Qt的class文档大致分为3个部分，Type（数据类型），Functions（成员函数），Macros（宏）。每个部分又分为两块，前一块是一个list，简单的列举，后一块为detail，详细信息。每个类的文档都是在同一个html页面上，采用锚点相互跳转，这也是非常棒的一点！</p>
<a id="more"></a>
<h2 id="QDir-Class-类名"><a href="#QDir-Class-类名" class="headerlink" title="QDir Class 类名"></a>QDir Class <em>类名</em></h2><p><img src="../img/qdirdfadfclass.png" alt="qdirdfadfclass"></p>
<p>The QDir class provides access to directory structures and their contents. More… <em>简单介绍功能，可点击查看详细</em></p>
<table>
<thead>
<tr>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>Header:</td>
<td>#include <qdir></qdir></td>
</tr>
<tr>
<td>qmake:</td>
<td>QT += core</td>
</tr>
</tbody>
</table>
<p><em>说明header和qmake的包含操作</em></p>
<hr>
<h2 id="Public-Types-公有的数据类型"><a href="#Public-Types-公有的数据类型" class="headerlink" title="Public Types 公有的数据类型"></a>Public Types <em>公有的数据类型</em></h2><p><img src="../img/ae7e90b2-2b94-45af-819e-cb99c0f686e3.png" alt="ae7e90b2-2b94-45af-819e-cb99c0f686e3"></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">enum	Filter &#123; Dirs, AllDirs, Files, Drives, ..., CaseSensitive &#125;</div><div class="line">flags	Filters</div></pre></td></tr></table></figure>
<blockquote>
<p>The Filters type is a typedef for QFlags<filter>. It stores an OR combination of Filter values.</filter></p>
</blockquote>
<h2 id="Public-Functions-公有成员函数"><a href="#Public-Functions-公有成员函数" class="headerlink" title="Public Functions 公有成员函数"></a>Public Functions <em>公有成员函数</em></h2><p><img src="../img/baac4270-afb5-41f3-ac10-4c8d217d2e56.png" alt="baac4270-afb5-41f3-ac10-4c8d217d2e56"><br>对象可以访问的函数,编程过程中主要查阅的就是这部分。</p>
<h2 id="Static-Public-Members-静态成员函数"><a href="#Static-Public-Members-静态成员函数" class="headerlink" title="Static Public Members  静态成员函数"></a>Static Public Members  <em>静态成员函数</em></h2><p><img src="../img/74c56c41-e57f-49e2-bb0b-2863471984f8.png" alt="74c56c41-e57f-49e2-bb0b-2863471984f8"></p>
<p>解决同一个类不同对象之间的数据共享问题。主要作用是用来访问同一个类中的静态数据成员，维护对象之间的数据共享。</p>
<p>访问不依赖于对象。</p>
<p>可以通过对象与类名进行调用，一般习惯与用类名进行访问。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">static QDir	current()</div><div class="line"></div><div class="line">//example：</div><div class="line"></div><div class="line">QDir::current()</div><div class="line"></div><div class="line">//return a QDir Object of current directory.</div></pre></td></tr></table></figure>
<h2 id="Macros-宏"><a href="#Macros-宏" class="headerlink" title="Macros 宏"></a>Macros 宏</h2><p><img src="../img/747b2a9a-3760-4319-8dda-06b283649d8e.png" alt="747b2a9a-3760-4319-8dda-06b283649d8e"></p>
<hr>
<h2 id="Detailed-Description"><a href="#Detailed-Description" class="headerlink" title="Detailed Description"></a>Detailed Description</h2><p>该部分介绍QDir的整体概览。又分为小的章节进行介绍</p>
<h3 id="Navigation-and-Directory-Operations"><a href="#Navigation-and-Directory-Operations" class="headerlink" title="Navigation and Directory Operations"></a>Navigation and Directory Operations</h3><h3 id="Files-and-Directory-Contents"><a href="#Files-and-Directory-Contents" class="headerlink" title="Files and Directory Contents"></a>Files and Directory Contents</h3><h3 id="The-Current-Directory-and-Other-Special-Paths"><a href="#The-Current-Directory-and-Other-Special-Paths" class="headerlink" title="The Current Directory and Other Special Paths"></a>The Current Directory and Other Special Paths</h3><p><img src="../img/93ced37a-d761-4d88-a0d4-033002f35a25.png" alt="93ced37a-d761-4d88-a0d4-033002f35a25"></p>
<h3 id="Path-Manipulation-and-Strings"><a href="#Path-Manipulation-and-Strings" class="headerlink" title="Path Manipulation and Strings"></a>Path Manipulation and Strings</h3><h3 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h3><hr>
<h2 id="Member-Type-Documentation"><a href="#Member-Type-Documentation" class="headerlink" title="Member Type Documentation"></a>Member Type Documentation</h2><p><img src="../img/559c5e7d-9573-4d55-b9b0-e4b45f100494.png" alt="559c5e7d-9573-4d55-b9b0-e4b45f100494"></p>
<p>具体的介绍数据类型</p>
<h2 id="Member-Function-Documentation"><a href="#Member-Function-Documentation" class="headerlink" title="Member Function Documentation"></a>Member Function Documentation</h2><p><img src="../img/g3364be29-656a-4a1f-8b6e-2f96a635e4d3.png" alt="g3364be29-656a-4a1f-8b6e-2f96a635e4d3"></p>
<p><img src="../img/ee471f05-3f7e-4537-baa3-537f69c3c64f.png" alt="ee471f05-3f7e-4537-baa3-537f69c3c64f"><br>具体的介绍Function，包括static function。每个函数后有<code>See also xxx()</code>非常的方便。</p>
<h2 id="Macro-Documentation"><a href="#Macro-Documentation" class="headerlink" title="Macro Documentation"></a>Macro Documentation</h2><p><img src="../img/c70d4c00-6840-4eb5-be99-4c18cdf4fe01.png" alt="c70d4c00-6840-4eb5-be99-4c18cdf4fe01"><br>具体的介绍宏</p>
<h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><h3 id="QDir"><a href="#QDir" class="headerlink" title="QDir"></a><a href="http://doc.qt.io/qt-5/qdir.html#QDir" target="_blank" rel="external">QDir</a></h3>]]></content>
      
        <categories>
            
            <category> Qt </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Qt </tag>
            
            <tag> cpp </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[TCP/IP]]></title>
      <url>https://ygcaicn.github.io/Linux/TCP-IP.html</url>
      <content type="html"><![CDATA[<h2 id="TCP-IP"><a href="#TCP-IP" class="headerlink" title="TCP/IP"></a>TCP/IP</h2><p>维基百科：<a href="https://zh.wikipedia.org/wiki/TCP/IP%E5%8D%8F%E8%AE%AE%E6%97%8F" target="_blank" rel="external">https://zh.wikipedia.org/wiki/TCP/IP%E5%8D%8F%E8%AE%AE%E6%97%8F</a></p>
<p>互联网协议族（英语：Internet Protocol Suite，缩写IPS）是一个网络通信模型，以及一整个网络传输协议家族，为互联网的基础通信架构。它常被通称为TCP/IP协议族（英语：TCP/IP Protocol Suite，或TCP/IP Protocols），简称TCP/IP[2]。因为该协议家族的两个核心协议：TCP（传输控制协议）和IP（网际协议），为该家族中最早通过的标准[3]。由于在网络通讯协议普遍采用分层的结构，当多个层次的协议共同工作时，类似计算机科学中的堆栈，因此又被称为TCP/IP协议栈（英语：TCP/IP Protocol Stack）</p>
<p>整个通信网络的任务，可以划分成不同的功能区块，即所谓的层级（layer）。用于互联网的协议可以比照TCP/IP参考模型进行分类。TCP/IP协议栈起始于第三层协议IP（网际协议）。</p>
<a id="more"></a>
<p>TCP/IP参考模型是一个抽象的分层模型，这个模型中，所有的TCP/IP系列网络协议都被归类到4个抽象的”层”中。每一抽象层创建在低一层提供的服务上，并且为高一层提供服务。 完成一些特定的任务需要众多的协议协同工作，这些协议分布在参考模型的不同层中的，因此有时称它们为一个协议栈。 TCP/IP参考模型为TCP/IP协议栈订身制作。其中IP协议只关心如何使得数据能够跨越本地网络边界的问题，而不关心如何利用传输媒体，数据如何传输。整个TCP/IP协议栈则负责解决数据如何通过许许多多个点对点通路（一个点对点通路，也称为一”跳”, 1 hop）顺利传输，由此不同的网络成员能够在许多”跳”的基础上创建相互的数据通路。</p>
<h2 id="因特网协议栈中的层"><a href="#因特网协议栈中的层" class="headerlink" title="因特网协议栈中的层"></a>因特网协议栈中的层</h2><p><img src="../img/fsdafsdfw.png" alt="fsdafsdfw"></p>
<hr>
<p>4 .  应用层application layer 例如HTTP、FTP、DNS（如BGP和RIP这样的路由协议，尽管由于各种各样的原因它们分别运行在TCP和UDP上，仍然可以将它们看作网络层的一部分）</p>
<p>3 . 传输层transport layer 例如TCP、UDP、RTP、SCTP（如OSPF这样的路由协议，尽管运行在IP上也可以看作是网络层的一部分）</p>
<p>2 .  网络互连层internet layer 对于TCP/IP来说这是因特网协议（IP）（如ICMP和IGMP这样的必须协议尽管运行在IP上，也仍然可以看作是网络互连层的一部分；ARP不运行在IP上）</p>
<p>1 . 网络接口层link layer 例如以太网、Wi-Fi、MPLS等。</p>
<h3 id="应用层"><a href="#应用层" class="headerlink" title="应用层"></a>应用层</h3><p>该层包括所有和应用程序协同工作，利用基础网络交换应用程序专用的数据的协议。 应用层是大多数普通与网络相关的程序为了通过网络与其他程序通信所使用的层。这个层的处理过程是应用特有的；数据从网络相关的程序以这种应用内部使用的格式进行传送，然后被编码成标准协议的格式。<br>一些特定的程序被认为运行在这个层上。它们提供服务直接支持用户应用。这些程序和它们对应的协议包括HTTP（万维网服务）、FTP（文件传输）、SMTP（电子邮件）、SSH（安全远程登陆）、DNS（名称&lt;-&gt; IP地址寻找）以及许多其他协议。 一旦从应用程序来的数据被编码成一个标准的应用层协议，它将被传送到IP栈的下一层。</p>
<p>在传输层，应用程序最常用的是TCP或者UDP，并且服务器应用程序经常与一个公开的端口号相联系。服务器应用程序的端口由互联网号码分配局（IANA）正式地分配，但是现今一些新协议的开发者经常选择它们自己的端口号。由于在同一个系统上很少超过少数几个的服务器应用，端口冲突引起的问题很少。应用软件通常也允许用户强制性地指定端口号作为运行参数。<br>连结外部的客户端程序通常使用系统分配的一个随机端口号。监听一个端口并且通过服务器将那个端口发送到应用的另外一个副本以创建对等连结（如IRC上的dcc文件传输）的应用也可以使用一个随机端口，但是应用程序通常允许定义一个特定的端口范围的规范以允许端口能够通过实现网络地址转换（NAT）的路由器映射到内部。</p>
<p>每一个应用层（TCP/IP参考模型的最高层）协议一般都会使用到两个传输层协议之一： 面向连接的TCP传输控制协议和无连接的包传输的UDP用户数据报文协议。</p>
<h3 id="常用的应用层协议有："><a href="#常用的应用层协议有：" class="headerlink" title="常用的应用层协议有："></a>常用的应用层协议有：</h3><p>运行在TCP协议上的协议：<br>  ● HTTP（Hypertext Transfer Protocol，超文本传输协议），主要用于普通浏览。<br>  ● HTTPS（Hypertext Transfer Protocol over Secure Socket Layer, or HTTP over SSL，安全超文本传输协议）,HTTP协议的安全版本。<br>  ● FTP（File Transfer Protocol，文件传输协议），由名知义，用于文件传输。<br>  ● POP3（Post Office Protocol, version 3，邮局协议），收邮件用。<br>  ● SMTP（Simple Mail Transfer Protocol，简单邮件传输协议），用来发送电子邮件。<br>  ● TELNET（Teletype over the Network，网络电传），通过一个终端（terminal）登陆到网络。<br>  ● SSH（Secure Shell，用于替代安全性差的TELNET），用于加密安全登陆用。<br>运行在UDP协议上的协议：<br>  ● BOOTP（Boot Protocol，启动协议），应用于无盘设备。<br>  ● NTP（Network Time Protocol，网络时间协议），用于网络同步。<br>  ● DHCP（Dynamic Host Configuration Protocol，动态主机配置协议），动态配置IP地址。<br>其他：<br>  ● DNS（Domain Name Service，域名服务），用于完成地址查找，邮件转发等工作（运行在TCP和UDP协议上）。<br>  ● ECHO（Echo Protocol，回绕协议），用于查错及测量应答时间（运行在TCP和UDP协议上）。<br>  ● SNMP（Simple Network Management Protocol，简单网络管理协议），用于网络信息的收集和网络管理。<br>  ● ARP（Address Resolution Protocol，地址解析协议），用于动态解析以太网硬件的地址。</p>
<h3 id="传输层"><a href="#传输层" class="headerlink" title="传输层"></a>传输层</h3><p>传输层的协议，能够解决诸如端到端可靠性（“数据是否已经到达目的地？”）和保证数据按照正确的顺序到达这样的问题。在TCP/IP协议组中，传输协议也包括所给数据应该送给哪个应用程序。 在TCP/IP协议组中技术上位于这个层的动态路由协议通常被认为是网络层的一部分；一个例子就是OSPF（IP协议89）。 TCP（IP协议6）是一个“可靠的”、面向连结的传输机制，它提供一种可靠的字节流保证数据完整、无损并且按顺序到达。TCP尽量连续不断地测试网络的负载并且控制发送数据的速度以避免网络过载。另外，TCP试图将数据按照规定的顺序发送。这是它与UDP不同之处，这在实时数据流或者路由高网络层丢失率应用的时候可能成为一个缺陷。 较新的SCTP也是一个“可靠的”、面向连结的传输机制。它是面向纪录而不是面向字节的，它在一个单独的连结上提供通过多路复用提供的多个子流。它也提供多路自寻址支持，其中连结终端能够被多个IP地址表示（代表多个实体接口），这样的话即使其中一个连接失败了也不中断。它最初是为电话应用开发的（在IP上传输SS7），但是也可以用于其他的应用。 UDP（IP协议号17）是一个无连结的数据报协议。它是一个“尽力传递”（best effort）或者说“不可靠”协议——不是因为它特别不可靠，而是因为它不检查数据包是否已经到达目的地，并且不保证它们按顺序到达。如果一个应用程序需要这些特性，那它必须自行检测和判断，或者使用TCP协议。 UDP的典型性应用是如流媒体（音频和视频等）这样按时到达比可靠性更重要的应用，或者如DNS查找这样的简单查询／响应应用，如果创建可靠的连结所作的额外工作将是不成比例地大。 DCCP目前正由IEFT开发。它提供TCP流动控制语义，但对于用户来说保留UDP的数据报服务模型。 TCP和UDP都用来支持一些高层的应用。任何给定网络地址的应用通过它们的TCP或者UDP端口号区分。根据惯例使一些大众所知的端口与特定的应用相联系。 RTP是为如音频和视频流这样的实时数据设计的数据报协议。RTP是使用UDP包格式作为基础的会话层，然而据说它位于因特网协议栈的传输层。</p>
<h3 id="网络互连层"><a href="#网络互连层" class="headerlink" title="网络互连层"></a>网络互连层</h3><p>TCP/IP协议族中的网络互连层（internet layer）在OSI模型中叫做网络层（network layer）。<br>正如最初所定义的，网络层解决在一个单一网络上传输数据包的问题。类似的协议有X.25和ARPANET的Host/IMP Protocol。 随着因特网思想的出现，在这个层上添加附加的功能，也就是将数据从源网络传输到目的网络。这就牵涉到在网络组成的网上选择路径将数据包传输，也就是因特网。 在因特网协议组中，IP完成数据从源发送到目的的基本任务。IP能够承载多种不同的高层协议的数据；这些协议使用一个唯一的IP协议号进行标识。ICMP和IGMP分别是1和2。 一些IP承载的协议，如ICMP（用来发送关于IP发送的诊断信息）和IGMP（用来管理多播数据），它们位于IP层之上但是完成网络层的功能，这表明因特网和OSI模型之间的不兼容性。所有的路由协议，如BGP、OSPF、和RIP实际上也是网络层的一部分，尽管它们似乎应该属于更高的协议栈。  </p>
<h3 id="网络接口层"><a href="#网络接口层" class="headerlink" title="网络接口层"></a>网络接口层</h3><p>网络接口层实际上并不是因特网协议组中的一部分，但是它是数据包从一个设备的网络层传输到另外一个设备的网络层的方法。这个过程能够在网卡的软件驱动程序中控制，也可以在韧体或者专用芯片中控制。这将完成如添加报头准备发送、通过实体媒介实际发送这样一些数据链路功能。另一端，链路层将完成数据帧接收、去除报头并且将接收到的包传到网络层。 然而，链路层并不经常这样简单。它也可能是一个虚拟专有网络（VPN）或者隧道，在这里从网络层来的包使用隧道协议和其他（或者同样的）协议组发送而不是发送到实体的接口上。VPN和隧道通常预先建好，并且它们有一些直接发送到实体接口所没有的特殊特点（例如，它可以加密经过它的数据）。由于现在链路“层”是一个完整的网络，这种协议组的递归使用可能引起混淆。但是它是一个实现常见复杂功能的一个优秀方法。（尽管需要注意预防一个已经封装并且经隧道发送下去的数据包进行再次地封装和发送）。</p>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux </tag>
            
            <tag> TCP/IP </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Adblock的一些软件]]></title>
      <url>https://ygcaicn.github.io/%E6%9D%82%E9%A1%B9/adb.html</url>
      <content type="html"><![CDATA[<h2 id="推荐列表"><a href="#推荐列表" class="headerlink" title="推荐列表"></a>推荐列表</h2><a id="more"></a>
<p>1.Adblock Plus （推荐）</p>
<p><a href="https://adblockplus.org/zh_CN/" target="_blank" rel="external">https://adblockplus.org/zh_CN/</a></p>
<p>2.AdBlock</p>
<p><a href="https://www.getadblock.com/" target="_blank" rel="external">https://www.getadblock.com/</a></p>
<p>3.adbyby（国产，支持去各大视频站 <code>包括https</code> 的广告，支持openwrt端）</p>
<p><a href="https://www.adbyby.com/" target="_blank" rel="external">https://www.adbyby.com/</a></p>
<p>4.adsafe (唯一比较靠谱的国产）</p>
<p><a href="http://ad-safe.com/" target="_blank" rel="external">http://ad-safe.com/</a></p>
<p>5.µBlock</p>
<p><a href="https://github.com/gorhill/uBlock" target="_blank" rel="external">https://github.com/gorhill/uBlock</a></p>
<p>6.Adblock Edge</p>
<p><a href="https://addons.mozilla.org/firefox/addon/adblock-edge/" target="_blank" rel="external">https://addons.mozilla.org/firefox/addon/adblock-edge/</a></p>
<p>7.AdGuard</p>
<p><a href="http://adguard.com/en/welcome.html" target="_blank" rel="external">http://adguard.com/en/welcome.html</a></p>
<p>8.AdFender</p>
<p><a href="http://www.adfender.com/" target="_blank" rel="external">http://www.adfender.com/</a></p>
<p>9.Bluhell Firewall</p>
<p><a href="https://addons.mozilla.org/en-US/firefox/addon/bluhell-firewall" target="_blank" rel="external">https://addons.mozilla.org/en-US/firefox/addon/bluhell-firewall</a></p>
<p>10.Proxomitron （卡饭有介绍)</p>
<p><a href="http://proximodo.sourceforge.net/" target="_blank" rel="external">http://proximodo.sourceforge.net/</a></p>
<p>11.poper-blocker</p>
<p><a href="http://wzmn.net/poper-blocker" target="_blank" rel="external">http://wzmn.net/poper-blocker</a></p>
<p>12.Updated Ad Blocker for Firefox</p>
<p><a href="https://addons.mozilla.org/en-US/firefox/addon/updated-ad-blocker-for-fire/" target="_blank" rel="external">https://addons.mozilla.org/en-US/firefox/addon/updated-ad-blocker-for-fire/</a></p>
<p>13.javascript-blocker</p>
<p><a href="http://javascript-blocker.toggleable.com/" target="_blank" rel="external">http://javascript-blocker.toggleable.com/</a></p>
<p>14.uMatrix</p>
<p><a href="https://github.com/gorhill/uMatrix" target="_blank" rel="external">https://github.com/gorhill/uMatrix</a></p>
<p>15.webmailAdBlocker （邮箱广告）</p>
<p><a href="http://jasonsavard.com/webmailAdBlocker" target="_blank" rel="external">http://jasonsavard.com/webmailAdBlocker</a></p>
<p>16.adblockvideo</p>
<p><a href="http://adblockvideo.com/" target="_blank" rel="external">http://adblockvideo.com/</a></p>
<p>17.karma-blocker</p>
<p><a href="https://github.com/arantius/karma-blocker" target="_blank" rel="external">https://github.com/arantius/karma-blocker</a></p>
<p>18.奶牛</p>
<p><a href="https://www.admuncher.com/" target="_blank" rel="external">https://www.admuncher.com/</a></p>
<h2 id="附加adb常用屏蔽（update-2017-10-24）"><a href="#附加adb常用屏蔽（update-2017-10-24）" class="headerlink" title="附加adb常用屏蔽（update 2017.10.24）"></a>附加adb常用屏蔽（update 2017.10.24）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">baidu.com###content_right</div><div class="line">baidu.com##.cr-offset</div><div class="line">baidu.com##.leftBlock</div><div class="line">mail.163.com###\31 508028782489_dvmailrecomPanelCont</div><div class="line">mail.163.com##.gWel-tabs-panel-cont</div><div class="line">mail.163.com##.gWel-tabs-list</div><div class="line">baidu.com###s_mancard_main</div><div class="line">baidu.com##.s-top-nav</div><div class="line">dazi.kukuw.com##.gg_close</div><div class="line">163.com##.col_r</div><div class="line">tech.163.com###js-ep3rdRank</div><div class="line">163.com##.gallery-tie-right</div><div class="line">163.com##.post_content_side</div><div class="line">163.com##.mt35 mod_bobo</div><div class="line">news.163.com##.clearfix.bobolist</div><div class="line">news.163.com##.mt35.mod_bobo</div><div class="line">||img1.cache.netease.com/f2e/www/index2014/images/sprite_dw2.png</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 杂项 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[VIP视频解析+去广告教程]]></title>
      <url>https://ygcaicn.github.io/Network/VIP%E8%A7%86%E9%A2%91%E8%A7%A3%E6%9E%90-%E5%8E%BB%E5%B9%BF%E5%91%8A.html</url>
      <content type="html"><![CDATA[<h1 id="VIP视频解析-去广告教程"><a href="#VIP视频解析-去广告教程" class="headerlink" title="VIP视频解析+去广告教程"></a>VIP视频解析+去广告教程</h1><h2 id="Step1-打开视频网站"><a href="#Step1-打开视频网站" class="headerlink" title="Step1.打开视频网站"></a>Step1.打开视频网站</h2><p>这里以爱奇艺为例 <a href="http://www.iqiyi.com" target="_blank" rel="external">http://www.iqiyi.com</a> 打开首页看到类似下面的界面：</p>
<p><img src="http://i.imgur.com/ZQhMuKf.png" alt="Imgur"></p>
<a id="more"></a>
<h2 id="Step2-找到你要看的视频"><a href="#Step2-找到你要看的视频" class="headerlink" title="Step2.找到你要看的视频"></a>Step2.找到你要看的视频</h2><p>在视频网站中找到你想要看的视频，看到类似下面的界面：</p>
<p><img src="http://i.imgur.com/tmSUnQl.png" alt="Imgur"></p>
<ul>
<li><code>点击1</code> 指的地方，这里可以看到选择是一个需要VIP才能观看的《河神EP04》，这里无意冒犯出版商版权，多有得罪，提倡大家购买正版观看！</li>
<li><code>复制2</code> 指的链接</li>
</ul>
<h2 id="Step3-打开VIP视频解析-去广告"><a href="#Step3-打开VIP视频解析-去广告" class="headerlink" title="Step3.打开VIP视频解析+去广告"></a>Step3.打开<a href="http://blog.cumtpn.com/vipvideo" target="_blank" rel="external">VIP视频解析+去广告</a></h2><p>将刚才复制的链接粘贴到输入框中，入下图所示：<br><img src="../img/55197baf-3d81-4d57-96fb-d6d227e0ec14.png" alt="55197baf-3d81-4d57-96fb-d6d227e0ec14"></p>
<ul>
<li><code>1→</code>为输入框，输入在视频网站找到的视频链接</li>
<li><code>2→</code>为解析接口选择，在无法解析的情况下可以在这里换解析接口，另外支持自定义解析接口。</li>
<li><code>3→</code>为理解播放按钮，点击即可观看，并且没有广告哟！<br><img src="../img/d25c9418-e38c-47e0-a5d6-9d26a1c9e5b0.png" alt="d25c9418-e38c-47e0-a5d6-9d26a1c9e5b0"><h2 id="Step4-分享"><a href="#Step4-分享" class="headerlink" title="Step4.分享"></a>Step4.分享</h2>浏览器地址栏中的链接复制下来发送给好友，好友打开直接可以观看当前的影片！</li>
</ul>
<p><img src="../img/f8065bce-9676-4c04-afd5-1fe227ed94ce.png" alt="f8065bce-9676-4c04-afd5-1fe227ed94ce"></p>
<p>支持的网站：</p>
<p><img src="../img/91f751df-6680-409d-81ad-ad201ffa4d90.png" alt="91f751df-6680-409d-81ad-ad201ffa4d90"></p>
]]></content>
      
        <categories>
            
            <category> Network </category>
            
        </categories>
        
        
        <tags>
            
            <tag> VIP视频 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[关于win10version1703 多引导（grub引导）的问题]]></title>
      <url>https://ygcaicn.github.io/Linux/win10-1703-grub.html</url>
      <content type="html"><![CDATA[<h1 id="关于win10调包grub引导的过程"><a href="#关于win10调包grub引导的过程" class="headerlink" title="关于win10调包grub引导的过程"></a>关于win10调包grub引导的过程</h1><p>2017.05.31日中午更新了win10 1703推送的更新，一切由此变的不开心。。。</p>
<p>往常一直正常的grub引导出问题了，bios启动项中ubuntu这个item还在，不过不幸运的是即使你选择这项引导进行开机进入的依然是windows。这就让人很生气。</p>
<p>好在我还有移动硬盘的linux，当然你用live盘也是可以的。进去移动硬盘linux后按照上篇文章讲的方法修复了grub。再次进入bios选择ubuntu启动，没什么问题一下就进入了grub熟悉的界面。成功进入了内置硬盘的linuxmint。<br><a id="more"></a></p>
<p>本来以为故事到此就结束了呢，骂也骂过了，问题也修复了，万万万万没有想到的是我从win关机之后首先发现了第一个小问题：bios的启动项顺序发生了变化，以往我都是将grub放到第一启动项的，现在变成win是第一项。<br>然后接着来了一个大问题：第二项的ubuntu选项（也就是grub引导程序grubx64.efi）选择从该项启动以后又直接进入了win。到这时候我就已经有了不好的预感。同样从硬盘进入linux看看什么情况，先修复了grub</p>
<p>via.一下操作均在live linux下操作</p>
<h2 id="安装修复grub"><a href="#安装修复grub" class="headerlink" title="安装修复grub"></a>安装修复grub</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">jachin-Inspiron-5548 ubuntu # sudo grub-install --target x86_64-efi --efi-directory /mnt/esp --boot-directory=/mnt/boot</div><div class="line">Installing for x86_64-efi platform.</div><div class="line">Installation finished. No error reported.</div></pre></td></tr></table></figure>
<h2 id="grubx64-efi文件"><a href="#grubx64-efi文件" class="headerlink" title="grubx64.efi文件"></a>grubx64.efi文件</h2><pre><code>jachin-Inspiron-5548 ubuntu # ll -h grubx64.efi
-rwx------ 1 root root 118K May 31 09:45 grubx64.efi*
</code></pre><p>同样修复万以后grub一切正常，重复上次的操作，进入win，关机win，选择grub启动项。和上次结果一样又进了win。。再进入移动硬盘的linux</p>
<h2 id="重启win后grubx64-efi文件"><a href="#重启win后grubx64-efi文件" class="headerlink" title="重启win后grubx64.efi文件"></a>重启win后grubx64.efi文件</h2><pre><code>jachin-Inspiron-5548 ubuntu # ll -h grubx64.efi
-rwx------ 1 root root  74K May 31 09:45 grubx64.efi*
</code></pre><p>发现了猫腻，万恶的Mxx公司竟然修改了grubx64.efi文件。。。</p>
<p>总结一下就是：</p>
<ol>
<li>win会调包（sda1@efi）/EFI/ubuntu/grubx64.efi文件</li>
<li>win会自动调整启动项的顺序，把自己条boot1</li>
<li>linux下win的分区不能挂载，之前是开着快速启动也可以挂载的，现在不行了。这个关掉快速启动可以解决，没办法果断关掉。</li>
</ol>
<h1 id="尝试的一些方法"><a href="#尝试的一些方法" class="headerlink" title="尝试的一些方法"></a>尝试的一些方法</h1><h2 id="修改grubx64-efi的文件名（失败）"><a href="#修改grubx64-efi的文件名（失败）" class="headerlink" title="修改grubx64.efi的文件名（失败）"></a>修改grubx64.efi的文件名（失败）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">cp grubx64.efi mgrubx64.efi </div><div class="line"></div><div class="line">jachin-Inspiron-5548 ubuntu # ll -h</div><div class="line">total 240K</div><div class="line">drwxr-xr-x 2 root root 2.0K May 31 10:18 ./</div><div class="line">drwxr-xr-x 5 root root 2.0K May 28 00:45 ../</div><div class="line">-rwxr-xr-x 1 root root 118K May 31 10:09 grubx64.efi*</div><div class="line">-rwxr-xr-x 1 root root 118K May 31 10:18 mgrubx64.efi*</div></pre></td></tr></table></figure>
<p>启动过win之后：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">jachin-Inspiron-5548 ubuntu # ll -h</div><div class="line">total 78K</div><div class="line">drwxr-xr-x 2 root root 2.0K May 31 10:18 ./</div><div class="line">drwxr-xr-x 5 root root 2.0K May 28 00:45 ../</div><div class="line">-rwxr-xr-x 1 root root 74K May 31 10:09 grubx64.efi*</div><div class="line">-rwxr-xr-x 1 root root 0K May 31 10:18 mgrubx64.efi*</div></pre></td></tr></table></figure>
<p>可以看到（sda1@efi）/EFI/ubuntu/grubx64.efi文件被调包，（sda1@efi）/EFI/ubuntu/mgrubx64.efi这个更是直接被清空。</p>
<h2 id="修改grubx64-efi所在的文件夹"><a href="#修改grubx64-efi所在的文件夹" class="headerlink" title="修改grubx64.efi所在的文件夹"></a>修改grubx64.efi所在的文件夹</h2><p>这样可以正常进入grub，但是bios中的启动项要手动添加。并且启动win后添加的启动项被删除了，文件倒是没有被修改，可以通过再次添加进入grub程序。</p>
<h2 id="双Esp分区"><a href="#双Esp分区" class="headerlink" title="双Esp分区"></a>双Esp分区</h2><p>将以前的esp分区划分成两个esp分区，一个专门用来存放windows的efi程序，另一个专门存放grub的efi程序（grubx64.efi）</p>
<p>先将esp分区中的win引导程序备份出来（不过后来证明我用cp备份的引导并不能正常进入win）<br>拆分分区主要就是用了gdisk工具，格式化为vfat 使用了mkfs.vfat程序，选择一个esp作为linux的引导分区，然后安装grub，还要注意修改内置硬盘系统的/etc/fstab文件中的esp分区挂载的uuid，这个尤其重要，不修改的话也是无法正常进入系统的。ps.这些操作都是在移动硬盘的linux系统中进行的。</p>
<p>这时候重启进入bios中发现自动识别出了sda2也就是我的第二块efi分区中的grub引导，第一块的win引导没有识别。我就手动添加了一下发现启动出了问题，不能正常进入win。没办法逢山开路进winPE，bcdboot修复win引导。这时候需要注意的是你要指定win引导安装在哪个esp分区。到此的话已经win和linux都可以启动了，并且grub引导不会被win调包。</p>
<p>这种解决方法相对完美，但是没有解决win将自身调整为boot1的问题。</p>
<h2 id="需要注意的问题："><a href="#需要注意的问题：" class="headerlink" title="需要注意的问题："></a>需要注意的问题：</h2><ol>
<li>拆分分区时第二个esp分区的分区号可能会排到最后，也就是数值最大。这个你可以手动调整分区号，不过开机进入内置硬盘的win后分区号按照扇区的顺序自动调整。</li>
<li>备份win的引导我是没成功，如果又winPE的话可以不备份直接删除格式化，badboot重建win引导。</li>
<li>不要考虑在win下无损调整vfat文件系统的分区。</li>
<li>fstab文件一定要修改的，要不然进不去系统。</li>
</ol>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="http://blog.cumtpn.com/Linux/Esp-grub-uefi-windows.html" target="_blank" rel="external">ESP分区格式化，修复Windows&amp;Linux引导</a></p>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Grub2 </tag>
            
            <tag> Windows </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ESP分区格式化，修复Windows&Linux引导]]></title>
      <url>https://ygcaicn.github.io/Linux/Esp-grub-uefi-windows.html</url>
      <content type="html"><![CDATA[<p>ESP分区存放的UEFI引导程序，ESP分区被格式化意味着无法进入系统<br><a id="more"></a></p>
<h1 id="系统环境"><a href="#系统环境" class="headerlink" title="系统环境"></a>系统环境</h1><p>Windows10 64<br>Linuxmint 64</p>
<p>双系统</p>
<p>Windows UEFI引导<br>Linux Grub2引导</p>
<p>sda1是我的Esp分区。被我格式化过</p>
<pre><code>sudo mkfs.vfat /dev/sda1
</code></pre><p>Linux的boot是单独分区的，设备符为：/dev/sda5</p>
<h1 id="修复Linux-Grub2"><a href="#修复Linux-Grub2" class="headerlink" title="修复Linux Grub2"></a>修复Linux Grub2</h1><p>进入U盘进入live Linux</p>
<h2 id="方式一"><a href="#方式一" class="headerlink" title="方式一"></a>方式一</h2><p>从新安装grub2,</p>
<p>挂载esp分区：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo mkdir /mnt/esp</div><div class="line">sudo mount /dev/sda1 /mnt/esp</div></pre></td></tr></table></figure>
<p>挂载boot分区：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo mkdir /mnt/boot</div><div class="line">sudo mount /dev/sda5 /mnt/boot</div></pre></td></tr></table></figure>
<p><strong>Note:</strong> 这里为什么要挂载boot分区？</p>
<p>因为esp分区</p>
<p>grub-install的–boot-directory选项默认的是镜像安装位置为/boot/grub</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">--boot-directory=DIR   install GRUB images under the directory DIR/grub</div><div class="line">                       instead of the boot/grub directory</div></pre></td></tr></table></figure>
<p>为了追求与默认一致，其实也是为了以后更新方便，我们现在要在Live Linux下挂载你的boot分区，然后将Grub的镜像安装到硬盘上的Linux系统的/boot中。其实完全可以将Grub镜像安装到Esp分区中，我们在做U盘Grub时就是将镜像直接放到了Esp分区。</p>
<p>Esp分区只存放UEFI可以认识的efi程序，以及efi程序的字体文件等。</p>
<p>安装grub2:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo grub-install --target x86_64-efi --efi-directory /mnt/esp --boot-directory=/mnt/boot</div></pre></td></tr></table></figure>
<p>成功执行结果</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Installing for x86_64-efi platform.</div><div class="line">Installation finished. No error reported.</div></pre></td></tr></table></figure>
<p>错误信息类似于grub-install: error: /usr/lib/grub/x86_64-efi/modinfo.sh doesn’t exist. Please specify –target or –directory. 这样的话，就需要安装grub-pc或grub-efi之后再试。</p>
<pre><code>sudo apt-get install grub-efi -y
</code></pre><p><strong>note:</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">--efi-directory=DIR    use DIR as the EFI System Partition root</div></pre></td></tr></table></figure>
<p>生成grub.cfg</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo grub-mkconfig -o /mnt/boot/grub/grub.cfg</div></pre></td></tr></table></figure>
<p>这时候我们看一下esp分区中的内容：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">.</div><div class="line">└── EFI</div><div class="line">    └── ubuntu</div><div class="line">        └── grubx64.efi</div></pre></td></tr></table></figure>
<p>发现里面就只有一个grubx64.efi的文件。这个文件其实就是一个UEFI程序。在UEFI中可以识别这个程序，这个程序又引导CPU进入grub。那么这个程序是怎么找到Grub镜像的位置的呢？（有待查阅，这是不是意味着grub必须从新安装？方法2不可行？）</p>
<p>看看boot分区多了什么东西：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">grub</div><div class="line">├── fonts</div><div class="line">│   └── unicode.pf2</div><div class="line">├── grub.cfg</div><div class="line">├── grubenv</div><div class="line">├── locale</div><div class="line">│   ├── en_AU.mo</div><div class="line">│   ├── en_CA.mo</div><div class="line">│   ├── en_GB.mo</div><div class="line">│   └── en@quot.mo</div><div class="line">└── x86_64-efi</div><div class="line">    ├── acpi.mod</div><div class="line">    ├── adler32.mod</div><div class="line">    ├── affs.mod</div><div class="line">    ├── afs.mod</div><div class="line">    ├── ahci.mod</div><div class="line">    :</div><div class="line">    :</div><div class="line">    :</div><div class="line">    └── zfs.mod</div></pre></td></tr></table></figure>
<p>重启系统，在UEFI界面应该已经可以看到了grub的启动项。</p>
<p>启动着实进入了grub，也进入了Linux，但是进入的是emergency mode.</p>
<p>这让我百思不得其解，为什么无法进入图形界面？？？Google也没有找到答案，关键是系统没有提示有什么出错的地方。。。</p>
<p>Emergency下df -h发现有些不对的地方：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">jachin@jachin-Inspiron-5548 ~ $ df -h</div><div class="line">Filesystem      Size  Used Avail Use% Mounted on</div><div class="line">udev            3.9G     0  3.9G   0% /dev</div><div class="line">tmpfs           790M  1.5M  789M   1% /run</div><div class="line">/dev/sda7        19G   14G  4.2G  77% /</div><div class="line">tmpfs           3.9G   49M  3.9G   2% /dev/shm</div><div class="line">tmpfs           5.0M  4.0K  5.0M   1% /run/lock</div><div class="line">tmpfs           3.9G     0  3.9G   0% /sys/fs/cgroup</div><div class="line">/dev/sda5       180M  129M   39M  77% /boot</div><div class="line">cgmfs           100K     0  100K   0% /run/cgmanager/fs</div><div class="line">tmpfs           790M   36K  790M   1% /run/user/1000</div></pre></td></tr></table></figure></p>
<p>什么情况efi分区没挂载上。</p>
<p>问题解决：最后发现是/etc/fstab出了问题。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"># /etc/fstab: static file system information.</div><div class="line">#</div><div class="line"># Use &apos;blkid&apos; to print the universally unique identifier for a</div><div class="line"># device; this may be used with UUID= as a more robust way to name devices</div><div class="line"># that works even if disks are added and removed. See fstab(5).</div><div class="line">#</div><div class="line"># &lt;file system&gt; &lt;mount point&gt;   &lt;type&gt;  &lt;options&gt;       &lt;dump&gt;  &lt;pass&gt;</div><div class="line"># / was on /dev/sda7 during installation</div><div class="line">UUID=29fb7aca-a39d-485e-bcb2-4188ae03b085 /               ext4    errors=remount-ro 0       1</div><div class="line"># /boot was on /dev/sda5 during installation</div><div class="line">UUID=d5151999-209d-4a90-95f4-e4e70ab02ac7 /boot           ext4    defaults        0       2</div><div class="line"># /boot/efi was on /dev/sda1 during installation</div><div class="line">UUID=B178-A3FF  /boot/efi       vfat    umask=0077      0       1</div><div class="line"># swap was on /dev/sda6 during installation</div><div class="line">UUID=b6f30e1d-84b0-4b23-862c-82cb12773a4f none            swap    sw              0       0</div></pre></td></tr></table></figure>
<p><code>blkid</code>发现esp分区的UUID竟然与fstab中的不一样。推测是格式化会改变分区的UUID（有待查阅资料）so，把这里的UUID改了之后问题解决。成功进入Linux。</p>
<h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><p>直接拷贝一个grubx64.efi文件,到Esp分区中。</p>
<p>没有测试，不知道行不行。</p>
<h1 id="修复Windows-引导"><a href="#修复Windows-引导" class="headerlink" title="修复Windows 引导"></a>修复Windows 引导</h1><p>很简单，进入PE</p>
<p>执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">bcdboot c:\windows /s g: /f UEFI</div></pre></td></tr></table></figure></p>
<p>c:为Windows安装的盘符，g：为Esp分区的盘符。Esp分区盘符可以在Diskgens下查看。</p>
<p><code>/f UEFI</code>选项尽量加上吧，我的不加没有成功哦。</p>
<p>到此位置你的Windows已经可以启动了。</p>
<p>查看一下上面的命令都干了什么事,可以看到esp分区中只有一个目录：EFI</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line">EFI</div><div class="line">├── Boot</div><div class="line">│   └── bootx64.efi</div><div class="line">├── Microsoft</div><div class="line">│   ├── Boot</div><div class="line">│   │   ├── BCD</div><div class="line">│   │   ├── BCD.LOG</div><div class="line">│   │   ├── BCD.LOG1</div><div class="line">│   │   ├── BCD.LOG2</div><div class="line">│   │   ├── bg-BG</div><div class="line">│   │   │   ├── bootmgfw.efi.mui</div><div class="line">│   │   │   └── bootmgr.efi.mui</div><div class="line">│   │   ├── bootmgfw.efi</div><div class="line">│   │   ├── bootmgr.efi</div><div class="line">│   │   ├── BOOTSTAT.DAT</div><div class="line">│   │   ├── boot.stl</div><div class="line">│   │   ├── cs-CZ  语言文件</div><div class="line">│   │   │   ├── bootmgfw.efi.mui</div><div class="line">│   │   │   ├── bootmgr.efi.mui</div><div class="line">│   │   │   └── memtest.efi.mui</div><div class="line">│   │   ├── en-GB</div><div class="line">│   │   │   ├── bootmgfw.efi.mui</div><div class="line">│   │   │   └── bootmgr.efi.mui</div><div class="line">│   │   ├── en-US</div><div class="line">│   │   │   ├── bootmgfw.efi.mui</div><div class="line">│   │   │   ├── bootmgr.efi.mui</div><div class="line">│   │   │   └── memtest.efi.mui</div><div class="line">|   |   :</div><div class="line">|   |   :</div><div class="line">│   │   ├── zh-CN</div><div class="line">│   │   │   ├── bootmgfw.efi.mui</div><div class="line">│   │   │   ├── bootmgr.efi.mui</div><div class="line">│   │   │   └── memtest.efi.mui</div><div class="line">│   │   ├── Fonts  字体文件</div><div class="line">│   │   │   ├── chs_boot.ttf</div><div class="line">│   │   │   :</div><div class="line">│   │   │   :</div><div class="line">│   │   │   └── wgl4_boot.ttf</div><div class="line">│   │   ├── kd_02_10df.dll</div><div class="line">│   │   :</div><div class="line">│   │   :</div><div class="line">│   │   ├── kdstub.dll</div><div class="line">│   │   ├── memtest.efi</div><div class="line">│   │   ├── qps-ploc</div><div class="line">│   │   │   └── memtest.efi.mui</div><div class="line">│   │   └── Resources</div><div class="line">│   │       ├── bootres.dll</div><div class="line">│   │       ├── en-US</div><div class="line">│   │       │   └── bootres.dll.mui</div><div class="line">│   │       └── zh-CN</div><div class="line">│   │           └── bootres.dll.mui</div><div class="line">│   └── Recovery</div><div class="line">│       ├── BCD</div><div class="line">│       ├── BCD.LOG</div><div class="line">│       ├── BCD.LOG1</div><div class="line">│       └── BCD.LOG2</div><div class="line">└── ubuntu</div><div class="line">    └── grubx64.efi</div></pre></td></tr></table></figure>
<p>windows引导有几类文件：<br>efi文件memtest.efi bootmgr.efi bootmgfw.efi /Boot/bootmgfw.efi<br>字体文件 *.ttf<br>语言文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">zh-CN</div><div class="line">├── bootmgfw.efi.mui</div><div class="line">├── bootmgr.efi.mui</div><div class="line">└── memtest.efi.mui</div></pre></td></tr></table></figure></p>
<p>BCD文件 BCD引导修复这个是最重要的其他的那些文件都可以拷贝，这个不可以。所以前面的命令bcdboot主要任务就是修复这个BCD文件。当然还有其他的修复方式。</p>
<h1 id="Other-things"><a href="#Other-things" class="headerlink" title="Other things"></a>Other things</h1><p>现在系统都可以完美启动了，但是还有些不完没就是Grub的引导中没有Windows item。<br>进入Lilnux<br>执行   <code>update-grub2</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">jachin-Inspiron-5548 boot # update-grub2</div><div class="line">Generating grub configuration file ...</div><div class="line">Found linux image: /boot/vmlinuz-4.4.0-77-generic</div><div class="line">Found initrd image: /boot/initrd.img-4.4.0-77-generic</div><div class="line">Found linux image: /boot/vmlinuz-4.4.0-75-generic</div><div class="line">Found initrd image: /boot/initrd.img-4.4.0-75-generic</div><div class="line">Found Windows Boot Manager on /dev/sda1@/EFI/Microsoft/Boot/bootmgfw.efi</div><div class="line">Adding boot menu entry for EFI firmware configuration</div><div class="line">done</div></pre></td></tr></table></figure>
<p>okay,现在Grub的menu中已经有Windows选项了，到此完美修复。</p>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Grub Linux Windows </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[mathjax 测试]]></title>
      <url>https://ygcaicn.github.io/Linux/mathjax.html</url>
      <content type="html"><![CDATA[<p>$$\sum_{i=0}^n i^2 = \frac{(n^2+n)(2n+1)}{6}$$</p>
<a id="more"></a>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[【Machine Learning】机器学习：简明入门指南]]></title>
      <url>https://ygcaicn.github.io/Machine-Learning/Mechine-Learning.html</url>
      <content type="html"><![CDATA[<blockquote>
<p>本文是一篇转载自<a href="http://blog.jobbole.com/67616/" target="_blank" rel="external"><strong>伯乐在线的译文</strong></a>，英文原文是这里：<a href="https://medium.com/code-poet/80ea3ec3c471" target="_blank" rel="external"><strong>Machine Learning is Fun!</strong> — by Adam Geitgey</a></p>
</blockquote>
<p>在听到人们谈论机器学习的时候，你是不是对它的涵义只有几个模糊的认识呢？你是不是已经厌倦了在和同事交谈时只能一直点头？让我们改变一下吧！</p>
<p>本指南的读者对象是所有对机器学习有求知欲但却不知道如何开头的朋友。我猜很多人已经读过了<a href="https://en.wikipedia.org/wiki/Machine_learning" target="_blank" rel="external">“机器学习” ——维基百科词条</a>，倍感挫折，以为没人能给出一个高层次的解释。本文就是你们想要的东西。</p>
<p>本文目标在于平易近人，这意味着文中有大量的概括。但是谁在乎这些呢？只要能让读者对于ML更感兴趣，任务也就完成了。</p>
<a id="more"></a>
<h3 id="何为机器学习？"><a href="#何为机器学习？" class="headerlink" title="何为机器学习？"></a><strong>何为机器学习？</strong></h3><p>机器学习这个概念认为，对于待解问题，你无需编写任何专门的程序代码，遗传算法（generic algorithms）能够在数据集上为你得出有趣的答案。对于遗传算法，不用编码，而是将数据输入，它将在数据之上建立起它自己的逻辑。</p>
<p>举个例子，有一类算法称为分类算法，它可以将数据划分为不同的组别。一个用来识别手写数字的分类算法，不用修改一行代码，就可以用来将电子邮件分为垃圾邮件和普通邮件。算法没变，但是输入的训练数据变了，因此它得出了不同的分类逻辑。</p>
<p><img src="http://img.blog.csdn.net/20160814170910665" alt="机器学习算法是个黑盒，可以重用来解决很多不同的分类问题。"><br><em>机器学习算法是个黑盒，可以重用来解决很多不同的分类问题。</em></p>
<p>“机器学习”是一个涵盖性术语，覆盖了大量类似的遗传算法。</p>
<h3 id="两类机器学习算法"><a href="#两类机器学习算法" class="headerlink" title="两类机器学习算法"></a><strong>两类机器学习算法</strong></h3><p>你可以认为机器学习算法分为两大类：<strong>监督式学习</strong>（Supervised Learning）和<strong>非监督式学习</strong>（Unsupervised Learning）。两者区别很简单，但却非常重要。</p>
<h4 id="监督式学习"><a href="#监督式学习" class="headerlink" title="监督式学习"></a><strong>监督式学习</strong></h4><p>假设你是一名房产经纪，生意越做越大，因此你雇了一批实习生来帮你。但是问题来了——你可以看一眼房子就知道它到底值多少钱，实习生没有经验，不知道如何估价。</p>
<p>为了帮助你的实习生（也许是为了解放你自己去度个假），你决定写个小软件，可以根据房屋大小、地段以及类似房屋的成交价等因素来评估你所在地区房屋的价值。</p>
<p>你把3个月来城里每笔房屋交易都写了下来，每一单你都记录了一长串的细节——卧室数量、房屋大小、地段等等。但最重要的是，你写下了最终的成交价：</p>
<p>这是我们的“训练数据”:<br><img src="http://img.blog.csdn.net/20160814171156602" alt=""></p>
<p>我们要利用这些训练数据来编写一个程序来估算该地区其他房屋的价值：</p>
<p><img src="http://img.blog.csdn.net/20160814171239543" alt=""></p>
<p>这就称为<strong>监督式学习</strong>。你已经知道每一栋房屋的售价，换句话说，你知道问题的答案，并可以反向找出解题的逻辑。</p>
<p>为了编写软件，你将包含每一套房产的训练数据输入你的机器学习算法。算法尝试找出应该使用何种运算来得出价格数字。</p>
<p>这就像是算术练习题，算式中的运算符号都被擦去了：<br><img src="http://img.blog.csdn.net/20160814171313166" alt=""><br><em>天哪！一个阴险的学生将老师答案上的算术符号全擦去了。</em></p>
<p>看了这些题，你能明白这些测验里面是什么样的数学问题吗？你知道，你应该对算式左边的数字“做些什么”以得出算式右边的答案。</p>
<p>在监督式学习中，你是让计算机为你算出数字间的关系。而一旦你知道了解决这类特定问题所需要的数学方法后，你就可以解答同类的其它问题了。</p>
<h4 id="非监督式学习"><a href="#非监督式学习" class="headerlink" title="非监督式学习"></a><strong>非监督式学习</strong></h4><p>让我们回到开头那个房地产经纪的例子。要是你不知道每栋房子的售价怎么办？即使你所知道的只是房屋的大小、位置等信息，你也可以搞出很酷的花样。这就是所谓的非监督式学习。</p>
<p><img src="http://img.blog.csdn.net/20160814171439231" alt="即使你不是想去预测未知的数据（如价格），你也可以运用机器学习完成一些有意思的事。"><br><em>即使你不是想去预测未知的数据（如价格），你也可以运用机器学习完成一些有意思的事。</em></p>
<p>这就有点像有人给你一张纸，上面列出了很多数字，然后对你说:“我不知道这些数字有什么意义，也许你能从中找出规律或是能将它们分类，或是其它什么-祝你好运！”</p>
<p>你该怎么处理这些数据呢？首先，你可以用个算法自动地从数据中划分出不同的细分市场。也许你会发现大学附近的买房者喜欢户型小但卧室多的房子，而郊区的买房者偏好三卧室的大户型。这些信息可以直接帮助你的营销。</p>
<p>你还可以作件很酷的事，自动找出房价的离群数据，即与其它数据迥异的值。这些鹤立鸡群的房产也许是高楼大厦，而你可以将最优秀的推销员集中在这些地区，因为他们的佣金更高。</p>
<p>本文余下部分我们主要讨论监督式学习，但这并不是因为非监督式学习用处不大或是索然无味。实际上，随着算法改良，不用将数据和正确答案联系在一起，因此非监督式学习正变得越来越重要。</p>
<p>老学究请看:还有很多其它种类的机器学习算法。但初学时这样理解不错了。</p>
<h3 id="太酷了，但是评估房价真能被看作“学习”吗？"><a href="#太酷了，但是评估房价真能被看作“学习”吗？" class="headerlink" title="太酷了，但是评估房价真能被看作“学习”吗？"></a><strong>太酷了，但是评估房价真能被看作“学习”吗？</strong></h3><p>作为人类的一员，你的大脑可以应付绝大多数情况，并且没有任何明确指令也能够学习如何处理这些情况。如果你做房产经纪时间很长，你对于房产的合适定价、它的最佳营销方式以及哪些客户会感兴趣等等都会有一种本能般的“感觉”。强人工智能（Strong AI）研究的目标就是要能够用计算机复制这种能力。</p>
<p>但是目前的机器学习算法还没有那么好——它们只能专注于非常特定的、有限的问题。也许在这种情况下，“学习”更贴切的定义是“在少量范例数据的基础上找出一个等式来解决特定的问题”。</p>
<p>不幸的是，“机器在少量范例数据的基础上找出一个等式来解决特定的问题”这个名字太烂了。所以最后我们用“机器学习”取而代之。</p>
<p>当然，要是你是在50年之后来读这篇文章，那时我们已经得出了强人工智能算法，而本文看起来就像个老古董。未来的人类，你还是别读了，叫你的机器仆人给你做份三明治吧。</p>
<h3 id="让我们写代码吧"><a href="#让我们写代码吧" class="headerlink" title="让我们写代码吧!"></a><strong>让我们写代码吧!</strong></h3><p>前面例子中评估房价的程序，你打算怎么写呢？往下看之前，先思考一下吧。</p>
<p>如果你对机器学习一无所知，很有可能你会尝试写出一些基本规则来评估房价，如下：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">estimate_house_sales_price</span><span class="params">(num_of_bedrooms, sqft, neighborhood)</span>:</span></div><div class="line">  price = <span class="number">0</span></div><div class="line"></div><div class="line">  <span class="comment"># In my area, the average house costs $200 per sqft</span></div><div class="line">  price_per_sqft = <span class="number">200</span></div><div class="line"></div><div class="line">  <span class="keyword">if</span> neighborhood == <span class="string">"hipsterton"</span>:</div><div class="line">    <span class="comment"># but some areas cost a bit more</span></div><div class="line">    price_per_sqft = <span class="number">400</span></div><div class="line"></div><div class="line">  <span class="keyword">elif</span> neighborhood == <span class="string">"skid row"</span>:</div><div class="line">    <span class="comment"># and some areas cost less</span></div><div class="line">    price_per_sqft = <span class="number">100</span></div><div class="line"></div><div class="line">  <span class="comment"># start with a base price estimate based on how big the place is</span></div><div class="line">  price = price_per_sqft * sqft</div><div class="line"></div><div class="line">  <span class="comment"># now adjust our estimate based on the number of bedrooms</span></div><div class="line">  <span class="keyword">if</span> num_of_bedrooms == <span class="number">0</span>:</div><div class="line">    <span class="comment"># Studio apartments are cheap</span></div><div class="line">    price = price — <span class="number">20000</span></div><div class="line">  <span class="keyword">else</span>:</div><div class="line">    <span class="comment"># places with more bedrooms are usually</span></div><div class="line">    <span class="comment"># more valuable</span></div><div class="line">    price = price + (num_of_bedrooms * <span class="number">1000</span>)</div><div class="line"></div><div class="line"> <span class="keyword">return</span> price</div></pre></td></tr></table></figure>
<p>假如你像这样瞎忙几个小时，也许会取得一点成效，但是你的程序永不会完美，而且当价格变化时很难维护。</p>
<p>如果能让计算机找出实现上述函数功能的办法，这样岂不更好？只要返回的房价数字正确，谁会在乎函数具体干了些什么呢？</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">estimate_house_sales_price</span><span class="params">(num_of_bedrooms, sqft, neighborhood)</span>:</span></div><div class="line">  price = &lt;computer, plz do some math <span class="keyword">for</span> me&gt;</div><div class="line"></div><div class="line">  <span class="keyword">return</span> price</div></pre></td></tr></table></figure>
<p>考虑这个问题的一种角度是将房价看做一碗美味的汤，而汤中成分就是卧室数、面积和地段。如果你能算出每种成分对最终的价格有多大影响，也许就能得到各种成分混合起来形成最终价格的具体比例。</p>
<p>这样可以将你最初的程序（全是疯狂的if else语句）简化成类似如下的样子：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">estimate_house_sales_price</span><span class="params">(num_of_bedrooms, sqft, neighborhood)</span>:</span></div><div class="line"> price = <span class="number">0</span></div><div class="line"></div><div class="line"> <span class="comment"># a little pinch of this</span></div><div class="line"> price += num_of_bedrooms * <span class="number">.841231951398213</span></div><div class="line"></div><div class="line"> <span class="comment"># and a big pinch of that</span></div><div class="line"> price += sqft * <span class="number">1231.1231231</span></div><div class="line"></div><div class="line"> <span class="comment"># maybe a handful of this</span></div><div class="line"> price += neighborhood * <span class="number">2.3242341421</span></div><div class="line"></div><div class="line"> <span class="comment"># and finally, just a little extra salt for good measure</span></div><div class="line"> price += <span class="number">201.23432095</span></div><div class="line"></div><div class="line"> <span class="keyword">return</span> price</div></pre></td></tr></table></figure>
<p>请注意那些用粗体标注的神奇数字——<strong>.841231951398213</strong>, <strong>1231.1231231</strong>,<strong>2.3242341421</strong>, 和<strong>201.23432095</strong>。它们称为权重。如果我们能找出对每栋房子都适用的完美权重，我们的函数就能预测所有的房价！</p>
<p>找出最佳权重的一种笨办法如下所示：</p>
<h4 id="步骤1："><a href="#步骤1：" class="headerlink" title="步骤1："></a><strong>步骤1：</strong></h4><p>首先，将每个权重都设为1.0：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">estimate_house_sales_price</span><span class="params">(num_of_bedrooms, sqft, neighborhood)</span>:</span></div><div class="line">  price = <span class="number">0</span></div><div class="line"></div><div class="line">  <span class="comment"># a little pinch of this</span></div><div class="line">  price += num_of_bedrooms * <span class="number">1.0</span></div><div class="line"></div><div class="line">  <span class="comment"># and a big pinch of that</span></div><div class="line">  price += sqft * <span class="number">1.0</span></div><div class="line"></div><div class="line">  <span class="comment"># maybe a handful of this</span></div><div class="line">  price += neighborhood * <span class="number">1.0</span></div><div class="line"></div><div class="line">  <span class="comment"># and finally, just a little extra salt for good measure</span></div><div class="line">  price += <span class="number">1.0</span></div><div class="line"></div><div class="line">  <span class="keyword">return</span> price</div></pre></td></tr></table></figure>
<h4 id="步骤2："><a href="#步骤2：" class="headerlink" title="步骤2："></a><strong>步骤2：</strong></h4><p>将每栋房产带入你的函数运算，检验估算值与正确价格的偏离程度：</p>
<p><img src="http://img.blog.csdn.net/20160814172040052" alt="运用你的程序预测房屋价格。"><br><em>运用你的程序预测房屋价格。</em></p>
<p>例如：上表中第一套房产实际成交价为25万美元，你的函数估价为17.8万，这一套房产你就差了7.2万。</p>
<p>再将你的数据集中的每套房产估价偏离值平方后求和。假设数据集中有500套房产交易，估价偏离值平方求和总计为86,123,373美元。这就反映了你的函数现在的“正确”程度。</p>
<p>现在，将总计值除以500，得到每套房产的估价偏离平均值。将这个平均误差值称为你函数的代价。</p>
<p>如果你能调整权重使得这个代价变为0，你的函数就完美了。它意味着，根据输入的数据，你的程序对每一笔房产交易的估价都是分毫不差。而这就是我们的目标——尝试不同的权重值以使代价尽可能的低。</p>
<h4 id="步骤3："><a href="#步骤3：" class="headerlink" title="步骤3："></a><strong>步骤3：</strong></h4><p>不断重复步骤2，尝试<strong>所有可能的权重值组合</strong>。哪一个组合使得代价最接近于0，它就是你要使用的，你只要找到了这样的组合，问题就得到了解决!</p>
<h3 id="思想扰动时间"><a href="#思想扰动时间" class="headerlink" title="思想扰动时间"></a><strong>思想扰动时间</strong></h3><p>这太简单了，对吧？想一想刚才你做了些什么。你取得了一些数据，将它们输入至三个通用的简单步骤中，最后你得到了一个可以对你所在区域的房屋进行估价的函数。房价网，要当心咯！<br>但是下面的事实可能会扰乱你的思想：</p>
<p>1.过去40年来，很多领域（如语言学/翻译学）的研究表明，这种通用的“搅动数据汤”（我编造的词）式的学习算法已经胜过了需要利用真人明确规则的方法。机器学习的“笨”办法最终打败了人类专家。</p>
<p>2.你最后写出的函数真是笨，它甚至不知道什么是“面积”和“卧室数”。它知道的只是搅动，改变数字来得到正确的答案。</p>
<p>3.很可能你都不知道为何一组特殊的权重值能起效。所以你只是写出了一个你实际上并不理解却能证明的函数。</p>
<p>4.试想一下，你的程序里没有类似“面积”和“卧室数”这样的参数，而是接受了一组数字。假设每个数字代表了你车顶安装的摄像头捕捉的画面中的一个像素，再将预测的输出不称为“价格”而是叫做“方向盘转动度数”，这样你就得到了一个程序可以自动操纵你的汽车了！</p>
<p>太疯狂了，对吧？</p>
<h3 id="步骤3中的“尝试每个数字”怎么回事？"><a href="#步骤3中的“尝试每个数字”怎么回事？" class="headerlink" title="步骤3中的“尝试每个数字”怎么回事？"></a><strong>步骤3中的“尝试每个数字”怎么回事？</strong></h3><p>好吧，当然你不可能尝试所有可能的权重值来找到效果最好的组合。那可真要花很长时间，因为要尝试的数字可能无穷无尽。</p>
<p>为避免这种情况，数学家们找到了很多聪明的办法（比如<a href="https://en.wikipedia.org/wiki/Gradient_descent" target="_blank" rel="external"><strong>Gradient descent算法</strong></a>）来快速找到优秀的权重值，而不需要尝试过多。下面是其中一种：</p>
<p>首先，写出一个简单的等式表示前述步骤2，这是你的代价函数：</p>
<p><img src="http://img.blog.csdn.net/20160814172434798" alt=""></p>
<p>接着，让我们将这同一个等式用机器学习的数学术语（现在你可以忽略它们）进行重写：</p>
<p><img src="http://img.blog.csdn.net/20160814172527111" alt=""><br><em>θ表示当前的权重值。 J(θ) 意为“当前权重值对应的代价”。</em></p>
<p>这个等式表示我们的估价程序在当前权重值下偏离程度的大小。<br>如果将所有赋给卧室数和面积的可能权重值以图形形式显示，我们会得到类似下图的图表：</p>
<p><img src="http://img.blog.csdn.net/20160814172601908" alt=""><br><em>代价函数的图形像一支碗。纵轴表示代价。</em></p>
<p>图中蓝色的最低点就是代价最低的地方——即我们的程序偏离最小。最高点意味着偏离最大。所以，如果我们能找到一组权重值带领我们到达图中的最低点，我们就找到了答案！</p>
<p><img src="http://img.blog.csdn.net/20160814172634361" alt=""></p>
<p>因此，我们只需要调整权重值使我们在图上能向着最低点“走下坡路”。如果对于权重的细小调节能一直使我们保持向最低点移动，那么最终我们不用尝试太多权重值就能到达那里。</p>
<p>如果你还记得一点微积分的话，你也许记得如果你对一个函数求导，结果会告诉你函数在任一点的斜率。换句话说，对于图上给定一点，它告诉我们那条路是下坡路。我们可以利用这一点朝底部进发。</p>
<p>所以，如果我们对代价函数关于每一个权重求偏导，那么我们就可以从每一个权重中减去该值。这样可以让我们更加接近山底。一直这样做，最终我们将到达底部，得到权重的最优值。（读不懂？不用担心，接着往下读）。</p>
<p>这种找出最佳权重的办法被称为<strong>批量梯度下降</strong>，上面是对它的高度概括。如果想搞懂细节，不要害怕，继续深入下去吧。</p>
<p>当你使用机器学习算法库来解决实际问题，所有这些都已经为你准备好了。但明白一些具体细节总是有用的。</p>
<h3 id="还有什么你随便就略过了？"><a href="#还有什么你随便就略过了？" class="headerlink" title="还有什么你随便就略过了？"></a><strong>还有什么你随便就略过了？</strong></h3><p>上面我描述的三步算法被称为<strong>多元线性回归</strong>。你估算等式是在求一条能够拟合所有房价数据点的直线。然后，你再根据房价在你的直线上可能出现的位置用这个等式来估算从未见过的房屋的价格。这个想法威力强大，可以用它来解决“实际”问题。</p>
<p>但是，我为你展示的这种方法可能在简单的情况下有效，它不会在所有情况下都有用。原因之一是因为房价不会一直那么简单地跟随一条连续直线。</p>
<p>但是，幸运的是，有很多办法来处理这种情况。对于非线性数据，很多其他类型的机器学习算法可以处理（如神经网络或有核向量机）。还有很多方法运用线性回归更灵活，想到了用更复杂的线条来拟合。在所有的情况中，寻找最优权重值这一基本思路依然适用。</p>
<p>还有，我忽略了<strong>过拟合</strong>的概念。很容易碰上这样一组权重值，它们对于你原始数据集中的房价都能完美预测，但对于原始数据集之外的任何新房屋都预测不准。这种情况的解决之道也有不少（如正则化以及使用交叉验证数据集）。学会如何处理这一问题对于顺利应用机器学习至关重要。</p>
<p>换言之，基本概念非常简单，要想运用机器学习得到有用的结果还需要一些技巧和经验。但是，这是每个开发者都能学会的技巧。</p>
<h3 id="机器学习法力无边吗？"><a href="#机器学习法力无边吗？" class="headerlink" title="机器学习法力无边吗？"></a><strong>机器学习法力无边吗？</strong></h3><p>一旦你开始明白机器学习技术很容易应用于解决貌似很困难的问题（如手写识别），你心中会有一种感觉，只要有足够的数据，你就能够用机器学习解决任何问题。只需要将数据输入进去，就能看到计算机变戏法一样找出拟合数据的等式。</p>
<p>但是很重要的一点你要记住，机器学习只能对用你占有的数据实际可解的问题才适用。</p>
<p>例如，如果你建立了一个模型来根据每套房屋内盆栽数量来预测房价，它就永远不会成功。房屋内盆栽数量和房价之间没有任何的关系。所以，无论它怎么去尝试，计算机也推导不出两者之间的关系。</p>
<p><img src="http://img.blog.csdn.net/20160814172839065" alt=""><br><em>你只能对实际存在的关系建模。</em></p>
<h3 id="怎样深入学习机器学习"><a href="#怎样深入学习机器学习" class="headerlink" title="怎样深入学习机器学习"></a><strong>怎样深入学习机器学习</strong></h3><p>我认为，当前机器学习的最大问题是它主要活跃于学术界和商业研究组织中。对于圈外想要有个大体了解而不是想成为专家的人们，简单易懂的学习资料不多。但是这一情况每一天都在改善。</p>
<p>吴恩达教授（Andrew Ng）在<a href="https://www.coursera.org/learn/machine-learning" target="_blank" rel="external"><strong>Coursera上的机器学习免费课程</strong></a>非常不错。我强烈建议由此入门。任何拥有计算机科学学位、还能记住一点点数学的人应该都能理解。</p>
<p>另外，你还可以下载安装<a href="http://scikit-learn.org/stable/" target="_blank" rel="external"><code>SciKit-Learn</code></a>，用它来试验成千上万的机器学习算法。它是一个python框架，对于所有的标准算法都有“黑盒”版本。</p>
]]></content>
      
        <categories>
            
            <category> Machine Learning </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Machine Learning </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[python基础]]></title>
      <url>https://ygcaicn.github.io/Python/python%E5%9F%BA%E7%A1%80.html</url>
      <content type="html"><![CDATA[<h1 id="Strings"><a href="#Strings" class="headerlink" title="Strings"></a>Strings</h1><blockquote>
<p>A string is a sequence of values that represent Unicode code points. All the code points in the range U+0000 - U+10FFFF can be represented in a string. Python doesn’t have a char type; instead, every code point in the string is represented as a string object with length 1. The built-in function ord() converts a code point from its string form to an integer in the range 0 - 10FFFF; chr() converts an integer in the range 0 - 10FFFF to the corresponding length 1 string object. <code>str.encode()</code> can be used to convert a str to bytes using the given text encoding, and <code>bytes.decode()</code> can be used to achieve the opposite.</p>
</blockquote>
<a id="more"></a>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#str-&gt;bytes  </span></div><div class="line">str.encode(encoding=<span class="string">'UTF-8'</span>)</div><div class="line"></div><div class="line"><span class="comment">#bytes-&gt;str  </span></div><div class="line">bytes.decode(encoding=<span class="string">'UTF-8'</span>)</div></pre></td></tr></table></figure>
<p>document <a href="https://docs.python.org/" target="_blank" rel="external">https://docs.python.org/</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">urllib  </div><div class="line">     urllib.error Exception classes raised by urllib.request.</div><div class="line">     urllib.parse Parse URLs into or assemble them from components.</div><div class="line">     urllib.request Extensible library for opening URLs.</div><div class="line">     urllib.response Response classes used by urllib.</div><div class="line">     urllib.robotparser Load a robots.txt file and answer questions about fetchability of other URLs.</div></pre></td></tr></table></figure>
<h1 id="标准数据类型"><a href="#标准数据类型" class="headerlink" title="标准数据类型"></a>标准数据类型</h1><ul>
<li>Python3 中有六个标准的数据类型：</li>
<li>Number（数字）    123</li>
<li>String（字符串）  ‘abc’/“abc”</li>
<li>List（列表）      []</li>
<li>Tuple（元组）     ()</li>
<li>Sets（集合）      ({})</li>
<li>Dictionary（字典）{key:value}<br>*</li>
</ul>
<blockquote>
<p>I have a tuple of tuples from a MySQL query like this:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">T1 = ((&apos;13&apos;, &apos;17&apos;, &apos;18&apos;, &apos;21&apos;, &apos;32&apos;),</div><div class="line">      (&apos;07&apos;, &apos;11&apos;, &apos;13&apos;, &apos;14&apos;, &apos;28&apos;),</div><div class="line">      (&apos;01&apos;, &apos;05&apos;, &apos;06&apos;, &apos;08&apos;, &apos;15&apos;, &apos;16&apos;))</div></pre></td></tr></table></figure></p>
</blockquote>
<p>I’d like to convert all the string elements into integers and put it back nicely to list of lists this time:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">T2 = [[13, 17, 18, 21, 32], [7, 11, 13, 14, 28], [1, 5, 6, 8, 15, 16]]</div></pre></td></tr></table></figure></p>
<p>I tried to achieve it with eval but didn’t get any decent result yet.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[[int(column) for column in row] for row in T1]</div></pre></td></tr></table></figure></p>
<h1 id="一张图看Python"><a href="#一张图看Python" class="headerlink" title="一张图看Python"></a>一张图看Python</h1><p><img src="http://i.imgur.com/gAdiDlB.png" alt="Imgur"></p>
<h1 id="Python网络编程-百度语音接口实例"><a href="#Python网络编程-百度语音接口实例" class="headerlink" title="Python网络编程-百度语音接口实例"></a>Python网络编程-百度语音接口实例</h1><figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#</span></div><div class="line">  <span class="number">1</span> <span class="comment">#!/usr/bin/python3</span></div><div class="line">  <span class="number">2</span></div><div class="line">  <span class="number">3</span> <span class="keyword">import</span> urllib</div><div class="line">  <span class="number">4</span> <span class="keyword">import</span> urllib.request</div><div class="line">  <span class="number">5</span> <span class="keyword">import</span> urllib.parse</div><div class="line">  <span class="number">6</span> <span class="keyword">import</span> json</div><div class="line">  <span class="number">7</span> <span class="keyword">import</span> os</div><div class="line">  <span class="number">8</span> <span class="keyword">import</span> sys</div><div class="line">  <span class="number">9</span> <span class="keyword">import</span> hashlib</div><div class="line"> <span class="number">10</span> <span class="keyword">import</span> uuid</div><div class="line"> <span class="number">11</span> <span class="keyword">import</span> base64</div><div class="line"> <span class="number">12</span></div><div class="line"> <span class="number">13</span> <span class="class"><span class="keyword">class</span> <span class="title">BaiduRest</span>:</span></div><div class="line"> <span class="number">14</span>         <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,cu_id,api_key,api_secret)</span>:</span></div><div class="line"> <span class="number">15</span>                 self.toKen_url = <span class="string">"https://openapi.baidu.com/oauth/2.0/token?grant_type=client_credentials&amp;client_id=%s&amp;client_secret=%s&amp;"</span></div><div class="line"> <span class="number">16</span>                 self.getVoice_url = <span class="string">"http://tsn.baidu.com/text2audio"</span></div><div class="line"> <span class="number">17</span>                 self.upVoice_url = <span class="string">'http://vop.baidu.com/server_api'</span></div><div class="line"> <span class="number">18</span>                 self.cu_id = cu_id</div><div class="line"> <span class="number">19</span>                 self.api_key = api_key</div><div class="line"> <span class="number">20</span>                 self.api_secret = api_secret</div><div class="line"> <span class="number">21</span>                 <span class="keyword">if</span> <span class="keyword">not</span>  os.path.isdir(<span class="string">"./cache/"</span>):</div><div class="line"> <span class="number">22</span>                         os.mkdir(<span class="string">"./cache/"</span>)</div><div class="line"> <span class="number">23</span>                         os.mkdir(<span class="string">"./cache/audio"</span>)</div><div class="line"> <span class="number">24</span>                 <span class="keyword">if</span> <span class="keyword">not</span>  os.path.isdir(<span class="string">"./cache/audio"</span>):</div><div class="line"> <span class="number">25</span>                         os.mkdir(<span class="string">"./cache/audio"</span>)</div><div class="line"> <span class="number">26</span>                 <span class="keyword">try</span>:</div><div class="line"> <span class="number">27</span>                         file_toKen = open(<span class="string">"./cache/access_toKen"</span>,<span class="string">'r'</span>)</div><div class="line"> <span class="number">28</span>                         self.toKen = file_toKen.read()</div><div class="line"> <span class="number">29</span>                 <span class="keyword">except</span> FileNotFoundError:</div><div class="line"> <span class="number">30</span>                         self.getToKen(api_key,api_secret)</div><div class="line"> <span class="number">31</span>                 <span class="keyword">pass</span></div><div class="line"> <span class="number">32</span></div><div class="line"> <span class="number">33</span></div><div class="line"> <span class="number">34</span>         <span class="function"><span class="keyword">def</span> <span class="title">getToKen</span><span class="params">(self,api_key,api_secret)</span>:</span></div><div class="line"> <span class="number">35</span>                 self.toKen_url = self.toKen_url % (api_key,api_secret)</div><div class="line"> <span class="number">36</span>                 r_str = urllib.request.urlopen(self.toKen_url).read()</div><div class="line"> <span class="number">37</span>                 r_str = r_str.decode(encoding=<span class="string">"UTF-8"</span>)</div><div class="line"> <span class="number">38</span>                 r_json = json.loads(r_str)</div><div class="line"> <span class="number">39</span>                 self.toKen = r_json[<span class="string">"access_token"</span>]</div><div class="line"> <span class="number">40</span>                 file_toKen = open(<span class="string">"./cache/access_toKen"</span>,<span class="string">"w"</span>)</div><div class="line"> <span class="number">41</span>                 file_toKen.write(self.toKen)</div><div class="line"> <span class="number">42</span>                 file_toKen.close()</div><div class="line"> <span class="number">43</span>                 <span class="keyword">pass</span></div><div class="line"> <span class="number">44</span></div><div class="line"> <span class="number">45</span>         <span class="function"><span class="keyword">def</span> <span class="title">getVoice</span><span class="params">(self,text,filename)</span>:</span></div><div class="line"> <span class="number">46</span>                 <span class="comment">#POST</span></div><div class="line"> <span class="number">47</span>                 params = urllib.parse.urlencode(&#123;<span class="string">'tex'</span>:urllib.parse.quote(text),<span class="string">'lan'</span>:<span class="string">'zh'</span>,<span class="string">'cuid'</span>:self.cu_id,<span class="string">'ctp'</span>:<span class="number">1</span>,<span class="string">'tok'</span>:urllib.parse.quote(self.toKen)&#125;)</div><div class="line"> <span class="number">48</span>                 real_url = urllib.request.Request(self.getVoice_url,params.encode(<span class="string">"utf-8"</span>))</div><div class="line"> <span class="number">49</span>                 httpResponse = urllib.request.urlopen(real_url)</div><div class="line"> <span class="number">50</span>                 <span class="keyword">if</span> httpResponse.getheader(<span class="string">'Content-type'</span>) == <span class="string">'audio/mp3'</span>:</div><div class="line"> <span class="number">51</span>                         <span class="comment">#print("toKen successful!")</span></div><div class="line"> <span class="number">52</span>                         <span class="comment">#os.system('date')</span></div><div class="line"> <span class="number">53</span>                         file_mp3 = open(filename,<span class="string">"wb+"</span>)</div><div class="line"> <span class="number">54</span>                         file_mp3.write(httpResponse.read())</div><div class="line"> <span class="number">55</span>                         file_mp3.close()</div><div class="line"> <span class="number">56</span>                 <span class="keyword">else</span>:</div><div class="line"> <span class="number">57</span>                         self.getToKen(self.api_key,self.api_secret)</div><div class="line"> <span class="number">39</span>                 self.toKen = r_json[<span class="string">"access_token"</span>]</div><div class="line"> <span class="number">40</span>                 file_toKen = open(<span class="string">"./cache/access_toKen"</span>,<span class="string">"w"</span>)</div><div class="line"> <span class="number">41</span>                 file_toKen.write(self.toKen)</div><div class="line"> <span class="number">42</span>                 file_toKen.close()</div><div class="line"> <span class="number">43</span>                 <span class="keyword">pass</span></div><div class="line"> <span class="number">44</span></div><div class="line"> <span class="number">45</span>         <span class="function"><span class="keyword">def</span> <span class="title">getVoice</span><span class="params">(self,text,filename)</span>:</span></div><div class="line"> <span class="number">46</span>                 <span class="comment">#POST</span></div><div class="line"> <span class="number">47</span>                 params = urllib.parse.urlencode(&#123;<span class="string">'tex'</span>:urllib.parse.quote(text),<span class="string">'lan'</span>:<span class="string">'zh'</span>,<span class="string">'cuid'</span>:self.cu_id,<span class="string">'ctp'</span>:<span class="number">1</span>,<span class="string">'tok'</span>:urllib.parse.quote(self.toKen)&#125;)</div><div class="line"> <span class="number">48</span>                 real_url = urllib.request.Request(self.getVoice_url,params.encode(<span class="string">"utf-8"</span>))</div><div class="line"> <span class="number">49</span>                 httpResponse = urllib.request.urlopen(real_url)</div><div class="line"> <span class="number">50</span>                 <span class="keyword">if</span> httpResponse.getheader(<span class="string">'Content-type'</span>) == <span class="string">'audio/mp3'</span>:</div><div class="line"> <span class="number">51</span>                         <span class="comment">#print("toKen successful!")</span></div><div class="line"> <span class="number">52</span>                         <span class="comment">#os.system('date')</span></div><div class="line"> <span class="number">53</span>                         file_mp3 = open(filename,<span class="string">"wb+"</span>)</div><div class="line"> <span class="number">54</span>                         file_mp3.write(httpResponse.read())</div><div class="line"> <span class="number">55</span>                         file_mp3.close()</div><div class="line"> <span class="number">56</span>                 <span class="keyword">else</span>:</div><div class="line"> <span class="number">57</span>                         self.getToKen(self.api_key,self.api_secret)</div><div class="line"> <span class="number">54</span>                         file_mp3.write(httpResponse.read())</div><div class="line"> <span class="number">54</span>                         file_mp3.write(httpResponse.read())</div><div class="line"> <span class="number">54</span>                         file_mp3.write(httpResponse.read())</div><div class="line"> <span class="number">55</span>                         file_mp3.close()</div><div class="line"> <span class="number">56</span>                 <span class="keyword">else</span>:</div><div class="line"> <span class="number">57</span>                         self.getToKen(self.api_key,self.api_secret)</div><div class="line"> <span class="number">58</span>                         self.getVoice(text,filename)</div><div class="line"> <span class="number">59</span></div><div class="line"> <span class="number">60</span>                 <span class="keyword">pass</span></div><div class="line"> <span class="number">61</span>         <span class="function"><span class="keyword">def</span> <span class="title">getText</span><span class="params">(self, filename)</span>:</span></div><div class="line"> <span class="number">62</span>                 data = &#123;&#125;</div><div class="line"> <span class="number">63</span>                 data[<span class="string">'format'</span>] = <span class="string">'wav'</span></div><div class="line"> <span class="number">64</span>                 data[<span class="string">'rate'</span>] = <span class="number">16000</span></div><div class="line"> <span class="number">65</span>                 data[<span class="string">'channel'</span>] = <span class="number">1</span></div><div class="line">  <span class="number">6</span>                 data[<span class="string">'cuid'</span>] = self.cu_id</div><div class="line"> <span class="number">67</span>                 data[<span class="string">'token'</span>] = self.toKen</div><div class="line"> <span class="number">68</span>                 wav_fp = open(filename,<span class="string">'rb'</span>)</div><div class="line"> <span class="number">69</span>                 voice_data = wav_fp.read()</div><div class="line"> <span class="number">70</span>                 data[<span class="string">'len'</span>] = len(voice_data)</div><div class="line"> <span class="number">71</span>                 data[<span class="string">'speech'</span>] = base64.b64encode(voice_data).decode(<span class="string">'utf-8'</span>)</div><div class="line"> <span class="number">72</span>                 post_data = json.dumps(data)</div><div class="line"> <span class="number">73</span>                 reque = urllib.request.Request(self.upVoice_url,post_data.encode(encoding=<span class="string">"UTF-8"</span>))</div><div class="line"> <span class="number">74</span>                 r_data = urllib.request.urlopen(reque).read()</div><div class="line"> <span class="number">75</span>                 <span class="comment"># 3.处理返回数据</span></div><div class="line"> <span class="number">76</span>                 r_json = json.loads(r_data.decode(encoding=<span class="string">'utf-8'</span>))</div><div class="line"> <span class="number">77</span>                 <span class="keyword">if</span> <span class="string">'result'</span> <span class="keyword">in</span> r_json:</div><div class="line"> <span class="number">78</span>                         <span class="keyword">return</span>  r_json[<span class="string">'result'</span>]</div><div class="line"> <span class="number">79</span>                 <span class="keyword">else</span>:</div><div class="line"> <span class="number">80</span>                         print(r_json)</div><div class="line"> <span class="number">81</span>                         <span class="keyword">return</span> r_json[<span class="string">'err_no'</span>]</div><div class="line"> <span class="number">82</span></div><div class="line"> <span class="number">83</span> <span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</div><div class="line"> <span class="number">84</span>         os.system(<span class="string">'date'</span>)</div><div class="line"> <span class="number">85</span>         api_key = <span class="string">"6PPBMVeF1BIWbXmNuUfEivK3"</span></div><div class="line"> <span class="number">86</span>         api_secret = <span class="string">"0c5ee6597954b09bee9083624ff3d9a4"</span></div><div class="line"> <span class="number">87</span>         text = sys.argv[<span class="number">1</span>]</div><div class="line"> <span class="number">88</span>         tmpname_wav = hashlib.md5(text.encode(encoding=<span class="string">"UTF-8"</span>)).hexdigest() + <span class="string">'.wav'</span></div><div class="line"> <span class="number">89</span>         tmpname_wav = <span class="string">'./cache/audio/'</span> + tmpname_wav</div><div class="line"> <span class="number">90</span>         <span class="keyword">if</span> os.path.isfile(tmpname_wav):</div><div class="line"> <span class="number">91</span>                 print(<span class="string">"exist!"</span>)</div><div class="line"> <span class="number">92</span>                 os.system(<span class="string">"omxplayer --loop \""</span> + tmpname_wav + <span class="string">'\"'</span>)</div><div class="line"> <span class="number">93</span>         <span class="keyword">else</span>:</div><div class="line"> <span class="number">94</span>                 mac = uuid.UUID(int = uuid.getnode()).hex[<span class="number">-12</span>:]</div><div class="line"> <span class="number">95</span>                 mac = <span class="string">":"</span>.join([mac[e:e+<span class="number">2</span>] <span class="keyword">for</span> e <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">11</span>,<span class="number">2</span>)])</div><div class="line"> <span class="number">96</span>                 baiduVoice = BaiduRest(mac,api_key,api_secret)</div><div class="line"> <span class="number">97</span>                 baiduVoice.getVoice(text,tmpname_wav)</div><div class="line"> <span class="number">98</span>                 os.system(<span class="string">'date'</span>)</div><div class="line"> <span class="number">99</span>                 <span class="comment">#os.system("omxplayer --loop \"" + tmpname_wav + "\"")</span></div><div class="line"><span class="number">100</span>                 print(baiduVoice.getText(tmpname_wav))</div><div class="line"><span class="number">101</span></div><div class="line"><span class="number">102</span></div></pre></td></tr></table></figure>
<h1 id="urllib-request"><a href="#urllib-request" class="headerlink" title="urllib.request"></a>urllib.request</h1><h2 id="get"><a href="#get" class="headerlink" title="get"></a>get</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">from urllib import request, parse</div><div class="line"># Base URL being accessed</div><div class="line">url = &apos;http://httpbin.org/get&apos;</div><div class="line"># Dictionary of query parameters (if any)</div><div class="line">parms = &#123;</div><div class="line">&apos;name1&apos; : &apos;value1&apos;,</div><div class="line">&apos;name2&apos; : &apos;value2&apos;</div><div class="line">&#125;</div><div class="line"># Encode the query string</div><div class="line">querystring = parse.urlencode(parms)</div><div class="line"># Make a GET request and read the response</div><div class="line">u = request.urlopen(url+&apos;?&apos; + querystring)</div><div class="line">resp_bytes = u.read()</div></pre></td></tr></table></figure>
<h2 id="post"><a href="#post" class="headerlink" title="post"></a>post</h2><h3 id="post-stand-fomer"><a href="#post-stand-fomer" class="headerlink" title="post stand fomer"></a>post stand fomer</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">from urllib import request, parse</div><div class="line"># Base URL being accessed</div><div class="line">url = &apos;http://httpbin.org/post&apos;</div><div class="line"># Dictionary of query parameters (if any)</div><div class="line">parms = &#123;</div><div class="line">&apos;name1&apos; : &apos;value1&apos;,</div><div class="line">&apos;name2&apos; : &apos;value2&apos;</div><div class="line">&#125;</div><div class="line"># Encode the query string</div><div class="line">querystring = parse.urlencode(parms)</div><div class="line"># Make a POST request and read the response</div><div class="line">res = request.urlopen(url, querystring.encode(encoding = &apos;utf-8&apos;))</div><div class="line">html_str = res.read()</div></pre></td></tr></table></figure>
<h3 id="post-json"><a href="#post-json" class="headerlink" title="post json"></a>post json</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">parms = &#123;</div><div class="line">&apos;name1&apos; : &apos;value1&apos;,</div><div class="line">&apos;name2&apos; : &apos;value2&apos;</div><div class="line">&#125;</div><div class="line">post_data = json.dumps(parms)</div><div class="line">res = urllib.request.urlopen(url,post_data.encod(encoding=&quot;utf-8&quot;))</div><div class="line">html_str =res.read()</div></pre></td></tr></table></figure>
<h2 id="header"><a href="#header" class="headerlink" title="header"></a>header</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">from urllib import request, parse</div><div class="line"></div><div class="line"># Extra headers</div><div class="line">headers = &#123;</div><div class="line">&apos;User-agent&apos; : &apos;none/ofyourbusiness&apos;,</div><div class="line">&apos;Spam&apos; : &apos;Eggs&apos;</div><div class="line">&#125;</div><div class="line">req = request.Request(url, querystring.encode(&apos;ascii&apos;), headers=headers)</div><div class="line"># Make a request and read the response</div><div class="line">res = request.urlopen(req)</div><div class="line">html_str = res.read()</div></pre></td></tr></table></figure>
<h3 id="header-example"><a href="#header-example" class="headerlink" title="header example"></a>header example</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">headers=&#123;</div><div class="line">&apos;Connection&apos;: &apos;keep-alive&apos;,</div><div class="line">&apos;Cache-Control&apos;: &apos;max-age=0&apos;,</div><div class="line">&apos;Upgrade-Insecure-Requests&apos;: 1,</div><div class="line">&apos;User-Agent&apos;: &apos;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36&apos;,</div><div class="line">&apos;Accept&apos;: &apos;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8&apos;,</div><div class="line">&apos;Accept-Encoding&apos;: &apos;gzip, deflate, sdch&apos;,</div><div class="line">&apos;Accept-Language&apos;: &apos;zh-CN,zh;q=0.8,en;q=0.6&apos;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Content-Type: application/x-www-form-urlencoded</div><div class="line">Content-Type: application/json</div></pre></td></tr></table></figure>
<h2 id="Request"><a href="#Request" class="headerlink" title="Request"></a>Request</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">GET / HTTP/1.1</div><div class="line">Host: ip.cn</div><div class="line">Connection: keep-alive</div><div class="line">Upgrade-Insecure-Requests: 1</div><div class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36</div><div class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</div><div class="line">Accept-Encoding: gzip, deflate, sdch</div><div class="line">Accept-Language: zh-CN,zh;q=0.8,en;q=0.6</div><div class="line">Cookie: UM_distinctid=15ae0d3744b437-0ebcb4eece40e4-57e1b3c-100200-15ae0d3744c42b; CNZZDATA123770=cnzz_eid%3D646344926-1484393339-%26ntime%3D1489830206</div></pre></td></tr></table></figure>
<h2 id="Response"><a href="#Response" class="headerlink" title="Response"></a>Response</h2><p>encoding:gzip</p>
<p><img src="http://i.imgur.com/gNVZvxJ.png" alt="Imgur"></p>
<p>when unzip the body,we can see:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">HTTP/1.1 200 OK</div><div class="line">Server: nginx/1.8.0</div><div class="line">Date: Sat, 18 Mar 2017 10:54:28 GMT</div><div class="line">Content-Type: text/html; charset=UTF-8</div><div class="line">Connection: keep-alive</div><div class="line">Vary: Accept-Encoding</div><div class="line">X-Powered-By: PHP/5.6.30-1~dotdeb+7.1</div><div class="line">Content-Length: 3189</div><div class="line"></div><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html&gt;</div><div class="line">&lt;head&gt;</div><div class="line">&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;</div><div class="line">&lt;link href=&quot;http://s.ip-cdn.com&quot; rel=&quot;dns-prefetch&quot; /&gt;</div><div class="line">&lt;title&gt;IP.cn - IP 地址查询 | 地理位置 | 手机归属地&lt;/title&gt;</div><div class="line">&lt;meta name=&quot;robots&quot; content=&quot;all&quot; /&gt;</div><div class="line">&lt;meta name=&quot;Keywords&quot; content=&quot;ip,ip查询,手机ip,本机ip,外网ip,ip地址查询,手机号,归属地&quot;&gt;</div><div class="line">&lt;meta name=&quot;Description&quot; content=&quot;专业本机 IP 地址查询、手机 IP 地址、地理位置查询、IP 数据库、手机号归属地查询、电话号码黄页查询，可查广告、骚扰、快递、银行、保险、房地产、中介电话。&quot;&gt;</div><div class="line">&lt;link href=&apos;http://s.ip-cdn.com/css/bootstrap.min.css&apos; rel=&apos;stylesheet&apos; type=&apos;text/css&apos;&gt;</div><div class="line">&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, minimum-scale=0.5&quot;&gt;</div><div class="line">&lt;meta name=&quot;format-detection&quot; content=&quot;telephone=no&quot;&gt;</div><div class="line">&lt;!--[if lt IE 8]&gt;</div><div class="line">&lt;script src=&quot;http://s.ip-cdn.com/js/ie8.js&quot;&gt;&lt;/script&gt;</div><div class="line">&lt;![endif]--&gt;</div><div class="line">&lt;link href=&apos;http://s.ip-cdn.com/css/main.css&apos; rel=&apos;stylesheet&apos; type=&apos;text/css&apos;&gt;</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body onLoad=&quot;document.fs.ip.focus()&quot;&gt;</div><div class="line">.</div><div class="line">.</div><div class="line">.</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><h2 id="入门"><a href="#入门" class="headerlink" title="入门"></a>入门</h2><p><a href="http://www.runoob.com/python3/python3-tutorial.html" target="_blank" rel="external">Python3教程</a></p>
<h2 id="进阶技巧"><a href="#进阶技巧" class="headerlink" title="进阶技巧"></a>进阶技巧</h2><p><a href="https://github.com/yidao620c/python3-cookbook" target="_blank" rel="external">python3-cookbook</a><br><a href="http://docspy3zh.readthedocs.io/en/latest/index.html" target="_blank" rel="external">readthedocs</a><br><a href="http://cn.python-requests.org/zh_CN/latest/" target="_blank" rel="external">python-requests</a></p>
<p>httbin.org</p>
]]></content>
      
        <categories>
            
            <category> Python </category>
            
        </categories>
        
        
        <tags>
            
            <tag> python </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[GPT(GUID partition table)]]></title>
      <url>https://ygcaicn.github.io/Linux/GPT.html</url>
      <content type="html"><![CDATA[<p>GPT 磁盘分区表：</p>
<p>LBA – Logical Block Adress</p>
<p>size of  LBA :512bytes(0.5KB)</p>
<p>LBA0~LBA33: GUID partition table(GPT)</p>
<p>LBA(end-33)~LBA(end): Backup GPT</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">Disk /dev/sdb: 33021952 sectors, 15.7 GiB</div><div class="line">Logical sector size: 512 bytes</div><div class="line">Disk identifier (GUID): 2A7B560E-11D2-48FE-9A16-A54069811BF4</div><div class="line">Partition table holds up to 128 entries</div><div class="line">First usable sector is 34, last usable sector is 33021918</div><div class="line">Partitions will be aligned on 2048-sector boundaries</div><div class="line">Total free space is 2014 sectors (1007.0 KiB)</div><div class="line"></div><div class="line">Number  Start (sector)    End (sector)  Size       Code  Name</div><div class="line">   1            2048        33021918   15.7 GiB    8300  Linux filesystem</div></pre></td></tr></table></figure>
<h1 id="gdisk"><a href="#gdisk" class="headerlink" title="gdisk"></a>gdisk</h1><h2 id="Command"><a href="#Command" class="headerlink" title="Command"></a>Command</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">Command (? for help): ?</div><div class="line">b	back up GPT data to a file</div><div class="line">c	change a partition&apos;s name</div><div class="line">d	delete a partition</div><div class="line">i	show detailed information on a partition</div><div class="line">l	list known partition types</div><div class="line">n	add a new partition</div><div class="line">o	create a new empty GUID partition table (GPT)</div><div class="line">p	print the partition table</div><div class="line">q	quit without saving changes</div><div class="line">r	recovery and transformation options (experts only)</div><div class="line">s	sort partitions</div><div class="line">t	change a partition&apos;s type code</div><div class="line">v	verify disk</div><div class="line">w	write table to disk and exit</div><div class="line">x	extra functionality (experts only)</div><div class="line">?	print this menu</div></pre></td></tr></table></figure>
<h2 id="Recovery-transformation"><a href="#Recovery-transformation" class="headerlink" title="Recovery/transformation"></a>Recovery/transformation</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">Recovery/transformation command (? for help): ?</div><div class="line">b	use backup GPT header (rebuilding main)</div><div class="line">c	load backup partition table from disk (rebuilding main)</div><div class="line">d	use main GPT header (rebuilding backup)</div><div class="line">e	load main partition table from disk (rebuilding backup)</div><div class="line">f	load MBR and build fresh GPT from it</div><div class="line">g	convert GPT into MBR and exit</div><div class="line">h	make hybrid MBR</div><div class="line">i	show detailed information on a partition</div><div class="line">l	load partition data from a backup file</div><div class="line">m	return to main menu</div><div class="line">o	print protective MBR data</div><div class="line">p	print the partition table</div><div class="line">q	quit without saving changes</div><div class="line">t	transform BSD disklabel partition</div><div class="line">v	verify disk</div><div class="line">w	write table to disk and exit</div><div class="line">x	extra functionality (experts only)</div><div class="line">?	print this menu</div></pre></td></tr></table></figure>
<h2 id="Expert"><a href="#Expert" class="headerlink" title="Expert"></a>Expert</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">Expert command (? for help): ?</div><div class="line">a	set attributes</div><div class="line">c	change partition GUID</div><div class="line">d	display the sector alignment value</div><div class="line">e	relocate backup data structures to the end of the disk</div><div class="line">g	change disk GUID</div><div class="line">h	recompute CHS values in protective/hybrid MBR</div><div class="line">i	show detailed information on a partition</div><div class="line">l	set the sector alignment value</div><div class="line">m	return to main menu</div><div class="line">n	create a new protective MBR</div><div class="line">o	print protective MBR data</div><div class="line">p	print the partition table</div><div class="line">q	quit without saving changes</div><div class="line">r	recovery and transformation options (experts only)</div><div class="line">s	resize partition table</div><div class="line">t	transpose two partition table entries</div><div class="line">u	replicate partition table on new device</div><div class="line">v	verify disk</div><div class="line">w	write table to disk and exit</div><div class="line">z	zap (destroy) GPT data structures and exit</div><div class="line">?	print this menu</div></pre></td></tr></table></figure>
<h1 id="partition’s-type-code"><a href="#partition’s-type-code" class="headerlink" title="partition’s type code"></a>partition’s type code</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">0700 Microsoft basic data  0c01 Microsoft reserved    2700 Windows RE          </div><div class="line">3000 ONIE boot             3001 ONIE config           3900 Plan 9              </div><div class="line">4100 PowerPC PReP boot     4200 Windows LDM data      4201 Windows LDM metadata</div><div class="line">4202 Windows Storage Spac  7501 IBM GPFS              7f00 ChromeOS kernel     </div><div class="line">7f01 ChromeOS root         7f02 ChromeOS reserved     8200 Linux swap          </div><div class="line">8300 Linux filesystem      8301 Linux reserved        8302 Linux /home         </div><div class="line">8303 Linux x86 root (/)    8304 Linux x86-64 root (/  8305 Linux ARM64 root (/)</div><div class="line">8306 Linux /srv            8307 Linux ARM32 root (/)  8400 Intel Rapid Start   </div><div class="line">8e00 Linux LVM             a500 FreeBSD disklabel     a501 FreeBSD boot        </div><div class="line">a502 FreeBSD swap          a503 FreeBSD UFS           a504 FreeBSD ZFS         </div><div class="line">a505 FreeBSD Vinum/RAID    a580 Midnight BSD data     a581 Midnight BSD boot   </div><div class="line">a582 Midnight BSD swap     a583 Midnight BSD UFS      a584 Midnight BSD ZFS    </div><div class="line">a585 Midnight BSD Vinum    a600 OpenBSD disklabel     a800 Apple UFS           </div><div class="line">a901 NetBSD swap           a902 NetBSD FFS            a903 NetBSD LFS          </div><div class="line">a904 NetBSD concatenated   a905 NetBSD encrypted      a906 NetBSD RAID         </div><div class="line">ab00 Recovery HD           af00 Apple HFS/HFS+        af01 Apple RAID          </div><div class="line">af02 Apple RAID offline    af03 Apple label           af04 AppleTV recovery    </div><div class="line">af05 Apple Core Storage    bc00 Acronis Secure Zone   be00 Solaris boot        </div><div class="line">bf00 Solaris root          bf01 Solaris /usr &amp; Mac Z  bf02 Solaris swap        </div><div class="line">bf03 Solaris backup        bf04 Solaris /var          bf05 Solaris /home       </div><div class="line">bf06 Solaris alternate se  bf07 Solaris Reserved 1    bf08 Solaris Reserved 2  </div><div class="line">bf09 Solaris Reserved 3    bf0a Solaris Reserved 4    bf0b Solaris Reserved 5  </div><div class="line">c001 HP-UX data            c002 HP-UX service         ea00 Freedesktop $BOOT   </div><div class="line">eb00 Haiku BFS             ed00 Sony system partitio  ed01 Lenovo system partit</div><div class="line">ef00 EFI System            ef01 MBR partition scheme  ef02 BIOS boot partition</div><div class="line">f800 Ceph OSD              f801 Ceph dm-crypt OSD     f802 Ceph journal        </div><div class="line">f803 Ceph dm-crypt journa  f804 Ceph disk in creatio  f805 Ceph dm-crypt disk i</div><div class="line">fb00 VMWare VMFS           fb01 VMWare reserved       fc00 VMWare kcore crash p</div><div class="line">fd00 Linux RAID</div></pre></td></tr></table></figure>
<h1 id="刻录iso镜像到U盘"><a href="#刻录iso镜像到U盘" class="headerlink" title="刻录iso镜像到U盘"></a>刻录iso镜像到U盘</h1><p><strong>必须先change a partition’s type code -&gt;EF00</strong>再 ‘dd’</p>
<h1 id="Example-disk’s-GPT"><a href="#Example-disk’s-GPT" class="headerlink" title="Example disk’s GPT"></a>Example disk’s GPT</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">Disk /dev/sda: 468862128 sectors, 223.6 GiB</div><div class="line">Logical sector size: 512 bytes</div><div class="line">Disk identifier (GUID): 4F2B2F55-48AC-4CC8-A745-605404C6BDF7</div><div class="line">Partition table holds up to 128 entries</div><div class="line">First usable sector is 34, last usable sector is 468862094</div><div class="line">Partitions will be aligned on 2048-sector boundaries</div><div class="line">Total free space is 13745 sectors (6.7 MiB)</div><div class="line"></div><div class="line">Number  Start (sector)    End (sector)  Size       Code  Name</div><div class="line">   1            4096          204799   98.0 MiB    EF00  EFI system partition</div><div class="line">   2          208896       229904940   109.5 GiB   0700  Basic data partition</div><div class="line">   3       229906432       230897663   484.0 MiB   2700  </div><div class="line">   4       230899712       426919054   93.5 GiB    0700  Basic data partition</div><div class="line">   5       426919936       427309055   190.0 MiB   8300  </div><div class="line">   6       427309056       428285951   477.0 MiB   8200  </div><div class="line">   7       428285952       468860927   19.3 GiB    8300</div></pre></td></tr></table></figure>
<h1 id="details-infomation-on-a-partition"><a href="#details-infomation-on-a-partition" class="headerlink" title="details infomation on a partition"></a>details infomation on a partition</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">Partition GUID code: C12A7328-F81F-11D2-BA4B-00A0C93EC93B (EFI System)</div><div class="line">Partition unique GUID: 00772A36-9423-43A9-B1A1-0BE031102BFB</div><div class="line">First sector: 4096 (at 2.0 MiB)</div><div class="line">Last sector: 204799 (at 100.0 MiB)</div><div class="line">Partition size: 200704 sectors (98.0 MiB)</div><div class="line">Attribute flags: 0000000000000000</div><div class="line">Partition name: &apos;EFI system partition&apos;</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux </tag>
            
            <tag> GPT </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Python3 实现代理IP,伪装IP]]></title>
      <url>https://ygcaicn.github.io/Python/proxy-python3.html</url>
      <content type="html"><![CDATA[<p>实现抓取代理服务器，建立ipPool,伪装外网ip</p>
<a id="more"></a>
<h1 id="Proxy"><a href="#Proxy" class="headerlink" title="Proxy"></a>Proxy</h1><figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/python3</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> urllib.request</div><div class="line"><span class="keyword">import</span> re</div><div class="line"><span class="keyword">import</span> gzip</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">ungzip</span><span class="params">(data)</span>:</span></div><div class="line">    <span class="keyword">try</span>:        <span class="comment"># try decompress</span></div><div class="line">        print(<span class="string">'compressing.....'</span>)</div><div class="line">        data = gzip.decompress(data)</div><div class="line">        print(<span class="string">'dcompress done!'</span>)</div><div class="line">    <span class="keyword">except</span>:</div><div class="line">        print(<span class="string">'without compress!'</span>)</div><div class="line">    <span class="keyword">return</span> data</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Proxy</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,url=<span class="string">'http://www.xicidaili.com/'</span>)</span>:</span></div><div class="line">        self.ipPool=[]</div><div class="line">        self.url=url</div><div class="line">        self.getipPool();</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getipPool</span><span class="params">(self)</span>:</span>     </div><div class="line">        <span class="comment">#get proxy Ip address pool from http://www.xicidaili.com/</span></div><div class="line">        <span class="comment"># Base URL being accessed</span></div><div class="line">        headers=&#123;</div><div class="line">        <span class="string">'Connection'</span>: <span class="string">'keep-alive'</span>,</div><div class="line">        <span class="string">'Cache-Control'</span>: <span class="string">'max-age=0'</span>,</div><div class="line">        <span class="string">'Upgrade-Insecure-Requests'</span>: <span class="string">'1'</span>,</div><div class="line">        <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36'</span>,</div><div class="line">        <span class="string">'Accept'</span>: <span class="string">'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8'</span>,</div><div class="line">        <span class="string">'Accept-Encoding'</span>: <span class="string">'gzip, deflate, sdch'</span>,</div><div class="line">        <span class="string">'Accept-Language'</span>: <span class="string">'zh-CN,zh;q=0.8,en;q=0.6'</span>,</div><div class="line">        &#125;</div><div class="line">        <span class="comment"># Make a GET request and read the response</span></div><div class="line">        req = urllib.request.Request(self.url,headers=headers)</div><div class="line">        response = urllib.request.urlopen(req)</div><div class="line">        res_bytes = ungzip(response.read())</div><div class="line">        html_str = res_bytes.decode(encoding=<span class="string">'utf-8'</span>)</div><div class="line"></div><div class="line">        <span class="comment"># the pattern(Regular expression) is depend on the response data from your url</span></div><div class="line">        pattern = <span class="string">r'\s*&lt;td&gt;(((2[0-4]\d|25[0-5]|[01]?\d\d?)\.)&#123;3&#125;(2[0-4]\d|25[0-5]|[01]?\d\d?))&lt;/td&gt;\s*\n\s*&lt;td&gt;(\d&#123;2,5&#125;)&lt;/td&gt;\s*\n\s*&lt;td&gt;(\w+)&lt;/td&gt;\s*\n\s*&lt;td class="country"&gt;透明&lt;/td&gt;\s*\n\s*&lt;td&gt;(HTTP|HTTPS)&lt;/td&gt;'</span></div><div class="line">        regex = re.compile(pattern)</div><div class="line">        s = regex.findall(html_str)</div><div class="line">        <span class="comment">#s = [('221.204.103.145', '103.', '103', '145', '9797', '山西太原', 'HTTP'), ...]</span></div><div class="line">        <span class="keyword">for</span> host <span class="keyword">in</span> s:</div><div class="line">            hostdict = &#123;<span class="string">'host'</span>:host[<span class="number">0</span>],<span class="string">'port'</span>:host[<span class="number">4</span>],<span class="string">'country'</span>:host[<span class="number">5</span>],<span class="string">'protocol'</span>:host[<span class="number">-1</span>]&#125;</div><div class="line">            self.ipPool.append(hostdict)</div><div class="line">        <span class="keyword">return</span> self.ipPool</div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">startProxy</span><span class="params">(self)</span>:</span></div><div class="line"></div><div class="line">        self.printIpPool();</div><div class="line">        host_num = input(<span class="string">'Please select a host:'</span>)</div><div class="line">        host_num = int(host_num.strip())        </div><div class="line">        proxy = &#123;<span class="string">'http'</span>:self.ipPool[host_num][<span class="string">'host'</span>]+<span class="string">':'</span>+self.ipPool[host_num][<span class="string">'port'</span>]&#125;</div><div class="line">        <span class="comment">#creat ProxyHandler</span></div><div class="line">        proxy_support = urllib.request.ProxyHandler(proxy)</div><div class="line">        <span class="comment">#creat Opener</span></div><div class="line">        opener = urllib.request.build_opener(proxy_support)</div><div class="line">        <span class="comment">#creat User Angent</span></div><div class="line">        <span class="comment">#opener.addheaders = [('User-Agent','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36')]</span></div><div class="line">        <span class="comment">#install OPener</span></div><div class="line">        urllib.request.install_opener(opener)</div><div class="line">        <span class="comment">#start Opener</span></div><div class="line">        <span class="keyword">pass</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">printIpPool</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(self.ipPool)):</div><div class="line">            print(i,<span class="string">":"</span>,self.ipPool[i])</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line"></div><div class="line">    url = <span class="string">"http://ip.cn/"</span></div><div class="line">    headers=&#123;</div><div class="line">    <span class="string">'Connection'</span>: <span class="string">'keep-alive'</span>,</div><div class="line">    <span class="string">'Cache-Control'</span>: <span class="string">'max-age=0'</span>,</div><div class="line">    <span class="string">'Upgrade-Insecure-Requests'</span>: <span class="string">'1'</span>,</div><div class="line">    <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36'</span>,</div><div class="line">    <span class="string">'Accept'</span>: <span class="string">'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8'</span>,</div><div class="line">    <span class="string">'Accept-Encoding'</span>: <span class="string">'gzip, deflate, sdch'</span>,</div><div class="line">    <span class="string">'Accept-Language'</span>: <span class="string">'zh-CN,zh;q=0.8,en;q=0.6'</span>,</div><div class="line">    <span class="comment">#'Cookie': 'UM_distinctid=15ae0d3744b437-0ebcb4eece40e4-57e1b3c-100200-15ae0d3744c42b; CNZZDATA123770=cnzz_eid%3D646344926-1484393339-%26ntime%3D1489830206'</span></div><div class="line">    &#125;</div><div class="line">    proxyhost = Proxy()</div><div class="line">    proxyhost.startProxy()</div><div class="line"></div><div class="line">    req = urllib.request.Request(url,headers=headers)</div><div class="line">    response = urllib.request.urlopen(req)</div><div class="line">    res_bytes = ungzip(response.read())</div><div class="line"></div><div class="line">    html_str = res_bytes.decode(encoding=<span class="string">'utf-8'</span>)</div><div class="line">    file_html = open(<span class="string">"proxy.html"</span>,<span class="string">'w'</span>,encoding = <span class="string">"utf-8"</span>)</div><div class="line">    file_html.write(html_str)</div><div class="line">    file_html.close()</div><div class="line"></div><div class="line">    <span class="comment"># the pattern(Regular expression) is depend on the response data from your url</span></div><div class="line">    <span class="comment">#pattern = r'((\d&#123;1,3&#125;\.)&#123;3&#125;\d&#123;1,3&#125;)'</span></div><div class="line">    pattern = <span class="string">r'&lt;code&gt;(((2[0-4]\d|25[0-5]|[01]?\d\d?)\.)&#123;3&#125;(2[0-4]\d|25[0-5]|[01]?\d\d?))&lt;/code&gt;'</span></div><div class="line"></div><div class="line">    pattern2 = <span class="string">r'所在地理位置：&lt;code&gt;([\s\w]*)&lt;/code&gt;'</span></div><div class="line">    my_locate = re.findall(pattern2,html_str)</div><div class="line">    my_locate = my_locate[<span class="number">0</span>]</div><div class="line">    my_ip = re.findall(pattern,html_str)</div><div class="line">    my_ip = my_ip[<span class="number">0</span>][<span class="number">0</span>]</div><div class="line">    <span class="comment">#print(html_str)</span></div><div class="line">    print(<span class="string">'my locate:'</span>,my_locate)</div><div class="line">    print(<span class="string">'my ip:'</span>,my_ip)</div></pre></td></tr></table></figure>
<h1 id="get-proxy-Ip-address-pool-from-http-www-xicidaili-com"><a href="#get-proxy-Ip-address-pool-from-http-www-xicidaili-com" class="headerlink" title="get proxy Ip address pool from http://www.xicidaili.com/"></a>get proxy Ip address pool from <a href="http://www.xicidaili.com/" target="_blank" rel="external">http://www.xicidaili.com/</a></h1><p>直接get得到主页以后，主要是写正则表达式，match得到我们需要的数据。</p>
<p>得到的html数据：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">"subtitle"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">th</span> <span class="attr">class</span>=<span class="string">"country"</span>&gt;</span>国家<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span>代理IP地址<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span>端口<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">th</span> <span class="attr">width</span>=<span class="string">"20%"</span>&gt;</span>服务器地址<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">th</span> <span class="attr">class</span>=<span class="string">"country"</span>&gt;</span>是否匿名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span>类型<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">th</span> <span class="attr">width</span>=<span class="string">"11%"</span>&gt;</span>存活时间<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">th</span> <span class="attr">width</span>=<span class="string">"12%"</span>&gt;</span>验证时间<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">"odd"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"country"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"http://fs.xicidaili.com/images/flag/cn.png"</span> <span class="attr">alt</span>=<span class="string">"Cn"</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>115.231.175.68<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>8081<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>浙江杭州<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"country"</span>&gt;</span>透明<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>HTTP<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>74天<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>不到1分钟<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">""</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"country"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"http://fs.xicidaili.com/images/flag/cn.png"</span> <span class="attr">alt</span>=<span class="string">"Cn"</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>220.191.1.130<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>8118<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>浙江杭州<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"country"</span>&gt;</span>透明<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>HTTP<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>16小时<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>1分钟前<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">"odd"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"country"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"http://fs.xicidaili.com/images/flag/cn.png"</span> <span class="attr">alt</span>=<span class="string">"Cn"</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>124.88.67.54<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>80<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>新疆乌鲁木齐<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"country"</span>&gt;</span>透明<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>HTTP<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>723天<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>13分钟前<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">""</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"country"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"http://fs.xicidaili.com/images/flag/cn.png"</span> <span class="attr">alt</span>=<span class="string">"Cn"</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>58.221.59.210<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>63000<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>江苏南通<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"country"</span>&gt;</span>透明<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>HTTP<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>362天<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>1小时前<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div></pre></td></tr></table></figure>
<p><img src="http://i.imgur.com/7h07pqS.png" alt="Imgur"></p>
<p>我们这里匹配出主机ip（host），port，country和protocol，利用<a href="http://deerchao.net/" target="_blank" rel="external">deerchao的正则表达式测试器</a>很设计出下面的正则表达式：</p>
<p><code>#the pattern(Regular expression) is depend on the response data from your url</code></p>
<p><code>pattern = r&#39;\s*&lt;td&gt;(((2[0-4]\d|25[0-5]|[01]?\d\d?)\.){3}(2[0-4]\d|25[0-5]|[01]?\d\d?))&lt;/td&gt;\s*\n\s*&lt;td&gt;(\d{2,5})&lt;/td&gt;\s*\n\s*&lt;td&gt;(\w+)&lt;/td&gt;\s*\n\s*&lt;td class=&quot;country&quot;&gt;透明&lt;/td&gt;\s*\n\s*&lt;td&gt;(HTTP|HTTPS)&lt;/td&gt;&#39;</code></p>
<p>最终的效果：<br>    运行程序，会提示我们选择一个代理服务器，程序然后会去访问<a href="http://ip.cn" target="_blank" rel="external">ip.cn</a>,通过返回的数据我们解析得到外网IP，会发现这和我们选择的代理服务器信息是一致的而不是我们自己的外网地址。ip伪装成功。</p>
<p><img src="http://i.imgur.com/XIxBJUK.png" alt="Imgur"></p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>正则表达式：<a href="http://deerchao.net/tutorials/regex/regex.htm" target="_blank" rel="external">http://deerchao.net/tutorials/regex/regex.htm</a></p>
]]></content>
      
        <categories>
            
            <category> Python </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Python3 </tag>
            
            <tag> 正则表达式 </tag>
            
            <tag> IP伪装 </tag>
            
            <tag> 代理 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[LEDE-Mt7620a-newifiY1]]></title>
      <url>https://ygcaicn.github.io/%E5%B5%8C%E5%85%A5%E5%BC%8F/LEDE-Mt7620a-newifiY1.html</url>
      <content type="html"><![CDATA[<p>LEDE:<br><a href="https://downloads.lede-project.org" target="_blank" rel="external">https://downloads.lede-project.org</a></p>
<p>LEDE Packages(mipsel_24kc):<a href="http://openwrt-dist.sourceforge.net/packages/LEDE/base/mipsel_24kc/" target="_blank" rel="external">http://openwrt-dist.sourceforge.net/packages/LEDE/base/mipsel_24kc/</a></p>
<a id="more"></a>
<hr>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">root@LEDE:/tmp# opkg install libudns_0.4-1_mipsel_24kc.ipk</div><div class="line">Installing libudns (0.4-1) to root...</div><div class="line">Configuring libudns.</div><div class="line">root@LEDE:/tmp# opkg install shadowsocks-libev_3.0.3-1_mipsel_24kc.ipk luci-app-shadowsocks_1.6.2-1_all.ipk</div><div class="line">Installing shadowsocks-libev (3.0.3-1) to root...</div><div class="line">Installing libev (4.22-1) to root...</div><div class="line">Downloading http://downloads.lede-project.org/releases/17.01.0/packages/mipsel_24kc/packages/libev_4.22-1_mipsel_24kc.ipk</div><div class="line">Installing libpcre (8.40-1) to root...</div><div class="line">Downloading http://downloads.lede-project.org/releases/17.01.0/packages/mipsel_24kc/packages/libpcre_8.40-1_mipsel_24kc.ipk</div><div class="line">Installing libsodium (1.0.11-2) to root...</div><div class="line">Downloading http://downloads.lede-project.org/releases/17.01.0/packages/mipsel_24kc/packages/libsodium_1.0.11-2_mipsel_24kc.ipk</div><div class="line">Installing libmbedtls (2.4.0-2) to root...</div><div class="line">Downloading http://downloads.lede-project.org/releases/17.01.0/packages/mipsel_24kc/base/libmbedtls_2.4.0-2_mipsel_24kc.ipk</div><div class="line">Installing luci-app-shadowsocks (1.6.2-1) to root...</div><div class="line">Configuring libev.</div><div class="line">Configuring libpcre.</div><div class="line">Configuring libsodium.</div><div class="line">Configuring libmbedtls.</div><div class="line">Configuring shadowsocks-libev.</div><div class="line">Configuring luci-app-shadowsocks.</div></pre></td></tr></table></figure>
<hr>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">root@LEDE:/tmp# opkg install ChinaDNS_1.3.2-4_mipsel_24kc.ipk luci-app-chinadns_1.6.0-1_all.ipk</div><div class="line">Installing ChinaDNS (1.3.2-4) to root...</div><div class="line">Installing luci-app-chinadns (1.6.0-1) to root...</div><div class="line">Configuring ChinaDNS.</div><div class="line">Configuring luci-app-chinadns.</div></pre></td></tr></table></figure>
<hr>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">root@LEDE:/tmp# opkg install dns-forwarder_1.1.1-1_mipsel_24kc.ipk luci-app-dns-forwarder_1.6.0-1_all.ipk</div><div class="line">Installing dns-forwarder (1.1.1-1) to root...</div><div class="line">Installing luci-app-dns-forwarder (1.6.0-1) to root...</div><div class="line">Configuring dns-forwarder.</div><div class="line">Configuring luci-app-dns-forwarder.</div></pre></td></tr></table></figure>
<hr>
<h1 id="Kcptun-Shadowsocks"><a href="#Kcptun-Shadowsocks" class="headerlink" title="Kcptun+Shadowsocks"></a>Kcptun+Shadowsocks</h1><p>open source Project：</p>
<ul>
<li>openwrt kcptun <a href="https://github.com/bettermanbao/openwrt-kcptun" target="_blank" rel="external">https://github.com/bettermanbao/openwrt-kcptun</a></li>
<li>More details please refer to <a href="https://github.com/xtaci/kcptun" target="_blank" rel="external">https://github.com/xtaci/kcptun</a></li>
<li>luci-app-kcptun please refer to <a href="https://github.com/kuoruan/luci-app-kcptun" target="_blank" rel="external">https://github.com/kuoruan/luci-app-kcptun</a></li>
<li>GUI for KCPTun windows client <a href="https://github.com/dfdragon/kcptun_gclient" target="_blank" rel="external">https://github.com/dfdragon/kcptun_gclient</a></li>
<li>Kcptun for Android <a href="https://github.com/shadowsocks/kcptun-android" target="_blank" rel="external">https://github.com/shadowsocks/kcptun-android</a></li>
</ul>
<blockquote>
<p>两端参数必须一致的有:</p>
<p>datashard –前向纠错<br>  parityshard –前向纠错\<br>  nocomp –压缩\<br>  key –密钥\<br>  crypt –加密算法\<br>  其余为两边可独立设定的参数</p>
</blockquote>
<hr>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nocomp;mtu=1200;parityshard=0;key=waggywn@10000 dscp=46;mode=fast;crypt=salsa20;sndwnd=1024;rcvwnd=2048</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 嵌入式 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux </tag>
            
            <tag> openwrt </tag>
            
            <tag> 路由器 </tag>
            
            <tag> LEDE </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[help-linux]]></title>
      <url>https://ygcaicn.github.io/Linux/help-linux.html</url>
      <content type="html"><![CDATA[<h1 id="Help-Linux"><a href="#Help-Linux" class="headerlink" title="Help Linux"></a>Help Linux</h1><h2 id="Ubuntu"><a href="#Ubuntu" class="headerlink" title="Ubuntu"></a><em>Ubuntu</em></h2><h3 id="发行版列表WIKI"><a href="#发行版列表WIKI" class="headerlink" title="发行版列表WIKI"></a><a href="https://zh.wikipedia.org/wiki/Ubuntu%E5%8F%91%E8%A1%8C%E7%89%88%E5%88%97%E8%A1%A8" target="_blank" rel="external">发行版列表WIKI</a></h3><p>Ubuntu版本的命名规则是根据正式版发行的年月命名，Ubuntu 8.10也就意味着2008年10月发行的Ubuntu，研发人员与使用者可从版本号码就知道正式发布的时间。Ubuntu是基于Debian开发的Linux发行版，Debian的开发代号来自于电影玩具总动员，不过，Ubuntu各版本的代号却固定是形容词加上动物名称，而且这2个词的英文首字母一定是相同的。从Ubuntu 6.06开始，两个词的首字母按照英文字母表的排列顺序取用</p>
<p><img src="http://i.imgur.com/ApYN4RB.png" alt="Imgur"></p>
<a id="more"></a>
<h3 id="manpage"><a href="#manpage" class="headerlink" title="manpage"></a><a href="http://manpages.ubuntu.com/manpages/" target="_blank" rel="external">manpage</a></h3><p>按照开发代号分类了各个版本的man,也可以通过Toolsbar的版本号直接选择相应的版本。</p>
<p><a href="http://manpages.ubuntu.com/manpages/" target="_blank" rel="external"><img src="http://i.imgur.com/m0Qbhj5.png" alt="Imgur"></a><br><a href="http://manpages.ubuntu.com/manpages/" target="_blank" rel="external"><img src="http://i.imgur.com/YrRlIc8.png" alt="Imgur"></a></p>
<h3 id="help-Ubuntu"><a href="#help-Ubuntu" class="headerlink" title="help Ubuntu"></a><a href="https://help.ubuntu.com/" target="_blank" rel="external">help Ubuntu</a></h3><p>同样按照版本号和开发代号进行了分类，同时文档的类型分为Desktop，Server，InstallGuide。</p>
<p><a href="https://help.ubuntu.com/" target="_blank" rel="external"><img src="http://i.imgur.com/HvItDsN.png" alt="Imgur"></a></p>
<h2 id="Debian"><a href="#Debian" class="headerlink" title="Debian"></a><em>Debian</em></h2><p><a href="https://www.debian.org/" target="_blank" rel="external">Debian</a></p>
<p><a href="https://www.debian.org/doc/manuals/debian-reference/" target="_blank" rel="external">Debian 中文参考手册</a></p>
<h2 id="Raspberry"><a href="#Raspberry" class="headerlink" title="Raspberry"></a><em>Raspberry</em></h2><p><a href="https://www.raspberrypi.org/documentation/raspbian/" target="_blank" rel="external">Raspbian</a></p>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> linux </tag>
            
            <tag> ubuntu </tag>
            
            <tag> debian </tag>
            
            <tag> raspberry </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[hello md]]></title>
      <url>https://ygcaicn.github.io/%E6%9D%82%E9%A1%B9/hello-md.html</url>
      <content type="html"><![CDATA[<p>MarkDown 文本编辑器：  </p>
<ul>
<li>MarkdownPad（我使用的是Markdownpad2）</li>
<li>Sublime</li>
<li>Atom</li>
<li>有道云笔记（直接存入云笔记很方便）</li>
<li>任何有文本编辑功能的软件都可以书写markdown</li>
</ul>
<a id="more"></a>
<h2 id="Hello-word！"><a href="#Hello-word！" class="headerlink" title="Hello word！"></a>Hello word！</h2><p>打开Markdown编辑器，新建Hello.md文件，写入下面的内容：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Hello world!</div><div class="line">===</div><div class="line"></div><div class="line">I love [Google](http://www.google.com)!</div></pre></td></tr></table></figure>
<p>可视化以后的效果：</p>
<h1 id="Hello-world"><a href="#Hello-world" class="headerlink" title="Hello world!"></a>Hello world!</h1><p>I love <a href="http://www.google.com" target="_blank" rel="external">Google</a>!</p>
<hr>
<h1 id="关于MarkdownPad2"><a href="#关于MarkdownPad2" class="headerlink" title="关于MarkdownPad2"></a>关于MarkdownPad2</h1><ul>
<li>官方<a href="https://markdownpad.com/" target="_blank" rel="external">MarkdownPad2</a>,可以下载Pro版本。</li>
<li>破解<a href="http://www.jianshu.com/p/fa7c4387dc62" target="_blank" rel="external">注册码</a><blockquote>
<p>邮箱：<br>Soar360@live.com<br>授权秘钥：<br>GBPduHjWfJU1mZqcPM3BikjYKF6xKhlKIys3i1MU2eJHqWGImDHzWdD6xhMNLGVpbP2M5SN6bnxn2kSE8qHqNY5QaaRxmO3YSMHxlv2EYpjdwLcPwfeTG7kUdnhKE0vVy4RidP6Y2wZ0q74f47fzsZo45JE2hfQBFi2O9Jldjp1mW8HUpTtLA2a5/sQytXJUQl/QKO0jUQY4pa5CCx20sV1ClOTZtAGngSOJtIOFXK599sBr5aIEFyH0K7H4BoNMiiDMnxt1rD8Vb/ikJdhGMMQr0R4B+L3nWU97eaVPTRKfWGDE8/eAgKzpGwrQQoDh+nzX1xoVQ8NAuH+s4UcSeQ==</p>
</blockquote>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 杂项 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Markdown 基础语法]]></title>
      <url>https://ygcaicn.github.io/%E6%9D%82%E9%A1%B9/markdown.html</url>
      <content type="html"><![CDATA[<p>JOHN GRUBER定义的<a href="http://daringfireball.net/projects/markdown/syntax" target="_blank" rel="external">markdown语法</a>。</p>
<a id="more"></a>
<h1 id="段落与换行"><a href="#段落与换行" class="headerlink" title="段落与换行"></a>段落与换行</h1><p>1.段落的前后必须空行：空行指的是什么内容都没有，或者只有空白符（空格或制表符）</p>
<p>相邻两行文本，如果中间没有空行会显示在一行中（换行符被转换成为空格）</p>
<p>2.如果需要在段落内加入换行（<code>&lt;br/&gt;</code>）<br>可以在前一行的末尾加入至少两个空格，然后换行写其他的文字</p>
<p>3.Markdown中的多数区域都需要在两个空行之间</p>
<h1 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h1><h2 id="Setext格式"><a href="#Setext格式" class="headerlink" title="Setext格式"></a>Setext格式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">H1</div><div class="line">====</div><div class="line"></div><div class="line">H2</div><div class="line">----</div></pre></td></tr></table></figure>
<p>渲染效果：（不包含上下的分隔线）</p>
<hr>
<h1 id="H1"><a href="#H1" class="headerlink" title="H1"></a>H1</h1><h2 id="H2"><a href="#H2" class="headerlink" title="H2"></a>H2</h2><hr>
<h2 id="atx格式"><a href="#atx格式" class="headerlink" title="atx格式"></a>atx格式</h2><ul>
<li>可以使用对称的<code>#</code>包括文本：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">## H2 ##</div><div class="line"></div><div class="line">### H3 ###</div></pre></td></tr></table></figure>
<p><del>对于有道云笔记文本和<code>#</code>之间必须有空格。</del> 标准语法就是这样的。</p>
<p>渲染效果：</p>
<hr>
<h2 id="H2-1"><a href="#H2-1" class="headerlink" title="H2"></a>H2</h2><h3 id="H3"><a href="#H3" class="headerlink" title="H3"></a>H3</h3><hr>
<ul>
<li>也可以只在左边使用<code>#</code>:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">### H3</div><div class="line"></div><div class="line">#### H4</div></pre></td></tr></table></figure>
<p>渲染效果：</p>
<hr>
<h3 id="H3-1"><a href="#H3-1" class="headerlink" title="H3"></a>H3</h3><h4 id="H4"><a href="#H4" class="headerlink" title="H4"></a>H4</h4><hr>
<p>JOHN’s <a href="http://daringfireball.net/projects/markdown/syntax#header" target="_blank" rel="external">Heaser</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">HEADERS</div><div class="line"></div><div class="line">Markdown supports two styles of headers, Setext and atx.</div><div class="line"></div><div class="line">Setext-style headers are “underlined” using equal signs (for first-level headers) and dashes (for second-level headers). For example:</div><div class="line"></div><div class="line">This is an H1</div><div class="line">=============</div><div class="line"></div><div class="line">This is an H2</div><div class="line">-------------</div><div class="line">Any number of underlining =’s or -’s will work.</div><div class="line"></div><div class="line">Atx-style headers use 1-6 hash characters at the start of the line, corresponding to header levels 1-6. For example:</div><div class="line"></div><div class="line"># This is an H1</div><div class="line"></div><div class="line">## This is an H2</div><div class="line"></div><div class="line">###### This is an H6</div><div class="line">Optionally, you may “close” atx-style headers. This is purely cosmetic — you can use this if you think it looks better. The closing hashes don’t even need to match the number of hashes used to open the header. (The number of opening hashes determines the header level.) :</div><div class="line"></div><div class="line"># This is an H1 #</div><div class="line"></div><div class="line">## This is an H2 ##</div><div class="line"></div><div class="line">### This is an H3 ######</div></pre></td></tr></table></figure>
<p>各种Markdown软件的渲染结果可能会有一些差别，但是了解一下标准的语法是没坏处的。</p>
<h1 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h1><h2 id="1-引用内容"><a href="#1-引用内容" class="headerlink" title="1.引用内容"></a>1.引用内容</h2><p>在段落或者内容前使用<code>&gt;</code>符号，就可以将这段内容标记为‘引用’的内容（<code>&lt;blockquote&gt;</code>）:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&gt;引用内容</div></pre></td></tr></table></figure>
<p>渲染效果：</p>
<hr>
<blockquote>
<p>引用内容</p>
</blockquote>
<hr>
<h2 id="2-多行引用"><a href="#2-多行引用" class="headerlink" title="2.多行引用"></a>2.多行引用</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&gt;多行引用</div><div class="line">&gt;可以在每一行前加`&gt;`符号</div></pre></td></tr></table></figure>
<p>渲染效果：</p>
<hr>
<blockquote>
<p>多行引用<br>可以在每一行前加<code>&gt;</code>符号</p>
</blockquote>
<hr>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&gt;如果仅在第一行使用`&gt;`,</div><div class="line">后面相邻的行即使省略`&gt;`，也会变成引用内容</div></pre></td></tr></table></figure>
<p>渲染效果：</p>
<hr>
<blockquote>
<p>如果仅在第一行使用<code>&gt;</code>,<br>后面相邻的行即使省略<code>&gt;</code>，也会变成引用内容</p>
</blockquote>
<hr>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&gt;如果引用的内容需要换行，  </div><div class="line">&gt;可以在行尾添加两个空格</div><div class="line">&gt;</div><div class="line">&gt;或者在引用内容中加一个空行</div></pre></td></tr></table></figure>
<p>渲染效果：</p>
<hr>
<blockquote>
<p>如果引用的内容需要换行，<br>可以在行尾添加两个空格</p>
<p>或者在引用内容中加一个空行</p>
</blockquote>
<hr>
<h2 id="3-嵌套引用"><a href="#3-嵌套引用" class="headerlink" title="3.嵌套引用"></a>3.嵌套引用</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&gt;也可以在引用中</div><div class="line">&gt;&gt;使用嵌套的引用</div></pre></td></tr></table></figure>
<p>渲染效果：</p>
<hr>
<blockquote>
<p>也可以在引用中</p>
<blockquote>
<p>使用嵌套的引用</p>
</blockquote>
</blockquote>
<hr>
<h2 id="4-其它Markdown"><a href="#4-其它Markdown" class="headerlink" title="4.其它Markdown"></a>4.其它Markdown</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&gt;在引用中可以使用其它任何*Markdown*语法</div></pre></td></tr></table></figure>
<p>渲染效果：</p>
<hr>
<blockquote>
<p>在引用中可以使用其它任何<em>Markdown</em>语法</p>
</blockquote>
<hr>
<h1 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h1><h2 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">* 可以使用`*`作为标记</div><div class="line">- 也可以使用`-`</div><div class="line">+ 或者`+`</div></pre></td></tr></table></figure>
<p>渲染效果：</p>
<hr>
<ul>
<li>可以使用<code>*</code>作为标记</li>
</ul>
<ul>
<li>也可以使用<code>-</code></li>
</ul>
<ul>
<li>或者<code>+</code></li>
</ul>
<hr>
<h2 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">1. 有序列表以数字和`.`开始；</div><div class="line">2. 数字的序列并不会影响生成列表的序列；</div><div class="line">4. 但是仍然推荐按照自然顺序（1.2.3...）编写</div></pre></td></tr></table></figure>
<p>渲染效果：</p>
<hr>
<ol>
<li>有序列表以数字和<code>.</code>开始；</li>
<li>数字的序列并不会影响生成列表的序列；</li>
<li>但是仍然推荐按照自然顺序（1.2.3…）编写</li>
</ol>
<hr>
<h2 id="嵌套的列表"><a href="#嵌套的列表" class="headerlink" title="嵌套的列表"></a>嵌套的列表</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">1. 第一层</div><div class="line">    + 1-1</div><div class="line">    + 1-2</div><div class="line">    + 1-3</div><div class="line">2. 无序列表和有序列表可以随意相互嵌套</div><div class="line">    1. 2-1</div><div class="line">    2. 2-2</div><div class="line">    3. 2-3</div></pre></td></tr></table></figure>
<p>渲染效果：</p>
<hr>
<ol>
<li>第一层<ul>
<li>1-1</li>
<li>1-2</li>
<li>1-3</li>
</ul>
</li>
<li>无序列表和有序列表可以随意相互嵌套<ol>
<li>2-1</li>
<li>2-2</li>
<li>2-3</li>
</ol>
</li>
</ol>
<hr>
<h2 id="语法和用法"><a href="#语法和用法" class="headerlink" title="语法和用法"></a>语法和用法</h2><ol>
<li>无序列表项的开始是：符号 空格；</li>
<li>有序列表项的开始是：数字 <code>.</code> 空格；</li>
<li>空格至少为一个，多个空格将被解析为一个；</li>
<li>如果仅需要在行前显示数字和<code>.</code>:  </li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">05\. 可以使用：数字\. 来取消显示为列表</div></pre></td></tr></table></figure>
<p>05. 可以使用：数字\. 来取消显示为列表</p>
<h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><h2 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h2><p>可以使用缩进来插入代码块：</p>
<pre><code>&lt;html&gt;
    &lt;title&gt;&lt;/title&gt;
&lt;/html&gt;
</code></pre><p>代码块前后至少有一个空行，切每行代码前至少有一个Tab或者四个空格；</p>
<h2 id="行内代码"><a href="#行内代码" class="headerlink" title="行内代码"></a>行内代码</h2><p>通过<code>`，插入行内代码（</code>是Tab键上边、数字<code>1</code>键左侧的按键）；</p>
<p>例如<code>&lt;title&gt;Markdown&lt;/title&gt;</code></p>
<h2 id="转换规则"><a href="#转换规则" class="headerlink" title="转换规则"></a>转换规则</h2><p>代码块中的文本（包括Markdown语法）都会显示为原始内容，而特殊字符会被转换为HTML<a href="https://zh.wikipedia.org/wiki/XML%E4%B8%8EHTML%E5%AD%97%E7%AC%A6%E5%AE%9E%E4%BD%93%E5%BC%95%E7%94%A8%E5%88%97%E8%A1%A8" target="_blank" rel="external">字符实体</a></p>
<h1 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h1><ol>
<li>可以在一行中使用三个或更多的<code>*</code>,<code>-</code>或<code>_</code>来添加分隔线(<hr>):</li>
<li>多个字符之间可以有空格（空白符），但不能有其它字符：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">***</div><div class="line">------</div><div class="line">_____</div><div class="line"></div><div class="line">*   *   *</div><div class="line">_ _ _</div></pre></td></tr></table></figure>
<p>渲染效果：</p>
<h2 id=""><a href="#" class="headerlink" title="*"></a><em>*</em></h2><hr>
<hr>
<hr>
<h1 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h1><h2 id="行内式"><a href="#行内式" class="headerlink" title="行内式"></a>行内式</h2><p>格式为：<code>[link text](URL  &quot;title text&quot;)</code></p>
<p><code>[Google](http://www.google.com)</code><br><a href="http://www.google.com" target="_blank" rel="external">Google</a></p>
<p><code>[icon](./images/icon.png)</code><br><a href="./images/icon.png">icon</a></p>
<p>超链接的title就是鼠标放上去（不是点击）时就弹出来的提示：</p>
<p><code>[Google](http://www.google.com &quot;Google Title&quot;)</code></p>
<p>注：title text使用’或者”都是可以的。</p>
<p><a href="http://www.google.com" title="Google Title" target="_blank" rel="external">Google</a></p>
<h2 id="参考式"><a href="#参考式" class="headerlink" title="参考式"></a>参考式</h2><p>参考式链接的写法相当于行内式拆分成两部分，并通过一个识别符连链接两部分。参考式能尽量保持文章的结构简单，也方便统一管理URL</p>
<ol>
<li>链接格式</li>
</ol>
<p>第一个方括号为链接文本，第二个方括号为 链接独有的标识符，可以是字母、数字、空格或标点符号。<strong>标识符是不区分大小写的</strong></p>
<p><code>[link text][link-sign]</code></p>
<ol>
<li>链接内容</li>
</ol>
<p>其中URL可以使用&lt;&gt;包起来，title可以使用’’、””、 ()包括（考虑到兼容性，建议使用引号），title部分也可以换行来写；</p>
<p>链接内容的定义可以放在同一个文件的任意位置；</p>
<ol>
<li>备注</li>
</ol>
<p>可以省略标识符，直接使用link text作为标识符。</p>
<p>这种情况下第二个方括号可以为空或者直接省略第二个方括号。</p>
<p>参考格式的优点在于可以在多个不同的位置引用同一个URL。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">[Google][google-link]  </div><div class="line">[Baidu][baidu-link]  </div><div class="line">[QQ][]  </div><div class="line">[Amazon]</div><div class="line"></div><div class="line">[google-link]: http://www.google.com &quot;Google Title&quot;</div><div class="line">[baidu-link]: http://www.baidu.com &quot;Baidu Title&quot;</div><div class="line">[QQ]: http://www.qq.com &quot;QQ Title&quot;</div><div class="line">[Amazon]: http://www.amazon.com &quot;amazon title&quot;</div></pre></td></tr></table></figure>
<p>渲染效果：</p>
<hr>
<p><a href="http://www.google.com" title="Google Title" target="_blank" rel="external">Google</a><br><a href="http://www.baidu.com" title="Baidu Title" target="_blank" rel="external">Baidu</a><br><a href="http://www.qq.com" title="QQ Title" target="_blank" rel="external">QQ</a><br><a href="http://www.amazon.com" title="amazon title" target="_blank" rel="external">Amazon</a></p>
<hr>
<h2 id="自动链接"><a href="#自动链接" class="headerlink" title="自动链接"></a>自动链接</h2><p>使用<code>&lt;&gt;</code>包括的URL或者邮箱地址会被自动的转换为超链接：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;http://www.google.com&gt;   </div><div class="line">&lt;123@email.com&gt;</div></pre></td></tr></table></figure>
<p>渲染效果：</p>
<p><a href="http://www.google.com" target="_blank" rel="external">http://www.google.com</a><br><a href="&#109;&#x61;&#105;&#108;&#116;&#x6f;&#x3a;&#49;&#50;&#x33;&#x40;&#101;&#x6d;&#97;&#105;&#108;&#x2e;&#x63;&#x6f;&#x6d;">&#49;&#50;&#x33;&#x40;&#101;&#x6d;&#97;&#105;&#108;&#x2e;&#x63;&#x6f;&#x6d;</a></p>
<p>这种方式适合行内较短的链接，会使用URL作为超链接文章，邮箱地址会自动编码，以逃避抓取机器人。</p>
<h1 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h1><p>插入图片的语法和插入超链接的语法基本一致，只是在最前面多一个<code>!</code>。也分为行内式和参考式两种。</p>
<h2 id="行内式-1"><a href="#行内式-1" class="headerlink" title="行内式"></a>行内式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">![Imgur](http://i.imgur.com/YACdsVS.jpg)</div></pre></td></tr></table></figure>
<p><img src="http://i.imgur.com/YACdsVS.jpg" alt="Imgur" title="rosse"></p>
<p>方括号部分是图片的替代文本，括号中的’title’部分和连接是一样的，是可选的。</p>
<h2 id="参考式-1"><a href="#参考式-1" class="headerlink" title="参考式"></a>参考式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">![Imgur][rosse]</div><div class="line"></div><div class="line">[rosse]: http://i.imgur.com/YACdsVS.jpg &quot;rosse&quot;</div></pre></td></tr></table></figure>
<p><img src="http://i.imgur.com/YACdsVS.jpg" alt="Imgur" title="rosse"></p>
<h2 id="指定图片的大小"><a href="#指定图片的大小" class="headerlink" title="指定图片的大小"></a>指定图片的大小</h2><p>Markdown不支持指定图片的大小，不过可以通过直接插入<img>标签来指定相关属性：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;img src=&quot;http://i.imgur.com/YACdsVS.jpg&quot; alt=&quot;rosse&quot; title=&quot;rosse&quot; width=&quot;50&quot; height=&quot;30&quot;/&gt;</div></pre></td></tr></table></figure>
<p><img src="http://i.imgur.com/YACdsVS.jpg" alt="rosse" title="rosse" width="50" height="30"></p>
<p>注：这在有道云笔记里是不支持的！</p>
<h1 id="强调"><a href="#强调" class="headerlink" title="强调"></a>强调</h1><ol>
<li>使用<code>* *</code>或<code>_ _</code>包括的文本会被转换为<em></em>,通常表现为斜体。</li>
<li>使用<code>** **</code>或<code>__ __</code>包括的文本会被转换为<strong></strong>,通常表现为加粗。</li>
<li>用来包括文本的<em>或_内侧不能有空白，否则</em> _将不会被转换。</li>
<li>如果需要在文本中成对显示*或者_，可以在符号前加入<code>\</code>即可。</li>
<li>强调的特殊符号必须成对使用。</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">*Hello world!*  </div><div class="line">_Hello world!_  </div><div class="line">**Hello world!**  </div><div class="line">__Hello world!__  </div><div class="line">\*Hello world!\*  </div><div class="line">\_Hello world!\_</div></pre></td></tr></table></figure>
<p><em>Hello world!</em><br><em>Hello world!</em><br><strong>Hello world!</strong><br><strong>Hello world!</strong><br>*Hello world!*<br>_Hello world!_  </p>
<h1 id="字符转义"><a href="#字符转义" class="headerlink" title="字符转义"></a>字符转义</h1><p>反斜线 <code>\</code>用于插入在Markdown语法中有特殊作用的字符。</p>
<p>这些字符包括：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">\  </div><div class="line">`  </div><div class="line">_  </div><div class="line">&#123;&#125;  </div><div class="line">[]  </div><div class="line">()  </div><div class="line">#  </div><div class="line">+  </div><div class="line">-  </div><div class="line">_  </div><div class="line">&apos;  </div><div class="line">.  </div><div class="line">!</div></pre></td></tr></table></figure>
<h1 id="Markdown-扩展语法"><a href="#Markdown-扩展语法" class="headerlink" title="Markdown 扩展语法"></a>Markdown 扩展语法</h1><p>Markdown标准 本身包含的功能有限，所以产生了许多第三方的扩展语法，如<a href="https://help.github.com/categories/writing-on-github/" target="_blank" rel="external">Github Flavored Markdown</a>。</p>
<h1 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h1><p>用<code>~~ ~~</code>包括的内容将以删除线的形式展现。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">~~删除线~~</div></pre></td></tr></table></figure>
<p><del>删除线</del></p>
<h1 id="代码块和语法高亮"><a href="#代码块和语法高亮" class="headerlink" title="代码块和语法高亮"></a>代码块和语法高亮</h1><h2 id="代码块-1"><a href="#代码块-1" class="headerlink" title="代码块"></a>代码块</h2><ol>
<li>与缩进添加代码块不同，这里使用 \<figure class="highlight plain"><figcaption><span>来包含多行代码。```需要单独占一行。</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">2. 在第一组```之后添加代码的语言，如&apos;javascript&apos;或者&apos;js&apos;，即可以将代码标记为Javascript。</div><div class="line"></div><div class="line"></div><div class="line">    ```c++</div><div class="line">    include&lt;iostream&gt;</div><div class="line">    using namespace std;</div><div class="line"></div><div class="line">    int main(void)</div><div class="line">    &#123;</div><div class="line">        cout &lt;&lt; &quot;Hello world!&quot;;</div><div class="line">        return 0;</div><div class="line">    &#125;</div></pre></td></tr></table></figure></li>
</ol>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">include&lt;iostream&gt;</div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"Hello world!"</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<pre><code><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">window</span>.addEventListener(<span class="string">'load'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;<span class="built_in">console</span>.log(<span class="string">'window loaded'</span>);&#125;);</div></pre></td></tr></table></figure>
</code></pre><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">window</span>.addEventListener(<span class="string">'load'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;<span class="built_in">console</span>.log(<span class="string">'window loaded'</span>);&#125;);</div></pre></td></tr></table></figure>
<h1 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h1><h2 id="单元格和表头"><a href="#单元格和表头" class="headerlink" title="单元格和表头"></a>单元格和表头</h2><ol>
<li>使用<code>|</code>来分隔不同的单元格，使用来分隔表头和其它行。</li>
<li>为了美观，可以使用空格对齐不同的单元格，并在左右两侧都使用 <code>|</code>来标记单元格边界。</li>
<li>在表头下方的分隔线中加入 <code>:</code>，即可标记下方单元格内容的对齐方式。单元格内容默认为左对齐，表头内容会一直居中对齐。</li>
<li>表格中可以插入其它Markdown内容的行内标记，比如超链接等。</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">| name      |   age     |</div><div class="line">|---------- |-----------|</div><div class="line">|LearnShare |   12      |</div><div class="line">|Mike       |   20      |</div></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>name</th>
<th>age</th>
</tr>
</thead>
<tbody>
<tr>
<td>LearnShare</td>
<td>12</td>
</tr>
<tr>
<td>Mike</td>
<td>20</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th style="text-align:right">name</th>
<th>age</th>
<th>blog</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:right">LearnShare</td>
<td>12</td>
<td><a href="http://www.blog.cumtpn.com" target="_blank" rel="external">Learn</a></td>
</tr>
<tr>
<td style="text-align:right">Mike</td>
<td>20</td>
<td><img src="http://i.imgur.com/YACdsVS.jpg" alt="Imgur" title="rosse"></td>
</tr>
</tbody>
</table>
<h1 id="Task-list"><a href="#Task-list" class="headerlink" title="Task list"></a>Task list</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">- [ ] Eat</div><div class="line">- [x] Code</div><div class="line">    - [x] HTML</div><div class="line">    - [X] CSS</div><div class="line">    - [ ] Javascipt</div><div class="line">- [ ]Sleep</div></pre></td></tr></table></figure>
<ul>
<li>[ ] Eat</li>
<li>[x] Code<ul>
<li>[x] HTML</li>
<li>[x] CSS</li>
<li>[ ] Javascipt</li>
</ul>
</li>
<li>[ ]Sleep</li>
</ul>
<h1 id="编辑器与扩展"><a href="#编辑器与扩展" class="headerlink" title="编辑器与扩展"></a>编辑器与扩展</h1><p>这部分给大家介绍一些可以用来书写、编辑Markdown的工具，包括独立客户端、编辑器/IDE插件，以及WEB的工具，排名不分先后。</p>
<p>也欢迎你来推荐自己喜欢的工具和插件。</p>
<ul>
<li><a href="https://markdownpad.com" target="_blank" rel="external">MarkdownPad</a> Windows</li>
<li><a href="http://www.texts.io/" target="_blank" rel="external">Text</a> Windows OSX</li>
<li><a href="http://code52.org/DownmarkerWPF/" target="_blank" rel="external">MarkPad</a> Windows</li>
<li><a href="http://www.mdcharm.com/" target="_blank" rel="external">MdCharm</a> Windows Linux</li>
<li><a href="http://mike-ward.net/markdownedit/" target="_blank" rel="external">Mardown Edit</a> Windows</li>
<li><a href="https://cloose.github.io/CuteMarkEd/" target="_blank" rel="external">CuteMarkEd</a>Windows Linux</li>
<li><a href="http://pad.haroopress.com/" target="_blank" rel="external">Haroopad</a> Windows OSX Linux</li>
<li><a href="http://25.io/mou/" target="_blank" rel="external">Mou</a> OSX</li>
<li><a href="http://macdown.uranusjr.com/" target="_blank" rel="external">MacDown</a> OSX</li>
<li><a href="http://www.markdownpro.com/" target="_blank" rel="external">Markdown Pro</a> OSX</li>
<li><a href="http://sourceforge.net/projects/retext/" target="_blank" rel="external">ReText</a>Linux</li>
<li><a href="https://github.com/jonschlinkert/sublime-markdown-extended" target="_blank" rel="external">sublime-markdown-extended</a>Sublime Text</li>
<li><a href="https://github.com/atom/markdown-preview" target="_blank" rel="external">Atom Markdown Preview</a>Atom</li>
<li><a href="https://github.com/nicoulaj/idea-markdown" target="_blank" rel="external">IDEA Markdown</a>IDEA</li>
<li><a href="https://www.zybuluo.com/cmd/" target="_blank" rel="external">cmd Markdown</a>Windows OSX Linux web</li>
<li><a href="https://stackedit.io" target="_blank" rel="external">StactEdit</a>Web</li>
<li><a href="http://dillinger.io" target="_blank" rel="external">Dillinger</a>Web</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 杂项 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CentOS下载及版本选择--Linux版本，下载]]></title>
      <url>https://ygcaicn.github.io/Linux/CentOS%E4%B8%8B%E8%BD%BD%E5%8F%8A%E7%89%88%E6%9C%AC%E9%80%89%E6%8B%A9-Linux%E7%89%88%E6%9C%AC%EF%BC%8C%E4%B8%8B%E8%BD%BD.html</url>
      <content type="html"><![CDATA[<p>CentOS 是一个企业级的 Linux 发行版本，它源于 Red Hat 1 免费公开的源代码。<br>CentOS 完全遵守 Red Hat 的再发行政策，并且以功能上的兼容性为目标。CentOS 对组件的修改主要是去除上游供应商的商标及美工。</p>
<a id="more"></a>
<h1 id="镜像目录结构："><a href="#镜像目录结构：" class="headerlink" title="镜像目录结构："></a>镜像目录结构：</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">0_README.txt                                       22-May-2016 13:52    2210</div><div class="line">CentOS-6.8-x86_64-LiveCD.iso                       22-May-2016 22:18    702M</div><div class="line">CentOS-6.8-x86_64-LiveCD.torrent                   25-May-2016 18:01     28K</div><div class="line">CentOS-6.8-x86_64-LiveDVD.iso                      22-May-2016 21:38      2G</div><div class="line">CentOS-6.8-x86_64-LiveDVD.torrent                  25-May-2016 18:01     76K</div><div class="line">CentOS-6.8-x86_64-bin-DVD1.iso                     23-May-2016 07:53      4G</div><div class="line">CentOS-6.8-x86_64-bin-DVD1to2.torrent              25-May-2016 18:01    229K</div><div class="line">CentOS-6.8-x86_64-bin-DVD2.iso                     23-May-2016 07:53      2G</div><div class="line">CentOS-6.8-x86_64-minimal.iso                      24-May-2016 00:37    447M</div><div class="line">CentOS-6.8-x86_64-minimal.torrent                  25-May-2016 18:01     18K</div><div class="line">CentOS-6.8-x86_64-netinstall.iso                   22-May-2016 14:07    228M</div><div class="line">CentOS-6.8-x86_64-netinstall.torrent               25-May-2016 18:01    9799</div><div class="line">README.txt                                         22-May-2016 13:52    2210</div><div class="line">md5sum.txt                                         24-May-2016 00:41     388</div><div class="line">md5sum.txt.asc                                     25-May-2016 17:57    1271</div><div class="line">sha1sum.txt                                        24-May-2016 00:41     436</div><div class="line">sha1sum.txt.asc                                    25-May-2016 17:57    1319</div><div class="line">sha256sum.txt                                      24-May-2016 00:41     580</div><div class="line">sha256sum.txt.asc                                  25-May-2016 17:58    1463</div></pre></td></tr></table></figure>
<h1 id="README-txt有说明"><a href="#README-txt有说明" class="headerlink" title="README.txt有说明"></a>README.txt有说明</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">What images are in this directory</div><div class="line"></div><div class="line">CentOS-6.8-x86_64-netinstall.iso</div><div class="line">  This is the network install and rescue image.</div><div class="line">  This image is designed to be burned onto a CD. You then boot your computer off the CD.</div><div class="line"></div><div class="line">CentOS-6.8-x86_64-minimal.iso</div><div class="line">  The aim of this image is to install a very basic CentOS 6.8 system, with the minimum of packages needed to have a functional system.</div><div class="line">  Please burn this image onto a CD and boot your computer off it. A preselected set of packages will be installed on your system. Everything else needs to be installed using yum.</div><div class="line">  Please read http://wiki.centos.org/Manuals/ReleaseNotes/CentOSMinimalCD6.8 for more details about this image.</div><div class="line">  The set of packages installed by this image is identical to the one installed when choosing the group named &quot;Minimal&quot; from the full DVD image.</div><div class="line"></div><div class="line">CentOS-6.8-x86_64-bin-DVD1.iso</div><div class="line">CentOS-6.8-x86_64-bin-DVD2.iso</div><div class="line">  These two dvd images contain the entire base distribution.</div><div class="line">  Please burn DVD1 onto a DVD and boot your computer off it.</div><div class="line">  A basic install will not need DVD2.</div><div class="line">  After the installation is complete, please run &quot;yum update&quot; in order to update your system.</div><div class="line"></div><div class="line">CentOS-6.8-x86_64-LiveCD.iso</div><div class="line">  This is a CD live image of CentOS 6.8 designed to be burned onto a CD. You then boot your computer using that CD.</div><div class="line">  Please read http://wiki.centos.org/Manuals/ReleaseNotes/CentOSLiveCD6.8 for more details about this image.</div><div class="line">  The disk can also be used to install CentOS 6.8 onto your computer but without offering any package selection options at install time.</div><div class="line"></div><div class="line">CentOS-6.8-x86_64-LiveDVD.iso</div><div class="line">  This is a DVD live image of CentOS 6.8 designed to be burned onto a DVD. You then boot your computer using that DVD.</div><div class="line">  Please read http://wiki.centos.org/Manuals/ReleaseNotes/CentOSLiveDVD6.8 for more details about this image.</div><div class="line">  The disk can also be used to install CentOS 6.8 onto your computer but without offering any package selection options at install time.</div><div class="line"></div><div class="line"> Remember that in order to be able to partition your disk you will need to run the GUI installer which in turns needs enough RAM. The same is true for the network setup step.</div><div class="line"> The release notes ( http://wiki.centos.org/Manuals/ReleaseNotes/CentOS6.8 ) provide more details about these aspects.</div></pre></td></tr></table></figure>
<h1 id="LiveDVD-LiveCD-DVD"><a href="#LiveDVD-LiveCD-DVD" class="headerlink" title="LiveDVD-LiveCD-DVD"></a>LiveDVD-LiveCD-DVD</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">CentOS-6.8-x86_64-LiveCD.iso</div><div class="line"></div><div class="line">CentOS-6.8-x86_64-LiveDVD.iso</div></pre></td></tr></table></figure>
<p>这两个live版不许要安装到硬盘，可以直接从介质启动系统。<br>LiveCD版——相比LiveDVD是个精简的光盘CentOS系统。体积更小，便于维护使用。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">CentOS-6.8-x86_64-bin-DVD1.iso</div><div class="line"></div><div class="line">CentOS-6.8-x86_64-bin-DVD2.iso</div></pre></td></tr></table></figure>
<p>这两个镜像是系统安装的镜像，需要安装到硬盘才能使用。DVD1用与基础安装，DVD2为附加RPM包，安装系统时只需要用到DVD1。<br>另外这两个镜像可以作为本地yum源使用。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">CentOS-6.8-x86_64-minimal.iso</div></pre></td></tr></table></figure>
<p>最小化安装镜像，very basic CentOS 6.8 system。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">CentOS-6.8-x86_64-netinstall.iso</div></pre></td></tr></table></figure>
<p>网络安装镜像，需要联网才能进行安装。</p>
<h2 id="参考文档：https-wiki-centos-org-zh-Manuals-ReleaseNotes-CentOS6-8"><a href="#参考文档：https-wiki-centos-org-zh-Manuals-ReleaseNotes-CentOS6-8" class="headerlink" title="参考文档：https://wiki.centos.org/zh/Manuals/ReleaseNotes/CentOS6.8"></a>参考文档：<a href="https://wiki.centos.org/zh/Manuals/ReleaseNotes/CentOS6.8" target="_blank" rel="external">https://wiki.centos.org/zh/Manuals/ReleaseNotes/CentOS6.8</a></h2><p>#Linux下载开源镜像站：</p>
<h2 id="1-企业贡献："><a href="#1-企业贡献：" class="headerlink" title="1.企业贡献："></a>1.企业贡献：</h2><p>　　搜狐开源镜像站：<a href="http://mirrors.sohu.com/" target="_blank" rel="external">http://mirrors.sohu.com/</a></p>
<p>　　网易开源镜像站：<a href="http://mirrors.163.com/" target="_blank" rel="external">http://mirrors.163.com/</a></p>
<h2 id="2-大学教学："><a href="#2-大学教学：" class="headerlink" title="2.大学教学："></a>2.大学教学：</h2><p>　　北京理工大学：</p>
<p>　　<a href="http://mirror.bit.edu.cn" target="_blank" rel="external">http://mirror.bit.edu.cn</a> (IPv4 only)</p>
<p>　　<a href="http://mirror.bit6.edu.cn" target="_blank" rel="external">http://mirror.bit6.edu.cn</a> (IPv6 only)</p>
<p>　　北京交通大学：</p>
<p>　　<a href="http://mirror.bjtu.edu.cn" target="_blank" rel="external">http://mirror.bjtu.edu.cn</a> (IPv4 only)</p>
<p>　　<a href="http://mirror6.bjtu.edu.cn" target="_blank" rel="external">http://mirror6.bjtu.edu.cn</a> (IPv6 only)</p>
<p>　　<a href="http://debian.bjtu.edu.cn" target="_blank" rel="external">http://debian.bjtu.edu.cn</a> (IPv4+IPv6)</p>
<p>　　兰州大学：<a href="http://mirror.lzu.edu.cn/" target="_blank" rel="external">http://mirror.lzu.edu.cn/</a></p>
<p>　　厦门大学：<a href="http://mirrors.xmu.edu.cn/" target="_blank" rel="external">http://mirrors.xmu.edu.cn/</a></p>
<p>　　上海交通大学：</p>
<p>　　<a href="http://ftp.sjtu.edu.cn/" target="_blank" rel="external">http://ftp.sjtu.edu.cn/</a> (IPv4 only)</p>
<p>　　<a href="http://ftp6.sjtu.edu.cn" target="_blank" rel="external">http://ftp6.sjtu.edu.cn</a> (IPv6 only)</p>
<p>　　清华大学：</p>
<p>　　<a href="http://mirrors.tuna.tsinghua.edu.cn/" target="_blank" rel="external">http://mirrors.tuna.tsinghua.edu.cn/</a> (IPv4+IPv6)</p>
<p>　　<a href="http://mirrors.6.tuna.tsinghua.edu.cn/" target="_blank" rel="external">http://mirrors.6.tuna.tsinghua.edu.cn/</a> (IPv6 only)</p>
<p>　　<a href="http://mirrors.4.tuna.tsinghua.edu.cn/" target="_blank" rel="external">http://mirrors.4.tuna.tsinghua.edu.cn/</a> (IPv4 only)</p>
<p>　　天津大学：<a href="http://mirror.tju.edu.cn/" target="_blank" rel="external">http://mirror.tju.edu.cn/</a></p>
<p>　　中国科学技术大学：</p>
<p>　　<a href="http://mirrors.ustc.edu.cn/" target="_blank" rel="external">http://mirrors.ustc.edu.cn/</a> (IPv4+IPv6)</p>
<p>　　<a href="http://mirrors4.ustc.edu.cn/" target="_blank" rel="external">http://mirrors4.ustc.edu.cn/</a></p>
<p>　　<a href="http://mirrors6.ustc.edu.cn/" target="_blank" rel="external">http://mirrors6.ustc.edu.cn/</a></p>
<p>　　西南大学：<a href="http://linux.swu.edu.cn/swudownload/Distributions/" target="_blank" rel="external">http://linux.swu.edu.cn/swudownload/Distributions/</a></p>
<p>　　东北大学：</p>
<p>　　<a href="http://mirror.neu.edu.cn/" target="_blank" rel="external">http://mirror.neu.edu.cn/</a> (IPv4 only)</p>
<p>　　<a href="http://mirror.neu6.edu.cn/" target="_blank" rel="external">http://mirror.neu6.edu.cn/</a> (IPv6 only)</p>
<p>　　电子科技大学：</p>
<p>　　<a href="http://ubuntu.uestc.edu.cn/" target="_blank" rel="external">http://ubuntu.uestc.edu.cn/</a></p>
<p>　　青岛大学：<a href="http://mirror.qdu.edu.cn/" target="_blank" rel="external">http://mirror.qdu.edu.cn/</a></p>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[UEFI 启动：实际工作原理]]></title>
      <url>https://ygcaicn.github.io/Linux/grub2-1.html</url>
      <content type="html"><![CDATA[<p>（译）<a href="http://blog.woodelf.org/2014/05/28/uefi-boot-how-it-works.html" target="_blank" rel="external">转</a> UEFI 启动：实际工作原理 2014.05.28</p>
<p>本文是我翻译自国外技术博客的一篇文章，其中讲述了 UEFI 的一些基本概念和细节。</p>
<p>本文的原始链接位于：，<a href="https://www.happyassassin.net/2014/01/25/uefi-boot-how-does-that-actually-work-then/" target="_blank" rel="external">https://www.happyassassin.net/2014/01/25/uefi-boot-how-does-that-actually-work-then/</a></p>
<p>本人的翻译水平有限，难免多有疏漏。废话不多说，请看正文：</p>
<p>又到 AdamW 的讲课时间了，如果你不想听我的长篇大论，那么请出门右拐。</p>
<p>Kamil Paral 说我有写作癖，知道自己的坏习惯也是件好事。</p>
<p>可能你已经在互联网上阅读过有关 UEFI 的大量资料。但是有一些重要事项需要了解：这些资料中的 95% 都毫无价值。如果你认为你已经对 UEFI 有所了解，但是如果你的知识来源并不可靠，那么所掌握的知识就不过是一堆误解、谬论、一己之见、信口开河和弥天大谎。先把这些都忘了吧。如果想真正了解有关 UEFI 的权威知识，不妨访问 UEFI 规范、mjg59 的博客、其他靠谱一点的文章/权威人士——包括 Rod Smith、Peter Jones、Chris Murphy，或者阅读一些小众操作系统的文档，前提是这些操作系统的开发人员确实了解 UEFI。</p>
<a id="more"></a>
<p>好，准备工作做完了。我主要想讨论启动加载，因为对于大多数用户而言，固件在其中扮演着重要角色，同时，不少网站也针对这一过程喋喋不休，由此产生不少误解。</p>
<h1 id="术语"><a href="#术语" class="headerlink" title="术语"></a>术语</h1><p>首先，我们了解一些术语。BIOS 和 UEFI 都是计算机的固件类型。BIOS 固件（主要）用于 IBM PC 兼容计算机。UEFI 的通用性更强，可用在非“IBM PC 兼容”系列的计算机上。</p>
<p>不存在“UEFI BIOS”。没有任何一台计算机会有“UEFI BIOS”。请不要再说“UEFI BIOS”。BIOS 不是所有 PC 固件的通用术语，它只是 PC 固件的一种特定类型。计算机中包含固件。如果你有一台 IBM PC 兼容计算机，那么固件几乎肯定就是 BIOS 或 UEFI。如果你运行的是 Coreboot，那么恭喜，你是个例外，引以为傲吧。</p>
<p>安全启动 (Secure Boot) 与 UEFI 不是同一个概念。请不要将这些术语混淆使用。安全启动 (Secure Boot) 实际上是 UEFI 规范的一项可选功能，于 UEFI 规范版本 2.2 引入。我们稍后会详细讨论安全启动 (Secure Boot) 到底是什么，但是目前而言，只需要记住它和 UEFI 不同即可。你需要区分安全启动 (Secure Boot) 和 UEFI 的差异，在任何场合，你都应当了解你实际上讨论的是其中哪一个。我们首先讨论 UEFI，然后我们将把安全启动 (Secure Boot) 作为 UEFI 的一项“扩展”来进行讨论，因为这就是安全启动 (Secure Boot) 的本质。</p>
<p>注释：UEFI 不是由微软开发的，也从来不受微软控制。它的前身和基础——EFI，是由 Intel 开发和发布的。UEFI 由 UEFI 论坛进行管理。微软是 UEFI 论坛的成员之一。Red Hat、Apple、几乎所有主要 PC 制造商、Intel（显然）、AMD 和一大批其他主要和次要硬件、软件和固件公司及组织也都是 UEFI 论坛的成员。UEFI 是一套业已达成广泛共识的规范，其中当然也包含各种混乱（我们稍后会专门讨论其中一部分）。UEFI 并不由任何一家公司独裁掌控。</p>
<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p>如果想真正了解 UEFI，阅读 UEFI 规范是个不错的方法。这件事并不难，也不需要什么代价。阅读 UEFI 规范相当枯燥乏味，但是会让你受益匪浅。你可以从官方 UEFI 网站下载 UEFI 规范。尽管下载 UEFI 规范需要先同意某些条款和条件，但是不会带来损失。在我撰写本文时，UEFI 规范的最新版本是 2.4 Errata A（译者注：现在更新到了 2.4 Errata B），本文所写内容也基于这一版本。</p>
<p>BIOS 没有制定相应规范。BIOS 本身就是一项事实标准，从 20 世纪 80 年代开始，BIOS 的工作方式就一成不变。这也是诞生 UEFI 的原因之一。</p>
<p>简单起见，我们可以把 BIOS 和 UEFI 看成两种不同的组合。其中一种是 UEFI和 GPT （我们稍后会讨论 GPT）产生之前，IBM PC 兼容计算机（以下称为 PC）所广泛采用的组合。大部分人可能对这种组合非常熟悉，对其中的细节了如指掌。那么我们就先来讨论在具有 BIOS 固件的 PC 上，启动是如何工作的。</p>
<h1 id="BIOS-启动"><a href="#BIOS-启动" class="headerlink" title="BIOS 启动"></a>BIOS 启动</h1><p>事实上，BIOS 启动的工作原理非常非常简单。在老式 BIOS PC 上，装有一个或多个磁盘，每个磁盘中包含 MBR。MBR 是另一套事实标准；大体而言，磁盘起始位置以特定格式描述磁盘上的分区，并包含“启动装载程序 (boot loader)”，BIOS 固件知道如何执行这一小段启动装载程序代码。启动装载程序的职责是启动操作系统（现代启动装载程序的大小通常超出了 MBR 空间所能容纳的范围，因此必须采用多阶段设计，其中 MBR 部分只知道如何从其他位置加载下一阶段，我们现在先不着重讨论这一过程）。</p>
<p>在启动系统的过程中，BIOS 固件只能识别系统包含的磁盘。而作为 BIOS 计算机的拥有者，你可以告诉 BIOS 固件你想从哪个磁盘启动系统。而固件本身并不知道其他细节，它只会执行在指定磁盘的 MBR 部分所发现的启动装载程序，就这么回事。在执行启动装载程序之后，固件本身就不再参与启动。</p>
<p>在 BIOS 组合中，所有的多重启动形式都肯定是在固件层上进行处理的。固件层无法真正识别启动装载程序或操作系统，甚至连分区都无法识别。固件所能执行的操作只是从磁盘的 MBR 中运行启动装载程序。你无法从固件外部配置启动过程。</p>
<h1 id="UEFI-启动：背景"><a href="#UEFI-启动：背景" class="headerlink" title="UEFI 启动：背景"></a>UEFI 启动：背景</h1><p>好，BIOS 组合的背景知识已经明确了。我们现在来看看 UEFI 计算机上的启动原理。即使未掌握本文的细节，也请记住这一点：UEFI 与 BIOS 完全不同。UEFI 启动原理与 BIOS 绝对不同。你不能把 BIOS 启动的原理直接套用到原生 UEFI 启动上。你不能把专为 BIOS 启动设计的工具应用到原生 UEFI 启动的系统上。记住，UEFI 组合完全不同。</p>
<p>还需要了解一个重点：许多 UEFI 固件实现了某种 BIOS 兼容模式（有时候称为 CSM）。许多 UEFI 固件可以像 BIOS 固件一样启动系统，它们可以查找磁盘上的 MBR，然后从 MBR 中执行启动装载程序，接着将后续工作完全交给启动装载程序。有时候，其他人误将此功能称为“禁用 UEFI”，从语言学角度而言，这种说法是荒谬的。系统固件是无法“禁用”的。这种说法很愚蠢，不要采用这种说法。但是在其他人这么说的时候，应该了解他们真正想表达什么。他们讨论的是通过 UEFI 固件的一项功能，以“BIOS 风格”启动系统，而不是采用原生 UEFI 方式启动系统。</p>
<p>我想解释一下原生 UEFI 启动。如果你有一台基于 UEFI 的计算机，其固件具有 BIOS 兼容功能，并且你打算一直使用这项兼容功能，在启动过程中，你的计算机看起来就是基于 BIOS 的。你只需要像 BIOS 启动一样进行所需操作即可。如果你确实有此打算，那么就不要中途变卦。对于你日常使用的操作系统，强烈建议不要混合使用原生 UEFI 启动和 BIOS 兼容启动，尤其不要在同一块磁盘上混用。这么做的话，你会痛不欲生。如果你决定混合使用原生 UEFI 启动和 BIOS 兼容启动，到时候就别找我哭诉。</p>
<p>为了理清头绪，我将假设磁盘采用 GPT，并且包含用于 EFI 的 FAT32 EFI 系统分区 (ESP)。根据你对这些知识的深入程度，你可能发现，在进行原生 UEFI 启动时，GPT 磁盘和 EFI FAT32 ESP 并不是必要条件。但是 UEFI 规范和 GPT 磁盘以及 EFI FAT32 ESP 的联系程度相当密切。在99%的情况下，你要处理的也正是这样的组合。除非你在使用 Mac（老实说，Mac 混乱不堪）。</p>
<p>编辑说明：以下章节（到缺陷为止）在 2014 年 1 月 26 日（本文发布的几小时后）根据 Peter Jones 的反馈进行了大量修订。本文可视为 v2.0 版本。早期版本的写作方式不够严谨，而且内容可能会产生误解。</p>
<h1 id="UEFI-原生启动：实际工作原理——背景"><a href="#UEFI-原生启动：实际工作原理——背景" class="headerlink" title="UEFI 原生启动：实际工作原理——背景"></a>UEFI 原生启动：实际工作原理——背景</h1><p>言归正传。本节将解释原生 UEFI 启动的实际工作原理。如果已掌握一定程度的背景知识，可能更容易深入理解本节内容。</p>
<p>在固件层，UEFI 的基础架构更丰富，可用于处理系统启动。UEFI 远不像BIOS 那么简单。与 BIOS 不同，UEFI 确实可以（不同程度上）理解“磁盘分区”、“启动装载程序”以及“操作系统”的概念。</p>
<p>你可以稍微看看 BIOS 启动过程，然后再看看 UEFI 启动过程，了解 UEFI 启动过程如何采用多种措施来解决特定问题。</p>
<p>在思考启动过程时，你会发现 BIOS/MBR 查找启动装载程序的方法实在不怎么样。BIOS/MBR 非常奇葩：位于磁盘起始位置的这一小段空间包含神奇代码 (magic code)，而这段神奇代码只作用于系统固件和写入此神奇代码的工具。这种方法有许多问题。</p>
<ul>
<li><p>处理不便——你需要特殊工具来写入 MBR，如果要查看 MBR 中包含的内容，唯一的方法几乎就是把 MBR dd 出来，然后进行检查。</p>
</li>
<li><p>如上所述，MBR 本身不足以容纳许多现代启动装载程序。这些启动装载程序会将自身的一小部分安装在 MBR 中，而将其他部分安装到磁盘上的可用空间中。这段可用空间位于常规 MBR 末尾和第一个分区的起始位置之间。这就会造成很大的问题（其实这整个设计就是个大问题，不过无所谓）。对于第一个分区的起始位置，并没有成文的可靠规定，因此难以确保空间足够。只有一件事情是肯定的：这段空间不足以容纳某些启动装载程序的配置。</p>
</li>
<li><p>如果要选择其他启动目标（除磁盘以外），这种设计没有提供任何标准化层或标准化机制，但是用户希望选择除磁盘以外的启动目标。也就是说，他们希望实现多重可启动对象——通常是操作系统。在 BIOS/MBR 组合中，实现这种目的的唯一方法是由启动装载程序进行处理；至于如何实现，并没有进行获得广泛认可的规定。虽然实现的方法非常多，但是它们无法彼此协作，而且也都不是获得广泛认可的标准或规定。而在操作系统/操作系统安装层编写工具的难度很大，无法干净利落地处理多重启动。因此这种设计非常混乱。</p>
</li>
<li><p>这种设计没有提供标准方法，让用户可以从除磁盘以外的目标进行启动。本文不会就此问题进行详细讨论，但是请注意，UEFI 启动的另一优势为：它提供了进行启动（例如，从远程服务器进行启动）的标准方法。</p>
</li>
<li><p>固件层以上的其他层无法配置固件的启动行为，BIOS 没有提供相应机制。</p>
</li>
</ul>
<p>可以想象，在 UEFI 设计之初，开发人员思考过这些问题，并最终提出解决方案。UEFI 固件并不仅仅可以识别磁盘，它也知道启动装载程序代码在每个磁盘上所处的位置，而且在固件层，UEFI 的基础架构更丰富，可用于处理启动装载。接下来，我们讨论下 UEFI 规范中定义的相关内容。</p>
<h1 id="EFI-可执行文件"><a href="#EFI-可执行文件" class="headerlink" title="EFI 可执行文件"></a>EFI 可执行文件</h1><p>UEFI 规范定义了一种可执行文件格式，并要求所有 UEFI 固件能够执行此格式的代码。当开发人员为原生 UEFI 编写启动装载程序时，就必须按照这种格式编写。这种设计非常简洁直观，也无需进一步解释：对于固件可以执行的代码，固件规范真正定义了其通用格式，这是件好事。</p>
<h1 id="GPT（GUID-分区表）格式"><a href="#GPT（GUID-分区表）格式" class="headerlink" title="GPT（GUID 分区表）格式"></a>GPT（GUID 分区表）格式</h1><p>GUID 分区表格式与 UEFI 规范具有密切联系，而且，它并不特别复杂，无需多加解释。GPT 是 UEFI 规范提供的良好基础架构之一。GPT 仅仅是分区表的一种标准——磁盘起始位置的信息定义了磁盘所包含的分区。相比 MBR/MS-DOS 分区表，这种分区表对分区的定义要好得多，并且 UEFI 规范要求 UEFI 兼容固件必须能识别 GPT（也要求固件能识别 MBR，以保证向后兼容）。所有这些规范都是相当实用的基础架构： UEFI 规范正建立某些功能，固件层上的一切都可依靠固件本身来实现这些功能。</p>
<h1 id="EFI-系统分区"><a href="#EFI-系统分区" class="headerlink" title="EFI 系统分区"></a>EFI 系统分区</h1><p>在修订本文时，我才真正思考 EFI 系统分区的概念，让我有如醍醐灌顶。实际上，“EFI 系统分区”的概念可以解决“奇葩”的 MBR 空间所产生的问题。在磁盘起始位置留出自由空间，用于存放启动装载程序代码，但又不定义其容量，这种设计糟糕透顶。这一点在上文已经讨论过了。EFI 系统分区是 UEFI 用于解决这种问题的解决方案。1</p>
<p>具体的解决方案如下：我们要求固件层能够读取某些特定的文件系统类型。UEFI 规范要求兼容固件必须能读取 FAT 格式的变种（包括 FAT12、FAT16 和 FAT32）。UEFI 规范实际扮演的角色就是编纂整理 FAT 文件系统格式的现有解释，确保在采用 UEFI 时可以使用那些格式，并规定 UEFI 兼容固件必须能够读取那些格式。UEFI 规范针对这方面的具体规定如下：</p>
<p>“可扩展固件接口 (EFI) 支持的文件系统基于 FAT 文件系统。EFI 定义了可以明确记录和测试的具体 FAT 版本。FAT 的唯一定义必须符合 EFI 规范及关联参考文档，对 FAT 唯一定义的实现必须支持 EFI。为区分 EFI 文件系统与纯 FAT，定义了新的分区文件系统类型。”</p>
<p>“EFI 系统分区”是采用 FAT 变种（UEFI 规范定义的变种之一）格式化的任意分区，该分区被赋予特定 GPT 分区类型，以帮助固件识别该分区。此分区的目的如上所述：固件层确实可以读取“普通”磁盘分区中的数据。希望我已明确解释为何这种设计更佳：操作系统可以创建、格式化和挂载分区（采用广泛理解的格式），并将启动装载程序的代码和固件可能需要读取的所有其他内容放到这个分区中，而不用像 MBR 磁盘一样，将启动装载程序的代码写入磁盘的起始位置空间。</p>
<p>刚开始的时候，对我而言，整个 ESP 的设计看起来有点匪夷所思且令人困惑，因此我希望本节可以解释为何 ESP 实际上是非常优秀的设计——真正匪夷所思和令人困惑的设计是 BIOS/MBR。若要从操作系统层写入某些内容，唯一的方法是将这些内容写入磁盘起始位置的某部分（但不知道是多少）空间，而并没有具体规定其中的具体实现。如果回过头再看，这种设计并不明智，且难以理解。</p>
<p>正如我们稍后会强调的那样，UEFI 规范试图采用更直观严格的方法——它很少禁止固件执行其他操作。UEFI 规范并不反对编写固件，用于执行以其他格式写成的代码、读取其他类型的分区表，以及读取用UEFI 变种文件系统（非 FAT）格式化的分区。但是 UEFI 兼容固件必须至少能够实现执行 EFI 可执行文件、读取 GPT 分区表、以及读取 ESP，因此如果你正编写操作系统或其他东西，并且想要在 UEFI 兼容固件上运行的话，你也得遵循 UEFI 规范，这就是 EFI 系统分区的概念非常重要的原因：它允许（至少理论上）将 EFI 可执行文件放在以 UEFI FAT 格式化且 GPT 分区类型正确无误的分区上，另外，系统固件要能够读取该分区。这种机制非常严谨，等价于 BIOS 中的“固件能够执行放置在 MBR 空间中的启动装载程序代码”。</p>
<h1 id="UEFI-规范"><a href="#UEFI-规范" class="headerlink" title="UEFI 规范"></a>UEFI 规范</h1><p>UEFI 规范为我们提供了三大重要基础，这些重要基础是上层架构正常运行的立足之本：</p>
<ul>
<li><p>读取分区表</p>
</li>
<li><p>访问某些特定文件系统中的文件</p>
</li>
<li><p>执行特定格式的代码</p>
</li>
</ul>
<p>相比 BIOS 固件所提供的功能，UEFI 的功能要丰富得多。但是，为了完成固件层可以处理多重目标（而不仅仅是磁盘）启动的愿景，我们需要其他基础：需要建立一种机制，通过这种机制，固件可以查找各种可能的启动目标，并提供相应的配置方法。</p>
<h1 id="UEFI-启动管理器"><a href="#UEFI-启动管理器" class="headerlink" title="UEFI 启动管理器"></a>UEFI 启动管理器</h1><p>UEFI 规范定义了名为 UEFI 启动管理器的一项功能（Linux发行版包含名为efibootmgr 的工具，可用于更改 UEFI 启动管理器的配置）。如果你确实阅读过 UEFI 规范，那么就会发现，UEFI 规范对 UEFI 启动管理器作出了如下规定：</p>
<p>“UEFI 启动管理器是一种固件策略引擎，可通过修改固件架构中定义的全局NVRAM 变量来进行配置。启动管理器将尝试按全局 NVRAM 变量定义的顺序依次加载 UEFI 驱动和 UEFI 应用程序（包括 UEFI 操作系统启动装载程序）。”</p>
<p>好，既然已经明确了这一概念，那我们就继续吧。不，先等等。我来先把那一项规定解释清楚，便于理解。简单来说，你可以把 UEFI 启动管理器视为启动菜单。在 BIOS 固件上，固件层的“启动菜单”（当然）是，启动时连接到计算机的各个磁盘——不多不少。但是对于 UEFI 固件而言，情况有所不同。</p>
<p>UEFI 启动管理器可以进行配置——简言之，你可以向“启动菜单”添加项或者从中删除项。固件也可以（事实上， UEFI 规范也有此要求）根据连接到计算机的磁盘或根据某些固件配置，在此启动菜单中“生成”有效项。你也可以检查启动菜单，确保正确无误。</p>
<p>UEFI 提供了一种非常优秀的机制，可以从上层架构执行此操作：你可以从已启动的操作系统中配置系统启动行为。如果已通过 UEFI 启动 Linux，就可以使用 efibootmgr 工具来完成所有这些操作。Windows 也有相应的工具，但是我对 Windows 下的工具非常不熟悉。我们不妨看一些典型的 efibootmgr 输出，这些是我从 Fedora 论坛转过来的，稍微进行了调整：</p>
<p>[root@system directory]# efibootmgr -v<br>BootCurrent: 0002<br>Timeout: 3 seconds<br>BootOrder: 0003,0002,0000,0004<br>Boot0000<em> CD/DVD Drive  BIOS(3,0,00)<br>Boot0001</em> Hard Drive    HD(2,0,00)<br>Boot0002<em> Fedora        HD(1,800,61800,6d98f360-cb3e-4727-8fed-5ce0c040365d)File(\EFI\fedora\grubx64.efi)<br>Boot0003</em> opensuse      HD(1,800,61800,6d98f360-cb3e-4727-8fed-5ce0c040365d)File(\EFI\opensuse\grubx64.efi)<br>Boot0004* Hard Drive    BIOS(2,0,00)P0: ST1500DM003-9YN16G        .<br>[root@system directory]#</p>
<p>这个示例非常清晰。我们可以从中观察细节。</p>
<p>第一行表示，目前你从“启动菜单”的哪个项进行了启动。第二行非常明显（如果固件的 UEFI 启动管理器显示了类似启动菜单的界面，那么这一行表示继续启动默认项之前的超时）。BootOrder 是列表中启动项的尝试顺序。其余输出显示了实际的启动项。我们稍后会说明每一个启动项具体作用。</p>
<p>如果完全正常启动 UEFI 固件，而不进行任何调整（我们稍后会讨论），UEFI 固件将按照BootOrder 中列出的顺序，尝试从“启动菜单”中的每个“项”进行启动。因此，在这台计算机上，UEFI 固件将尝试启动名为“opensuse”的项，如果启动失败，然后再尝试启动名为“Fedora”的项，然后再是“CD/DVD Drive”，接着是第二项“Hard Drive”。</p>
<h1 id="UEFI原生启动：实际工作原理——启动管理器项"><a href="#UEFI原生启动：实际工作原理——启动管理器项" class="headerlink" title="UEFI原生启动：实际工作原理——启动管理器项"></a>UEFI原生启动：实际工作原理——启动管理器项</h1><p>那么，这些项的实际含义是什么？实际上，UEFI 规范之所以显得复杂，很大程度上是因为其中的不确定因素太多。如果你正在阅读 UEFI 规范，那么先做好心理准备，然后前往 EFI_DEVICE_PATH_PROTOCOL 一节。但是请注意，这个协议是通用的，虽然这个协议不涉及启动过程，但是有其他作用——这实际上就是 UEFI 官方的设备标识方法，这种标识方法可用于启动管理器项以及各种其他用途。出于各种原因，并不是每一种潜在的 EFI 设备都像 UEFI 启动管理器项一样起作用（如果你想从视频适配器启动，很可能不会成功）。但是启动菜单中显然可以包含指向 PXE 服务器（而不是磁盘分区）的项。UEFI 规范进行了多项规定，可以向 UEFI 启动管理器配置中添加除磁盘以外的启动目标。</p>
<p>但是对我们而言，只需要考虑连接到计算机的一般磁盘即可。既然这样，我们来讨论下可能遇到的三种启动项类型。</p>
<h2 id="BIOS-兼容启动项"><a href="#BIOS-兼容启动项" class="headerlink" title="BIOS 兼容启动项"></a>BIOS 兼容启动项</h2><p>在本示例中，Boot0000 和 Boot0004 实际上是 BIOS 兼容模式启动项，而不是原生 UEFI 启动项。这些启动项不是通过外部工具添加到 UEFI 启动管理器配置中的，而是由固件本身生成的——这也是 UEFI 固件实现 BIOS 兼容启动的常见方式，通过生成 UEFI 启动管理器项，可触发指定设备的 BIOS 启动。至于 UEFI 启动管理器如何呈现给用户，这是另一个问题，我们稍后讨论。根据具体固件及其配置，其中有些项可能无法显示。每一项只会具有一个名称（“CD/DVD Drive”、“Hard Drive”），这表示“如果选中此项，那么就以 BIOS 兼容模式启动本磁盘”（其中，对于 Boot0000，“本磁盘”为 3,0,00，对于 Boot0004，“本磁盘”为 2,0,00）。</p>
<h2 id="“回退路径-Fallback-path-”UEFI-原生启动项"><a href="#“回退路径-Fallback-path-”UEFI-原生启动项" class="headerlink" title="“回退路径 (Fallback path)”UEFI 原生启动项"></a>“回退路径 (Fallback path)”UEFI 原生启动项</h2><p>Boot0001 项（我虚构的，实际操作中可能不存在，这里只是为了举例说明）用于通知固件尝试从特定磁盘启动（以 UEFI 模式而不是 BIOS 兼容模式），但是并没有向固件提供其他信息。它没有指定磁盘上的具体启动目标，而只是让固件启动磁盘。</p>
<p>UEFI 规范定义了一种“回退”路径 (Fallback path)，用于启动此类启动管理器项，其工作原理类似于 BIOS 驱动器启动：它会在标准位置查找某些启动装载程序代码。但是其中的细节和 BIOS 不同。</p>
<p>当尝试以这种方式启动时，固件真正执行的操作相当简单。固件会遍历磁盘上的每个 EFI 系统分区（按照磁盘上的分区顺序）。在 ESP 内，固件将查找位于特定位置的具有特定名称的文件。在 x86-64 PC 上，固件会查找文件 \EFI\BOOT\BOOTx64.EFI。固件实际查找的是 \EFI\BOOT\BOOT{计算机类型简称}.EFI，其中，“x64”是 x86-64 PC 的“计算机类型简称”。文件名还有可能是 BOOTIA32.EFI (x86-32)、BOOTIA64.EFI (Itanium)、BOOTARM.EFI（AArch32，即32位ARM）和 BOOTAA64.EFI（AArch64，即64位ARM）。然后，固件将执行找到的第一个有效文件（当然，文件需要符合UEFI规范中定义的可执行格式）。</p>
<p>这种机制的设计目的不在于启动日常使用的操作系统。它的设计目的更像是为了启动可热插拔、与设备无关的介质（如 Live 映像和操作系统介质）。这也是这种机制的常见用途。如果查看 Linux 或其他操作系统的 UEFI 兼容 Live 或安装介质，你会发现其中包含 GPT，以及位于（或靠近）设备起始位置的 FAT 分区，该分区的 GPT 分区类型标识为 EFI 系统分区。在那个分区中，会有一个 \EFI\BOOT 目录，目录中至少包含上述特殊命名的文件之一。当以原生 UEFI 模式启动 Fedora Live 或安装介质时，就会采用这种机制。BOOTx64.EFI（或其他）文件将处理剩余启动过程，从而启动介质上包含的真正操作系统。</p>
<h2 id="完全原生-UEFI-启动项"><a href="#完全原生-UEFI-启动项" class="headerlink" title="完全原生 UEFI 启动项"></a>完全原生 UEFI 启动项</h2><p>Boot0002 和 Boot0003 是存储设备上所安装操作系统的“典型”项。这些项显示了 UEFI 启动机制的全部优势，不仅仅是“从此磁盘启动”，而是“启动此特定磁盘上此特定位置中的这一特定启动装载程序”。</p>
<p>Boot0002 是由原生 UEFI Fedora 安装生成的启动项。Boot0003 是由原生 UEFI OpenSUSE安装生成的启动项。按照字面意思，这些启动项表示“从此分区加载这一文件”。分区指的是 HD(1,800,61800,6d98f360-cb3e-4727-8fed-5ce0c040365d) 这个东西：表示某一特定分区（使用 EFI_DEVICE_PATH_PROTOCOL，我不打算对此进行详细介绍。如果你通过固件界面和 efibootmgr 与启动管理器进行交互，你也不需要知道其中的细节）。文件指的是 (\EFI\opensuse\grubx64.efi) 这个东西：它仅表示“加载所述分区上此位置中的文件”。这里所指的分区基本上始终指的就是充当 EFI 系统分区的那个分区，因此：可以放心地让固件访问 EFI 系统分区。</p>
<p>UEFI 规范提供这一机制，以便操作系统可启动：操作系统将启动装载程序（作用为加载操作系统内核等）安装到 EFI 系统分区中，并使用某一名称（显然，这一名称通常来源于操作系统名称）以及启动装载程序（EFI 可执行格式，用于加载操作系统）的位置向 UEFI 启动管理器配置中添加启动项。</p>
<p>Linux发行版使用 efibootmgr 工具处理 UEFI 启动管理器。进行原生 UEFI 安装时，有关启动装载方面，Linux 发行版实际进行的操作相当简单：它会创建一个 EFI 系统分区（如果不存在此分区），使用相应配置将 EFI 启动装载程序（通常为 grub2-efi，但是也有例外）安装到 EFI 系统分区中的正确路径下，然后调用 efibootmgr 添加相应的 UEFI 启动管理器项（指向其启动装载程序）。如果已存在 EFI 系统分区，大部分发行版会使用现有分区（尽管完全可以创建新的 EFI 系统分区并使用这个新分区）：我们已经提到过，UEFI 是一种宽松规范，只要在逻辑上遵循其设计，那么有多少个 EFI 系统分区都没问题。</p>
<h1 id="配置启动过程（固件-UI）"><a href="#配置启动过程（固件-UI）" class="headerlink" title="配置启动过程（固件 UI）"></a>配置启动过程（固件 UI）</h1><p>上文描述了 UEFI 规范定义的基本机制，用于管理 UEFI 启动过程。固件用户界面可能不会明确遵循这一机制，了解这一点非常重要。不幸的是，UEFI 规范有意未限制启动过程的呈现方式或用户配置启动过程的方式，这表示——由于我们也从事固件工程——每个固件会有不同的实现方法，并且其中某些固件的实现方法较疯狂。</p>
<p>许多固件的启动配置界面较直观。优秀的固件设计至少会显示启动顺序以及其中的各个启动项，允许用户添加/删除项、更改启动顺序或在某次特定启动中忽略原有启动顺序（仅针对那次启动生效，或直接让固件启动特定菜单项，甚至可以选择让固件以 BIOS 兼容模式或 UEFI“回退 (Fallback)”模式“启动这块磁盘”，我的固件就可以这么操作）。此类界面通常可以仅按名称显示完整的原生 UEFI 启动项（例如我们上文提到的 Fedora 和 OpenSUSE 示例）；你需要检查 efibootmgr –v 的输出，以详细了解在调用这些项时，它们具体会尝试并执行哪些操作。</p>
<p>某些固件会尝试对配置进行抽象和简化，最终结果良莠不齐。例如，如果可以选择“启用或禁用”BIOS 兼容模式，固件很有可能会为已连接驱动器的 UEFI 启动管理器配置添加或删除 BIOS 兼容项。如果可以选择“启用或禁用”原生 UEFI 启动，那么在用户“禁用”原生 UEFI 启动时，固件很有可能更改 UEFI 启动管理器配置，从 BootOrder 中删除所有原生UEFI启动项。</p>
<p>请谨记，固件界面中的所有配置选项所执行的操作就是在后台配置 UEFI 启动管理器的行为。如果你能理解以上所有内容，那么当你更改固件界面中的选项时，你会更容易理解其背后的本质。</p>
<p>在 BIOS 中，系统不会始终尝试优先从可移动驱动器（CD、USB）进行启动，然后再从驱动器启动。根据实际情况，结果可能有所不同。有些 BIOS 固件会优先尝试从 CD 启动，然后再尝试从硬盘启动（而不是 USB）。试图安装新的操作系统时，用户已习惯于时常检查 BIOS 配置，以确保启动顺序“正确无误”。</p>
<p>UEFI 也是如此，但是由于 UEFI 启动管理器机制的灵活性/复杂性，这一过程看起来可能显得陌生而可怕。</p>
<p>在系统尝试启动固定启动项之前，如果想要确保系统使用“回退(Fallback)”机制优先从可移动设备启动（例如，在安装 Fedora 时），需要将可移动设备作为固件的默认启动项，或需要相应设置固件。根据具体固件界面，可能发现每个连接的可移动设备都有对应的“菜单项”，你只需要调整启动顺序，把你想要的可移动设备放在首位即可，有时候你也会发现可以直接请求“对此特定磁盘进行 UEFI 恢复启动”，另外你还可能发现固件会尝试将配置进行抽象。我们不知道具体的固件界面是什么样，因此难以编写说明。但是既然你已了解背后的工作原理，那么就可能更容易理解固件用户界面配置的含义。</p>
<h1 id="配置启动过程（通过操作系统）"><a href="#配置启动过程（通过操作系统）" class="headerlink" title="配置启动过程（通过操作系统）"></a>配置启动过程（通过操作系统）</h1><p>如上所述，与 BIOS 机制不同，你可以从操作系统层面配置 UEFI 启动过程。如果你的固件比较令人恶心，你可能需要执行此操作才能达成目的。</p>
<p>你可以使用之前提过的 efibootmgr 工具来添加、删除和修改 UEFI 启动管理器配置中的项，这一工具也具有其他丰富功能。你可以更改启动顺序。你可以更改下次启动时的首要启动项，而不需要使用 BootOrder 列表（如果你或其他某些工具已经进行过配置，efibootmgr –v 的输出将包括 BootNext 项，说明下一次启动将加载的菜单项）。Windows 下也有类似的工具。因此如果你难以从固件界面配置 UEFI 启动，但是你可以启动某种原生 UEFI 操作系统，那么你可以考虑从操作系统（而不是固件 UI）进行启动配置。</p>
<h1 id="结论："><a href="#结论：" class="headerlink" title="结论："></a>结论：</h1><ul>
<li><p>UEFI固件包含某些非常类似于启动菜单的内容。</p>
</li>
<li><p>可以使用 efibootmgr –v 从任何原生 UEFI 启动的 Linux 操作系统中查询 UEFI 启动配置，也可以使用 efibootmgr 更改配置（有关详细信息，请参阅 man 页面）。</p>
</li>
<li>“启动菜单”可以包含表示“以 BIOS 兼容模式启动此磁盘”，“通过回退路径 (Fallback path) 以原生 UEFI 模式启动此磁盘”（将使用上文所述的“寻找 BOOT(某字符串).EFI”方式），或“启动此特定位置（几乎始终为 EFI 系统分区）中的特定 EFI 格式的可执行文件”等含义的项。</li>
<li><p>UEFI 规范尝试一种优秀、简洁的设计，让所有操作系统都将其自身的启动装载程序安装到 EFI 系统分区中，然后在“启动菜单”中添加指向这些启动装载程序的项，同时不得干涉其他目标的启动过程。</p>
</li>
<li><p>你的固件 UI 可以自由实现此机制，虽然具体的实现结果良莠不齐。</p>
</li>
</ul>
<p>在 UEFI 计算机上安装操作系统</p>
<p>我们快速浏览下上文中与在 UEFI 计算机上安装操作系统相关的具体结果。</p>
<p>原生 UEFI 启动和 BIOS 兼容启动</p>
<h2 id="用户有时会忽略以下事项："><a href="#用户有时会忽略以下事项：" class="headerlink" title="用户有时会忽略以下事项："></a>用户有时会忽略以下事项：</h2><ul>
<li><p>如果以“原生 UEFI”模式启动安装介质，安装介质将以原生 UEFI 模式安装操作系统：它将尝试向 EFI 系统分区写入 EFI 格式的启动装载程序，并尝试向 UEFI 启动管理器的“启动菜单”中添加启动项，用于启动该启动装载程序。</p>
</li>
<li><p>如果以“BIOS 兼容”模式启动安装介质，安装介质将以 BIOS 兼容模式安装操作系统：它将尝试向磁盘上的 MBR 空间写入 MBR 类型的启动装载程序。</p>
</li>
</ul>
<p>这适用于（现在暂时忽略其中的无关警告）我接触过的所有操作系统。因此你可能确实想了解，如何在固件层选择以原生 UEFI 模式启动可移动设备，以及如何在固件层选择以 BIOS 兼容模式启动可移动设备，确保在安装时可以随意选择需要使用的模式。</p>
<p>如果以 BIOS 兼容模式启动安装介质，那么你绝对无法成功进行操作系统的原生 UEFI 安装，因为安装程序无法配置 UEFI 启动管理器（除非以原生 UEFI 模式启动安装介质）。</p>
<p>理论上，在以原生 UEFI 模式启动之后，操作系统的安装程序可通过 BIOS 模式安装该操作系统，即，将启动装载程序写入磁盘 MBR，但是大部分安装程序无法执行此操作，这种做法比较可取。</p>
<h2 id="确定启动模式"><a href="#确定启动模式" class="headerlink" title="确定启动模式"></a>确定启动模式</h2><p>有时候，在启动操作系统安装程序之后，你不确定启动模式为原生 UEFI 模式还是 BIOS 兼容模式。别担心。有几种简单方法可以确定启动模式。最简单的方法之一是尝试读取 UEFI 启动管理器。如果你启动了 Linux 安装程序或环境，并且可以运行 shell（例如，在 Fedora 安装程序中是 Ctrl-Alt-F2），请运行 efibootmgr –v。如果你启动的是原生 UEFI 模式，那么就可以看到上文所示的 UEFI启动管理器配置。如果你启动的是 BIOS 兼容模式，那么会看到类似以下内容：</p>
<p>Fatal: Couldn’t open either sysfs or procfs directories for accessing EFI variables.<br>Try ‘modprobe efivars’ as root.</p>
<p>如果启动了其他操作系统，你可以尝试运行该操作系统的内置实用程序，读取 UEFI 启动管理器，并查看是否显示了明确输出或类似错误。或者你可以检查系统日志并搜索“efi”和/或“uefi”，从中可能发现蛛丝马迹。</p>
<h2 id="启用原生-UEFI-启动"><a href="#启用原生-UEFI-启动" class="headerlink" title="启用原生 UEFI 启动"></a>启用原生 UEFI 启动</h2><p>若要启用原生 UEFI 模式的启动，那么操作系统安装介质必须明确符合我们刚刚说明的所有规范：具有 GUID 分区表，和 EFI 系统分区，启动装载程序位于正确的“回退”路径 (Fallback path) 中—\EFI\BOOT\BOOTx64.EFI（其他平台可能会有其他名称）。如果无法以原生 UEFI 模式启动安装介质，并且无法查出原因，那么请检查安装介质是否满足上述条件。显然，当使用 livecd-iso-to-disk 工具将 Fedora 映像写入 USB 存储器时，你必须传递 –efi 参数，才能将存储器配置为可用 UEFI 模式启动。</p>
<h2 id="强制使用-BIOS-兼容启动"><a href="#强制使用-BIOS-兼容启动" class="headerlink" title="强制使用 BIOS 兼容启动"></a>强制使用 BIOS 兼容启动</h2><p>如果你的固件难以通过 BIOS 兼容模式从可移动介质启动，但是你又确实想通过这种方式启动，那么可以使用一些小把戏：完全禁用该介质的原生 UEFI 启动模式。可以通过清除所有 EFI 系统分区来轻松执行此操作（或者，如果使用 livecd-iso-to-disk 从 Fedora 映像创建 USB存储器，那么只需去掉 –efi 参数，存储器就会变为不可通过 UEFI 模式启动）。如果执行完此操作以后，你的固件仍然无法以 BIOS 兼容模式启动介质，那么就去吐槽你的固件供应商吧（如果还没吐槽过）。</p>
<p>磁盘格式（MBR vs. GPT）</p>
<h1 id="其他注意事项如下："><a href="#其他注意事项如下：" class="headerlink" title="其他注意事项如下："></a>其他注意事项如下：</h1><ul>
<li><p>如果想执行“BIOS 兼容”类型的安装，那么需要安装到 MBR 格式的磁盘。</p>
</li>
<li><p>如果想执行原生 UEFI 安装，那么需要安装到 GPT 格式的磁盘。</p>
</li>
</ul>
<p>当然，为了给用户找不自在，许多固件可以通过 BIOS 模式从 GPT 格式的磁盘启动。事实上，从技术层面而言，也要求 UEFI 固件能从 MBR 格式的磁盘以 UEFI 模式启动（虽然无法保证）。但是你应当尽可能避免这种情况。这些注意事项非常重要，因为许多用户都曾深受其害。例如，以原生 UEFI 模式启动操作系统安装程序，然后试图直接安装到 MBR 格式的磁盘是非常不明智的。很有可能失败。多数现代操作系统安装程序将把磁盘自动重新格式化为正确格式（如果你允许安装程序彻底清除磁盘数据），但是，如果你尝试让安装程序“对此 MBR 格式的磁盘执行原生 UEFI 安装，并且不要重新格式化这块磁盘，因为上面有重要数据”，那么就很有可能失败，尽管技术层面而言，UEFI 规范提到了这种配置。具体而言，至少 Windows 和 Fedora 会明确禁止这种配置。</p>
<h2 id="检查磁盘格式"><a href="#检查磁盘格式" class="headerlink" title="检查磁盘格式"></a>检查磁盘格式</h2><p>你可以使用 parted 实用程序检查给定磁盘的格式：</p>
<p>[adamw@adam Downloads]$ sudo parted /dev/sda<br>GNU Parted 3.1<br>Using /dev/sda<br>Welcome to GNU Parted! Type ‘help’ to view a list of commands.<br>(parted) p<br>Model: ATA C300-CTFDDAC128M (scsi)<br>Disk /dev/sda: 128GB<br>Sector size (logical/physical): 512B/512B<br>Partition Table: msdos<br>Disk Flags:</p>
<p>Number  Start  End    Size  Type    File system  Flags<br>1      1049kB  525MB  524MB  primary  ext4        boot<br>2      525MB  128GB  128GB  primary              lvm</p>
<p>(parted)</p>
<p>注意到 Partition table: msdos 那一行了吗？这是一块 MBR/MS-DOS 格式的磁盘。如果是 GPT 格式的磁盘，会显示 gpt。你可以从 parted 中通过执行 mklabel gpt 或 mklabel msdos 将磁盘重新格式化为其他类型分区表。这会破坏磁盘内容。</p>
<p>对于多数操作系统的安装程序而言，如果你采用的磁盘配置会清空目标磁盘的所有内容，那么根据执行的安装类型，安装程序就会自动使用最合适的配置重新格式化磁盘。但是如果你想使用现有磁盘而不格式化，那么你需要检查该磁盘的格式并三思而后行。</p>
<h2 id="执行手动分区时处理-EFI-系统分区"><a href="#执行手动分区时处理-EFI-系统分区" class="headerlink" title="执行手动分区时处理 EFI 系统分区"></a>执行手动分区时处理 EFI 系统分区</h2><p>我只能针对 Fedora 给出权威建议，但是其中的主要内容可能也适用于其他发行版/操作系统。</p>
<p>执行原生 UEFI 安装，并且采用 GPT 格式的磁盘时，或者允许 Fedora 重新格式化磁盘（通过删除所有现有分区）时，如果允许 Fedora 自动处理分区，那么 Fedora 就会自动处理 EFI 系统分区。</p>
<p>但是，如果使用自定义分区，Fedora 会要求指定 EFI 系统分区，以供安装程序使用。如果不执行此步骤，安装程序会报错（错误消息的含义不明）并拒绝启动安装。</p>
<p>因此，如果执行原生 UEFI 安装并使用自定义分区，需要确保类型为“EFI 系统分区”的分区已挂载到 /boot/efi（这是 Fedora 查找 EFI 系统分区的路径）。如果系统上存在现有 EFI 系统分区，那么仅需将其挂载点设置为 /boot/efi 即可。如果还没有 EFI 系统分区，那么请创建一个分区，将其类型设置为 EFI 系统分区，大小至少为 200MB（建议 500MB），然后将其挂载点设置为 /boot/efi。</p>
<h1 id="具体示例"><a href="#具体示例" class="headerlink" title="具体示例"></a>具体示例</h1><p>总结：如果购买了 Windows 8 或更高版本的操作系统，那么你的 Windows 基本上肯定是通过原生 UEFI 安装到 GPT 格式磁盘的。这表示如果你想安装其他操作系统，并与 Windows 共存，那么需要通过原生 UEFI 方式安装操作系统。如果你不喜欢 UEFI，并且想要用回老掉牙的 BIOS，那么恐怕就得清空整个原生 UEFI 的 Windows，而且需要重新将磁盘格式化为 MBR。</p>
<h1 id="缺陷"><a href="#缺陷" class="headerlink" title="缺陷"></a>缺陷</h1><p>上文解释了 UEFI 的启动原理(至少解释得差不多了)。我这种描述方法应该还可以吧？</p>
<p>但是，UEFI 并不完美，也有许多问题。</p>
<p>细心的读者可能已经留意，我曾经提到过，UEFI 规范提供了一种机制。这种说法很严谨，也很重要。由于 UEFI 规范是一种“广泛共识”，因此其主要缺点之一（就特定方面而言）是并未提供具体实现。</p>
<p>如果仔细阅读 UEFI 规范，就会发现 UEFI 规范的基本方式是定义 UEFI 兼容固件必须支持的一系列功能。但是 UEFI 规范并没有严格规定这些功能的具体实现方法。</p>
<p>因此，UEFI 规范只要求系统固件必须遵循其中描述的所有内容，以便满足 UEFI 兼容固件的要求。但是，规范本身未规定操作系统“应该”或“必须”怎么做，并且 UEFI 规范也没有规定固件不得支持（或者不期望支持）的功能。换言之，在制定 UEFI 固件时，需要支持 GPT 格式的磁盘和 FAT 格式的 EFI 系统分区，并且必须以标准格式读取 UEFI 启动管理器项等等——但是也可以随意添加其他未规定的功能。</p>
<p>从 UEFI 规范中不难发现其中的隐喻——UEFI 规范仔细设置了一种良好机制，用于在固件层处理操作系统（或其他启动项）选择。但是 UEFI 规范并不要求一定要这么做，其他广受赞誉的规范也没有类似规定。</p>
<p>因此，在实际使用时，我们可能遇到各种复杂情况。例如，Apple Mac 的 HFS+ 分区中随附了某些启动装载程序。UEFI 规范提到，UEFI 兼容固件必须支持特定 GPT 分区类型的 UEFI FAT 分区（标识为“EFI 系统分区”），但是 UEFI 规范并没有提到固件不能识别其他文件系统类型并从中加载启动装载程序。（此类分区是否应视为“EFI 系统分区”，这很难回答，在此不做探讨。）</p>
<p>要是所有厂商都能按照 UEFI 规范严格使用 EFI 系统分区，那就不会有这么多问题了。但是 Apple 毕竟是 Apple，它的产品设计领先于其他厂商，率先设计出了可以从 HFS+ 分区读取和加载代码的固件，导致现在其他厂商不得不紧随 Apple 的脚步，除非他们不打算支持 Mac。在启动过程设计中，Apple 进行的工作远超出 UEFI 规范的范围，因此，如果你想让其他操作系统以美观的图标或其他形式显示在 Mac 的图形启动菜单上，你所要做的操作将超出 UEFI 规范的建议范围。</p>
<p>还有各种类似的极端状况，使人烦不胜烦，但是我们先不管了。这篇文章够长的了。</p>
<p>另外，就像之前提到过的，UEFI 规范并没有对机制的具体呈现方式进行约束。因此，如果一些软件公司设计的操作系统符合 UEFI 规范，并且可以安装 EFI 启动装载程序，并明确命名 EFI 启动管理器项（例如，Fedora 和 Windows），那么如果要向用户提供某种相对辨识度较高的漂亮界面，让用户可以从中选择启动 Windows 或 Fedora，就得看固件本身设计得怎么样。固件设计得越糟糕，操作系统工程师就越不会遵守 UEFI 规范，他们越可能在固件层上另起炉灶。</p>
<p>说句公道话，我们可以在操作系统层实现更多功能。我们可以用更整洁直观的方式实现 efibootmgr 的所有功能——例如，我们可以采用“无视下一次启动时的启动顺序，直接启动此项”，同时将“重新启动到 Windows”作为选项之一。如果开发人员能够用更直观的方式展现 efibootmgr 的所有功能，那将会非常不错。Windows 8 系统在一定程度上采用了这种方式——例如，用户可以从 Windows 8 设置菜单中将系统重新启动到固件 UI。但是这还不够。</p>
<p>这些实在令人欲哭无泪，因为 UEFI 本来可以更好地进行统一。对于多重启动，BIOS 不提供任何类型的规范或标准，因此完全需要在固件层上处理多重启动。我们（这一行业）已经提出了某种处理多重启动的规范，但是我们从未将其付诸实施，因此最终不了了之。而每种操作系统都采用自己的多重启动方法，大量开发人员也自己写了启动装载程序，试图包揽所有操作系统。而所有操作系统和独立的启动装载程序难以互相兼容。我想说的是，在 UEFI 诞生之前，多重启动的实现方式一团混乱。</p>
<p>如果 UEFI——或者基于 UEFI 的某种规范——要求所有厂商遵循 UEFI 提出的规范，并要求固件提供直观的用户界面，那将会终结现阶段的混乱情况。但是现实不如人意，因此 UEFI 的情况完全可能比 BIOS 更糟糕。如果大量固件没有为 UEFI 启动管理器机制提供良好的 UI，那么操作系统供应商可能放弃 UEFI 启动管理器机制（或选择性地进行支持），转而在 UEFI 中重现 BIOS 多重启动的混乱情况——如此一来，我们就得收拾所有烂摊子，外加 UEFI 启动管理器层的其他影响。在整个 UEFI 启动管理器机制上，用户可能装有多个启动装载程序，互相争抢装载多个操作系统的控制权，而 UEFI 启动管理器机制只会机械地处理各种变量，而无法解决这种混乱情况。</p>
<p>这不是某人灵光闪现的荒唐想法，而是可能实际发生的真实情形。</p>
<p>另外，在这方面产生的 UEFI 缺陷是由一时疏忽引起的——这些缺陷不受委员会控制，也不是某人故意为之的结果。如果你的系统固件很坑爹，无法让你轻松访问 UEFI 启动管理器，那么你的发泄对象不应该是 UEFI 论坛或微软，当然也不是 Fedora 或者我。你应该归咎于系统/主板制造商和他们雇用的傻逼固件开发人员。凡是大脑健全的人，都能看出来，UEFI 规范已经明确说明，为 UEFI 启动管理器提供某种直观的用户界面是非常有益的，所有反人类的固件都是一堆垃圾代码。的确，UEFI 论坛已经意识到固件工程师难以脱离现有约束重新学习新规范，但是，固件工程师最终还是应该与时俱进。</p>
<p>简单来说，“所有固件都是垃圾代码”。这句话通常非常准确。</p>
<h1 id="安全启动-Secure-Boot"><a href="#安全启动-Secure-Boot" class="headerlink" title="安全启动 (Secure Boot)"></a>安全启动 (Secure Boot)</h1><p>我们最后要介绍的，就是安全启动 (Secure Boot)。</p>
<p>安全启动 (Secure Boot) 并不神奇，也不复杂。才怪。安全启动 (Secure Boot) 复杂得要命，但是其理论并不复杂。安全启动 (Secure Boot) 本身也并不邪恶。事实就是如此，你也应当认同这一事实，除非你认为GPG也有恶意。</p>
<p>在 UEFI 规范（2.4A 版本）的第 28 章对安全启动 (Secure Boot) 进行了定义。这种机制事实上非常明智。但是其原理却非常简单。UEFI 规范规定固件可以包含一系列签名，并拒绝运行未签名或签名与固件中包含的签名不一致的 EFI 可执行文件。</p>
<p>就这么简单?当然不是了，这只是一种简单概括。安全问题很复杂，因此才会产生通过安全启动 (Secure Boot) 来实现真正安全启动链的各种方法。mjg59 可以进行详细介绍，或者你可以完整阅读第 28 章。但是其中只涉及了基本概念。</p>
<p>使用公开密钥加密来验证某个文件完整性的方法很难判断其好坏。几乎所有 Linux 发行版都依赖这种加密方法——我们为软件包签名，在尝试安装未使用我们的密钥之一签名的软件包时，软件包管理器将发出警告。这不是我们的错，我也不认为会有人因为以这种方式使用公开密钥加密进行签名而归咎于操作系统本身。从字面上看，安全启动 (Secure Boot) 与这种广泛认可的机制完全相同，只不过安全启动 (Secure Boot) 适用于启动链。由于一撮媒体人找错了槽点，并揪着不放，导致大众受到了广泛误导，认为安全启动 (Secure Boot) 是洪水猛兽。</p>
<p>UEFI 规范中定义的安全启动 (Secure Boot) 并没有对固件所信任的密钥形式及其来源作出规定，我也不打算介绍所有细节，因为过于枯燥乏味，而且本文已经挺长了。但是总的来说，UEFI 规范只对执行启动链的加密验证进行了定义。UEFI 规范甚至没有涉及用于执行这一过程的策略可能产生的问题。这本来并没有错，因为这样可以保证其灵活性，并且 UEFI 规范允许在多个层面配置涉及的所有机制。UEFI 规范中未提及微软，也没有和微软互相勾结。如果你不信，那么你可以阅读 UEFI 规范。我已经提供了所有说明。字面上来说，对于那些反对在固件规范中将启动装载程序加密验证机制作为可选功能的人，我不予置评。</p>
<h2 id="实际使用安全启动-Secure-Boot"><a href="#实际使用安全启动-Secure-Boot" class="headerlink" title="实际使用安全启动 (Secure Boot)"></a>实际使用安全启动 (Secure Boot)</h2><p>有关安全启动 (Secure Boot) 的所有不满并不针对安全启动 (Secure Boot) 机制本身——虽然发出这些不满的人可能不这么认为——而是针对安全启动 (Secure Boot) 在实际操作中的特定实现方式。</p>
<p>我们唯一在意的是，对于预装 Windows 8 或更高版本 Windows 的 PC 而言，安全启动 (Secure Boot) 是默认开启的。</p>
<p>微软将这些称为“Windows 硬件认证要求”。这些要求并不是什么绝密内容，所有人都可以在互联网上阅读。</p>
<p>如果想从微软那里以低廉的价格获得预装 Windows 的批量许可，并在机箱上贴有“微软认证”标签，那么你必须符合这些认证要求。微软的约束力有限：他们不是美国或其他国家/地区的法律制定者，无论其他人怎么想。即使你销售的 PC 不符合这些要求，比尔•盖茨也不会拿你怎么样，前提是你不需要预装廉价的 Windows 副本和那张“微软认证”标签。对于不符合微软许可计划的在售 PC，事实上并不要求如何配置安全启动 (Secure Boot)，甚至根本不需要提供安全启动 (Secure Boot) 功能。具有 UEFI 2.2 或更高版本兼容固件的 PC 必须提供安全启动 (Secure Boot) 功能，但是并没有规定具体的实现方法（包括关闭安全启动 (Secure Boot) 的方法）。</p>
<p>如果你对安全启动 (Secure Boot) 意见很大，那么就别找借口了，马上去读读微软认证要求吧。你可以搜索“Secure Boot”来阅读相关内容。从“System.Fundamentals.Firmware.UEFISecureBoot”一节开始。</p>
<p>你最好读一遍，但是我对其内容进行了总结。</p>
<p>符合微软认证要求的计算机必须满足以下条件：</p>
<ul>
<li><p>默认启用安全启动 (Secure Boot)（服务器除外）</p>
</li>
<li><p>在其信任密钥列表中包含微软的密钥</p>
</li>
<li><p>启用安全启动 (Secure Boot) 时，必须禁用 BIOS 兼容模式（如果没记错的话，UEFI 规范也有此要求）</p>
</li>
<li><p>支持签名黑名单</p>
</li>
</ul>
<p>符合微软认证要求的 x86 计算机还必须满足以下附加条件：</p>
<ul>
<li><p>允许自然人禁用安全启动 (Secure Boot)</p>
</li>
<li><p>允许自然人启用自定义模式，以及修改固件的信任密钥列表</p>
</li>
</ul>
<p>符合微软认证要求的 ARM 计算机还必须满足以下附加条件：</p>
<ul>
<li><p>不允许自然人禁用安全启动 (Secure Boot)</p>
</li>
<li><p>不允许自然人启用自定义模式，以及修改固件的信任密钥列表</p>
</li>
</ul>
<p>是的，你没看错。对于 x86 计算机，微软认证要求明确规定了自然人用户应当能够完全控制安全启动 (Secure Boot)（启用或禁用），或完全控制安全启动 (Secure Boot) 的信任密钥列表。另一个重点是，尽管认证要求规定，信任密钥列表必须包括微软的密钥，但是其中没有规定不允许包括其他密钥。微软认证要求也明确允许系统包含其他任意数量的信任密钥。</p>
<p>这些要求并不完全出于微软的好意，之所以作出这些规定，是因为如果不这么做的话，微软将面临大量诉讼2。真正了解 UEFI 和安全启动 (Secure Boot) 的用户可能不会曲解微软认证要求，这些要求非常清晰明确。这些要求旨在确保认证系统的所有者能完全控制安全启动 (Secure Boot)，事实上这些要求也确实成功确保了这一条件。</p>
<p>如果你有包含 Windows 认证的 x86 系统，但是不允许你禁用安全启动 (Secure Boot)，那么这就直接违反了认证要求，你应该马上投诉。如果市面上存在大量这类系统，那么我们肯定会有麻烦，可能要给那些巨头厂商提起诉讼了。但是目前为止，事实并非如此。在我见过的所有 x86 Windows 认证系统中，其固件都有“禁用安全启动 (Secure Boot)”选项。</p>
<p>对于 ARM 计算机，认证要求显然更变态：其中的规定和 x86 完全相反，不允许禁用安全启动 (Secure Boot)，也不允许系统所有者更改信任密钥。非常糟糕且不合理。这使得微软认证 ARM 系统成为了一个封闭的环境。值得注意的是，其他主要 ARM 平台甚至更糟糕。Apple 在所有 iDevice 上锁定了启动装载程序，而且大部分 Android 设备的启动装载程序也是锁定的。</p>
<p>如果你计划购买微软认证 ARM 设备，请注意这一问题，你将无法控制设备上的启动项。如果你对此反感，那就不要购买这样的设备，也不要购买 iDevice 或启动装载程序处于锁定状态的 Android 设备（你可以购买启动装载程序未锁定或无法锁定的 Android 设备，但是需要事先进行调查研究）。</p>
<p>目前，就 x86 设备本身而言，微软的认证要求实际上明确保障了用户自由启动系统的权利。这是件好事。</p>
<h1 id="建议"><a href="#建议" class="headerlink" title="建议"></a>建议</h1><p>以下内容是我在管理系统启动方面的一般建议，不保证其准确性、可靠性或安全性。</p>
<ul>
<li><p>如果可以的话，每台计算机只安装一个操作系统。如果你需要一个以上操作系统，那就多买几台计算机，或使用虚拟机。这么做的话，事情就简单多了，而且无论你的固件是 BIOS 或 UEFI，或在 UEFI 系统上使用 BIOS 兼容启动，都没什么关系了。你在使用计算机时也会轻松许多。</p>
</li>
<li><p>如果你确实需要在每台计算机上安装多个操作系统，那么请在每块磁盘上至少安装一个操作系统。如果你比较熟悉 BIOS 启动，而且也不需要安全启动 (Secure Boot) 功能，在这种情况下，对于 UEFI 系统，请优先使用 BIOS 兼容启动。这样一来，可能不会有那么多麻烦，也不会造成数据丢失。如果每块磁盘只安装一个操作系统，那么你也可以混合使用原生 UEFI 和 BIOS 兼容模式。</p>
</li>
<li><p>如果你坚持要在每块磁盘上安装多个操作系统，那么请先理解本文所写内容。这么做无异于自作孽，不可活，出了问题可别责怪操作系统供应商。另外，在这种情况下，也不要混用原生 UEFI 和 BIOS 兼容模式，否则就是雪上加霜。</p>
</li>
<li><p>如果你在使用 UEFI 原生启动，并且不打算自己编译内核/内核模块或在 Linux 上使用 NVIDIA/ATI 私有驱动程序，那么最好启用安全启动 (Secure Boot)。这不会有什么副作用，反而可以带来额外的安全性，用以应对某些卑鄙的攻击类型（尽管目前很少被利用）。</p>
</li>
<li><p>如果打算编译内核/内核模块或使用 NVIDIA/ATI 私有驱动程序，那就最好禁用安全启动 (Secure Boot)。或者你可以启用安全启动 (Secure Boot)，然后阅读有关配置信任链和对内核/内核模块签名的说明。但是这一过程至少需要好几天。</p>
</li>
<li><p>不要在 MBR 格式的磁盘上进行原生 UEFI 安装，也不要在 GPT 格式的磁盘上进行 BIOS 兼容安装（如果没记错的话，除非你的磁盘大小大于 2.2TB，因为 MBR 格式无法识别那么大的磁盘。如果想在那么大的磁盘上进行 BIOS 兼容安装，那么你可能会卡在 BIOS+GPT 的组合上。虽然这种组合可以正常运行，但是有点不靠谱，而且会牵涉到臭名昭著的“BIOS Boot 分区”）。</p>
</li>
<li><p>相信 mjg59 及其他权威人士，包括我。</p>
</li>
<li><p>这一整节都是简化过的内容——当启动已安装的操作系统时，无论启动装载程序是否安装在“ESP”上，对固件都没有影响；固件只会读取启动管理器项，然后尝试访问特定分区并执行特定可执行文件，具体请参阅 pjones 的说明。但是一般会使用 ESP 来进行启动过程，因为 UEFI 规范中有相应规定，而且这个分区也很方便，固件可以读取其文件系统。理论上来说，在固件执行可移动介质/回退路径 (Fallback path) 启动时，ESP 将不起作用。</p>
</li>
<li><p>注意，这只是我的个人推断。在整个规范的制定过程中，我都没有参与，也没人告诉我这些内容。但是根据已知事实，明显可以得出这一推断。</p>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux </tag>
            
            <tag> grub </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[收集整理各高校ACM OJ网站，欢迎补充修正]]></title>
      <url>https://ygcaicn.github.io/%E6%9D%82%E9%A1%B9/acmurl.html</url>
      <content type="html"><![CDATA[<p>搜集的各大高校的ACM网站…</p>
<a id="more"></a>
<h1 id="中国：-China"><a href="#中国：-China" class="headerlink" title="中国：(China)"></a>中国：(China)</h1><h1 id="华东地区："><a href="#华东地区：" class="headerlink" title="华东地区："></a>华东地区：</h1><h2 id="浙江："><a href="#浙江：" class="headerlink" title="浙江："></a>浙江：</h2><p>杭州电子科技大学(HDU)：<a href="http://acm.hdu.edu.cn/" target="_blank" rel="external">http://acm.hdu.edu.cn/</a></p>
<p>浙江大学（ZJU）：<a href="http://acm.zju.edu.cn/" target="_blank" rel="external">http://acm.zju.edu.cn/</a></p>
<p>浙江工业大学（ZJUT）：<a href="http://acm.zjut.edu.cn/" target="_blank" rel="external">http://acm.zjut.edu.cn/</a></p>
<p>浙江师范大学（ZJNU）：<a href="http://acm.zjnu.cn/" target="_blank" rel="external">http://acm.zjnu.cn/</a></p>
<p>浙江工商（ZJGSU）：<a href="http://acm.zjgsu.edu.cn/" target="_blank" rel="external">http://acm.zjgsu.edu.cn/</a></p>
<p>宁波理工（NIT）：<a href="http://acm.nit.net.cn/" target="_blank" rel="external">http://acm.nit.net.cn/</a></p>
<h2 id="上海："><a href="#上海：" class="headerlink" title="上海："></a>上海：</h2><p>华东师范大学（ECNU）：<a href="http://acm.cs.ecnu.edu.cn/" target="_blank" rel="external">http://acm.cs.ecnu.edu.cn/</a></p>
<p>华东理工大学（ECUST）：<a href="http://acm.ecust.edu.cn/" target="_blank" rel="external">http://acm.ecust.edu.cn/</a></p>
<p>同济大学（TJU）：<a href="http://acm.tongji.edu.cn/" target="_blank" rel="external">http://acm.tongji.edu.cn/</a></p>
<h2 id="江苏："><a href="#江苏：" class="headerlink" title="江苏："></a>江苏：</h2><p>中国矿业大学（CUMT）： <a href="http://219.219.62.238" target="_blank" rel="external">http://219.219.62.238</a> (我也不懂为啥连个域名都没有)<br>南京航空航天大学： <a href="http://acm.nuaa.edu.cn/" target="_blank" rel="external">http://acm.nuaa.edu.cn/</a></p>
<h2 id="福建："><a href="#福建：" class="headerlink" title="福建："></a>福建：</h2><p>福州大学（FZU）：<a href="http://acm.fzu.edu.cn/" target="_blank" rel="external">http://acm.fzu.edu.cn/</a></p>
<p>厦门大学（XMU）：<a href="http://acm.xmu.edu.cn/" target="_blank" rel="external">http://acm.xmu.edu.cn/</a></p>
<p>福建师范大学（FJNU）：<a href="http://acm.fjnu.edu.cn/" target="_blank" rel="external">http://acm.fjnu.edu.cn/</a></p>
<h2 id="安徽："><a href="#安徽：" class="headerlink" title="安徽："></a>安徽：</h2><p>中国科技大学（USTC）：<a href="http://acm.ustc.edu.cn/" target="_blank" rel="external">http://acm.ustc.edu.cn/</a></p>
<p>华北地区：</p>
<h2 id="北京："><a href="#北京：" class="headerlink" title="北京："></a>北京：</h2><p>北京交大（BJTU）：<a href="http://acm.bjtu.edu.cn/" target="_blank" rel="external">http://acm.bjtu.edu.cn/</a></p>
<p>北京大学（PKU）：<a href="http://acm.pku.edu.cn/" target="_blank" rel="external">http://acm.pku.edu.cn/</a></p>
<h2 id="天津："><a href="#天津：" class="headerlink" title="天津："></a>天津：</h2><p>南开大学（NAIKAI）：<a href="http://acm.nankai.edu.cn/" target="_blank" rel="external">http://acm.nankai.edu.cn/</a></p>
<p>天津大学（TJU）：<a href="http://acm.tju.edu.cn/toj/" target="_blank" rel="external">http://acm.tju.edu.cn/toj/</a></p>
<h1 id="东北地区："><a href="#东北地区：" class="headerlink" title="东北地区："></a>东北地区：</h1><h2 id="黑龙江："><a href="#黑龙江：" class="headerlink" title="黑龙江："></a>黑龙江：</h2><p>哈尔滨工程大学（HRBEU）：<a href="http://acm.hrbeu.edu.cn/" target="_blank" rel="external">http://acm.hrbeu.edu.cn/</a></p>
<h1 id="华南地区："><a href="#华南地区：" class="headerlink" title="华南地区："></a>华南地区：</h1><h2 id="广东："><a href="#广东：" class="headerlink" title="广东："></a>广东：</h2><h2 id="中山大学（ZSU）：http-acm-zsu-edu-cn"><a href="#中山大学（ZSU）：http-acm-zsu-edu-cn" class="headerlink" title="中山大学（ZSU）：http://acm.zsu.edu.cn/"></a>中山大学（ZSU）：<a href="http://acm.zsu.edu.cn/" target="_blank" rel="external">http://acm.zsu.edu.cn/</a></h2><h1 id="西南地区："><a href="#西南地区：" class="headerlink" title="西南地区："></a>西南地区：</h1><h2 id="四川："><a href="#四川：" class="headerlink" title="四川："></a>四川：</h2><p>西南民大（SWUN）：<a href="http://acm.swun.edu.cn/" target="_blank" rel="external">http://acm.swun.edu.cn/</a></p>
<h1 id="华中地区："><a href="#华中地区：" class="headerlink" title="华中地区："></a>华中地区：</h1><h2 id="湖北："><a href="#湖北：" class="headerlink" title="湖北："></a>湖北：</h2><p>华中科技大学（HUST）：<a href="http://acm.hust.edu.cn/JudgeOnline/" target="_blank" rel="external">http://acm.hust.edu.cn/JudgeOnline/</a></p>
<p>武汉大学（WHU）：<a href="http://acm.whu.edu.cn/" target="_blank" rel="external">http://acm.whu.edu.cn/</a></p>
<h1 id="港澳台地区："><a href="#港澳台地区：" class="headerlink" title="港澳台地区："></a>港澳台地区：</h1><h2 id="香港："><a href="#香港：" class="headerlink" title="香港："></a>香港：</h2><p>香港大学(HKOI)：<a href="http://judge.hkoi.org/" target="_blank" rel="external">http://judge.hkoi.org/</a></p>
<p>俄罗斯：(Russia)</p>
<p>乌拉尔大学（URAL）：<a href="http://acm.timus.ru/" target="_blank" rel="external">http://acm.timus.ru/</a></p>
<p>萨拉托夫大学（SGU）：<a href="http://acm.sgu.ru/" target="_blank" rel="external">http://acm.sgu.ru/</a></p>
<p>(vallod) ：<a href="http://acm.uva.es/" target="_blank" rel="external">http://acm.uva.es/</a></p>
<p>EL Judge(MIPT):：<a href="http://acm.mipt.ru/judge/problems.pl" target="_blank" rel="external">http://acm.mipt.ru/judge/problems.pl</a></p>
<p>西班牙：(Spanish)</p>
<p>瓦拉杜利德大学（UVA）：<a href="http://acm.uva.es/" target="_blank" rel="external">http://acm.uva.es/</a></p>
<h1 id="美国：-America"><a href="#美国：-America" class="headerlink" title="美国：(America)"></a>美国：(America)</h1><p>USACO: <a href="http://train.usaco.org/usacogate" target="_blank" rel="external">http://train.usaco.org/usacogate</a></p>
<p>波兰：(Poland)</p>
<p>SPOJ：<a href="http://www.spoj.pl/" target="_blank" rel="external">http://www.spoj.pl/</a></p>
<p>吉尔吉斯斯坦:：(Kirgizstan)</p>
<p>KRSU: <a href="http://www.olymp.krsu.edu.kg/GeneralProblemset.aspx" target="_blank" rel="external">http://www.olymp.krsu.edu.kg/GeneralProblemset.aspx</a></p>
<h1 id="中国各大高校BBS"><a href="#中国各大高校BBS" class="headerlink" title="中国各大高校BBS:"></a>中国各大高校BBS:</h1><p><a href="http://acm.hdu.edu.cn/forum/（杭电）" target="_blank" rel="external">http://acm.hdu.edu.cn/forum/（杭电）</a></p>
<p><a href="http://www.hdubbs.com/（杭电）" target="_blank" rel="external">http://www.hdubbs.com/（杭电）</a></p>
<p><a href="http://www.freecity.cn/（浙大）" target="_blank" rel="external">http://www.freecity.cn/（浙大）</a></p>
<p><a href="http://bbs.freecity.cn/(浙大" target="_blank" rel="external">http://bbs.freecity.cn/(浙大</a>)</p>
<p>Others：</p>
<p>Topcoder：<a href="http://www.topcoder.com/tc" target="_blank" rel="external">http://www.topcoder.com/tc</a></p>
<p>ACM-ICPC：<a href="http://icpc.baylor.edu/icpc/" target="_blank" rel="external">http://icpc.baylor.edu/icpc/</a></p>
<p>美国信息学奥林匹克竞赛官方网站：<a href="http://www.usaco.org/" target="_blank" rel="external">http://www.usaco.org/</a></p>
<p>全美计算机奥林匹克竞赛：<a href="http://ace.delos.com/usacogate" target="_blank" rel="external">http://ace.delos.com/usacogate</a></p>
<p>信息学初学者之家：<a href="http://oibh.ioiforum.org/" target="_blank" rel="external">http://oibh.ioiforum.org/</a></p>
<p>中国教育曙光网：<a href="http://www.chinaschool.org/aosai/" target="_blank" rel="external">http://www.chinaschool.org/aosai/</a></p>
<p>福建信息学奥林匹克：<a href="http://www.cfcs.com.cn/fjas/index.htm" target="_blank" rel="external">http://www.cfcs.com.cn/fjas/index.htm</a></p>
<p>IOI：<a href="http://olympiads.win.tue.nl/ioi/" target="_blank" rel="external">http://olympiads.win.tue.nl/ioi/</a></p>
<p>高效信息学在线判题系统（VIJOS）：<a href="http://www.vijos.cn/" target="_blank" rel="external">http://www.vijos.cn/</a></p>
<p>ACM的例程和测试数据：<a href="http://www.karrels.org/Ed/ACM/" target="_blank" rel="external">http://www.karrels.org/Ed/ACM/</a></p>
<p>ACM社区：<a href="http://www.608088.com/" target="_blank" rel="external">http://www.608088.com/</a></p>
]]></content>
      
        <categories>
            
            <category> 杂项 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 编程 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[C++练习笔记（持续更新）]]></title>
      <url>https://ygcaicn.github.io/Cpp/cpplianxi.html</url>
      <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>由于近一年来学习嵌入式大多接触的都是纯C语言，直到看到学校搞了一个程序设计大赛，才发现自己的C++的基础遗忘了好多。<br>不过这也是正常的，毕竟三天不练手生，学习其他知识的同时不要忘记基础！！将练习记录写在博客中一来方便以后查阅，而来和大家一起学习！</p>
<p>查了查以前囤下的C++API手册发现是C++98的，这有点让我不开心了，于是上网搜寻了一番，发现没有找到好的本地手册，oschina的手册做的不能再垃圾，连个search都没有。去一些<a href="http://www.cplusplus.com/" target="_blank" rel="external">cpp的权威网站</a>当然是英文的，但是发现不怎么活跃。这怎么能满足我这种完美主义的程序爱好者呢。。。最后搜寻了一番终于找到了满意的手册，不过美中不足的是不能本地化。不过这也没什么这说明网站更新活跃嘛！下面附上链接，欢迎各位<code>Ctrl+D</code>:</p>
<p><a href="http://zh.cppreference.com/w/%E9%A6%96%E9%A1%B5" target="_blank" rel="external">Cpp编程手册</a></p>
<p><a href="http://www.cplusplus.com/reference/" target="_blank" rel="external">cplusplus reference</a></p>
<a id="more"></a>
<p><em>本文程序大多基于C++11特性，除非特别声明！！</em></p>
<h1 id="输入不定量数据，求和"><a href="#输入不定量数据，求和" class="headerlink" title="输入不定量数据，求和"></a>输入不定量数据，求和</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line"><span class="keyword">int</span> sum = <span class="number">0</span>, val = <span class="number">0</span>;</div><div class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"输入一组数据，以Ctrl+Z结束,Enter 计算"</span> &lt;&lt; <span class="built_in">endl</span>;</div><div class="line"><span class="keyword">while</span> (<span class="built_in">cin</span> &gt;&gt; val)</div><div class="line">sum += val;</div><div class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"sum="</span> &lt;&lt;sum&lt;&lt; <span class="built_in">endl</span>;</div><div class="line">system(<span class="string">"pause"</span>);</div><div class="line">  <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="将字符串的小写转换为大写，统计字符串等"><a href="#将字符串的小写转换为大写，统计字符串等" class="headerlink" title="将字符串的小写转换为大写，统计字符串等"></a>将字符串的小写转换为大写，统计字符串等</h1><p>string 引用</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdafx.h"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"cctype"</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line"><span class="built_in">string</span> str;</div><div class="line">getline(<span class="built_in">cin</span>, str);</div><div class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> &amp;c : str)</div><div class="line">&#123;</div><div class="line"><span class="comment">//if(c&gt;='a'&amp;&amp;c&lt;='z')</span></div><div class="line"><span class="keyword">if</span>(<span class="built_in">islower</span>(c))</div><div class="line">&#123;</div><div class="line">c = c - <span class="string">'a'</span> + <span class="string">'A'</span>;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"><span class="built_in">cout</span> &lt;&lt; str&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">system(<span class="string">"pause"</span>);</div><div class="line">  <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="A-B-probles的一道Acm题"><a href="#A-B-probles的一道Acm题" class="headerlink" title="A+B probles的一道Acm题"></a>A+B probles的一道Acm题</h1><pre><code>Description
Calculate a + b
Input
The input will consist of a series of pairs of integers a and b,separated by a space, one pair of integers per line.
Output
For each pair of input integers a and b you should output the sum of a and b in one line,and with one line of output for each line in input.
Sample Input
1 2
3 4

Sample Output
3
7
</code></pre><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdafx.h"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line"><span class="keyword">int</span> a, b;</div><div class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; slove;</div><div class="line"><span class="keyword">int</span> tmp;</div><div class="line"></div><div class="line"><span class="keyword">while</span> (<span class="built_in">cin</span> &gt;&gt; a&amp;&amp;<span class="built_in">cin</span> &gt;&gt; b)</div><div class="line">&#123;</div><div class="line">tmp= (a + b);</div><div class="line">slove.push_back(tmp);</div><div class="line">&#125;</div><div class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> i:slove)</div><div class="line"><span class="built_in">cout</span> &lt;&lt; (<span class="keyword">int</span>)i &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">system(<span class="string">"pause"</span>);</div><div class="line">  <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><del>无奈这么写上传之后直接编译不通过。。。看来acm的系统是不支持C++11特性的。。</del>明天再写C++98的吧。。</p>
<p>看来是我太不了解OJ了，回头好好学习一下OJ的基本输入和输出。下面附上正确的程序：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">int</span> a, b;</div><div class="line">	<span class="keyword">while</span> (<span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b)</div><div class="line">	&#123;</div><div class="line">		<span class="built_in">cout</span> &lt;&lt; a + b &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="char-数组的遍历操作"><a href="#char-数组的遍历操作" class="headerlink" title="char * 数组的遍历操作"></a>char * 数组的遍历操作</h1><blockquote>
<p>输入字符串若满足：首字母大写，后面全为小写返回1，否则返回0。如Hello满足条件</p>
</blockquote>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">fun</span><span class="params">(<span class="keyword">char</span> *str)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span> ((*str)&gt;<span class="string">'A'</span> &amp;&amp; (*str)&lt;<span class="string">'Z'</span>)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">while</span> (*(++str))</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span> ((*str)&lt;<span class="string">'a'</span> || (*str)&gt;<span class="string">'z'</span>)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<blockquote>
<p>将输入的字符串中的字符全部变为ASCII码表中的下一个字符.</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun</span><span class="params">(<span class="keyword">char</span> *str)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">int</span> i = <span class="number">0</span>;</div><div class="line">		<span class="keyword">while</span> (*(str+i))</div><div class="line">		&#123;</div><div class="line">			(*(str + i))++;</div><div class="line">			i++;</div><div class="line">		&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<blockquote>
<p>寻找两个字符串第一个不同的位置,下标从0开始，如果全部相同返回-1</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">fun</span><span class="params">(<span class="keyword">char</span> *str1, <span class="keyword">char</span> *str2)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">size_t</span> length = <span class="built_in">strlen</span>(str1);</div><div class="line">	<span class="keyword">size_t</span> length2 = <span class="built_in">strlen</span>(str2);</div><div class="line">	length = length &lt; length2 ? length:length2;</div><div class="line">	<span class="keyword">int</span> i;</div><div class="line">	<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; length; i++)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">char</span> c1 = str1[i], c2 = str2[i];</div><div class="line"></div><div class="line">		<span class="keyword">if</span> (c1 &gt; <span class="string">'a'</span>&amp;&amp;c1 &lt; <span class="string">'z'</span>)</div><div class="line">			c1 = c1 - (<span class="string">'a'</span> - <span class="string">'A'</span>);</div><div class="line">		<span class="keyword">if</span> (c2 &gt;= <span class="string">'a'</span>&amp;&amp;c2 &lt;= <span class="string">'z'</span>)</div><div class="line">			c2 = c2 - (<span class="string">'a'</span> - <span class="string">'A'</span>);</div><div class="line">		<span class="keyword">if</span> (c1!=c2)</div><div class="line">			<span class="keyword">break</span>;</div><div class="line">	&#125;</div><div class="line">  <span class="keyword">if</span> (i == length)</div><div class="line">      <span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">	<span class="keyword">return</span> i;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="检索出字符串中出现最多的字符，并返回该字符"><a href="#检索出字符串中出现最多的字符，并返回该字符" class="headerlink" title="检索出字符串中出现最多的字符，并返回该字符"></a>检索出字符串中出现最多的字符，并返回该字符</h1><blockquote>
<p>ASCII共定义了256个代码(从0-255)，从0-32位为控制字符(33个)(ASCII control characters)，从33-127位为可打印字符(95个)(ASCII printable characters)。从0-127是标准的ASCII编码，从128-255是扩展的ASCII编码。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdafx.h"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="comment">//检索出字符串中出现最多的字符，并返回该字符</span></div><div class="line"><span class="function"><span class="keyword">char</span> <span class="title">fun</span><span class="params">(<span class="keyword">char</span> *str)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">char</span> *tstr = str;</div><div class="line">	<span class="keyword">int</span> tmp[<span class="number">100</span>] = &#123;<span class="number">0</span>&#125;;</div><div class="line">	<span class="keyword">while</span> (*tstr)</div><div class="line">	&#123;</div><div class="line">		<span class="comment">//相对首个可打印字符位置</span></div><div class="line">		tmp[<span class="keyword">int</span>(*tstr)<span class="number">-32</span>]++;</div><div class="line">		tstr++;</div><div class="line">	&#125;</div><div class="line">	<span class="comment">//去除大小写差异</span></div><div class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="string">'A'</span><span class="number">-32</span>;i&lt;=<span class="string">'Z'</span><span class="number">-32</span>; i++)</div><div class="line">	&#123;</div><div class="line">		tmp[i] += tmp[i + <span class="string">'a'</span> - <span class="string">'A'</span>];</div><div class="line">	<span class="comment">//	tmp[i + 'a' - 'A']=tmp[i];</span></div><div class="line">	&#125;</div><div class="line">	<span class="comment">//找到最大的</span></div><div class="line">	<span class="keyword">char</span> maxstr = <span class="number">0</span>;</div><div class="line">	<span class="keyword">int</span> maxnum = <span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span> (tmp[i] &gt; maxnum)</div><div class="line">		&#123;</div><div class="line">			maxnum = tmp[i];</div><div class="line">			maxstr = i;</div><div class="line">		&#125;		</div><div class="line">	&#125;</div><div class="line">	<span class="comment">//判断是否只出现大写或只出现小写</span></div><div class="line">	<span class="comment">//大小写同时出现返回大写</span></div><div class="line">	<span class="keyword">if</span> (tmp[maxstr] &gt; tmp[maxstr + <span class="string">'a'</span> - <span class="string">'A'</span>])</div><div class="line">		maxstr += <span class="number">32</span>;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	maxstr += <span class="number">32</span>+<span class="string">'a'</span> - <span class="string">'A'</span>;</div><div class="line">	<span class="keyword">return</span> maxstr;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">char</span> str[<span class="number">100</span>];</div><div class="line">	<span class="built_in">cin</span> &gt;&gt; str;</div><div class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">"次数最多的是："</span> &lt;&lt; fun(str) &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">	system(<span class="string">"pause"</span>);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>同样的要求，一位大神给出的程序，让我看到了差距：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">char</span> <span class="title">fun</span><span class="params">(<span class="keyword">char</span> *str)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">char</span> o = <span class="string">'a'</span> - <span class="string">'A'</span>;</div><div class="line">	<span class="keyword">char</span> c = <span class="string">'\0'</span>;</div><div class="line">	<span class="comment">//存储ASCII256个字符的的出现次数</span></div><div class="line">	<span class="keyword">int</span> data[<span class="number">256</span>];</div><div class="line">	<span class="built_in">memset</span>(data, <span class="number">0</span>, <span class="number">256</span> * <span class="keyword">sizeof</span>(<span class="keyword">int</span>));</div><div class="line">	<span class="keyword">size_t</span> length = <span class="built_in">strlen</span>(str);</div><div class="line">	<span class="comment">//遍历字符串</span></div><div class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;length; i++)</div><div class="line">	&#123;</div><div class="line">		c = str[i];</div><div class="line">		data[c]++;</div><div class="line">		<span class="keyword">if</span> (c &gt;= <span class="string">'A'</span> &amp;&amp; c &lt;= <span class="string">'Z'</span> &amp;&amp; data[c + o] &gt; <span class="number">0</span>)</div><div class="line">		&#123;</div><div class="line">			data[c + o]++;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span> (c &gt;= <span class="string">'a'</span> &amp;&amp; c &lt;= <span class="string">'z'</span> &amp;&amp; data[c - o] &gt; <span class="number">0</span>)</div><div class="line">		&#123;</div><div class="line">			data[c - o]++;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">//找出最大的</span></div><div class="line">	<span class="keyword">char</span> result = <span class="string">'\0'</span>;</div><div class="line">	<span class="keyword">int</span> maxNumber = <span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;<span class="number">256</span>; i++)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">int</span> number = data[i];</div><div class="line">		<span class="keyword">if</span> (number &gt; maxNumber)</div><div class="line">		&#123;</div><div class="line">			result = i;</div><div class="line">			maxNumber = number;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> result;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="getline获取一行输入，以回车符触发getline结束，且不保存最后的回车符"><a href="#getline获取一行输入，以回车符触发getline结束，且不保存最后的回车符" class="headerlink" title="getline获取一行输入，以回车符触发getline结束，且不保存最后的回车符"></a>getline获取一行输入，以回车符触发getline结束，且不保存最后的回车符</h1><p>空行结束输入，（注意与文件尾EOF结束的区别）</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdafx.h"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">     <span class="built_in">string</span> str;</div><div class="line">     <span class="built_in">vector</span> &lt;<span class="built_in">string</span>&gt; vec;</div><div class="line"><span class="keyword">while</span> (getline(<span class="built_in">cin</span>,str)&amp;&amp;!str.empty())</div><div class="line">&#123;</div><div class="line">     vec.push_back(str);</div><div class="line">&#125;</div><div class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> i : vec)</div><div class="line">&#123;</div><div class="line">     <span class="built_in">cout</span> &lt;&lt; i&lt;&lt; <span class="built_in">endl</span>;</div><div class="line">&#125;</div><div class="line">system(<span class="string">"pause"</span>);</div><div class="line"><span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="vector列表初始化，元素引用"><a href="#vector列表初始化，元素引用" class="headerlink" title="vector列表初始化，元素引用"></a>vector列表初始化，元素引用</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdafx.h"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">	<span class="comment">//构造函数初始化</span></div><div class="line">	<span class="comment">//vector &lt;int&gt; vec(10,1);</span></div><div class="line">	<span class="comment">//列表初始化</span></div><div class="line">	<span class="built_in">vector</span> &lt;<span class="keyword">int</span>&gt; vec = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>&#125;;</div><div class="line"></div><div class="line">	<span class="keyword">for</span> (<span class="keyword">auto</span> &amp;i : vec)</div><div class="line">	&#123;</div><div class="line">		i = i*i;</div><div class="line">		<span class="built_in">cout</span> &lt;&lt; i&lt;&lt; <span class="string">'\t'</span>;</div><div class="line">	&#125;</div><div class="line">	system(<span class="string">"pause"</span>);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="vector常用操作"><a href="#vector常用操作" class="headerlink" title="vector常用操作"></a><a href="http://zh.cppreference.com/w/cpp/container/vector" target="_blank" rel="external">vector常用操作</a></h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">vec.empty()  <span class="comment">//如果vec不含有任何元素返回真，否则返回假</span></div><div class="line">vec.size()  <span class="comment">//返回元素的个数</span></div><div class="line">vec.push_back()  <span class="comment">//添加元素</span></div><div class="line">vex.pop_back()   <span class="comment">//删除元素</span></div><div class="line"><span class="comment">//……更多参见[cppreference](http://zh.cppreference.com/w/cpp/container/vector)</span></div></pre></td></tr></table></figure>
<h1 id="迭代器"><a href="#迭代器" class="headerlink" title="迭代器"></a>迭代器</h1><p>迭代器类似于指针类型，提供了我们间接访问对象的方法。我们利用指针可以访问各种数据类型的内容，采用的是 * 符进行</p>
<h1 id="每天进步一点点"><a href="#每天进步一点点" class="headerlink" title="每天进步一点点!!!"></a>每天进步一点点!!!</h1><h2 id="impossible-is-I’m-possible"><a href="#impossible-is-I’m-possible" class="headerlink" title="impossible is I’m possible!!!"></a><strong>impossible is I’m possible!!!</strong></h2>]]></content>
      
        <categories>
            
            <category> Cpp </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Cpp </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[lamp服务器搭建-centos7+Apache2.4+MariaDB+php5.6+phpmyadmin]]></title>
      <url>https://ygcaicn.github.io/Linux/lamp-centos7.html</url>
      <content type="html"><![CDATA[<p>centos7 下yum搭建服务器以及数据库的流程。</p>
<a id="more"></a>
<h1 id="安装httpd"><a href="#安装httpd" class="headerlink" title="安装httpd"></a>安装httpd</h1><p>直接yum源安装就可以，centos7的yum源是Apache2.4</p>
<p>  <code>yum install httpd</code></p>
<h2 id="apache常用指令"><a href="#apache常用指令" class="headerlink" title="apache常用指令"></a>apache常用指令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">systemctl start httpd      #启动apache</div><div class="line">systemctl stop httpd       #停止apache</div><div class="line">systemctl restart httpd    #重启apache</div><div class="line">systemctl enable httpd     #设置apache开机启动</div></pre></td></tr></table></figure>
<h1 id="配置两个扩展yum源"><a href="#配置两个扩展yum源" class="headerlink" title="配置两个扩展yum源"></a>配置两个扩展yum源</h1><pre><code>yum install epel-release
rpm -Uvh http://rpms.famillecollet.com/enterprise/remi-release-7.rpm
</code></pre><p>因为centos7默认的yum源php是5.4的，有点跟不上时代的脚步啊。。。所以使用扩展yum源进行安装。</p>
<!--more-->
<h1 id="php相关模块"><a href="#php相关模块" class="headerlink" title="php相关模块"></a>php相关模块</h1><pre><code>yum --enablerepo=remi-php56 install php php-cli php-pear php-pdo php-mysqlnd php-gd php-mbstring php-mcrypt php-xml
</code></pre><h1 id="phpmyadmin"><a href="#phpmyadmin" class="headerlink" title="phpmyadmin"></a>phpmyadmin</h1><pre><code>yum --enablerepo=remi-php56 install phpmyadmin
</code></pre><p>这里指定php的版本是必须的，有很多教程就是这里出了问题。。。</p>
<h2 id="phpmyadmin配置："><a href="#phpmyadmin配置：" class="headerlink" title="phpmyadmin配置："></a>phpmyadmin配置：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">#打开phpmyadmin的配置文件</div><div class="line">vim /etc/httpd/conf.d/phpMyAdmin.conf</div><div class="line"></div><div class="line">将Allow from 127.0.0.1</div><div class="line">Allow from ::1</div><div class="line">改为： Require all granted</div><div class="line">systemctl restart httpd  #重启apache</div></pre></td></tr></table></figure>
<h1 id="安装MariaDB"><a href="#安装MariaDB" class="headerlink" title="安装MariaDB"></a>安装MariaDB</h1><p>CentOS 7.0中，已经使用MariaDB替代了MySQL数据库</p>
<h2 id="安装MariaDB-1"><a href="#安装MariaDB-1" class="headerlink" title="安装MariaDB"></a>安装MariaDB</h2><pre><code>yum install mariadb mariadb-server #询问是否要安装，输入Y即可自动安装,直到安装完成
</code></pre><h2 id="常用MariaDB指令"><a href="#常用MariaDB指令" class="headerlink" title="常用MariaDB指令"></a>常用MariaDB指令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">systemctl start mariadb.service #启动MariaDB</div><div class="line">systemctl stop mariadb.service #停止MariaDB</div><div class="line">systemctl restart mariadb.service #重启MariaDB</div><div class="line">systemctl enable mariadb.service #设置开机启动</div><div class="line">cp /usr/share/mysql/my-huge.cnf /etc/my.cnf #拷贝配置文件（注意：如果/etc目录下面默认有一个my.cnf，直接覆盖即可）</div></pre></td></tr></table></figure>
<h2 id="为root账户设置密码"><a href="#为root账户设置密码" class="headerlink" title="为root账户设置密码"></a>为root账户设置密码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">mysql_secure_installation</div><div class="line">#回车，根据提示输入Y</div><div class="line">#输入2次密码，回车</div><div class="line">#根据提示一路输入Y</div><div class="line">#最后出现：Thanks for using MySQL!</div><div class="line">#MySql密码设置完成，重新启动 MySQL：</div><div class="line">systemctl restart mariadb.service #重启MariaDB</div></pre></td></tr></table></figure>
<h2 id="新建数据库账户"><a href="#新建数据库账户" class="headerlink" title="新建数据库账户"></a>新建数据库账户</h2><h2 id="进入数据库"><a href="#进入数据库" class="headerlink" title="进入数据库"></a>进入数据库</h2><p>mysql -u root -p</p>
<blockquote>
<p>show databases</p>
</blockquote>
<p>最后开启相应的端口就可以外网访问了，关于firewalld的相关操作请参考<a href="http://blog.cumtpn.com/2016/10/22/firewalld-centos7/" target="_blank" rel="external"><em>CentOS7使用firewalld管理防火墙与端口</em></a></p>
<h1 id="每天进步一点点"><a href="#每天进步一点点" class="headerlink" title="每天进步一点点!!!"></a>每天进步一点点!!!</h1><h2 id="impossible-is-I’m-possible"><a href="#impossible-is-I’m-possible" class="headerlink" title="impossible is I’m possible!!!"></a><strong>impossible is I’m possible!!!</strong></h2>]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> LAMP </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CentOS7使用firewalld管理防火墙与端口]]></title>
      <url>https://ygcaicn.github.io/Linux/firewalld-centos7.html</url>
      <content type="html"><![CDATA[<p>CentOS7使用firewalld打开关闭防火墙与端口</p>
<h2 id="1、firewalld的基本使用"><a href="#1、firewalld的基本使用" class="headerlink" title="1、firewalld的基本使用"></a>1、firewalld的基本使用</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">启动： systemctl start firewalld</div><div class="line">查看状态： systemctl status firewalld</div><div class="line">停止： systemctl disable firewalld</div><div class="line">禁用： systemctl stop firewalld</div><div class="line">systemctl list-unit-files | grep firewalld #查看是否加入开机启</div></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="2-systemctl是CentOS7的服务管理工具中主要的工具，它融合之前service和chkconfig的功能于一体。"><a href="#2-systemctl是CentOS7的服务管理工具中主要的工具，它融合之前service和chkconfig的功能于一体。" class="headerlink" title="2.systemctl是CentOS7的服务管理工具中主要的工具，它融合之前service和chkconfig的功能于一体。"></a>2.systemctl是CentOS7的服务管理工具中主要的工具，它融合之前service和chkconfig的功能于一体。</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">启动一个服务：systemctl start firewalld.service</div><div class="line">关闭一个服务：systemctl stop firewalld.service</div><div class="line">重启一个服务：systemctl restart firewalld.service</div><div class="line">显示一个服务的状态：systemctl status firewalld.service</div><div class="line">在开机时启用一个服务：systemctl enable firewalld.service</div><div class="line">在开机时禁用一个服务：systemctl disable firewalld.service</div><div class="line">查看服务是否开机启动：systemctl is-enabled firewalld.service</div><div class="line">查看已启动的服务列表：systemctl list-unit-files|grep enabled</div><div class="line">查看启动失败的服务列表：systemctl --failed</div></pre></td></tr></table></figure>
<h2 id="3-配置firewalld-cmd"><a href="#3-配置firewalld-cmd" class="headerlink" title="3.配置firewalld-cmd"></a>3.配置firewalld-cmd</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">查看版本： firewall-cmd --version</div><div class="line">查看帮助： firewall-cmd --help</div><div class="line">显示状态： firewall-cmd --state</div><div class="line">查看所有打开的端口： firewall-cmd --zone=public --list-ports</div><div class="line">更新防火墙规则： firewall-cmd --reload</div><div class="line">查看区域信息:  firewall-cmd --get-active-zones</div><div class="line">查看指定接口所属区域： firewall-cmd --get-zone-of-interface=eth0</div><div class="line">拒绝所有包：firewall-cmd --panic-on</div><div class="line">取消拒绝状态： firewall-cmd --panic-off</div><div class="line">查看是否拒绝： firewall-cmd --query-panic</div></pre></td></tr></table></figure>
<h2 id="开启一个端口"><a href="#开启一个端口" class="headerlink" title="开启一个端口"></a>开启一个端口</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">在vim /etc/firewalld/zones/public.xml 加入端口或者服务</div><div class="line">    &lt;service name=&quot;http&quot;/&gt;</div><div class="line">    &lt;service name=&quot;https&quot;/&gt;</div><div class="line">    &lt;port protocol=&quot;tcp&quot; port=&quot;8080&quot;/&gt;</div><div class="line"></div><div class="line">    或者</div><div class="line">    firewall-cmd --zone=public --add-port=8080/tcp --permanent</div><div class="line">    firewall-cmd --zone=public --add-service=http  --permanent</div><div class="line">    firewall-cmd --zone=public --add-service=https --permanent</div><div class="line">    命令含义：</div><div class="line">    --zone #作用域</div><div class="line">    --add-port=80/tcp #添加端口，格式为：端口/通讯协议</div><div class="line">    firewall-cmd --zone=public --add-port=8001/tcp</div><div class="line">    --permanent #永久生效，没有此参数重启后失效</div><div class="line"></div><div class="line">    查看是否启用：</div><div class="line">    firewall-cmd --permanent --zone=public --query-port=8080/tcp</div><div class="line">    firewall-cmd --permanent --zone=public --query-service=http</div><div class="line"></div><div class="line">    删除端口或者服务：</div><div class="line">    firewall-cmd --zone=public --remove-service=http  --permanent</div><div class="line">    firewall-cmd --zone=public --remove-port=8080/tcp  --permanent</div><div class="line"></div><div class="line">开启连续多个端口：</div><div class="line">firewall-cmd --zone=public --add-port=1000-1500/tcp --permanent</div></pre></td></tr></table></figure>
<h2 id="每天进步一点点"><a href="#每天进步一点点" class="headerlink" title="每天进步一点点!!!"></a>每天进步一点点!!!</h2><h3 id="impossible-is-I’m-possible"><a href="#impossible-is-I’m-possible" class="headerlink" title="impossible is I’m possible!!!"></a><strong>impossible is I’m possible!!!</strong></h3>]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> CentOS7 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[科学上网]]></title>
      <url>https://ygcaicn.github.io/Network/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91.html</url>
      <content type="html"><![CDATA[<h2 id="持续更新，Shadowsocks下载-2016最新版（影梭，小飞机客户端）"><a href="#持续更新，Shadowsocks下载-2016最新版（影梭，小飞机客户端）" class="headerlink" title="持续更新，Shadowsocks下载 2016最新版（影梭，小飞机客户端）"></a>持续更新，Shadowsocks下载 2016最新版（影梭，小飞机客户端）</h2><p><img src="http://pubcdn.cumtpn.com/Shadowsocks.jpg-blog" alt=""><br>Shadowsocks（中文名称：影梭）是一个安全的socks5代理，用于保护网络流量，是一个开源项目。</p>
<h3 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h3><p>快速（异步I/O和事件驱动程序）<br>安全（所有的流量都经过加密算法加密，支持自定义算法）<br>支持移动客户端（专为移动设备和无线网络优化）<br>跨平台（可运行于包括PC，Mac，手机（Android和iOS）和路由器（OpenWrt）在内的多种平台上）</p>
<h3 id="开源"><a href="#开源" class="headerlink" title="开源"></a>开源</h3><h3 id="易于维护"><a href="#易于维护" class="headerlink" title="易于维护"></a>易于维护</h3><h2 id="按下Ctrl点击-gt-github地址"><a href="#按下Ctrl点击-gt-github地址" class="headerlink" title="按下Ctrl点击-&gt;github地址"></a><a href="https://github.com/shadowsocks" target="_blank" rel="external"><code>按下Ctrl点击-&gt;</code>github地址</a></h2><a id="more"></a>
<h2 id="下载地址："><a href="#下载地址：" class="headerlink" title="下载地址："></a>下载地址：</h2><h3 id="按下Ctrl点击-gt-shadowsocks官网"><a href="#按下Ctrl点击-gt-shadowsocks官网" class="headerlink" title="按下Ctrl点击-&gt;shadowsocks官网"></a><a href="https://shadowsocks.org/" target="_blank" rel="external"><code>按下Ctrl点击-&gt;</code>shadowsocks官网</a></h3><h3 id="本站下载："><a href="#本站下载：" class="headerlink" title="本站下载："></a>本站下载：</h3><p><a href="https://shadowsocks.org/en/download/clients.html" target="_blank" rel="external"><code>按下Ctrl点击-&gt;</code>官方下载地址</a></p>
<p><a href="http://pan.baidu.com/s/1eQhLCTO" target="_blank" rel="external"><code>按下Ctrl点击-&gt;</code>windows百度网盘下载</a> 密码: 7w8y<br>|<a href="http://pubcdn.cumtpn.com/Shadowsocks-3.3.3.zip" target="_blank" rel="external"><code>本地下载</code></a></p>
<p><code>按下Ctrl点击-&gt;</code>Android客户端：<a href=""><code>Google Play</code></a> |<br><a href=""><code>百度网盘</code></a> 密码: | <a href="https://github.com/shadowsocks/shadowsocks-android/releases/download/v3.2.6/shadowsocks-nightly-3.2.6.apk" target="_blank" rel="external"><code>Ggithub</code></a></p>
<p><a href=""><code>按下Ctrl点击-&gt;</code> <code>Linux 客户端:shadowsocks-gui</code></a></p>
<p>[<code>按下Ctrl点击-&gt;</code>] iOS 客户端:shadowsocks-iOS | MobileShadowSocks</p>
<p><strong>本页持续更</strong></p>
]]></content>
      
        <categories>
            
            <category> Network </category>
            
        </categories>
        
        
        <tags>
            
            <tag> shadowsocks </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[免费设置QQ空间音乐记 qzone music]]></title>
      <url>https://ygcaicn.github.io/%E6%9D%82%E9%A1%B9/qzonemusic.html</url>
      <content type="html"><![CDATA[<p>如今有了智能终端，Web QQ空间好像越来越冷落。可是QQ空间的背景音乐仍然是要收费的，奈我何，发现了腾讯还是给屌丝们留了一条活路！！！</p>
<p>按照以下步骤免费获得QQ空间背景音乐。</p>
<h2 id="a-进入QQ空间"><a href="#a-进入QQ空间" class="headerlink" title="a.进入QQ空间"></a>a.进入QQ空间</h2><p><img src="http://pubcdn.cumtpn.com/SDfXASCFDXASCRXF2.png-blog" alt=""></p>
<a id="more"></a>
<h2 id="b-点击背景音乐，进入背景音乐设置的页面"><a href="#b-点击背景音乐，进入背景音乐设置的页面" class="headerlink" title="b.点击背景音乐，进入背景音乐设置的页面"></a>b.点击背景音乐，进入背景音乐设置的页面</h2><p><img src="http://pubcdn.cumtpn.com/DSACSXdSFDGCSDFDASDXSD.png-blog" alt=""></p>
<h2 id="c-然后点击-添加网络音乐"><a href="#c-然后点击-添加网络音乐" class="headerlink" title="c.然后点击-添加网络音乐"></a>c.然后点击-添加网络音乐</h2><p><img src="http://pubcdn.cumtpn.com/afsdxfadx4.png-blog" alt=""></p>
<p>有三个选项要填：</p>
<ul>
<li><p>歌曲链接 最重要的就是这个，这里需要一个MP3外链</p>
<pre><code>http://pubcdn.cumtpn.com/G.E.M.%20%E9%82%93%E7%B4%AB%E6%A3%8B%20-%20%E7%94%BB%20%28Live%20Piano%20Session%20II%29.mp3
</code></pre><p>这是邓紫棋-画的外链</p>
</li>
<li><p>歌曲名  随便填就是啦</p>
</li>
<li>歌手名 随便填就是啦</li>
</ul>
<p>填完点击添加就是了。就是这么简单你会发现你已经添加上啦！</p>
<h2 id="添加成功"><a href="#添加成功" class="headerlink" title="添加成功"></a>添加成功</h2><p>添加成功刷新QQ空间就能直接播放额。这是添加成功的图：</p>
<p><img src="http://pubcdn.cumtpn.com/XFFAXSS3.png-blog" alt=""></p>
<p>不过不幸的是网络上的mp3外链不好找，像什么 <code>百度音乐</code>、<code>QQ音乐</code>、<code>天天动听</code>之类的是不会轻易放出外链的。</p>
<h2 id="下面是我在我的七牛CDN公开的外链："><a href="#下面是我在我的七牛CDN公开的外链：" class="headerlink" title="下面是我在我的七牛CDN公开的外链："></a>下面是我在我的七牛CDN公开的外链：</h2><p>  孙露-怎样遇见你：</p>
<pre><code>http://pubcdn.cumtpn.com/%E5%AD%99%E9%9C%B2%20-%20%E6%80%8E%E6%A0%B7%E9%81%87%E8%A7%81%E4%BD%A0.mp3
</code></pre><p>  邓紫棋-画：</p>
<pre><code>http://pubcdn.cumtpn.com/G.E.M.%20%E9%82%93%E7%B4%AB%E6%A3%8B%20-%20%E7%94%BB%20%28Live%20Piano%20Session%20II%29.mp3
</code></pre><p>有需要的欢迎留言歌曲名+歌手，我免费为大家添加外链！！！</p>
]]></content>
      
        <categories>
            
            <category> 杂项 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Markdown Syntax Tutorial]]></title>
      <url>https://ygcaicn.github.io/%E6%9D%82%E9%A1%B9/Syntax.html</url>
      <content type="html"><![CDATA[<h2 id="MarkDown语法简明"><a href="#MarkDown语法简明" class="headerlink" title="MarkDown语法简明"></a>MarkDown语法简明</h2><h1 id="Title"><a href="#Title" class="headerlink" title="Title"></a>Title</h1><p>This is first paragraph!</p>
<p>This is second paragraph!</p>
<p>1.段落的前后必须有一个空行，否则换行符会被替换为空格<br>2.行内要换行的话，必须在上一行的最后空上至少两个空格<br>或者加入<code>&lt;br/&gt;</code><br>实现换行.</p>
<p>3. Markdown 中的多数区块都需要在两个空行之间。</p>
<a id="more"></a>
<h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><h2 id="我在左侧加了空格"><a href="#我在左侧加了空格" class="headerlink" title="我在左侧加了空格"></a>我在左侧加了空格</h2><h1 id="一级标题的另一种写法H1"><a href="#一级标题的另一种写法H1" class="headerlink" title="一级标题的另一种写法H1"></a>一级标题的另一种写法H1</h1><h2 id="二级标题H2"><a href="#二级标题H2" class="headerlink" title="二级标题H2"></a>二级标题H2</h2><blockquote>
<p>引用的内容（blockquote）<br>引用内容<br>引用的嵌套</p>
<blockquote>
<p>内部的quote<br>内部的引用</p>
</blockquote>
</blockquote>
<h2 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h2><p>1.第一条<br>2.第二条<br>4.第三条  </p>
<h2 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h2><ul>
<li>第一条  </li>
</ul>
<ul>
<li>第二条  </li>
</ul>
<ul>
<li>第三条</li>
</ul>
<h2 id="嵌套的列表"><a href="#嵌套的列表" class="headerlink" title="嵌套的列表"></a>嵌套的列表</h2><ol>
<li>第一条  <ul>
<li>第一例  </li>
<li>第二例</li>
</ul>
</li>
<li>第二条  <ol>
<li>第二例</li>
<li>第二例</li>
<li>第三例</li>
</ol>
</li>
<li>第三条  </li>
</ol>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><pre><code>#include&lt;iostream&gt;
#using namespce std;
int main()
{
    cout&lt;&lt;&quot;Hello world&quot;&lt;&lt;end;
    return 0;
}
</code></pre><p>通过前面的Table来写代码块</p>
<p><code>#include&lt;iostream&gt;</code><br><code>#using namespce std;</code><br><code>int main()</code><br><code>{</code><br><code>cout&lt;&lt;&quot;Hello world&quot;&lt;&lt;end;</code><br><code>return 0;</code><br><code>}</code>  </p>
<p>另一种形式</p>
<p>##分割线</p>
<p>两种形式</p>
<hr>
<hr>
<p>都必须单独占一个段落，每个分割符为一个区块，前后必须空行，中间无所谓</p>
<h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h2><p><a href="url">text</a></p>
<ul>
<li>行内式</li>
</ul>
<p>网页链接：</p>
<p>I like <a href="www.google.com">Google</a></p>
<p>This is my <a href="www.cumtpn.com">homepage</a></p>
<p>文件连接：</p>
<p><a href="./calcu.png">icon</a></p>
<p>包含Title的连接</p>
<p><a href="www.google.com" title="Google">google</a></p>
<ul>
<li>参考式</li>
</ul>
<p><a href="www.google.com" title="Google">Google</a></p>
<p><a href="www.baidu.com" title="baidu">Baidu</a></p>
<p><a href="www.github.com" title="GitHub">GitHub</a></p>
<ul>
<li>自动链接</li>
</ul>
<p>www.google.com</p>
<www.google.com>

<p><a href="http://www.google.com" target="_blank" rel="external">http://www.google.com</a></p>
<p><a href="http://www.google.com" target="_blank" rel="external">http://www.google.com</a></p>
<p>name@gmail.com</p>
<p><a href="&#x6d;&#97;&#105;&#108;&#116;&#x6f;&#x3a;&#x6e;&#x61;&#x6d;&#x65;&#x40;&#103;&#109;&#x61;&#x69;&#x6c;&#x2e;&#x63;&#x6f;&#109;">&#x6e;&#x61;&#x6d;&#x65;&#x40;&#103;&#109;&#x61;&#x69;&#x6c;&#x2e;&#x63;&#x6f;&#109;</a></p>
<h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p><img src="./calcu.png" alt="icon"></p>
<p>嵌入Html</p>
<p><img src="/img/calcu.png" alt="This is a calcular" title="calcular" width="100" length="100"></p>
<h2 id="强调"><a href="#强调" class="headerlink" title="强调"></a>强调</h2><p><em>斜体强调</em></p>
<p><strong>粗体强调</strong></p>
<p>*<em>粗体强调*</em></p>
<h2 id="字符转义"><a href="#字符转义" class="headerlink" title="字符转义"></a>字符转义</h2><p>例如  </p>
<p>#标题</p>
<p>*<em>粗体强调*</em></p>
<p>##删除线</p>
<p>~删除线删除这些文字~</p>
<p>##多行代码</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>  </span></div><div class="line">&#123;     </div><div class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="string">"Hello world!"</span>&lt;&lt;<span class="built_in">endl</span>;  </div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;   </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="TaskList"><a href="#TaskList" class="headerlink" title="TaskList"></a>TaskList</h2><ul>
<li>[ ] Eat</li>
<li>[x] Code<ul>
<li>[x] HTML</li>
<li>[x] CSS</li>
<li>[x] JavaScript</li>
</ul>
</li>
<li>[ ] Sleep</li>
</ul>
<h2 id="Graphy"><a href="#Graphy" class="headerlink" title="Graphy"></a>Graphy</h2><table>
<thead>
<tr>
<th>name</th>
<th>age</th>
</tr>
</thead>
<tbody>
<tr>
<td>LearnShare</td>
<td>12</td>
</tr>
<tr>
<td>Mike</td>
<td>32</td>
</tr>
</tbody>
</table>
</www.google.com>]]></content>
      
        <categories>
            
            <category> 杂项 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> MarkDown </tag>
            
            <tag> github </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[socks5,socks4,http,vpn 代理是怎么回事]]></title>
      <url>https://ygcaicn.github.io/Network/proxy.html</url>
      <content type="html"><![CDATA[<h1 id="一、什么是代理服务器？"><a href="#一、什么是代理服务器？" class="headerlink" title="一、什么是代理服务器？"></a>一、什么是代理服务器？</h1><p> 代理服务器英文全称是Proxy Server，其功能就是代理网络用户去取得网络信息。形象的说：它是网络信息的中转站。 在一般情况下，我们使用网络浏览器直接去连接其他Internet站点取得网络信息时，需送出Request信号来得到回答，然后对方再把信息以bit方式传送回来。代理服务器是介于浏览器和Web服务器之间的一台服务器，有了它之后，浏览器不是直接到Web服务器去取回网页而是向代理服务器发出请求， Request信号会先送到代理服务器，由代理服务器来取回浏览器所需要的信息并传送给你的浏览器。而且，大部分代理服务器都具有缓冲的功能，就好象一个大的Cache，它有很大的存储空间，它不断将新取得数据储存到它本机的存储器上，如果浏览器所请求的数据在它本机的存储器上已经存在而且是最新的，那么它就不重新从Web服务器取数据，而直接将存储器上的数据传送给用户的浏览器，这样就能显著提高浏览速度和效率。 更重要的是：Proxy Server (代理服务器)是 Internet链路级网关所提供的一种重要的安全功能，它的工作主要在开放系统互联 (OSI) 模型的对话层。</p>
<a id="more"></a>
<h1 id="二、代理服务器的分类"><a href="#二、代理服务器的分类" class="headerlink" title="二、代理服务器的分类"></a>二、代理服务器的分类</h1><h2 id="1-HTTP代理按匿名功能分类。"><a href="#1-HTTP代理按匿名功能分类。" class="headerlink" title="1. HTTP代理按匿名功能分类。"></a>1. HTTP代理按匿名功能分类。</h2><p> 是否具有隐藏IP的功能。 非匿名代理：不具有匿名功能。 匿名代理。使用此种代理时，虽然被访问的网站不能知道你的IP地址，但仍然可以知道你在使用代理，有些侦测IP的网页也仍然可以查到你的IP。 高度匿名代理：使用此种代理时，被访问的网站不知道你的IP地址，也不知道你在使用代理进行访问。此种代理的隐藏IP地址的功能最强。</p>
<h2 id="2-按请求信息的安全性分类"><a href="#2-按请求信息的安全性分类" class="headerlink" title="2. 按请求信息的安全性分类"></a>2. 按请求信息的安全性分类</h2><ul>
<li>全匿名代理：不改变你的request fields（报文），使服务器端看来就像有个真正的客户浏览器在访问它。当然，你的真实IP是隐藏起来的。服务器的网管不会认为你使用了代理。</li>
<li>普通匿名代理：能隐藏你的真实IP，但会更改你的request fields，有可能会被认为使用了代理，但仅仅是可能，一般说来是没问题的。不过不要受它的名字的误导，其安全性可能比全匿名代理更高，有的代理会剥离你的部分信息（就好比防火墙的stealth mode），使服务器端探测不到你的操作系统版本和浏览器版本。</li>
<li>elite代理：匿名隐藏性更高，可隐藏系统及浏览器资料信息等。此种代理安全性特强。</li>
<li>透明代理（简单代理）：透明代理的意思是客户端根本不需要知道有代理服务器的存在，它改编你的request fields（报文），并会传送真实IP。</li>
<li>注意，加密的透明代理则是属于匿名代理，意思是不用设置使用代理了，例如Garden 2程序。</li>
</ul>
<h2 id="3-按代理服务器的用途分类"><a href="#3-按代理服务器的用途分类" class="headerlink" title="3. 按代理服务器的用途分类"></a>3. 按代理服务器的用途分类</h2><h3 id="1-Http代理："><a href="#1-Http代理：" class="headerlink" title="1. Http代理："></a>1. Http代理：</h3><p>代理客户机的http访问，主要代理浏览器访问网页，它的端口一般为80、8080、3128等。</p>
<h3 id="2-SSL代理"><a href="#2-SSL代理" class="headerlink" title="2. SSL代理:"></a>2. SSL代理:</h3><p>支持最高128位加密强度的http代理，可以作为访问加密网站的代理。加密网站是指以<a href="https://开始的网站。ssl的标" target="_blank" rel="external">https://开始的网站。ssl的标</a>         准端口为443。</p>
<h3 id="3-HTTP-CONNECT代理："><a href="#3-HTTP-CONNECT代理：" class="headerlink" title="3. HTTP CONNECT代理："></a>3. HTTP CONNECT代理：</h3><p>允许用户建立TCP连接到任何端口的代理服务器，这种代理不仅可用于HTTP，还包括FTP、IRC、         RM流服务等。</p>
<h3 id="4-FTP代理："><a href="#4-FTP代理：" class="headerlink" title="4. FTP代理："></a>4. FTP代理：</h3><p>代理客户机上的ftp软件访问ftp服务器，其端口一般为21、2121。</p>
<h3 id="5-POP3代理："><a href="#5-POP3代理：" class="headerlink" title="5. POP3代理："></a>5. POP3代理：</h3><p>代理客户机上的邮件软件用pop3方式收邮件，其端口一般为110。</p>
<h3 id="6-Telnet代理："><a href="#6-Telnet代理：" class="headerlink" title="6. Telnet代理："></a>6. Telnet代理：</h3><p>能够代理通信机的telnet，用于远程控制，入侵时经常使用。其端口一般为23。</p>
<h3 id="7-Socks代理："><a href="#7-Socks代理：" class="headerlink" title="7. Socks代理："></a>7. Socks代理：</h3><p>是全能代理，就像有很多跳线的转接板，它只是简单地将一端的系统连接到另外一端。支持多种协议，包括http、ftp请求及其它类型的请求。它分socks 4 和socks 5两种类型，socks 4只支持TCP协议而socks 5支持TCP/UDP协议，还支持各种身份验证机制等协议。其标准端口为1080。 socks代理相应的采用socks协议的代理服务器就是SOCKS服务器，是一种通用的代理服务器。Socks是个电路级的底层网关，是 DavidKoblas在1990年开发的，此后就一直作为Internet RFC标准的开放标准。Socks不要求应用程序遵循特定的操作系统平台，Socks 代理与应用层代理、 HTTP 层代理不同，Socks代理只是简单地传递数据包，而不必关心是何种应用协议（比如FTP、HTTP和NNTP请求）。所以，Socks代理比其他应用层代理要快得多。它通常绑定在代理服务器的1080端口上。如果您在企业网或校园网上，需要透过防火墙或通过代理服务器访问Internet就可能需要使用 SOCKS。一般情况下，对于拨号上网用户都不需要使用它。注意，浏览网页时常用的代理服务器通常是专门的http代理，它和SOCKS是不同的。因此，您能浏览网页不等于您一定可以通过SOCKS访问Internet。常用的防火墙，或代理软件都支持SOCKS，但需要其管理员打开这一功能。如果您不确信您是否需要SOCKS或是否有SOCKS可用，请与您的网络管理员联系。</p>
<hr>
<blockquote>
<p>为了使用socks，您需要了解一下内容:</p>
</blockquote>
<ul>
<li>SOCKS服务器的IP地址</li>
<li>SOCKS服务所在的端口</li>
<li>这个SOCKS服务是否需要用户认证？如果需要，您要向您的网络管理员申请一个用户和口令 知道了上述信息，您就可以把这些信息填入“网络配置”中，或者在第一次登记时填入，您就可以使用socks代理了。 在实际应用中SOCKS代理可以用作为：电子邮件、新闻组软件、网络传呼ICQ、网络聊天MIRC和使用代理服务器上联众打游戏等等各种游戏应用软件当中。</li>
</ul>
<hr>
<h3 id="8-TUNNEL代理："><a href="#8-TUNNEL代理：" class="headerlink" title="8. TUNNEL代理："></a>8. TUNNEL代理：</h3><p>经HTTPTunnet程序转换的数据包封装成http请求（Request）来穿透防火墙，允许利用HTTP服务器做任何TCP可以做的事情，功能相当于Socks5。</p>
<h3 id="9-文献代理："><a href="#9-文献代理：" class="headerlink" title="9. 文献代理："></a>9. 文献代理：</h3><p>可以用来查询数据库的代理，通过这些代理，可以获得互联网的相关科研学术的数据库资源，例如查询Sciencedirect网站（简称SD）、Academic Press、IEEE，SPRINGER等数据库。</p>
<h3 id="10-教育网代理："><a href="#10-教育网代理：" class="headerlink" title="10. 教育网代理："></a>10. 教育网代理：</h3><p>指学术教育机构局域网通过特定的代理服务器可使无出国权限或无访问某IP段权限的计算机访问相关资源。</p>
<h3 id="11-跳板代理："><a href="#11-跳板代理：" class="headerlink" title="11. 跳板代理："></a>11. 跳板代理：</h3><p>应用于跳板程序，可以看作一种具有动态加密的特殊socks5代理，，也可直接用于PSD软件。其端口一般为1813。</p>
<h3 id="12-Ssso代理："><a href="#12-Ssso代理：" class="headerlink" title="12. Ssso代理："></a>12. Ssso代理：</h3><p>代理客户机上的ssso程序访问远程网站，具有SSL加密强度的超级代理，支持socks。</p>
<h3 id="13-Flat代理："><a href="#13-Flat代理：" class="headerlink" title="13. Flat代理："></a>13. Flat代理：</h3><p>代理客户机上的flatsurfer程序访问远程网站，具有高强度加密数据流的特殊代理，支持socks，最大可设置三次级联，可以设置穿越代理。其端口一般为6700。</p>
<h3 id="14-SoftE代理："><a href="#14-SoftE代理：" class="headerlink" title="14. SoftE代理："></a>14. SoftE代理：</h3><p>代理客户机上的SoftEther程序访问远程网站，应用虚拟集线器HUB和虚拟网卡技术，具备VPN功能及多种认证方式的代理，符合https协议。</p>
<h1 id="三、代理服务器的主要功能-代理服务器一般来讲，对于普通的网民的作用有以下几个（撇开一些高深的用处不谈，因为未必会用到）："><a href="#三、代理服务器的主要功能-代理服务器一般来讲，对于普通的网民的作用有以下几个（撇开一些高深的用处不谈，因为未必会用到）：" class="headerlink" title="三、代理服务器的主要功能 代理服务器一般来讲，对于普通的网民的作用有以下几个（撇开一些高深的用处不谈，因为未必会用到）："></a>三、代理服务器的主要功能 代理服务器一般来讲，对于普通的网民的作用有以下几个（撇开一些高深的用处不谈，因为未必会用到）：</h1><ol>
<li><p>连接Internet与Intranet 充当firewall（防火墙）：因为所有内部网的用户通过代理服务器访问外界时，只映射为一个IP地址，所以外界不能直接访问到内部网；同时可以设置 IP地址过滤，限制内部网对外部的访问权限；另外，两个没有互联的内部网，也可以通过第三方的代理服务器进行互联来交换信息。</p>
</li>
<li><p>节省IP开销：如前面所讲，所有用户对外只占用一个IP，所以不必租用过多的IP地址，降低网络的维护成本。这样，局域局内没有与外网相连的众多机器就可以通过内网的一台代理服务器连接到外网，大大减少费用。当然也有它不利的一面，如许多网络黑客通过这种方法隐藏自己的真实IP地址，而逃过监视。</p>
</li>
<li><p>通过它来加快我们浏览某些网站的速度：有时候我们访问一些国外或者港台网站，速度慢得像蜗牛一样，但只要你正确的选用代理服务器，速度就可以得到提升，有时候这些速度的提升可是很明显的哦！本身带宽较小，通过带宽较大的proxy与目标主机连接。而且通常代理服务器都设置一个较大的硬盘缓冲区（可能高达几个GB或更大），当有外界的信息通过时，同时也将其保存到缓冲区中，当其他用户再访问相同的信息时，则直接由缓冲区中取出信息，传给用户，从而达到提高访问速度的目的。</p>
</li>
</ol>
]]></content>
      
        <categories>
            
            <category> Network </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 代理 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hexo搭建个人博客及NexT主题配置与优化]]></title>
      <url>https://ygcaicn.github.io/%E6%9D%82%E9%A1%B9/hexo-blog.html</url>
      <content type="html"><![CDATA[<a id="more"></a>
<h1 id="命令行帮助"><a href="#命令行帮助" class="headerlink" title="命令行帮助"></a>命令行帮助</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">D:\Github\blog-hexo&gt;hexo -help</div><div class="line">Usage: hexo &lt;command&gt;</div><div class="line"></div><div class="line">Commands:</div><div class="line">  clean     Removed generated files and cache.</div><div class="line">  config    Get or set configurations.</div><div class="line">  deploy    Deploy your website.</div><div class="line">  generate  Generate static files.</div><div class="line">  help      Get help on a command.</div><div class="line">  init      Create a new Hexo folder.</div><div class="line">  list      List the information of the site</div><div class="line">  migrate   Migrate your site from other system to Hexo.</div><div class="line">  new       Create a new post.</div><div class="line">  publish   Moves a draft post from _drafts to _posts folder.</div><div class="line">  render    Render files with renderer plugins.</div><div class="line">  server    Start the server.</div><div class="line">  version   Display version information.</div><div class="line"></div><div class="line">Global Options:</div><div class="line">  --config  Specify config file instead of using _config.yml</div><div class="line">  --cwd     Specify the CWD</div><div class="line">  --debug   Display all verbose messages in the terminal</div><div class="line">  --draft   Display draft posts</div><div class="line">  --safe    Disable all plugins and scripts</div><div class="line">  --silent  Hide output on console</div><div class="line"></div><div class="line">For more help, you can use &apos;hexo help [command]&apos; for the detailed information</div><div class="line">or you can check the docs: http://hexo.io/docs/</div></pre></td></tr></table></figure>
<ul>
<li><h2 id="常用命令："><a href="#常用命令：" class="headerlink" title="常用命令："></a>常用命令：</h2><pre><code>hexo help #查看帮助
hexo init #初始化一个目录
hexo new &quot;postName&quot; #新建文章
hexo new page &quot;pageName&quot; #新建页面
hexo generate #生成网页，可以在 public 目录查看整个网站的文件
hexo server #本地预览，&apos;Ctrl+C&apos;关闭
hexo deploy #部署.deploy目录
hexo clean #清除缓存，强烈建议每次执行命令前先清理缓存，每次部署前先删除 .deploy 文件夹

简写：
hexo n == hexo new
hexo g == hexo generate
hexo s == hexo server
hexo d == hexo deploy
</code></pre></li>
</ul>
<p>直接在命令行中操作出现一下错误：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">D:\Github\blog-hexo&gt;hexo d</div><div class="line">INFO  Deploying: git</div><div class="line">INFO  Clearing .deploy_git folder...</div><div class="line">INFO  Copying files from public folder...</div><div class="line">&apos;git&apos; �����ڲ����ⲿ���Ҳ���ǿ����еĳ���</div><div class="line">�������ļ�</div><div class="line">FATAL Something&apos;s wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.html</div><div class="line">Error: spawn git ENOENT</div><div class="line">    at notFoundError (D:\Github\blog-hexo\node_modules\hexo-deployer-git\node_modules\hexo-util\node_modules\cross-spawn\lib\enoent.js:11:11)</div><div class="line">    at verifyENOENT (D:\Github\blog-hexo\node_modules\hexo-deployer-git\node_modules\hexo-util\node_modules\cross-spawn\lib\enoent.js:46:16)</div><div class="line">    at ChildProcess.cp.emit (D:\Github\blog-hexo\node_modules\hexo-deployer-git\node_modules\hexo-util\node_modules\cross-spawn\lib\enoent.js:33:19)</div><div class="line">    at Process.ChildProcess._handle.onexit (internal/child_process.js:200:12)</div><div class="line">FATAL spawn git ENOENT</div><div class="line">Error: spawn git ENOENT</div><div class="line">    at notFoundError (D:\Github\blog-hexo\node_modules\hexo-deployer-git\node_modules\hexo-util\node_modules\cross-spawn\lib\enoent.js:11:11)</div><div class="line">    at verifyENOENT (D:\Github\blog-hexo\node_modules\hexo-deployer-git\node_modules\hexo-util\node_modules\cross-spawn\lib\enoent.js:46:16)</div><div class="line">    at ChildProcess.cp.emit (D:\Github\blog-hexo\node_modules\hexo-deployer-git\node_modules\hexo-util\node_modules\cross-spawn\lib\enoent.js:33:19)</div><div class="line">    at Process.ChildProcess._handle.onexit (internal/child_process.js:200:12)</div></pre></td></tr></table></figure></p>
<p>原因是：git的执行目录没有加入系统环境变量。解决方案：1.将git加入环境变量Path中。2.直接在git shell中进行操作。我更习惯于方式2。</p>
<p>环境搭建好以后，常用到的就是增加新的博客然后提交git。以下操作均在git shell中操作</p>
<p>操作目录：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">YGC@YGC  /d/Github</div><div class="line">$ cd blog-hexo/</div><div class="line"></div><div class="line">YGC@YGC  /d/Github/blog-hexo</div><div class="line">$ pwd</div><div class="line">/d/Github/blog-hexo</div><div class="line"></div><div class="line">YGC@YGC  /d/Github/blog-hexo</div><div class="line">$ ls</div><div class="line">_config.yml  node_modules/  public/    scaffolds/  themes/</div><div class="line">db.json      package.json   readme.md  source/     upload.bat</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">hexo n &quot;Linux基础&quot;</div><div class="line">hexo clean</div><div class="line">hexo s -p 5500</div><div class="line">hexo d -g</div></pre></td></tr></table></figure>
<ul>
<li><h2 id="Error-message-“Filename-too-long”"><a href="#Error-message-“Filename-too-long”" class="headerlink" title="Error message “Filename too long”"></a>Error message “Filename too long”</h2><pre><code>git config --system core.longpaths true
</code></pre></li>
</ul>
<!--more-->
]]></content>
      
        <categories>
            
            <category> 杂项 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> github </tag>
            
            <tag> hexo </tag>
            
            <tag> 博客 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[GitHub入门记 Go Git!!!]]></title>
      <url>https://ygcaicn.github.io/%E5%BB%BA%E7%AB%99/git.html</url>
      <content type="html"><![CDATA[<h1 id="git-install-and-config"><a href="#git-install-and-config" class="headerlink" title="git install and config"></a>git install and config</h1><ul>
<li><p>install Linux:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">shell 界面输入 ``sudo  apt-get install git-core`` 回车输入密码</div></pre></td></tr></table></figure>
</li>
<li><p>Windows：下载</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[git-for-windows](https://github.com/git-for-windows/git/releases/tag/v2.6.3.windows.1)</div><div class="line"></div><div class="line">[github-windows](https://github-windows.s3.amazonaws.com/GitHubSetup.exe)</div><div class="line"></div><div class="line">安装就不用说了，上面两个的区别自己去琢磨吧！</div></pre></td></tr></table></figure>
</li>
<li><p>Mac：terminal : brew install git</p>
</li>
</ul>
<p>完成上面的步骤就算安装好环境了，你离git已经很近了，下面是怎么配置。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">#配置全局用户名和邮箱</div><div class="line">#Linux: shell ，Windows: Git Bash ，Mac:terminal 命令如下：</div><div class="line">git config --global user.name &quot;yourname&quot;</div><div class="line">git config --global user.email &quot;Youremail@gmail</div><div class="line"></div><div class="line">#查看是否配置成功：</div><div class="line">git config --global user.name</div><div class="line">git config --global user.email</div></pre></td></tr></table></figure>
<a id="more"></a>
<h1 id="creat-local-repository-connect-remote"><a href="#creat-local-repository-connect-remote" class="headerlink" title="creat local repository connect remote"></a>creat local repository connect remote</h1><p>首先你要在本地创建一个仓库，也就是repository（creat a local repository）：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">#cd 到你要建仓库的文件夹，建的仓库会在该文件夹下生成一个和仓库同名的文件夹</div><div class="line">#所以你不必自己建立一个和仓库同名的文件夹</div><div class="line">#假如你的仓库都要放在D:/GitHub/下</div><div class="line">cd D:/GitHub</div><div class="line">git init mygit</div></pre></td></tr></table></figure></p>
<p>就是这么简单仓库就建好了，你会发现在<code>D:/GitHub</code>下生成了一个mygit文件夹，同时文件夹内有一个<code>.git</code>隐藏文件。那么现在<code>D:/GitHub/mygit/</code>就是你的本地仓库了。如果你不想让你的代码发布到网络的话，在这里你完全可以使用git的所有功能。不过我们要做的还是想要他发布到网上，那就是GitHub了。</p>
<h1 id="建立一个远程仓库（creat-a-remote-repository）"><a href="#建立一个远程仓库（creat-a-remote-repository）" class="headerlink" title="建立一个远程仓库（creat a remote repository）"></a>建立一个远程仓库（creat a remote repository）</h1><p>在<a href="http://git.hub.com" target="_blank" rel="external">git.hub.com</a>创建一个新的仓库，一定要是空的。当然你要先登录你的帐号，如果连账号都搞不定我想你可以<code>Ctrl+W</code>了。当然了你可以<a href="https://www.baidu.com/s?ie=utf-8&amp;f=8&amp;rsv_bp=0&amp;rsv_idx=1&amp;tn=baidu&amp;wd=github%20%E6%B3%A8%E5%86%8C&amp;rsv_pq=91be8521000285f6&amp;rsv_t=897aSDBktemvsQZDFO9grrqOtZxbYL0XvZH6kedqhDzayC9fY%2F73YTwP7VY&amp;rqlang=cn&amp;rsv_enter=1&amp;rsv_sug3=14&amp;rsv_sug1=4&amp;rsv_sug7=100" target="_blank" rel="external">百度–</a>。</p>
<p><img src="/img/markdown-img-paste-20161016161851265.png" alt=""><br><img src="/img/markdown-img-paste-20161016162035764.png" alt=""></p>
<p>完成以后你的远程仓库也就建好了。不过你还需要将刚才建立的本地仓库与远程的仓库建立连接。那么你就需要你的远程仓库地址</p>
<p><img src="/img/markdown-img-paste-20161016162352701.png" alt=""><br>连接支持HTTPs和SSH两种协议，推荐使用ＳＳＨ连接。</p>
<p>我的连接是<a href="&#x6d;&#x61;&#105;&#108;&#116;&#111;&#58;&#103;&#105;&#x74;&#x40;&#103;&#x69;&#x74;&#104;&#117;&#x62;&#x2e;&#99;&#x6f;&#x6d;&#58;&#x79;&#x67;&#99;&#x61;&#x69;&#x63;&#110;&#x2f;&#x6d;&#x79;&#103;&#105;&#x74;&#x2e;&#103;&#x69;&#x74;">&#103;&#105;&#x74;&#x40;&#103;&#x69;&#x74;&#104;&#117;&#x62;&#x2e;&#99;&#x6f;&#x6d;&#58;&#x79;&#x67;&#99;&#x61;&#x69;&#x63;&#110;&#x2f;&#x6d;&#x79;&#103;&#105;&#x74;&#x2e;&#103;&#x69;&#x74;</a>, （这用的是SSH连接地址）</p>
<h1 id="本地仓库与远程仓库连接-connect-a-remote-repository"><a href="#本地仓库与远程仓库连接-connect-a-remote-repository" class="headerlink" title="本地仓库与远程仓库连接( connect a remote repository )"></a>本地仓库与远程仓库连接( connect a remote repository )</h1><pre><code>#打开git shell
cd D:/github/mygit
git remote add origin git@github.com:ygcaicn/mygit.git
</code></pre><blockquote>
<h1 id="Quick-setup-—-if-you’ve-done-this-kind-of-thing-before"><a href="#Quick-setup-—-if-you’ve-done-this-kind-of-thing-before" class="headerlink" title="Quick setup — if you’ve done this kind of thing before"></a>Quick setup — if you’ve done this kind of thing before</h1><h2 id="…or-create-a-new-repository-on-the-command-line"><a href="#…or-create-a-new-repository-on-the-command-line" class="headerlink" title="…or create a new repository on the command line"></a>…or create a new repository on the command line</h2><pre><code>echo &quot;# test&quot; &gt;&gt; README.md
 git init
 git add README.md
 git commit -m &quot;first commit&quot;
 git remote add origin git@github.com:ygcaicn/test.git
 git push -u origin master
</code></pre><h2 id="…or-push-an-existing-repository-from-the-command-line"><a href="#…or-push-an-existing-repository-from-the-command-line" class="headerlink" title="…or push an existing repository from the command line"></a>…or push an existing repository from the command line</h2><p>   git remote add origin</p>
<pre><code>git@github.com:ygcaicn/test.git
 git push -u origin master
</code></pre><h2 id="…or-import-code-from-another-repository"><a href="#…or-import-code-from-another-repository" class="headerlink" title="…or import code from another repository"></a>…or import code from another repository</h2><p>You can initialize this repository with code from a Subversion, Mercurial, or TFS project.</p>
</blockquote>
<p>上面是建立完仓库官方给出的Quick setup.</p>
<h2 id="上传本地仓库-Update"><a href="#上传本地仓库-Update" class="headerlink" title="上传本地仓库 Update"></a>上传本地仓库 Update</h2><p>建立远程连接更新本地的改动到云端</p>
<pre><code>git add -A
git commit -m &quot;first commit&quot;
git push -u origin master  //由于第一次push加-u
</code></pre><p>后来的push不需要加-u参数。到此你已经可以简单的使用git了。不过git远不只这么多东西，它没这么简单。</p>
<hr>
<h1 id="下面介绍一些Github常用的skill"><a href="#下面介绍一些Github常用的skill" class="headerlink" title="下面介绍一些Github常用的skill"></a>下面介绍一些Github常用的skill</h1><h2 id="creat-remote-repository-clone-to-local"><a href="#creat-remote-repository-clone-to-local" class="headerlink" title="creat remote repository clone to local"></a>creat remote repository clone to local</h2><p>将代码仓库clone到本地，其实就是将代码复制到你的机器里，并交由Git来管理：<br>    git clone git@github.com:ygcaicn/mygit.git</p>
<h2 id="git常用的命令-git-scm官方文档"><a href="#git常用的命令-git-scm官方文档" class="headerlink" title="git常用的命令:git-scm官方文档"></a>git常用的命令:<a href="https://git-scm.com/doc" target="_blank" rel="external">git-scm官方文档</a></h2><p>关于git-scm是什么和git的区别，<a href="http://blog.csdn.net/iamluole/article/details/42148091" target="_blank" rel="external">请按下<code>Ctrl</code>点击</a></p>
<ul>
<li><code>git add</code>：把要提交的代码添加进来，可以认为到一个缓冲中<strong>[重要]</strong> <a href="https://git-scm.com/docs/git-add" target="_blank" rel="external">官方文档</a></li>
</ul>
<p>提交文件test.c：</p>
<pre><code>git add test.c
</code></pre><p>提交目录test ：</p>
<pre><code>git add test
</code></pre><p>添加删除后的所有文件：</p>
<pre><code>git add .
</code></pre><p><del>或者：</del></p>
<pre><code>~~git add -A~~
</code></pre><p>添加所有文件（和上面的区别我也不知道）</p>
<pre><code>#一定要是大A强调一下，Shell下的所有操作都是区分大小写的
#不过Windows下还有区别，因为~~万恶的Windows~~是不区分文件的大小写的
git add -A
</code></pre><p>上面的add添加操作相当于把文件写入到了一个仓库的缓存区，但是还没有真正的写入到仓库的磁盘中</p>
<ul>
<li><p><code>git commit</code>本地提交commit：add完成后，真正的代码提交<strong>[重要]</strong> <a href="https://git-scm.com/docs/git-commit" target="_blank" rel="external">官方文档</a></p>
<p>  git commit -m “commit” // -m 描述信息，不能为空</p>
</li>
</ul>
<p>本地提交就是将缓存区的文件改动写入仓库的磁盘。</p>
<ul>
<li><p>git status: 查看上次提交后文件修改的列表</p>
<pre><code>git status
</code></pre></li>
<li><p>git diff：查看文件修改的内容，-号代表删除部分，+号代表添加部分</p>
<pre><code>git diff TestB.java // 查看TestB.java修改的内容
</code></pre></li>
<li><p>checkout：撤销未提交的修改（未执行add操作）</p>
<pre><code>git checkout TestB.java // 撤销TestB.java的修改
</code></pre></li>
<li><p>reset：取消add状态</p>
<p>  git reset HEAD TestB.java // 取消TestB.java的add状态</p>
</li>
<li><p>log：查看提交记录（内容包含提交id,提交人，提交日期，描述信息）</p>
<pre><code>git log // 所有记录
git log xxxxx(id) -1 // 查看当前id的记录，-1表示一行记录
git log xxxxx(id) -1 -p // 查看当前id提交记录的修改
</code></pre></li>
</ul>
<pre><code>+ `.gitignore`文件:

git会检查是否存在该文件，存在就读取该文件内容，将配置文件或者目录排除在版本之外，文件和目录可以使用“\*”通配符。可以手动创建在文件。
</code></pre><hr>
<pre><code><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">#Compiled Object files</div><div class="line">*.slo</div><div class="line">*.lo</div><div class="line">*.o</div><div class="line">*.obj</div><div class="line"></div><div class="line"># Precompiled Headers</div><div class="line">*.gch</div><div class="line">*.pch</div><div class="line"></div><div class="line"># Compiled Dynamic libraries</div><div class="line">*.so</div><div class="line">*.dylib</div><div class="line">*.dll</div><div class="line"></div><div class="line"># Fortran module files</div><div class="line">*.mod</div><div class="line"></div><div class="line"># Compiled Static libraries</div><div class="line">*.lai</div><div class="line">*.la</div><div class="line">*.a</div><div class="line">*.lib</div><div class="line"></div><div class="line"># Executables</div><div class="line">*.exe</div><div class="line">*.out</div><div class="line">*.app</div><div class="line"></div><div class="line">#Editplus</div><div class="line">*.bak</div><div class="line">TestA.c // 排除该文件</div><div class="line"> testDir // 排除该目录</div></pre></td></tr></table></figure>
</code></pre><hr>
<h2 id="git-分支"><a href="#git-分支" class="headerlink" title="git 分支"></a>git 分支</h2><p>分支：可以在现有代码上拉出一个分支，使得代码可以在主干与分支同时开发，并且代码之间互相不会影响。常见使用环境，就是每次版本发布，已发布的可以拉出一个分支，剩下的功能继续在主干开发，如果发布版本有问题，只用修改分支，最终将代码合并到主干。</p>
<ul>
<li>分支命令：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">git branch -a // 查看所有分支，master主干，分支前有*号，表示当前处于那个分支</div><div class="line">git branch release1.0 // 创建release1.0分支，</div><div class="line">git checkout release1.0 // 切换到release1.0分支，主要与文件修改撤销的区别</div><div class="line">git checkout master // 1： 切换到主干</div><div class="line">git merge release1.0 // 2： 将release1.0的修改合并到master，如果有冲突解决冲突</div><div class="line">git branch -D release1.0 // 删除release1.0分支</div></pre></td></tr></table></figure>
<h2 id="远程版本库"><a href="#远程版本库" class="headerlink" title="远程版本库"></a>远程版本库</h2><ul>
<li><p>比如有远程版本库(仓库)，<a href="https://github.com/FreeSunny/RefreashTabView.git" target="_blank" rel="external">https://github.com/FreeSunny/RefreashTabView.git</a></p>
<pre><code>git clone https://github.com/FreeSunny/RefreashTabView.git // 下载到本地
</code></pre></li>
</ul>
<h3 id="远程库命令："><a href="#远程库命令：" class="headerlink" title="远程库命令："></a>远程库命令：</h3><ul>
<li><p>pussh：将代码修改和提交同步到远程库 <strong>[重要]</strong></p>
<pre><code>#origin 指定远程版本库的 Git 地址，master 指定同步到哪一个分支
git push origin master
</code></pre></li>
<li><p>fetch：远程库的修改同步到本地, 不会将代码合并到任何分支，会存放到一个origin/master分支上</p>
<pre><code>#注释同
git fetch origin master
</code></pre></li>
<li><p>diff：查看远程库修改内容</p>
<pre><code>#注意有一个斜线，就是fetch同步后放置的位
git diff origin/master
</code></pre></li>
<li><p>merge：将origin/master分支修改的内容合并到主分支</p>
<pre><code>#注意斜线
git merge origin/master
</code></pre></li>
<li><p>pull：fetch + merge，拉取并且合并<strong>[重要]</strong></p>
<pre><code>#没有斜线  
git pull origin master
</code></pre></li>
</ul>
<h2 id="Git常用速查-gitbub网址"><a href="#Git常用速查-gitbub网址" class="headerlink" title="Git常用速查 gitbub网址"></a>Git常用速查 <a href="https://github.com/" target="_blank" rel="external">gitbub网址</a></h2><p>知易行难，say easy than do， 下面就来一个小小的实例，<strong>必须要有git账号</strong>，这个步骤就不用say了吧！</p>
<h3 id="创建远程库"><a href="#创建远程库" class="headerlink" title="创建远程库"></a>创建远程库</h3><pre><code>a. 点击+号下的New repository 创建一个远程库，命名为GitOperate,

b. 版本库类型可以public或者private，程序员都有开源的心，那就public。

c. 还可以勾选Initialize this repository with a README，

d. 接下来可以选择添加.gitignore文件，.gitignore文件有很多类型可以选，
   比如 Android，Android项目下的bin这些文件一般都不需要提交。
   选择遵循的协议。eg：Apache License 2.0, 这个可以自己去查查每种的意思

e. 点击create，远程版本库就创建完成了，远程版本库的地址为
   https://github.com/FreeSunny/GitOperate.git。
   之后跳转到README.md,该文件主要是对项目的描述。
</code></pre><h3 id="远程库克隆到本地"><a href="#远程库克隆到本地" class="headerlink" title="远程库克隆到本地"></a>远程库克隆到本地</h3><pre><code>a. 本地创建一个GitOperate文件夹

b. 远程库地址为https://github.com/FreeSunny/GitOperate.git，
   cd进入GitOperate，输入 *git clone https://github.com/FreeSunny/GitOperate.git*

c. 完成后可以在GitOperater文件下的GitOperate文件夹下看到README.md文件（两层文件夹了）

d. 将第二个目录下的所有文件全部复制到上一层目录中，这样就只有第一层目录添加到版本控制中。
   操作命令为(cp -r GitOperate/ .)
</code></pre><h3 id="提交代码"><a href="#提交代码" class="headerlink" title="提交代码"></a>提交代码</h3><pre><code>git add .// 将提交的代码添加进来，这里指README.md

git commit -m “add readme” // 本地提交

git push origin master //  同步到远程库
</code></pre><h1 id="Ref"><a href="#Ref" class="headerlink" title="Ref"></a>Ref</h1><p><a href="htpp://iissnan.com/progit/" target="_blank" rel="external">htpp://iissnan.com/progit/</a></p>
]]></content>
      
        <categories>
            
            <category> 建站 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> github </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>https://ygcaicn.github.io/%E6%9D%82%E9%A1%B9/hello-world.html</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<a id="more"></a>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
      
        <categories>
            
            <category> 杂项 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>

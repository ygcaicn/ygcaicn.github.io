<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[Ubuntu17.10-ChineseInputContexts]]></title>
      <url>https://ygcaicn.github.io/Linux/Ubuntu-ChineseInputContexts.html</url>
      <content type="html"><![CDATA[<p>unbuntu下一些常用的软件无法输入中文，这使人很不爽，经过一段时间的努力基本解决了系统中文输入以及常用软件输入中文的问题！<br>环境为Ubuntu17.10 （17.04同样适用）。<br>常用软件包括：</p>
<ul>
<li>Atom</li>
<li>Wps</li>
<li>QtCreator</li>
</ul>
<a id="more"></a>
<h2 id="系统中文输入"><a href="#系统中文输入" class="headerlink" title="系统中文输入"></a>系统中文输入</h2><p>看图，不多说：</p>
<p><img src="../img/7c1e95b2-17a3-4322-ab84-8c09619e237e.png" alt="7c1e95b2-17a3-4322-ab84-8c09619e237e"></p>
<p><img src="../img/8f506da4-b2d3-4a23-84e3-53472b5f0320.png" alt="8f506da4-b2d3-4a23-84e3-53472b5f0320"></p>
<p><img src="../img/8a39b319-f52c-4f2d-a61a-de2f62dead49.png" alt="8a39b319-f52c-4f2d-a61a-de2f62dead49"></p>
<p><img src="../img/ddb58d66-7572-4a6f-8d9f-0d20b28ccdf8.png" alt="ddb58d66-7572-4a6f-8d9f-0d20b28ccdf8"></p>
<p>效果图：<br><img src="../img/4d3ae893-f910-4c23-8749-ef7bf963ef56.png" alt="4d3ae893-f910-4c23-8749-ef7bf963ef56"></p>
<h2 id="Qt-QtCreator"><a href="#Qt-QtCreator" class="headerlink" title="Qt QtCreator"></a>Qt QtCreator</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install fcitx-libs-qt fcitx-libs-qt5</div><div class="line"></div><div class="line">cp /usr/lib/x86_64-linux-gnu/qt5/plugins/platforminputcontexts/libfcitxplatforminputcontextplugin.so  ~/qtcreator-4.4.0/lib/Qt/plugins/platforminputcontexts/</div></pre></td></tr></table></figure>
<p>以上操作其实就是安装fcitx-libs-qt和fcitx-libs-qt5的库，然后将动态链接拷贝到qtcreator的插件目录中，至于为什么是这个目录需要你自己去发现，不过我们可以看到在该目录中已经存在ibux的动态链接库，我们只是把fcitx的加进去而已。</p>
<p><img src="../img/b7a25a45-c60d-44ba-bcaa-2ead2ca1bd4e.png" alt="b7a25a45-c60d-44ba-bcaa-2ead2ca1bd4e"></p>
<p>当然你也可以不拷贝直接将libfcitxplatforminputcontextplugin.so所在的目录加入到环境变量中应该也是可以的（我没有测试）：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo vim /etx/bash.bashrc</div></pre></td></tr></table></figure>
<p>在文件最后添加一行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">export $PATH = $PATH:/usr/lib/x86_64-linux-gnu/qt5/plugins/platforminputcontexts/</div></pre></td></tr></table></figure></p>
<p>到此重启qtcreator已经可以输入中文了。就是这么简单！<br>效果图：<br><img src="../img/fa8ee2df-6668-469f-b965-55174c5275e3.png" alt="370933ff-bb56-47de-8c4c-aca83576cf79"></p>
<h2 id="Wps"><a href="#Wps" class="headerlink" title="Wps"></a>Wps</h2><p>google搜到的解决办法,(亲测在Ubuntu17.04&amp;17.10中无效)</p>
<blockquote>
<p>wps文字不能输入中文解决  </p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ vim /usr/bin/wps</div></pre></td></tr></table></figure>
<p>修改wps启动文件：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">#!/bin/bash</div><div class="line">export XMODIFIERS=&quot;@im=fcitx&quot;</div><div class="line">export QT_IM_MODULE=&quot;fcitx&quot;</div><div class="line">gOpt=</div><div class="line">#gOptExt=-multiply</div><div class="line">gTemplateExt=(&quot;wpt&quot; &quot;dot&quot; &quot;dotx&quot;)</div></pre></td></tr></table></figure>
<p>wps writer,表格，ppt对应的启动文件分别为：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">/usr/bin/wps</div><div class="line">/usr/bin/et</div><div class="line">/usr/bin/wpp</div></pre></td></tr></table></figure>
<p><img src="../img/a419806f-81a9-4ace-8249-874e1a004b45.png" alt="a419806f-81a9-4ace-8249-874e1a004b45"></p>
<p>以上方式在17.04和17.10中亲测无效！！！</p>
<p>受到qtcreator的启示，同样将libfcitxplatforminputcontextplugin.so动态链接库拷贝到wps的目录中，wps的目录位于：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/opt/kingsoft/wps-office/office6</div></pre></td></tr></table></figure>
<p>可以看到在office6目录下有一个这样的路径：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/opt/kingsoft/wps-office/office6/qt/plugins/</div></pre></td></tr></table></figure>
<p>和qtcreator的很相似，只是没有platforminputcontexts这个下一级目录，由于强迫症就建立一个这个目录（其实不建也是可以的）把libfcitxplatforminputcontextplugin.so拷贝进来，然后启动wps发现完美解决。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">sudo mkdir /opt/kingsoft/wps-office/office6/qt/plugins/platforminputcontexts</div><div class="line"></div><div class="line">sudo cp  /usr/lib/x86_64-linux-gnu/qt5/plugins/platforminputcontexts/libfcitxplatforminputcontextplugin.so  /opt/kingsoft/wps-office/office6/qt/plugins/platforminputcontexts/</div><div class="line"></div><div class="line">fcitx-autostart</div><div class="line"></div><div class="line">wps</div></pre></td></tr></table></figure>
<p>效果图：<br><img src="../img/5e598032-adc5-48ad-a1a3-8a2cd012861a.png" alt="5e598032-adc5-48ad-a1a3-8a2cd012861a"></p>
<h2 id="Atom"><a href="#Atom" class="headerlink" title="Atom"></a>Atom</h2><p>Atom 我没有测试上面的方法，应该也是可以的。我的解决办法是编译安装。</p>
<p>Atom的官方网址：<a href="https://atom.io/" target="_blank" rel="external">https://atom.io/</a></p>
<p>binary包安装以后无法输入中文，后来采用编译安装问题的到解决。</p>
<p>编译安装参考：<a href="http://flight-manual.atom.io/hacking-atom/sections/hacking-on-atom-core/#platform-linux" target="_blank" rel="external">http://flight-manual.atom.io/hacking-atom/sections/hacking-on-atom-core/#platform-linux</a></p>
<p>效果图：<br><img src="../img/01cf646b-b789-4b42-9278-adcdec0ffed6.png" alt="01cf646b-b789-4b42-9278-adcdec0ffed6"></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>以上通过安装 fcitx-libs-qt fcitx-libs-qt5，然后将动态链接库拷贝到软件的启动目录（或者特定的库目录中）完美解决了Qtcreator，wps，Atom在Ubuntu中的中文输入问题！！Enjoy your Ubuntu!<br>&lt;</p>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Qt </tag>
            
            <tag> wps </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Qt-doc-struct]]></title>
      <url>https://ygcaicn.github.io/Qt/qt-doc-struct.html</url>
      <content type="html"><![CDATA[<p>Qt的文档写的非常棒！学习QT最重要的就是学会看官方的文档，了解文档的结构有助于快速的查询文档，解决问题。Qt官方文档的主页为<a href="http://doc.qt.io" target="_blank" rel="external">http://doc.qt.io</a><br><img src="../img/4bbdac2a-5470-4829-8a47-5cfed7253eba.png" alt="4bbdac2a-5470-4829-8a47-5cfed7253eba"></p>
<p>进入Qt Reference Documentation后可以看到Qt的文档还分为不同的分类，本文主要是介绍第一个分类：Class Lists</p>
<p><img src="../img/49e21d26-e157-40b5-acb1-3e492b9cf2d8.png" alt="49e21d26-e157-40b5-acb1-3e492b9cf2d8"></p>
<p>Class Lists中又有不同的索引方式，方便不同情景下查询：<br><img src="../img/c42b0ad4-92e7-4dcf-b09f-14bce8261eea.png" alt="c42b0ad4-92e7-4dcf-b09f-14bce8261eea"> </p>
<p>Qt的class文档大致分为3个部分，Type（数据类型），Functions（成员函数），Macros（宏）。每个部分又分为两块，前一块是一个list，简单的列举，后一块为detail，详细信息。每个类的文档都是在同一个html页面上，采用锚点相互跳转，这也是非常棒的一点！</p>
<a id="more"></a>
<h2 id="QDir-Class-类名"><a href="#QDir-Class-类名" class="headerlink" title="QDir Class 类名"></a>QDir Class <em>类名</em></h2><p><img src="../img/qdirdfadfclass.png" alt="qdirdfadfclass"></p>
<p>The QDir class provides access to directory structures and their contents. More… <em>简单介绍功能，可点击查看详细</em></p>
<table>
<thead>
<tr>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>Header:</td>
<td>#include <qdir></qdir></td>
</tr>
<tr>
<td>qmake:</td>
<td>QT += core</td>
</tr>
</tbody>
</table>
<p><em>说明header和qmake的包含操作</em></p>
<hr>
<h2 id="Public-Types-公有的数据类型"><a href="#Public-Types-公有的数据类型" class="headerlink" title="Public Types 公有的数据类型"></a>Public Types <em>公有的数据类型</em></h2><p><img src="../img/ae7e90b2-2b94-45af-819e-cb99c0f686e3.png" alt="ae7e90b2-2b94-45af-819e-cb99c0f686e3"></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">enum	Filter &#123; Dirs, AllDirs, Files, Drives, ..., CaseSensitive &#125;</div><div class="line">flags	Filters</div></pre></td></tr></table></figure>
<blockquote>
<p>The Filters type is a typedef for QFlags<filter>. It stores an OR combination of Filter values.</filter></p>
</blockquote>
<h2 id="Public-Functions-公有成员函数"><a href="#Public-Functions-公有成员函数" class="headerlink" title="Public Functions 公有成员函数"></a>Public Functions <em>公有成员函数</em></h2><p><img src="../img/baac4270-afb5-41f3-ac10-4c8d217d2e56.png" alt="baac4270-afb5-41f3-ac10-4c8d217d2e56"><br>对象可以访问的函数,编程过程中主要查阅的就是这部分。</p>
<h2 id="Static-Public-Members-静态成员函数"><a href="#Static-Public-Members-静态成员函数" class="headerlink" title="Static Public Members  静态成员函数"></a>Static Public Members  <em>静态成员函数</em></h2><p><img src="../img/74c56c41-e57f-49e2-bb0b-2863471984f8.png" alt="74c56c41-e57f-49e2-bb0b-2863471984f8"></p>
<p>解决同一个类不同对象之间的数据共享问题。主要作用是用来访问同一个类中的静态数据成员，维护对象之间的数据共享。</p>
<p>访问不依赖于对象。</p>
<p>可以通过对象与类名进行调用，一般习惯与用类名进行访问。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">static QDir	current()</div><div class="line"></div><div class="line">//example：</div><div class="line"></div><div class="line">QDir::current()</div><div class="line"></div><div class="line">//return a QDir Object of current directory.</div></pre></td></tr></table></figure>
<h2 id="Macros-宏"><a href="#Macros-宏" class="headerlink" title="Macros 宏"></a>Macros 宏</h2><p><img src="../img/747b2a9a-3760-4319-8dda-06b283649d8e.png" alt="747b2a9a-3760-4319-8dda-06b283649d8e"></p>
<hr>
<h2 id="Detailed-Description"><a href="#Detailed-Description" class="headerlink" title="Detailed Description"></a>Detailed Description</h2><p>该部分介绍QDir的整体概览。又分为小的章节进行介绍</p>
<h3 id="Navigation-and-Directory-Operations"><a href="#Navigation-and-Directory-Operations" class="headerlink" title="Navigation and Directory Operations"></a>Navigation and Directory Operations</h3><h3 id="Files-and-Directory-Contents"><a href="#Files-and-Directory-Contents" class="headerlink" title="Files and Directory Contents"></a>Files and Directory Contents</h3><h3 id="The-Current-Directory-and-Other-Special-Paths"><a href="#The-Current-Directory-and-Other-Special-Paths" class="headerlink" title="The Current Directory and Other Special Paths"></a>The Current Directory and Other Special Paths</h3><p><img src="../img/93ced37a-d761-4d88-a0d4-033002f35a25.png" alt="93ced37a-d761-4d88-a0d4-033002f35a25"></p>
<h3 id="Path-Manipulation-and-Strings"><a href="#Path-Manipulation-and-Strings" class="headerlink" title="Path Manipulation and Strings"></a>Path Manipulation and Strings</h3><h3 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h3><hr>
<h2 id="Member-Type-Documentation"><a href="#Member-Type-Documentation" class="headerlink" title="Member Type Documentation"></a>Member Type Documentation</h2><p><img src="../img/559c5e7d-9573-4d55-b9b0-e4b45f100494.png" alt="559c5e7d-9573-4d55-b9b0-e4b45f100494"></p>
<p>具体的介绍数据类型</p>
<h2 id="Member-Function-Documentation"><a href="#Member-Function-Documentation" class="headerlink" title="Member Function Documentation"></a>Member Function Documentation</h2><p><img src="../img/g3364be29-656a-4a1f-8b6e-2f96a635e4d3.png" alt="g3364be29-656a-4a1f-8b6e-2f96a635e4d3"></p>
<p><img src="../img/ee471f05-3f7e-4537-baa3-537f69c3c64f.png" alt="ee471f05-3f7e-4537-baa3-537f69c3c64f"><br>具体的介绍Function，包括static function。每个函数后有<code>See also xxx()</code>非常的方便。</p>
<h2 id="Macro-Documentation"><a href="#Macro-Documentation" class="headerlink" title="Macro Documentation"></a>Macro Documentation</h2><p><img src="../img/c70d4c00-6840-4eb5-be99-4c18cdf4fe01.png" alt="c70d4c00-6840-4eb5-be99-4c18cdf4fe01"><br>具体的介绍宏</p>
<h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><h3 id="QDir"><a href="#QDir" class="headerlink" title="QDir"></a><a href="http://doc.qt.io/qt-5/qdir.html#QDir" target="_blank" rel="external">QDir</a></h3>]]></content>
      
        <categories>
            
            <category> Qt </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Qt </tag>
            
            <tag> cpp </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[TCP/IP]]></title>
      <url>https://ygcaicn.github.io/Linux/TCP-IP.html</url>
      <content type="html"><![CDATA[<h2 id="TCP-IP"><a href="#TCP-IP" class="headerlink" title="TCP/IP"></a>TCP/IP</h2><p>维基百科：<a href="https://zh.wikipedia.org/wiki/TCP/IP%E5%8D%8F%E8%AE%AE%E6%97%8F" target="_blank" rel="external">https://zh.wikipedia.org/wiki/TCP/IP%E5%8D%8F%E8%AE%AE%E6%97%8F</a></p>
<p>互联网协议族（英语：Internet Protocol Suite，缩写IPS）是一个网络通信模型，以及一整个网络传输协议家族，为互联网的基础通信架构。它常被通称为TCP/IP协议族（英语：TCP/IP Protocol Suite，或TCP/IP Protocols），简称TCP/IP[2]。因为该协议家族的两个核心协议：TCP（传输控制协议）和IP（网际协议），为该家族中最早通过的标准[3]。由于在网络通讯协议普遍采用分层的结构，当多个层次的协议共同工作时，类似计算机科学中的堆栈，因此又被称为TCP/IP协议栈（英语：TCP/IP Protocol Stack）</p>
<p>整个通信网络的任务，可以划分成不同的功能区块，即所谓的层级（layer）。用于互联网的协议可以比照TCP/IP参考模型进行分类。TCP/IP协议栈起始于第三层协议IP（网际协议）。</p>
<a id="more"></a>
<p>TCP/IP参考模型是一个抽象的分层模型，这个模型中，所有的TCP/IP系列网络协议都被归类到4个抽象的”层”中。每一抽象层创建在低一层提供的服务上，并且为高一层提供服务。 完成一些特定的任务需要众多的协议协同工作，这些协议分布在参考模型的不同层中的，因此有时称它们为一个协议栈。 TCP/IP参考模型为TCP/IP协议栈订身制作。其中IP协议只关心如何使得数据能够跨越本地网络边界的问题，而不关心如何利用传输媒体，数据如何传输。整个TCP/IP协议栈则负责解决数据如何通过许许多多个点对点通路（一个点对点通路，也称为一”跳”, 1 hop）顺利传输，由此不同的网络成员能够在许多”跳”的基础上创建相互的数据通路。</p>
<h2 id="因特网协议栈中的层"><a href="#因特网协议栈中的层" class="headerlink" title="因特网协议栈中的层"></a>因特网协议栈中的层</h2><p><img src="../img/fsdafsdfw.png" alt="fsdafsdfw"></p>
<hr>
<p>4 .  应用层application layer 例如HTTP、FTP、DNS（如BGP和RIP这样的路由协议，尽管由于各种各样的原因它们分别运行在TCP和UDP上，仍然可以将它们看作网络层的一部分）</p>
<p>3 . 传输层transport layer 例如TCP、UDP、RTP、SCTP（如OSPF这样的路由协议，尽管运行在IP上也可以看作是网络层的一部分）</p>
<p>2 .  网络互连层internet layer 对于TCP/IP来说这是因特网协议（IP）（如ICMP和IGMP这样的必须协议尽管运行在IP上，也仍然可以看作是网络互连层的一部分；ARP不运行在IP上）</p>
<p>1 . 网络接口层link layer 例如以太网、Wi-Fi、MPLS等。</p>
<h3 id="应用层"><a href="#应用层" class="headerlink" title="应用层"></a>应用层</h3><p>该层包括所有和应用程序协同工作，利用基础网络交换应用程序专用的数据的协议。 应用层是大多数普通与网络相关的程序为了通过网络与其他程序通信所使用的层。这个层的处理过程是应用特有的；数据从网络相关的程序以这种应用内部使用的格式进行传送，然后被编码成标准协议的格式。<br>一些特定的程序被认为运行在这个层上。它们提供服务直接支持用户应用。这些程序和它们对应的协议包括HTTP（万维网服务）、FTP（文件传输）、SMTP（电子邮件）、SSH（安全远程登陆）、DNS（名称&lt;-&gt; IP地址寻找）以及许多其他协议。 一旦从应用程序来的数据被编码成一个标准的应用层协议，它将被传送到IP栈的下一层。</p>
<p>在传输层，应用程序最常用的是TCP或者UDP，并且服务器应用程序经常与一个公开的端口号相联系。服务器应用程序的端口由互联网号码分配局（IANA）正式地分配，但是现今一些新协议的开发者经常选择它们自己的端口号。由于在同一个系统上很少超过少数几个的服务器应用，端口冲突引起的问题很少。应用软件通常也允许用户强制性地指定端口号作为运行参数。<br>连结外部的客户端程序通常使用系统分配的一个随机端口号。监听一个端口并且通过服务器将那个端口发送到应用的另外一个副本以创建对等连结（如IRC上的dcc文件传输）的应用也可以使用一个随机端口，但是应用程序通常允许定义一个特定的端口范围的规范以允许端口能够通过实现网络地址转换（NAT）的路由器映射到内部。</p>
<p>每一个应用层（TCP/IP参考模型的最高层）协议一般都会使用到两个传输层协议之一： 面向连接的TCP传输控制协议和无连接的包传输的UDP用户数据报文协议。</p>
<h3 id="常用的应用层协议有："><a href="#常用的应用层协议有：" class="headerlink" title="常用的应用层协议有："></a>常用的应用层协议有：</h3><p>运行在TCP协议上的协议：<br>  ● HTTP（Hypertext Transfer Protocol，超文本传输协议），主要用于普通浏览。<br>  ● HTTPS（Hypertext Transfer Protocol over Secure Socket Layer, or HTTP over SSL，安全超文本传输协议）,HTTP协议的安全版本。<br>  ● FTP（File Transfer Protocol，文件传输协议），由名知义，用于文件传输。<br>  ● POP3（Post Office Protocol, version 3，邮局协议），收邮件用。<br>  ● SMTP（Simple Mail Transfer Protocol，简单邮件传输协议），用来发送电子邮件。<br>  ● TELNET（Teletype over the Network，网络电传），通过一个终端（terminal）登陆到网络。<br>  ● SSH（Secure Shell，用于替代安全性差的TELNET），用于加密安全登陆用。<br>运行在UDP协议上的协议：<br>  ● BOOTP（Boot Protocol，启动协议），应用于无盘设备。<br>  ● NTP（Network Time Protocol，网络时间协议），用于网络同步。<br>  ● DHCP（Dynamic Host Configuration Protocol，动态主机配置协议），动态配置IP地址。<br>其他：<br>  ● DNS（Domain Name Service，域名服务），用于完成地址查找，邮件转发等工作（运行在TCP和UDP协议上）。<br>  ● ECHO（Echo Protocol，回绕协议），用于查错及测量应答时间（运行在TCP和UDP协议上）。<br>  ● SNMP（Simple Network Management Protocol，简单网络管理协议），用于网络信息的收集和网络管理。<br>  ● ARP（Address Resolution Protocol，地址解析协议），用于动态解析以太网硬件的地址。</p>
<h3 id="传输层"><a href="#传输层" class="headerlink" title="传输层"></a>传输层</h3><p>传输层的协议，能够解决诸如端到端可靠性（“数据是否已经到达目的地？”）和保证数据按照正确的顺序到达这样的问题。在TCP/IP协议组中，传输协议也包括所给数据应该送给哪个应用程序。 在TCP/IP协议组中技术上位于这个层的动态路由协议通常被认为是网络层的一部分；一个例子就是OSPF（IP协议89）。 TCP（IP协议6）是一个“可靠的”、面向连结的传输机制，它提供一种可靠的字节流保证数据完整、无损并且按顺序到达。TCP尽量连续不断地测试网络的负载并且控制发送数据的速度以避免网络过载。另外，TCP试图将数据按照规定的顺序发送。这是它与UDP不同之处，这在实时数据流或者路由高网络层丢失率应用的时候可能成为一个缺陷。 较新的SCTP也是一个“可靠的”、面向连结的传输机制。它是面向纪录而不是面向字节的，它在一个单独的连结上提供通过多路复用提供的多个子流。它也提供多路自寻址支持，其中连结终端能够被多个IP地址表示（代表多个实体接口），这样的话即使其中一个连接失败了也不中断。它最初是为电话应用开发的（在IP上传输SS7），但是也可以用于其他的应用。 UDP（IP协议号17）是一个无连结的数据报协议。它是一个“尽力传递”（best effort）或者说“不可靠”协议——不是因为它特别不可靠，而是因为它不检查数据包是否已经到达目的地，并且不保证它们按顺序到达。如果一个应用程序需要这些特性，那它必须自行检测和判断，或者使用TCP协议。 UDP的典型性应用是如流媒体（音频和视频等）这样按时到达比可靠性更重要的应用，或者如DNS查找这样的简单查询／响应应用，如果创建可靠的连结所作的额外工作将是不成比例地大。 DCCP目前正由IEFT开发。它提供TCP流动控制语义，但对于用户来说保留UDP的数据报服务模型。 TCP和UDP都用来支持一些高层的应用。任何给定网络地址的应用通过它们的TCP或者UDP端口号区分。根据惯例使一些大众所知的端口与特定的应用相联系。 RTP是为如音频和视频流这样的实时数据设计的数据报协议。RTP是使用UDP包格式作为基础的会话层，然而据说它位于因特网协议栈的传输层。</p>
<h3 id="网络互连层"><a href="#网络互连层" class="headerlink" title="网络互连层"></a>网络互连层</h3><p>TCP/IP协议族中的网络互连层（internet layer）在OSI模型中叫做网络层（network layer）。<br>正如最初所定义的，网络层解决在一个单一网络上传输数据包的问题。类似的协议有X.25和ARPANET的Host/IMP Protocol。 随着因特网思想的出现，在这个层上添加附加的功能，也就是将数据从源网络传输到目的网络。这就牵涉到在网络组成的网上选择路径将数据包传输，也就是因特网。 在因特网协议组中，IP完成数据从源发送到目的的基本任务。IP能够承载多种不同的高层协议的数据；这些协议使用一个唯一的IP协议号进行标识。ICMP和IGMP分别是1和2。 一些IP承载的协议，如ICMP（用来发送关于IP发送的诊断信息）和IGMP（用来管理多播数据），它们位于IP层之上但是完成网络层的功能，这表明因特网和OSI模型之间的不兼容性。所有的路由协议，如BGP、OSPF、和RIP实际上也是网络层的一部分，尽管它们似乎应该属于更高的协议栈。  </p>
<h3 id="网络接口层"><a href="#网络接口层" class="headerlink" title="网络接口层"></a>网络接口层</h3><p>网络接口层实际上并不是因特网协议组中的一部分，但是它是数据包从一个设备的网络层传输到另外一个设备的网络层的方法。这个过程能够在网卡的软件驱动程序中控制，也可以在韧体或者专用芯片中控制。这将完成如添加报头准备发送、通过实体媒介实际发送这样一些数据链路功能。另一端，链路层将完成数据帧接收、去除报头并且将接收到的包传到网络层。 然而，链路层并不经常这样简单。它也可能是一个虚拟专有网络（VPN）或者隧道，在这里从网络层来的包使用隧道协议和其他（或者同样的）协议组发送而不是发送到实体的接口上。VPN和隧道通常预先建好，并且它们有一些直接发送到实体接口所没有的特殊特点（例如，它可以加密经过它的数据）。由于现在链路“层”是一个完整的网络，这种协议组的递归使用可能引起混淆。但是它是一个实现常见复杂功能的一个优秀方法。（尽管需要注意预防一个已经封装并且经隧道发送下去的数据包进行再次地封装和发送）。</p>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux </tag>
            
            <tag> TCP/IP </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Adblock的一些软件]]></title>
      <url>https://ygcaicn.github.io/%E6%9D%82%E9%A1%B9/adb.html</url>
      <content type="html"><![CDATA[<h2 id="推荐列表"><a href="#推荐列表" class="headerlink" title="推荐列表"></a>推荐列表</h2><a id="more"></a>
<p>1.Adblock Plus （推荐）</p>
<p><a href="https://adblockplus.org/zh_CN/" target="_blank" rel="external">https://adblockplus.org/zh_CN/</a></p>
<p>2.AdBlock</p>
<p><a href="https://www.getadblock.com/" target="_blank" rel="external">https://www.getadblock.com/</a></p>
<p>3.adbyby（国产，支持去各大视频站 <code>包括https</code> 的广告，支持openwrt端）</p>
<p><a href="https://www.adbyby.com/" target="_blank" rel="external">https://www.adbyby.com/</a></p>
<p>4.adsafe (唯一比较靠谱的国产）</p>
<p><a href="http://ad-safe.com/" target="_blank" rel="external">http://ad-safe.com/</a></p>
<p>5.µBlock</p>
<p><a href="https://github.com/gorhill/uBlock" target="_blank" rel="external">https://github.com/gorhill/uBlock</a></p>
<p>6.Adblock Edge</p>
<p><a href="https://addons.mozilla.org/firefox/addon/adblock-edge/" target="_blank" rel="external">https://addons.mozilla.org/firefox/addon/adblock-edge/</a></p>
<p>7.AdGuard</p>
<p><a href="http://adguard.com/en/welcome.html" target="_blank" rel="external">http://adguard.com/en/welcome.html</a></p>
<p>8.AdFender</p>
<p><a href="http://www.adfender.com/" target="_blank" rel="external">http://www.adfender.com/</a></p>
<p>9.Bluhell Firewall</p>
<p><a href="https://addons.mozilla.org/en-US/firefox/addon/bluhell-firewall" target="_blank" rel="external">https://addons.mozilla.org/en-US/firefox/addon/bluhell-firewall</a></p>
<p>10.Proxomitron （卡饭有介绍)</p>
<p><a href="http://proximodo.sourceforge.net/" target="_blank" rel="external">http://proximodo.sourceforge.net/</a></p>
<p>11.poper-blocker</p>
<p><a href="http://wzmn.net/poper-blocker" target="_blank" rel="external">http://wzmn.net/poper-blocker</a></p>
<p>12.Updated Ad Blocker for Firefox</p>
<p><a href="https://addons.mozilla.org/en-US/firefox/addon/updated-ad-blocker-for-fire/" target="_blank" rel="external">https://addons.mozilla.org/en-US/firefox/addon/updated-ad-blocker-for-fire/</a></p>
<p>13.javascript-blocker</p>
<p><a href="http://javascript-blocker.toggleable.com/" target="_blank" rel="external">http://javascript-blocker.toggleable.com/</a></p>
<p>14.uMatrix</p>
<p><a href="https://github.com/gorhill/uMatrix" target="_blank" rel="external">https://github.com/gorhill/uMatrix</a></p>
<p>15.webmailAdBlocker （邮箱广告）</p>
<p><a href="http://jasonsavard.com/webmailAdBlocker" target="_blank" rel="external">http://jasonsavard.com/webmailAdBlocker</a></p>
<p>16.adblockvideo</p>
<p><a href="http://adblockvideo.com/" target="_blank" rel="external">http://adblockvideo.com/</a></p>
<p>17.karma-blocker</p>
<p><a href="https://github.com/arantius/karma-blocker" target="_blank" rel="external">https://github.com/arantius/karma-blocker</a></p>
<p>18.奶牛</p>
<p><a href="https://www.admuncher.com/" target="_blank" rel="external">https://www.admuncher.com/</a></p>
<h2 id="附加adb常用屏蔽（update-2017-10-24）"><a href="#附加adb常用屏蔽（update-2017-10-24）" class="headerlink" title="附加adb常用屏蔽（update 2017.10.24）"></a>附加adb常用屏蔽（update 2017.10.24）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">baidu.com###content_right</div><div class="line">baidu.com##.cr-offset</div><div class="line">baidu.com##.leftBlock</div><div class="line">mail.163.com###\31 508028782489_dvmailrecomPanelCont</div><div class="line">mail.163.com##.gWel-tabs-panel-cont</div><div class="line">mail.163.com##.gWel-tabs-list</div><div class="line">baidu.com###s_mancard_main</div><div class="line">baidu.com##.s-top-nav</div><div class="line">dazi.kukuw.com##.gg_close</div><div class="line">163.com##.col_r</div><div class="line">tech.163.com###js-ep3rdRank</div><div class="line">163.com##.gallery-tie-right</div><div class="line">163.com##.post_content_side</div><div class="line">163.com##.mt35 mod_bobo</div><div class="line">news.163.com##.clearfix.bobolist</div><div class="line">news.163.com##.mt35.mod_bobo</div><div class="line">||img1.cache.netease.com/f2e/www/index2014/images/sprite_dw2.png</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 杂项 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 去广告 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[VIP视频解析+去广告教程]]></title>
      <url>https://ygcaicn.github.io/%E7%BD%91%E7%BB%9C/VIP%E8%A7%86%E9%A2%91%E8%A7%A3%E6%9E%90-%E5%8E%BB%E5%B9%BF%E5%91%8A.html</url>
      <content type="html"><![CDATA[<h1 id="VIP视频解析-去广告教程"><a href="#VIP视频解析-去广告教程" class="headerlink" title="VIP视频解析+去广告教程"></a>VIP视频解析+去广告教程</h1><h2 id="Step1-打开视频网站"><a href="#Step1-打开视频网站" class="headerlink" title="Step1.打开视频网站"></a>Step1.打开视频网站</h2><p>这里以爱奇艺为例 <a href="http://www.iqiyi.com" target="_blank" rel="external">http://www.iqiyi.com</a> 打开首页看到类似下面的界面：</p>
<p><img src="http://i.imgur.com/ZQhMuKf.png" alt="Imgur"></p>
<h2 id="Step2-找到你要看的视频"><a href="#Step2-找到你要看的视频" class="headerlink" title="Step2.找到你要看的视频"></a>Step2.找到你要看的视频</h2><p>在视频网站中找到你想要看的视频，看到类似下面的界面：</p>
<p><img src="http://i.imgur.com/tmSUnQl.png" alt="Imgur"></p>
<ul>
<li><code>点击1</code> 指的地方，这里可以看到选择是一个需要VIP才能观看的《河神EP04》，这里无意冒犯出版商版权，多有得罪，提倡大家购买正版观看！</li>
<li><code>复制2</code> 指的链接</li>
</ul>
<h2 id="Step3-打开VIP视频解析-去广告"><a href="#Step3-打开VIP视频解析-去广告" class="headerlink" title="Step3.打开VIP视频解析+去广告"></a>Step3.打开<a href="http://blog.cumtpn.com/vipvideo" target="_blank" rel="external">VIP视频解析+去广告</a></h2><p>将刚才复制的链接粘贴到输入框中，入下图所示：</p>
<p><img src="http://i.imgur.com/y3Vo4ll.png" alt="Imgur"></p>
<ul>
<li><code>1→</code>为输入框，输入在视频网站找到的视频链接</li>
<li><code>2→</code>为解析接口选择，在无法解析的情况下可以在这里换解析接口，另外支持自定义解析接口。</li>
<li><code>3→</code>为理解播放按钮，点击即可观看，并且没有广告哟！</li>
</ul>
<p><img src="http://i.imgur.com/vsrxmVT.png" alt="Imgur"><br><a id="more"></a></p>
]]></content>
      
        <categories>
            
            <category> 网络 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> VIP视频 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[关于win10version1703 多引导（grub引导）的问题]]></title>
      <url>https://ygcaicn.github.io/Linux/win10-1703-grub.html</url>
      <content type="html"><![CDATA[<h1 id="关于win10调包grub引导的过程"><a href="#关于win10调包grub引导的过程" class="headerlink" title="关于win10调包grub引导的过程"></a>关于win10调包grub引导的过程</h1><p>2017.05.31日中午更新了win10 1703推送的更新，一切由此变的不开心。。。</p>
<p>往常一直正常的grub引导出问题了，bios启动项中ubuntu这个item还在，不过不幸运的是即使你选择这项引导进行开机进入的依然是windows。这就让人很生气。</p>
<p>好在我还有移动硬盘的linux，当然你用live盘也是可以的。进去移动硬盘linux后按照上篇文章讲的方法修复了grub。再次进入bios选择ubuntu启动，没什么问题一下就进入了grub熟悉的界面。成功进入了内置硬盘的linuxmint。<br><a id="more"></a></p>
<p>本来以为故事到此就结束了呢，骂也骂过了，问题也修复了，万万万万没有想到的是我从win关机之后首先发现了第一个小问题：bios的启动项顺序发生了变化，以往我都是将grub放到第一启动项的，现在变成win是第一项。<br>然后接着来了一个大问题：第二项的ubuntu选项（也就是grub引导程序grubx64.efi）选择从该项启动以后又直接进入了win。到这时候我就已经有了不好的预感。同样从硬盘进入linux看看什么情况，先修复了grub</p>
<p>via.一下操作均在live linux下操作</p>
<h2 id="安装修复grub"><a href="#安装修复grub" class="headerlink" title="安装修复grub"></a>安装修复grub</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">jachin-Inspiron-5548 ubuntu # sudo grub-install --target x86_64-efi --efi-directory /mnt/esp --boot-directory=/mnt/boot</div><div class="line">Installing for x86_64-efi platform.</div><div class="line">Installation finished. No error reported.</div></pre></td></tr></table></figure>
<h2 id="grubx64-efi文件"><a href="#grubx64-efi文件" class="headerlink" title="grubx64.efi文件"></a>grubx64.efi文件</h2><pre><code>jachin-Inspiron-5548 ubuntu # ll -h grubx64.efi
-rwx------ 1 root root 118K May 31 09:45 grubx64.efi*
</code></pre><p>同样修复万以后grub一切正常，重复上次的操作，进入win，关机win，选择grub启动项。和上次结果一样又进了win。。再进入移动硬盘的linux</p>
<h2 id="重启win后grubx64-efi文件"><a href="#重启win后grubx64-efi文件" class="headerlink" title="重启win后grubx64.efi文件"></a>重启win后grubx64.efi文件</h2><pre><code>jachin-Inspiron-5548 ubuntu # ll -h grubx64.efi
-rwx------ 1 root root  74K May 31 09:45 grubx64.efi*
</code></pre><p>发现了猫腻，万恶的Mxx公司竟然修改了grubx64.efi文件。。。</p>
<p>总结一下就是：</p>
<ol>
<li>win会调包（sda1@efi）/EFI/ubuntu/grubx64.efi文件</li>
<li>win会自动调整启动项的顺序，把自己条boot1</li>
<li>linux下win的分区不能挂载，之前是开着快速启动也可以挂载的，现在不行了。这个关掉快速启动可以解决，没办法果断关掉。</li>
</ol>
<h1 id="尝试的一些方法"><a href="#尝试的一些方法" class="headerlink" title="尝试的一些方法"></a>尝试的一些方法</h1><h2 id="修改grubx64-efi的文件名（失败）"><a href="#修改grubx64-efi的文件名（失败）" class="headerlink" title="修改grubx64.efi的文件名（失败）"></a>修改grubx64.efi的文件名（失败）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">cp grubx64.efi mgrubx64.efi </div><div class="line"></div><div class="line">jachin-Inspiron-5548 ubuntu # ll -h</div><div class="line">total 240K</div><div class="line">drwxr-xr-x 2 root root 2.0K May 31 10:18 ./</div><div class="line">drwxr-xr-x 5 root root 2.0K May 28 00:45 ../</div><div class="line">-rwxr-xr-x 1 root root 118K May 31 10:09 grubx64.efi*</div><div class="line">-rwxr-xr-x 1 root root 118K May 31 10:18 mgrubx64.efi*</div></pre></td></tr></table></figure>
<p>启动过win之后：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">jachin-Inspiron-5548 ubuntu # ll -h</div><div class="line">total 78K</div><div class="line">drwxr-xr-x 2 root root 2.0K May 31 10:18 ./</div><div class="line">drwxr-xr-x 5 root root 2.0K May 28 00:45 ../</div><div class="line">-rwxr-xr-x 1 root root 74K May 31 10:09 grubx64.efi*</div><div class="line">-rwxr-xr-x 1 root root 0K May 31 10:18 mgrubx64.efi*</div></pre></td></tr></table></figure>
<p>可以看到（sda1@efi）/EFI/ubuntu/grubx64.efi文件被调包，（sda1@efi）/EFI/ubuntu/mgrubx64.efi这个更是直接被清空。</p>
<h2 id="修改grubx64-efi所在的文件夹"><a href="#修改grubx64-efi所在的文件夹" class="headerlink" title="修改grubx64.efi所在的文件夹"></a>修改grubx64.efi所在的文件夹</h2><p>这样可以正常进入grub，但是bios中的启动项要手动添加。并且启动win后添加的启动项被删除了，文件倒是没有被修改，可以通过再次添加进入grub程序。</p>
<h2 id="双Esp分区"><a href="#双Esp分区" class="headerlink" title="双Esp分区"></a>双Esp分区</h2><p>将以前的esp分区划分成两个esp分区，一个专门用来存放windows的efi程序，另一个专门存放grub的efi程序（grubx64.efi）</p>
<p>先将esp分区中的win引导程序备份出来（不过后来证明我用cp备份的引导并不能正常进入win）<br>拆分分区主要就是用了gdisk工具，格式化为vfat 使用了mkfs.vfat程序，选择一个esp作为linux的引导分区，然后安装grub，还要注意修改内置硬盘系统的/etc/fstab文件中的esp分区挂载的uuid，这个尤其重要，不修改的话也是无法正常进入系统的。ps.这些操作都是在移动硬盘的linux系统中进行的。</p>
<p>这时候重启进入bios中发现自动识别出了sda2也就是我的第二块efi分区中的grub引导，第一块的win引导没有识别。我就手动添加了一下发现启动出了问题，不能正常进入win。没办法逢山开路进winPE，bcdboot修复win引导。这时候需要注意的是你要指定win引导安装在哪个esp分区。到此的话已经win和linux都可以启动了，并且grub引导不会被win调包。</p>
<p>这种解决方法相对完美，但是没有解决win将自身调整为boot1的问题。</p>
<h2 id="需要注意的问题："><a href="#需要注意的问题：" class="headerlink" title="需要注意的问题："></a>需要注意的问题：</h2><ol>
<li>拆分分区时第二个esp分区的分区号可能会排到最后，也就是数值最大。这个你可以手动调整分区号，不过开机进入内置硬盘的win后分区号按照扇区的顺序自动调整。</li>
<li>备份win的引导我是没成功，如果又winPE的话可以不备份直接删除格式化，badboot重建win引导。</li>
<li>不要考虑在win下无损调整vfat文件系统的分区。</li>
<li>fstab文件一定要修改的，要不然进不去系统。</li>
</ol>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="http://blog.cumtpn.com/Linux/Esp-grub-uefi-windows.html" target="_blank" rel="external">ESP分区格式化，修复Windows&amp;Linux引导</a></p>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Grub2 </tag>
            
            <tag> Windows </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ESP分区格式化，修复Windows&Linux引导]]></title>
      <url>https://ygcaicn.github.io/Linux/Esp-grub-uefi-windows.html</url>
      <content type="html"><![CDATA[<p>ESP分区存放的UEFI引导程序</p>
<p>ESP分区被格式化意味着无法进入系统<br><a id="more"></a></p>
<h1 id="系统环境"><a href="#系统环境" class="headerlink" title="系统环境"></a>系统环境</h1><p>Windows10 64<br>Linuxmint 64</p>
<p>双系统</p>
<p>Windows UEFI引导<br>Linux Grub2引导</p>
<p>sda1是我的Esp分区。被我格式化过</p>
<pre><code>sudo mkfs.vfat /dev/sda1
</code></pre><p>Linux的boot我是单独分区的，设备符为：/dev/sda5</p>
<h1 id="修复Linux-Grub2"><a href="#修复Linux-Grub2" class="headerlink" title="修复Linux Grub2"></a>修复Linux Grub2</h1><p>进入U盘进入live Linux</p>
<h2 id="方式一"><a href="#方式一" class="headerlink" title="方式一"></a>方式一</h2><p>从新安装grub2,</p>
<p>挂载esp分区：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo mkdir /mnt/esp </div><div class="line">sudo mount /dev/sda1 /mnt/esp</div></pre></td></tr></table></figure>
<p>挂载boot分区：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo mkdir /mnt/boot</div><div class="line">sudo mount /dev/sda5 /mnt/boot</div></pre></td></tr></table></figure>
<p><strong>Note:</strong> 这里为什么要挂载boot分区？</p>
<p>因为esp分区</p>
<p>grub-install的–boot-directory选项默认的是镜像安装位置为/boot/grub</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">--boot-directory=DIR   install GRUB images under the directory DIR/grub</div><div class="line">                       instead of the boot/grub directory</div></pre></td></tr></table></figure>
<p>为了追求与默认一致，其实也是为了以后更新方便，我们现在要在Live Linux下挂载你的boot分区，然后将Grub的镜像安装到硬盘上的Linux系统的/boot中。其实完全可以将Grub镜像安装到Esp分区中，我们在做U盘Grub时就是将镜像直接放到了Esp分区。</p>
<p>Esp分区只存放UEFI可以认识的efi程序，以及efi程序的字体文件等。</p>
<p>安装grub2:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo grub-install --target x86_64-efi --efi-directory /mnt/esp --boot-directory=/mnt/boot</div></pre></td></tr></table></figure>
<p>成功执行结果</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Installing for x86_64-efi platform.</div><div class="line">Installation finished. No error reported.</div></pre></td></tr></table></figure>
<p>错误信息类似于grub-install: error: /usr/lib/grub/x86_64-efi/modinfo.sh doesn’t exist. Please specify –target or –directory. 这样的话，就需要安装grub-pc或grub-efi之后再试。</p>
<pre><code>sudo apt-get install grub-efi -y
</code></pre><p><strong>note:</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">--efi-directory=DIR    use DIR as the EFI System Partition root</div></pre></td></tr></table></figure>
<p>生成grub.cfg</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo grub-mkconfig -o /mnt/boot/grub/grub.cfg</div></pre></td></tr></table></figure>
<p>这时候我们看一下esp分区中的内容：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">.</div><div class="line">└── EFI</div><div class="line">    └── ubuntu</div><div class="line">        └── grubx64.efi</div></pre></td></tr></table></figure>
<p>发现里面就只有一个grubx64.efi的文件。这个文件其实就是一个UEFI程序。在UEFI中可以识别这个程序，这个程序又引导CPU进入grub。那么这个程序是怎么找到Grub镜像的位置的呢？（有待查阅，这是不是意味着grub必须从新安装？方法2不可行？）</p>
<p>看看boot分区多了什么东西：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">grub</div><div class="line">├── fonts</div><div class="line">│   └── unicode.pf2</div><div class="line">├── grub.cfg</div><div class="line">├── grubenv</div><div class="line">├── locale</div><div class="line">│   ├── en_AU.mo</div><div class="line">│   ├── en_CA.mo</div><div class="line">│   ├── en_GB.mo</div><div class="line">│   └── en@quot.mo</div><div class="line">└── x86_64-efi</div><div class="line">    ├── acpi.mod</div><div class="line">    ├── adler32.mod</div><div class="line">    ├── affs.mod</div><div class="line">    ├── afs.mod</div><div class="line">    ├── ahci.mod</div><div class="line">    :</div><div class="line">    :</div><div class="line">    :</div><div class="line">    └── zfs.mod</div></pre></td></tr></table></figure>
<p>重启系统，在UEFI界面应该已经可以看到了grub的启动项。</p>
<p>启动着实进入了grub，也进入了Linux，但是进入的是emergency mode.</p>
<p>这让我百思不得其解，为什么无法进入图形界面？？？Google也没有找到答案，关键是系统没有提示有什么出错的地方。。。</p>
<p>Emergency下df -h发现有些不对的地方：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">jachin@jachin-Inspiron-5548 ~ $ df -h</div><div class="line">Filesystem      Size  Used Avail Use% Mounted on</div><div class="line">udev            3.9G     0  3.9G   0% /dev</div><div class="line">tmpfs           790M  1.5M  789M   1% /run</div><div class="line">/dev/sda7        19G   14G  4.2G  77% /</div><div class="line">tmpfs           3.9G   49M  3.9G   2% /dev/shm</div><div class="line">tmpfs           5.0M  4.0K  5.0M   1% /run/lock</div><div class="line">tmpfs           3.9G     0  3.9G   0% /sys/fs/cgroup</div><div class="line">/dev/sda5       180M  129M   39M  77% /boot</div><div class="line">cgmfs           100K     0  100K   0% /run/cgmanager/fs</div><div class="line">tmpfs           790M   36K  790M   1% /run/user/1000</div></pre></td></tr></table></figure></p>
<p>什么情况efi分区没挂载上。</p>
<p>问题解决：最后发现是/etc/fstab出了问题。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"># /etc/fstab: static file system information.</div><div class="line">#</div><div class="line"># Use &apos;blkid&apos; to print the universally unique identifier for a</div><div class="line"># device; this may be used with UUID= as a more robust way to name devices</div><div class="line"># that works even if disks are added and removed. See fstab(5).</div><div class="line">#</div><div class="line"># &lt;file system&gt; &lt;mount point&gt;   &lt;type&gt;  &lt;options&gt;       &lt;dump&gt;  &lt;pass&gt;</div><div class="line"># / was on /dev/sda7 during installation</div><div class="line">UUID=29fb7aca-a39d-485e-bcb2-4188ae03b085 /               ext4    errors=remount-ro 0       1</div><div class="line"># /boot was on /dev/sda5 during installation</div><div class="line">UUID=d5151999-209d-4a90-95f4-e4e70ab02ac7 /boot           ext4    defaults        0       2</div><div class="line"># /boot/efi was on /dev/sda1 during installation</div><div class="line">UUID=B178-A3FF  /boot/efi       vfat    umask=0077      0       1</div><div class="line"># swap was on /dev/sda6 during installation</div><div class="line">UUID=b6f30e1d-84b0-4b23-862c-82cb12773a4f none            swap    sw              0       0</div></pre></td></tr></table></figure>
<p><code>blkid</code>发现esp分区的UUID竟然与fstab中的不一样。推测是格式化会改变分区的UUID（有待查阅资料）so，把这里的UUID改了之后问题解决。成功进入Linux。</p>
<h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><p>直接拷贝一个grubx64.efi文件,到Esp分区中。</p>
<p>没有测试，不知道行不行。</p>
<h1 id="修复Windows-引导"><a href="#修复Windows-引导" class="headerlink" title="修复Windows 引导"></a>修复Windows 引导</h1><p>很简单，进入PE</p>
<p>执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">bcdboot c:\windows /s g: /f UEFI</div></pre></td></tr></table></figure></p>
<p>c:为Windows安装的盘符，g：为Esp分区的盘符。Esp分区盘符可以在Diskgens下查看。</p>
<p><code>/f UEFI</code>选项尽量加上吧，我的不加没有成功哦。</p>
<p>到此位置你的Windows已经可以启动了。</p>
<p>查看一下上面的命令都干了什么事,可以看到esp分区中只有一个目录：EFI</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line">EFI</div><div class="line">├── Boot</div><div class="line">│   └── bootx64.efi</div><div class="line">├── Microsoft</div><div class="line">│   ├── Boot</div><div class="line">│   │   ├── BCD</div><div class="line">│   │   ├── BCD.LOG</div><div class="line">│   │   ├── BCD.LOG1</div><div class="line">│   │   ├── BCD.LOG2</div><div class="line">│   │   ├── bg-BG</div><div class="line">│   │   │   ├── bootmgfw.efi.mui</div><div class="line">│   │   │   └── bootmgr.efi.mui</div><div class="line">│   │   ├── bootmgfw.efi</div><div class="line">│   │   ├── bootmgr.efi</div><div class="line">│   │   ├── BOOTSTAT.DAT</div><div class="line">│   │   ├── boot.stl</div><div class="line">│   │   ├── cs-CZ  语言文件</div><div class="line">│   │   │   ├── bootmgfw.efi.mui</div><div class="line">│   │   │   ├── bootmgr.efi.mui</div><div class="line">│   │   │   └── memtest.efi.mui</div><div class="line">│   │   ├── en-GB</div><div class="line">│   │   │   ├── bootmgfw.efi.mui</div><div class="line">│   │   │   └── bootmgr.efi.mui</div><div class="line">│   │   ├── en-US</div><div class="line">│   │   │   ├── bootmgfw.efi.mui</div><div class="line">│   │   │   ├── bootmgr.efi.mui</div><div class="line">│   │   │   └── memtest.efi.mui</div><div class="line">|   |   : </div><div class="line">|   |   : </div><div class="line">│   │   ├── zh-CN</div><div class="line">│   │   │   ├── bootmgfw.efi.mui</div><div class="line">│   │   │   ├── bootmgr.efi.mui</div><div class="line">│   │   │   └── memtest.efi.mui</div><div class="line">│   │   ├── Fonts  字体文件</div><div class="line">│   │   │   ├── chs_boot.ttf</div><div class="line">│   │   │   :</div><div class="line">│   │   │   :</div><div class="line">│   │   │   └── wgl4_boot.ttf</div><div class="line">│   │   ├── kd_02_10df.dll</div><div class="line">│   │   :</div><div class="line">│   │   :</div><div class="line">│   │   ├── kdstub.dll</div><div class="line">│   │   ├── memtest.efi</div><div class="line">│   │   ├── qps-ploc</div><div class="line">│   │   │   └── memtest.efi.mui</div><div class="line">│   │   └── Resources</div><div class="line">│   │       ├── bootres.dll</div><div class="line">│   │       ├── en-US</div><div class="line">│   │       │   └── bootres.dll.mui</div><div class="line">│   │       └── zh-CN</div><div class="line">│   │           └── bootres.dll.mui</div><div class="line">│   └── Recovery</div><div class="line">│       ├── BCD</div><div class="line">│       ├── BCD.LOG</div><div class="line">│       ├── BCD.LOG1</div><div class="line">│       └── BCD.LOG2</div><div class="line">└── ubuntu</div><div class="line">    └── grubx64.efi</div></pre></td></tr></table></figure>
<p>windows引导有几类文件：<br>efi文件memtest.efi bootmgr.efi bootmgfw.efi /Boot/bootmgfw.efi<br>字体文件 *.ttf<br>语言文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">zh-CN</div><div class="line">├── bootmgfw.efi.mui</div><div class="line">├── bootmgr.efi.mui</div><div class="line">└── memtest.efi.mui</div></pre></td></tr></table></figure></p>
<p>BCD文件 BCD引导修复这个是最重要的其他的那些文件都可以拷贝，这个不可以。所以前面的命令bcdboot主要任务就是修复这个BCD文件。当然还有其他的修复方式。</p>
<h1 id="Other-things"><a href="#Other-things" class="headerlink" title="Other things"></a>Other things</h1><p>现在系统都可以完美启动了，但是还有些不完没就是Grub的引导中没有Windows item。<br>进入Lilnux<br>执行   <code>update-grub2</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">jachin-Inspiron-5548 boot # update-grub2</div><div class="line">Generating grub configuration file ...</div><div class="line">Found linux image: /boot/vmlinuz-4.4.0-77-generic</div><div class="line">Found initrd image: /boot/initrd.img-4.4.0-77-generic</div><div class="line">Found linux image: /boot/vmlinuz-4.4.0-75-generic</div><div class="line">Found initrd image: /boot/initrd.img-4.4.0-75-generic</div><div class="line">Found Windows Boot Manager on /dev/sda1@/EFI/Microsoft/Boot/bootmgfw.efi</div><div class="line">Adding boot menu entry for EFI firmware configuration</div><div class="line">done</div></pre></td></tr></table></figure>
<p>okay,现在Grub的menu中已经有Windows选项了，到此完美修复。</p>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Grub2 Linux Windows </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[stm32f1xx.h]]></title>
      <url>https://ygcaicn.github.io/%E5%B5%8C%E5%85%A5%E5%BC%8F/stm32f1xx-h.html</url>
      <content type="html"><![CDATA[<h2 id="stm32f10x-h"><a href="#stm32f10x-h" class="headerlink" title="stm32f10x.h"></a>stm32f10x.h</h2><a id="more"></a>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div><div class="line">304</div><div class="line">305</div><div class="line">306</div><div class="line">307</div><div class="line">308</div><div class="line">309</div><div class="line">310</div><div class="line">311</div><div class="line">312</div><div class="line">313</div><div class="line">314</div><div class="line">315</div><div class="line">316</div><div class="line">317</div><div class="line">318</div><div class="line">319</div><div class="line">320</div><div class="line">321</div><div class="line">322</div><div class="line">323</div><div class="line">324</div><div class="line">325</div><div class="line">326</div><div class="line">327</div><div class="line">328</div><div class="line">329</div><div class="line">330</div><div class="line">331</div><div class="line">332</div><div class="line">333</div><div class="line">334</div><div class="line">335</div><div class="line">336</div><div class="line">337</div><div class="line">338</div><div class="line">339</div><div class="line">340</div><div class="line">341</div><div class="line">342</div><div class="line">343</div><div class="line">344</div><div class="line">345</div><div class="line">346</div><div class="line">347</div><div class="line">348</div><div class="line">349</div><div class="line">350</div><div class="line">351</div><div class="line">352</div><div class="line">353</div><div class="line">354</div><div class="line">355</div><div class="line">356</div><div class="line">357</div><div class="line">358</div><div class="line">359</div><div class="line">360</div><div class="line">361</div><div class="line">362</div><div class="line">363</div><div class="line">364</div><div class="line">365</div><div class="line">366</div><div class="line">367</div><div class="line">368</div><div class="line">369</div><div class="line">370</div><div class="line">371</div><div class="line">372</div><div class="line">373</div><div class="line">374</div><div class="line">375</div><div class="line">376</div><div class="line">377</div><div class="line">378</div><div class="line">379</div><div class="line">380</div><div class="line">381</div><div class="line">382</div><div class="line">383</div><div class="line">384</div><div class="line">385</div><div class="line">386</div><div class="line">387</div><div class="line">388</div><div class="line">389</div><div class="line">390</div><div class="line">391</div><div class="line">392</div><div class="line">393</div><div class="line">394</div><div class="line">395</div><div class="line">396</div><div class="line">397</div><div class="line">398</div><div class="line">399</div><div class="line">400</div><div class="line">401</div><div class="line">402</div><div class="line">403</div><div class="line">404</div><div class="line">405</div><div class="line">406</div><div class="line">407</div><div class="line">408</div><div class="line">409</div><div class="line">410</div><div class="line">411</div><div class="line">412</div><div class="line">413</div><div class="line">414</div><div class="line">415</div><div class="line">416</div><div class="line">417</div><div class="line">418</div><div class="line">419</div><div class="line">420</div><div class="line">421</div><div class="line">422</div><div class="line">423</div><div class="line">424</div><div class="line">425</div><div class="line">426</div><div class="line">427</div><div class="line">428</div><div class="line">429</div><div class="line">430</div><div class="line">431</div><div class="line">432</div><div class="line">433</div><div class="line">434</div><div class="line">435</div><div class="line">436</div><div class="line">437</div><div class="line">438</div><div class="line">439</div><div class="line">440</div><div class="line">441</div><div class="line">442</div><div class="line">443</div><div class="line">444</div><div class="line">445</div><div class="line">446</div><div class="line">447</div><div class="line">448</div><div class="line">449</div><div class="line">450</div><div class="line">451</div><div class="line">452</div><div class="line">453</div><div class="line">454</div><div class="line">455</div><div class="line">456</div><div class="line">457</div><div class="line">458</div><div class="line">459</div><div class="line">460</div><div class="line">461</div><div class="line">462</div><div class="line">463</div><div class="line">464</div><div class="line">465</div><div class="line">466</div><div class="line">467</div><div class="line">468</div><div class="line">469</div><div class="line">470</div><div class="line">471</div><div class="line">472</div><div class="line">473</div><div class="line">474</div><div class="line">475</div><div class="line">476</div><div class="line">477</div><div class="line">478</div><div class="line">479</div><div class="line">480</div><div class="line">481</div><div class="line">482</div><div class="line">483</div><div class="line">484</div><div class="line">485</div><div class="line">486</div><div class="line">487</div><div class="line">488</div><div class="line">489</div><div class="line">490</div><div class="line">491</div><div class="line">492</div><div class="line">493</div><div class="line">494</div><div class="line">495</div><div class="line">496</div><div class="line">497</div><div class="line">498</div><div class="line">499</div><div class="line">500</div><div class="line">501</div><div class="line">502</div><div class="line">503</div><div class="line">504</div><div class="line">505</div><div class="line">506</div><div class="line">507</div><div class="line">508</div><div class="line">509</div><div class="line">510</div><div class="line">511</div><div class="line">512</div><div class="line">513</div><div class="line">514</div><div class="line">515</div><div class="line">516</div><div class="line">517</div><div class="line">518</div><div class="line">519</div><div class="line">520</div><div class="line">521</div><div class="line">522</div><div class="line">523</div><div class="line">524</div><div class="line">525</div><div class="line">526</div><div class="line">527</div><div class="line">528</div><div class="line">529</div><div class="line">530</div><div class="line">531</div><div class="line">532</div><div class="line">533</div><div class="line">534</div><div class="line">535</div><div class="line">536</div><div class="line">537</div><div class="line">538</div><div class="line">539</div><div class="line">540</div><div class="line">541</div><div class="line">542</div><div class="line">543</div><div class="line">544</div><div class="line">545</div><div class="line">546</div><div class="line">547</div><div class="line">548</div><div class="line">549</div><div class="line">550</div><div class="line">551</div><div class="line">552</div><div class="line">553</div><div class="line">554</div><div class="line">555</div><div class="line">556</div><div class="line">557</div><div class="line">558</div><div class="line">559</div><div class="line">560</div><div class="line">561</div><div class="line">562</div><div class="line">563</div><div class="line">564</div><div class="line">565</div><div class="line">566</div><div class="line">567</div><div class="line">568</div><div class="line">569</div><div class="line">570</div><div class="line">571</div><div class="line">572</div><div class="line">573</div><div class="line">574</div><div class="line">575</div><div class="line">576</div><div class="line">577</div><div class="line">578</div><div class="line">579</div><div class="line">580</div><div class="line">581</div><div class="line">582</div><div class="line">583</div><div class="line">584</div><div class="line">585</div><div class="line">586</div><div class="line">587</div><div class="line">588</div><div class="line">589</div><div class="line">590</div><div class="line">591</div><div class="line">592</div><div class="line">593</div><div class="line">594</div><div class="line">595</div><div class="line">596</div><div class="line">597</div><div class="line">598</div><div class="line">599</div><div class="line">600</div><div class="line">601</div><div class="line">602</div><div class="line">603</div><div class="line">604</div><div class="line">605</div><div class="line">606</div><div class="line">607</div><div class="line">608</div><div class="line">609</div><div class="line">610</div><div class="line">611</div><div class="line">612</div><div class="line">613</div><div class="line">614</div><div class="line">615</div><div class="line">616</div><div class="line">617</div><div class="line">618</div><div class="line">619</div><div class="line">620</div><div class="line">621</div><div class="line">622</div><div class="line">623</div><div class="line">624</div><div class="line">625</div><div class="line">626</div><div class="line">627</div><div class="line">628</div><div class="line">629</div><div class="line">630</div><div class="line">631</div><div class="line">632</div><div class="line">633</div><div class="line">634</div><div class="line">635</div><div class="line">636</div><div class="line">637</div><div class="line">638</div><div class="line">639</div><div class="line">640</div><div class="line">641</div><div class="line">642</div><div class="line">643</div><div class="line">644</div><div class="line">645</div><div class="line">646</div><div class="line">647</div><div class="line">648</div><div class="line">649</div><div class="line">650</div><div class="line">651</div><div class="line">652</div><div class="line">653</div><div class="line">654</div><div class="line">655</div><div class="line">656</div><div class="line">657</div><div class="line">658</div><div class="line">659</div><div class="line">660</div><div class="line">661</div><div class="line">662</div><div class="line">663</div><div class="line">664</div><div class="line">665</div><div class="line">666</div><div class="line">667</div><div class="line">668</div><div class="line">669</div><div class="line">670</div><div class="line">671</div><div class="line">672</div><div class="line">673</div><div class="line">674</div><div class="line">675</div><div class="line">676</div><div class="line">677</div><div class="line">678</div><div class="line">679</div><div class="line">680</div><div class="line">681</div><div class="line">682</div><div class="line">683</div><div class="line">684</div><div class="line">685</div><div class="line">686</div><div class="line">687</div><div class="line">688</div><div class="line">689</div><div class="line">690</div><div class="line">691</div><div class="line">692</div><div class="line">693</div><div class="line">694</div><div class="line">695</div><div class="line">696</div><div class="line">697</div><div class="line">698</div><div class="line">699</div><div class="line">700</div><div class="line">701</div><div class="line">702</div><div class="line">703</div><div class="line">704</div><div class="line">705</div><div class="line">706</div><div class="line">707</div><div class="line">708</div><div class="line">709</div><div class="line">710</div><div class="line">711</div><div class="line">712</div><div class="line">713</div><div class="line">714</div><div class="line">715</div><div class="line">716</div><div class="line">717</div><div class="line">718</div><div class="line">719</div><div class="line">720</div><div class="line">721</div><div class="line">722</div><div class="line">723</div><div class="line">724</div><div class="line">725</div><div class="line">726</div><div class="line">727</div><div class="line">728</div><div class="line">729</div><div class="line">730</div><div class="line">731</div><div class="line">732</div><div class="line">733</div><div class="line">734</div><div class="line">735</div><div class="line">736</div><div class="line">737</div><div class="line">738</div><div class="line">739</div><div class="line">740</div><div class="line">741</div><div class="line">742</div><div class="line">743</div><div class="line">744</div><div class="line">745</div><div class="line">746</div><div class="line">747</div><div class="line">748</div><div class="line">749</div><div class="line">750</div><div class="line">751</div><div class="line">752</div><div class="line">753</div><div class="line">754</div><div class="line">755</div><div class="line">756</div><div class="line">757</div><div class="line">758</div><div class="line">759</div><div class="line">760</div><div class="line">761</div><div class="line">762</div><div class="line">763</div><div class="line">764</div><div class="line">765</div><div class="line">766</div><div class="line">767</div><div class="line">768</div><div class="line">769</div><div class="line">770</div><div class="line">771</div><div class="line">772</div><div class="line">773</div><div class="line">774</div><div class="line">775</div><div class="line">776</div><div class="line">777</div><div class="line">778</div><div class="line">779</div><div class="line">780</div><div class="line">781</div><div class="line">782</div><div class="line">783</div><div class="line">784</div><div class="line">785</div><div class="line">786</div><div class="line">787</div><div class="line">788</div><div class="line">789</div><div class="line">790</div><div class="line">791</div><div class="line">792</div><div class="line">793</div><div class="line">794</div><div class="line">795</div><div class="line">796</div><div class="line">797</div><div class="line">798</div><div class="line">799</div><div class="line">800</div><div class="line">801</div><div class="line">802</div><div class="line">803</div><div class="line">804</div><div class="line">805</div><div class="line">806</div><div class="line">807</div><div class="line">808</div><div class="line">809</div><div class="line">810</div><div class="line">811</div><div class="line">812</div><div class="line">813</div><div class="line">814</div><div class="line">815</div><div class="line">816</div><div class="line">817</div><div class="line">818</div><div class="line">819</div><div class="line">820</div><div class="line">821</div><div class="line">822</div><div class="line">823</div><div class="line">824</div><div class="line">825</div><div class="line">826</div><div class="line">827</div><div class="line">828</div><div class="line">829</div><div class="line">830</div><div class="line">831</div><div class="line">832</div><div class="line">833</div><div class="line">834</div><div class="line">835</div><div class="line">836</div><div class="line">837</div><div class="line">838</div><div class="line">839</div><div class="line">840</div><div class="line">841</div><div class="line">842</div><div class="line">843</div><div class="line">844</div><div class="line">845</div><div class="line">846</div><div class="line">847</div><div class="line">848</div><div class="line">849</div><div class="line">850</div><div class="line">851</div><div class="line">852</div><div class="line">853</div><div class="line">854</div><div class="line">855</div><div class="line">856</div><div class="line">857</div><div class="line">858</div><div class="line">859</div><div class="line">860</div><div class="line">861</div><div class="line">862</div><div class="line">863</div><div class="line">864</div><div class="line">865</div><div class="line">866</div><div class="line">867</div><div class="line">868</div><div class="line">869</div><div class="line">870</div><div class="line">871</div><div class="line">872</div><div class="line">873</div><div class="line">874</div><div class="line">875</div><div class="line">876</div><div class="line">877</div><div class="line">878</div><div class="line">879</div><div class="line">880</div><div class="line">881</div><div class="line">882</div><div class="line">883</div><div class="line">884</div><div class="line">885</div><div class="line">886</div><div class="line">887</div><div class="line">888</div><div class="line">889</div><div class="line">890</div><div class="line">891</div><div class="line">892</div><div class="line">893</div><div class="line">894</div><div class="line">895</div><div class="line">896</div><div class="line">897</div><div class="line">898</div><div class="line">899</div><div class="line">900</div><div class="line">901</div><div class="line">902</div><div class="line">903</div><div class="line">904</div><div class="line">905</div><div class="line">906</div><div class="line">907</div><div class="line">908</div><div class="line">909</div><div class="line">910</div><div class="line">911</div><div class="line">912</div><div class="line">913</div><div class="line">914</div><div class="line">915</div><div class="line">916</div><div class="line">917</div><div class="line">918</div><div class="line">919</div><div class="line">920</div><div class="line">921</div><div class="line">922</div><div class="line">923</div><div class="line">924</div><div class="line">925</div><div class="line">926</div><div class="line">927</div><div class="line">928</div><div class="line">929</div><div class="line">930</div><div class="line">931</div><div class="line">932</div><div class="line">933</div><div class="line">934</div><div class="line">935</div><div class="line">936</div><div class="line">937</div><div class="line">938</div><div class="line">939</div><div class="line">940</div><div class="line">941</div><div class="line">942</div><div class="line">943</div><div class="line">944</div><div class="line">945</div><div class="line">946</div><div class="line">947</div><div class="line">948</div><div class="line">949</div><div class="line">950</div><div class="line">951</div><div class="line">952</div><div class="line">953</div><div class="line">954</div><div class="line">955</div><div class="line">956</div><div class="line">957</div><div class="line">958</div><div class="line">959</div><div class="line">960</div><div class="line">961</div><div class="line">962</div><div class="line">963</div><div class="line">964</div><div class="line">965</div><div class="line">966</div><div class="line">967</div><div class="line">968</div><div class="line">969</div><div class="line">970</div><div class="line">971</div><div class="line">972</div><div class="line">973</div><div class="line">974</div><div class="line">975</div><div class="line">976</div><div class="line">977</div><div class="line">978</div><div class="line">979</div><div class="line">980</div><div class="line">981</div><div class="line">982</div><div class="line">983</div><div class="line">984</div><div class="line">985</div><div class="line">986</div><div class="line">987</div><div class="line">988</div><div class="line">989</div><div class="line">990</div><div class="line">991</div><div class="line">992</div><div class="line">993</div><div class="line">994</div><div class="line">995</div><div class="line">996</div><div class="line">997</div><div class="line">998</div><div class="line">999</div><div class="line">1000</div><div class="line">1001</div><div class="line">1002</div><div class="line">1003</div><div class="line">1004</div><div class="line">1005</div><div class="line">1006</div><div class="line">1007</div><div class="line">1008</div><div class="line">1009</div><div class="line">1010</div><div class="line">1011</div><div class="line">1012</div><div class="line">1013</div><div class="line">1014</div><div class="line">1015</div><div class="line">1016</div><div class="line">1017</div><div class="line">1018</div><div class="line">1019</div><div class="line">1020</div><div class="line">1021</div><div class="line">1022</div><div class="line">1023</div><div class="line">1024</div><div class="line">1025</div><div class="line">1026</div><div class="line">1027</div><div class="line">1028</div><div class="line">1029</div><div class="line">1030</div><div class="line">1031</div><div class="line">1032</div><div class="line">1033</div><div class="line">1034</div><div class="line">1035</div><div class="line">1036</div><div class="line">1037</div><div class="line">1038</div><div class="line">1039</div><div class="line">1040</div><div class="line">1041</div><div class="line">1042</div><div class="line">1043</div><div class="line">1044</div><div class="line">1045</div><div class="line">1046</div><div class="line">1047</div><div class="line">1048</div><div class="line">1049</div><div class="line">1050</div><div class="line">1051</div><div class="line">1052</div><div class="line">1053</div><div class="line">1054</div><div class="line">1055</div><div class="line">1056</div><div class="line">1057</div><div class="line">1058</div><div class="line">1059</div><div class="line">1060</div><div class="line">1061</div><div class="line">1062</div><div class="line">1063</div><div class="line">1064</div><div class="line">1065</div><div class="line">1066</div><div class="line">1067</div><div class="line">1068</div><div class="line">1069</div><div class="line">1070</div><div class="line">1071</div><div class="line">1072</div><div class="line">1073</div><div class="line">1074</div><div class="line">1075</div><div class="line">1076</div><div class="line">1077</div><div class="line">1078</div><div class="line">1079</div><div class="line">1080</div><div class="line">1081</div><div class="line">1082</div><div class="line">1083</div><div class="line">1084</div><div class="line">1085</div><div class="line">1086</div><div class="line">1087</div><div class="line">1088</div><div class="line">1089</div><div class="line">1090</div><div class="line">1091</div><div class="line">1092</div><div class="line">1093</div><div class="line">1094</div><div class="line">1095</div><div class="line">1096</div><div class="line">1097</div><div class="line">1098</div><div class="line">1099</div><div class="line">1100</div><div class="line">1101</div><div class="line">1102</div><div class="line">1103</div><div class="line">1104</div><div class="line">1105</div><div class="line">1106</div><div class="line">1107</div><div class="line">1108</div><div class="line">1109</div><div class="line">1110</div><div class="line">1111</div><div class="line">1112</div><div class="line">1113</div><div class="line">1114</div><div class="line">1115</div><div class="line">1116</div><div class="line">1117</div><div class="line">1118</div><div class="line">1119</div><div class="line">1120</div><div class="line">1121</div><div class="line">1122</div><div class="line">1123</div><div class="line">1124</div><div class="line">1125</div><div class="line">1126</div><div class="line">1127</div><div class="line">1128</div><div class="line">1129</div><div class="line">1130</div><div class="line">1131</div><div class="line">1132</div><div class="line">1133</div><div class="line">1134</div><div class="line">1135</div><div class="line">1136</div><div class="line">1137</div><div class="line">1138</div><div class="line">1139</div><div class="line">1140</div><div class="line">1141</div><div class="line">1142</div><div class="line">1143</div><div class="line">1144</div><div class="line">1145</div><div class="line">1146</div><div class="line">1147</div><div class="line">1148</div><div class="line">1149</div><div class="line">1150</div><div class="line">1151</div><div class="line">1152</div><div class="line">1153</div><div class="line">1154</div><div class="line">1155</div><div class="line">1156</div><div class="line">1157</div><div class="line">1158</div><div class="line">1159</div><div class="line">1160</div><div class="line">1161</div><div class="line">1162</div><div class="line">1163</div><div class="line">1164</div><div class="line">1165</div><div class="line">1166</div><div class="line">1167</div><div class="line">1168</div><div class="line">1169</div><div class="line">1170</div><div class="line">1171</div><div class="line">1172</div><div class="line">1173</div><div class="line">1174</div><div class="line">1175</div><div class="line">1176</div><div class="line">1177</div><div class="line">1178</div><div class="line">1179</div><div class="line">1180</div><div class="line">1181</div><div class="line">1182</div><div class="line">1183</div><div class="line">1184</div><div class="line">1185</div><div class="line">1186</div><div class="line">1187</div><div class="line">1188</div><div class="line">1189</div><div class="line">1190</div><div class="line">1191</div><div class="line">1192</div><div class="line">1193</div><div class="line">1194</div><div class="line">1195</div><div class="line">1196</div><div class="line">1197</div><div class="line">1198</div><div class="line">1199</div><div class="line">1200</div><div class="line">1201</div><div class="line">1202</div><div class="line">1203</div><div class="line">1204</div><div class="line">1205</div><div class="line">1206</div><div class="line">1207</div><div class="line">1208</div><div class="line">1209</div><div class="line">1210</div><div class="line">1211</div><div class="line">1212</div><div class="line">1213</div><div class="line">1214</div><div class="line">1215</div><div class="line">1216</div><div class="line">1217</div><div class="line">1218</div><div class="line">1219</div><div class="line">1220</div><div class="line">1221</div><div class="line">1222</div><div class="line">1223</div><div class="line">1224</div><div class="line">1225</div><div class="line">1226</div><div class="line">1227</div><div class="line">1228</div><div class="line">1229</div><div class="line">1230</div><div class="line">1231</div><div class="line">1232</div><div class="line">1233</div><div class="line">1234</div><div class="line">1235</div><div class="line">1236</div><div class="line">1237</div><div class="line">1238</div><div class="line">1239</div><div class="line">1240</div><div class="line">1241</div><div class="line">1242</div><div class="line">1243</div><div class="line">1244</div><div class="line">1245</div><div class="line">1246</div><div class="line">1247</div><div class="line">1248</div><div class="line">1249</div><div class="line">1250</div><div class="line">1251</div><div class="line">1252</div><div class="line">1253</div><div class="line">1254</div><div class="line">1255</div><div class="line">1256</div><div class="line">1257</div><div class="line">1258</div><div class="line">1259</div><div class="line">1260</div><div class="line">1261</div><div class="line">1262</div><div class="line">1263</div><div class="line">1264</div><div class="line">1265</div><div class="line">1266</div><div class="line">1267</div><div class="line">1268</div><div class="line">1269</div><div class="line">1270</div><div class="line">1271</div><div class="line">1272</div><div class="line">1273</div><div class="line">1274</div><div class="line">1275</div><div class="line">1276</div><div class="line">1277</div><div class="line">1278</div><div class="line">1279</div><div class="line">1280</div><div class="line">1281</div><div class="line">1282</div><div class="line">1283</div><div class="line">1284</div><div class="line">1285</div><div class="line">1286</div><div class="line">1287</div><div class="line">1288</div><div class="line">1289</div><div class="line">1290</div><div class="line">1291</div><div class="line">1292</div><div class="line">1293</div><div class="line">1294</div><div class="line">1295</div><div class="line">1296</div><div class="line">1297</div><div class="line">1298</div><div class="line">1299</div><div class="line">1300</div><div class="line">1301</div><div class="line">1302</div><div class="line">1303</div><div class="line">1304</div><div class="line">1305</div><div class="line">1306</div><div class="line">1307</div><div class="line">1308</div><div class="line">1309</div><div class="line">1310</div><div class="line">1311</div><div class="line">1312</div><div class="line">1313</div><div class="line">1314</div><div class="line">1315</div><div class="line">1316</div><div class="line">1317</div><div class="line">1318</div><div class="line">1319</div><div class="line">1320</div><div class="line">1321</div><div class="line">1322</div><div class="line">1323</div><div class="line">1324</div><div class="line">1325</div><div class="line">1326</div><div class="line">1327</div><div class="line">1328</div><div class="line">1329</div><div class="line">1330</div><div class="line">1331</div><div class="line">1332</div><div class="line">1333</div><div class="line">1334</div><div class="line">1335</div><div class="line">1336</div><div class="line">1337</div><div class="line">1338</div><div class="line">1339</div><div class="line">1340</div><div class="line">1341</div><div class="line">1342</div><div class="line">1343</div><div class="line">1344</div><div class="line">1345</div><div class="line">1346</div><div class="line">1347</div><div class="line">1348</div><div class="line">1349</div><div class="line">1350</div><div class="line">1351</div><div class="line">1352</div><div class="line">1353</div><div class="line">1354</div><div class="line">1355</div><div class="line">1356</div><div class="line">1357</div><div class="line">1358</div><div class="line">1359</div><div class="line">1360</div><div class="line">1361</div><div class="line">1362</div><div class="line">1363</div><div class="line">1364</div><div class="line">1365</div><div class="line">1366</div><div class="line">1367</div><div class="line">1368</div><div class="line">1369</div><div class="line">1370</div><div class="line">1371</div><div class="line">1372</div><div class="line">1373</div><div class="line">1374</div><div class="line">1375</div><div class="line">1376</div><div class="line">1377</div><div class="line">1378</div><div class="line">1379</div><div class="line">1380</div><div class="line">1381</div><div class="line">1382</div><div class="line">1383</div><div class="line">1384</div><div class="line">1385</div><div class="line">1386</div><div class="line">1387</div><div class="line">1388</div><div class="line">1389</div><div class="line">1390</div><div class="line">1391</div><div class="line">1392</div><div class="line">1393</div><div class="line">1394</div><div class="line">1395</div><div class="line">1396</div><div class="line">1397</div><div class="line">1398</div><div class="line">1399</div><div class="line">1400</div><div class="line">1401</div><div class="line">1402</div><div class="line">1403</div><div class="line">1404</div><div class="line">1405</div><div class="line">1406</div><div class="line">1407</div><div class="line">1408</div><div class="line">1409</div><div class="line">1410</div><div class="line">1411</div><div class="line">1412</div><div class="line">1413</div><div class="line">1414</div><div class="line">1415</div><div class="line">1416</div><div class="line">1417</div><div class="line">1418</div><div class="line">1419</div><div class="line">1420</div><div class="line">1421</div><div class="line">1422</div><div class="line">1423</div><div class="line">1424</div><div class="line">1425</div><div class="line">1426</div><div class="line">1427</div><div class="line">1428</div><div class="line">1429</div><div class="line">1430</div><div class="line">1431</div><div class="line">1432</div><div class="line">1433</div><div class="line">1434</div><div class="line">1435</div><div class="line">1436</div><div class="line">1437</div><div class="line">1438</div><div class="line">1439</div><div class="line">1440</div><div class="line">1441</div><div class="line">1442</div><div class="line">1443</div><div class="line">1444</div><div class="line">1445</div><div class="line">1446</div><div class="line">1447</div><div class="line">1448</div><div class="line">1449</div><div class="line">1450</div><div class="line">1451</div><div class="line">1452</div><div class="line">1453</div><div class="line">1454</div><div class="line">1455</div><div class="line">1456</div><div class="line">1457</div><div class="line">1458</div><div class="line">1459</div><div class="line">1460</div><div class="line">1461</div><div class="line">1462</div><div class="line">1463</div><div class="line">1464</div><div class="line">1465</div><div class="line">1466</div><div class="line">1467</div><div class="line">1468</div><div class="line">1469</div><div class="line">1470</div><div class="line">1471</div><div class="line">1472</div><div class="line">1473</div><div class="line">1474</div><div class="line">1475</div><div class="line">1476</div><div class="line">1477</div><div class="line">1478</div><div class="line">1479</div><div class="line">1480</div><div class="line">1481</div><div class="line">1482</div><div class="line">1483</div><div class="line">1484</div><div class="line">1485</div><div class="line">1486</div><div class="line">1487</div><div class="line">1488</div><div class="line">1489</div><div class="line">1490</div><div class="line">1491</div><div class="line">1492</div><div class="line">1493</div><div class="line">1494</div><div class="line">1495</div><div class="line">1496</div><div class="line">1497</div><div class="line">1498</div><div class="line">1499</div><div class="line">1500</div><div class="line">1501</div><div class="line">1502</div><div class="line">1503</div><div class="line">1504</div><div class="line">1505</div><div class="line">1506</div><div class="line">1507</div><div class="line">1508</div><div class="line">1509</div><div class="line">1510</div><div class="line">1511</div><div class="line">1512</div><div class="line">1513</div><div class="line">1514</div><div class="line">1515</div><div class="line">1516</div><div class="line">1517</div><div class="line">1518</div><div class="line">1519</div><div class="line">1520</div><div class="line">1521</div><div class="line">1522</div><div class="line">1523</div><div class="line">1524</div><div class="line">1525</div><div class="line">1526</div><div class="line">1527</div><div class="line">1528</div><div class="line">1529</div><div class="line">1530</div><div class="line">1531</div><div class="line">1532</div><div class="line">1533</div><div class="line">1534</div><div class="line">1535</div><div class="line">1536</div><div class="line">1537</div><div class="line">1538</div><div class="line">1539</div><div class="line">1540</div><div class="line">1541</div><div class="line">1542</div><div class="line">1543</div><div class="line">1544</div><div class="line">1545</div><div class="line">1546</div><div class="line">1547</div><div class="line">1548</div><div class="line">1549</div><div class="line">1550</div><div class="line">1551</div><div class="line">1552</div><div class="line">1553</div><div class="line">1554</div><div class="line">1555</div><div class="line">1556</div><div class="line">1557</div><div class="line">1558</div><div class="line">1559</div><div class="line">1560</div><div class="line">1561</div><div class="line">1562</div><div class="line">1563</div><div class="line">1564</div><div class="line">1565</div><div class="line">1566</div><div class="line">1567</div><div class="line">1568</div><div class="line">1569</div><div class="line">1570</div><div class="line">1571</div><div class="line">1572</div><div class="line">1573</div><div class="line">1574</div><div class="line">1575</div><div class="line">1576</div><div class="line">1577</div><div class="line">1578</div><div class="line">1579</div><div class="line">1580</div><div class="line">1581</div><div class="line">1582</div><div class="line">1583</div><div class="line">1584</div><div class="line">1585</div><div class="line">1586</div><div class="line">1587</div><div class="line">1588</div><div class="line">1589</div><div class="line">1590</div><div class="line">1591</div><div class="line">1592</div><div class="line">1593</div><div class="line">1594</div><div class="line">1595</div><div class="line">1596</div><div class="line">1597</div><div class="line">1598</div><div class="line">1599</div><div class="line">1600</div><div class="line">1601</div><div class="line">1602</div><div class="line">1603</div><div class="line">1604</div><div class="line">1605</div><div class="line">1606</div><div class="line">1607</div><div class="line">1608</div><div class="line">1609</div><div class="line">1610</div><div class="line">1611</div><div class="line">1612</div><div class="line">1613</div><div class="line">1614</div><div class="line">1615</div><div class="line">1616</div><div class="line">1617</div><div class="line">1618</div><div class="line">1619</div><div class="line">1620</div><div class="line">1621</div><div class="line">1622</div><div class="line">1623</div><div class="line">1624</div><div class="line">1625</div><div class="line">1626</div><div class="line">1627</div><div class="line">1628</div><div class="line">1629</div><div class="line">1630</div><div class="line">1631</div><div class="line">1632</div><div class="line">1633</div><div class="line">1634</div><div class="line">1635</div><div class="line">1636</div><div class="line">1637</div><div class="line">1638</div><div class="line">1639</div><div class="line">1640</div><div class="line">1641</div><div class="line">1642</div><div class="line">1643</div><div class="line">1644</div><div class="line">1645</div><div class="line">1646</div><div class="line">1647</div><div class="line">1648</div><div class="line">1649</div><div class="line">1650</div><div class="line">1651</div><div class="line">1652</div><div class="line">1653</div><div class="line">1654</div><div class="line">1655</div><div class="line">1656</div><div class="line">1657</div><div class="line">1658</div><div class="line">1659</div><div class="line">1660</div><div class="line">1661</div><div class="line">1662</div><div class="line">1663</div><div class="line">1664</div><div class="line">1665</div><div class="line">1666</div><div class="line">1667</div><div class="line">1668</div><div class="line">1669</div><div class="line">1670</div><div class="line">1671</div><div class="line">1672</div><div class="line">1673</div><div class="line">1674</div><div class="line">1675</div><div class="line">1676</div><div class="line">1677</div><div class="line">1678</div><div class="line">1679</div><div class="line">1680</div><div class="line">1681</div><div class="line">1682</div><div class="line">1683</div><div class="line">1684</div><div class="line">1685</div><div class="line">1686</div><div class="line">1687</div><div class="line">1688</div><div class="line">1689</div><div class="line">1690</div><div class="line">1691</div><div class="line">1692</div><div class="line">1693</div><div class="line">1694</div><div class="line">1695</div><div class="line">1696</div><div class="line">1697</div><div class="line">1698</div><div class="line">1699</div><div class="line">1700</div><div class="line">1701</div><div class="line">1702</div><div class="line">1703</div><div class="line">1704</div><div class="line">1705</div><div class="line">1706</div><div class="line">1707</div><div class="line">1708</div><div class="line">1709</div><div class="line">1710</div><div class="line">1711</div><div class="line">1712</div><div class="line">1713</div><div class="line">1714</div><div class="line">1715</div><div class="line">1716</div><div class="line">1717</div><div class="line">1718</div><div class="line">1719</div><div class="line">1720</div><div class="line">1721</div><div class="line">1722</div><div class="line">1723</div><div class="line">1724</div><div class="line">1725</div><div class="line">1726</div><div class="line">1727</div><div class="line">1728</div><div class="line">1729</div><div class="line">1730</div><div class="line">1731</div><div class="line">1732</div><div class="line">1733</div><div class="line">1734</div><div class="line">1735</div><div class="line">1736</div><div class="line">1737</div><div class="line">1738</div><div class="line">1739</div><div class="line">1740</div><div class="line">1741</div><div class="line">1742</div><div class="line">1743</div><div class="line">1744</div><div class="line">1745</div><div class="line">1746</div><div class="line">1747</div><div class="line">1748</div><div class="line">1749</div><div class="line">1750</div><div class="line">1751</div><div class="line">1752</div><div class="line">1753</div><div class="line">1754</div><div class="line">1755</div><div class="line">1756</div><div class="line">1757</div><div class="line">1758</div><div class="line">1759</div><div class="line">1760</div><div class="line">1761</div><div class="line">1762</div><div class="line">1763</div><div class="line">1764</div><div class="line">1765</div><div class="line">1766</div><div class="line">1767</div><div class="line">1768</div><div class="line">1769</div><div class="line">1770</div><div class="line">1771</div><div class="line">1772</div><div class="line">1773</div><div class="line">1774</div><div class="line">1775</div><div class="line">1776</div><div class="line">1777</div><div class="line">1778</div><div class="line">1779</div><div class="line">1780</div><div class="line">1781</div><div class="line">1782</div><div class="line">1783</div><div class="line">1784</div><div class="line">1785</div><div class="line">1786</div><div class="line">1787</div><div class="line">1788</div><div class="line">1789</div><div class="line">1790</div><div class="line">1791</div><div class="line">1792</div><div class="line">1793</div><div class="line">1794</div><div class="line">1795</div><div class="line">1796</div><div class="line">1797</div><div class="line">1798</div><div class="line">1799</div><div class="line">1800</div><div class="line">1801</div><div class="line">1802</div><div class="line">1803</div><div class="line">1804</div><div class="line">1805</div><div class="line">1806</div><div class="line">1807</div><div class="line">1808</div><div class="line">1809</div><div class="line">1810</div><div class="line">1811</div><div class="line">1812</div><div class="line">1813</div><div class="line">1814</div><div class="line">1815</div><div class="line">1816</div><div class="line">1817</div><div class="line">1818</div><div class="line">1819</div><div class="line">1820</div><div class="line">1821</div><div class="line">1822</div><div class="line">1823</div><div class="line">1824</div><div class="line">1825</div><div class="line">1826</div><div class="line">1827</div><div class="line">1828</div><div class="line">1829</div><div class="line">1830</div><div class="line">1831</div><div class="line">1832</div><div class="line">1833</div><div class="line">1834</div><div class="line">1835</div><div class="line">1836</div><div class="line">1837</div><div class="line">1838</div><div class="line">1839</div><div class="line">1840</div><div class="line">1841</div><div class="line">1842</div><div class="line">1843</div><div class="line">1844</div><div class="line">1845</div><div class="line">1846</div><div class="line">1847</div><div class="line">1848</div><div class="line">1849</div><div class="line">1850</div><div class="line">1851</div><div class="line">1852</div><div class="line">1853</div><div class="line">1854</div><div class="line">1855</div><div class="line">1856</div><div class="line">1857</div><div class="line">1858</div><div class="line">1859</div><div class="line">1860</div><div class="line">1861</div><div class="line">1862</div><div class="line">1863</div><div class="line">1864</div><div class="line">1865</div><div class="line">1866</div><div class="line">1867</div><div class="line">1868</div><div class="line">1869</div><div class="line">1870</div><div class="line">1871</div><div class="line">1872</div><div class="line">1873</div><div class="line">1874</div><div class="line">1875</div><div class="line">1876</div><div class="line">1877</div><div class="line">1878</div><div class="line">1879</div><div class="line">1880</div><div class="line">1881</div><div class="line">1882</div><div class="line">1883</div><div class="line">1884</div><div class="line">1885</div><div class="line">1886</div><div class="line">1887</div><div class="line">1888</div><div class="line">1889</div><div class="line">1890</div><div class="line">1891</div><div class="line">1892</div><div class="line">1893</div><div class="line">1894</div><div class="line">1895</div><div class="line">1896</div><div class="line">1897</div><div class="line">1898</div><div class="line">1899</div><div class="line">1900</div><div class="line">1901</div><div class="line">1902</div><div class="line">1903</div><div class="line">1904</div><div class="line">1905</div><div class="line">1906</div><div class="line">1907</div><div class="line">1908</div><div class="line">1909</div><div class="line">1910</div><div class="line">1911</div><div class="line">1912</div><div class="line">1913</div><div class="line">1914</div><div class="line">1915</div><div class="line">1916</div><div class="line">1917</div><div class="line">1918</div><div class="line">1919</div><div class="line">1920</div><div class="line">1921</div><div class="line">1922</div><div class="line">1923</div><div class="line">1924</div><div class="line">1925</div><div class="line">1926</div><div class="line">1927</div><div class="line">1928</div><div class="line">1929</div><div class="line">1930</div><div class="line">1931</div><div class="line">1932</div><div class="line">1933</div><div class="line">1934</div><div class="line">1935</div><div class="line">1936</div><div class="line">1937</div><div class="line">1938</div><div class="line">1939</div><div class="line">1940</div><div class="line">1941</div><div class="line">1942</div><div class="line">1943</div><div class="line">1944</div><div class="line">1945</div><div class="line">1946</div><div class="line">1947</div><div class="line">1948</div><div class="line">1949</div><div class="line">1950</div><div class="line">1951</div><div class="line">1952</div><div class="line">1953</div><div class="line">1954</div><div class="line">1955</div><div class="line">1956</div><div class="line">1957</div><div class="line">1958</div><div class="line">1959</div><div class="line">1960</div><div class="line">1961</div><div class="line">1962</div><div class="line">1963</div><div class="line">1964</div><div class="line">1965</div><div class="line">1966</div><div class="line">1967</div><div class="line">1968</div><div class="line">1969</div><div class="line">1970</div><div class="line">1971</div><div class="line">1972</div><div class="line">1973</div><div class="line">1974</div><div class="line">1975</div><div class="line">1976</div><div class="line">1977</div><div class="line">1978</div><div class="line">1979</div><div class="line">1980</div><div class="line">1981</div><div class="line">1982</div><div class="line">1983</div><div class="line">1984</div><div class="line">1985</div><div class="line">1986</div><div class="line">1987</div><div class="line">1988</div><div class="line">1989</div><div class="line">1990</div><div class="line">1991</div><div class="line">1992</div><div class="line">1993</div><div class="line">1994</div><div class="line">1995</div><div class="line">1996</div><div class="line">1997</div><div class="line">1998</div><div class="line">1999</div><div class="line">2000</div><div class="line">2001</div><div class="line">2002</div><div class="line">2003</div><div class="line">2004</div><div class="line">2005</div><div class="line">2006</div><div class="line">2007</div><div class="line">2008</div><div class="line">2009</div><div class="line">2010</div><div class="line">2011</div><div class="line">2012</div><div class="line">2013</div><div class="line">2014</div><div class="line">2015</div><div class="line">2016</div><div class="line">2017</div><div class="line">2018</div><div class="line">2019</div><div class="line">2020</div><div class="line">2021</div><div class="line">2022</div><div class="line">2023</div><div class="line">2024</div><div class="line">2025</div><div class="line">2026</div><div class="line">2027</div><div class="line">2028</div><div class="line">2029</div><div class="line">2030</div><div class="line">2031</div><div class="line">2032</div><div class="line">2033</div><div class="line">2034</div><div class="line">2035</div><div class="line">2036</div><div class="line">2037</div><div class="line">2038</div><div class="line">2039</div><div class="line">2040</div><div class="line">2041</div><div class="line">2042</div><div class="line">2043</div><div class="line">2044</div><div class="line">2045</div><div class="line">2046</div><div class="line">2047</div><div class="line">2048</div><div class="line">2049</div><div class="line">2050</div><div class="line">2051</div><div class="line">2052</div><div class="line">2053</div><div class="line">2054</div><div class="line">2055</div><div class="line">2056</div><div class="line">2057</div><div class="line">2058</div><div class="line">2059</div><div class="line">2060</div><div class="line">2061</div><div class="line">2062</div><div class="line">2063</div><div class="line">2064</div><div class="line">2065</div><div class="line">2066</div><div class="line">2067</div><div class="line">2068</div><div class="line">2069</div><div class="line">2070</div><div class="line">2071</div><div class="line">2072</div><div class="line">2073</div><div class="line">2074</div><div class="line">2075</div><div class="line">2076</div><div class="line">2077</div><div class="line">2078</div><div class="line">2079</div><div class="line">2080</div><div class="line">2081</div><div class="line">2082</div><div class="line">2083</div><div class="line">2084</div><div class="line">2085</div><div class="line">2086</div><div class="line">2087</div><div class="line">2088</div><div class="line">2089</div><div class="line">2090</div><div class="line">2091</div><div class="line">2092</div><div class="line">2093</div><div class="line">2094</div><div class="line">2095</div><div class="line">2096</div><div class="line">2097</div><div class="line">2098</div><div class="line">2099</div><div class="line">2100</div><div class="line">2101</div><div class="line">2102</div><div class="line">2103</div><div class="line">2104</div><div class="line">2105</div><div class="line">2106</div><div class="line">2107</div><div class="line">2108</div><div class="line">2109</div><div class="line">2110</div><div class="line">2111</div><div class="line">2112</div><div class="line">2113</div><div class="line">2114</div><div class="line">2115</div><div class="line">2116</div><div class="line">2117</div><div class="line">2118</div><div class="line">2119</div><div class="line">2120</div><div class="line">2121</div><div class="line">2122</div><div class="line">2123</div><div class="line">2124</div><div class="line">2125</div><div class="line">2126</div><div class="line">2127</div><div class="line">2128</div><div class="line">2129</div><div class="line">2130</div><div class="line">2131</div><div class="line">2132</div><div class="line">2133</div><div class="line">2134</div><div class="line">2135</div><div class="line">2136</div><div class="line">2137</div><div class="line">2138</div><div class="line">2139</div><div class="line">2140</div><div class="line">2141</div><div class="line">2142</div><div class="line">2143</div><div class="line">2144</div><div class="line">2145</div><div class="line">2146</div><div class="line">2147</div><div class="line">2148</div><div class="line">2149</div><div class="line">2150</div><div class="line">2151</div><div class="line">2152</div><div class="line">2153</div><div class="line">2154</div><div class="line">2155</div><div class="line">2156</div><div class="line">2157</div><div class="line">2158</div><div class="line">2159</div><div class="line">2160</div><div class="line">2161</div><div class="line">2162</div><div class="line">2163</div><div class="line">2164</div><div class="line">2165</div><div class="line">2166</div><div class="line">2167</div><div class="line">2168</div><div class="line">2169</div><div class="line">2170</div><div class="line">2171</div><div class="line">2172</div><div class="line">2173</div><div class="line">2174</div><div class="line">2175</div><div class="line">2176</div><div class="line">2177</div><div class="line">2178</div><div class="line">2179</div><div class="line">2180</div><div class="line">2181</div><div class="line">2182</div><div class="line">2183</div><div class="line">2184</div><div class="line">2185</div><div class="line">2186</div><div class="line">2187</div><div class="line">2188</div><div class="line">2189</div><div class="line">2190</div><div class="line">2191</div><div class="line">2192</div><div class="line">2193</div><div class="line">2194</div><div class="line">2195</div><div class="line">2196</div><div class="line">2197</div><div class="line">2198</div><div class="line">2199</div><div class="line">2200</div><div class="line">2201</div><div class="line">2202</div><div class="line">2203</div><div class="line">2204</div><div class="line">2205</div><div class="line">2206</div><div class="line">2207</div><div class="line">2208</div><div class="line">2209</div><div class="line">2210</div><div class="line">2211</div><div class="line">2212</div><div class="line">2213</div><div class="line">2214</div><div class="line">2215</div><div class="line">2216</div><div class="line">2217</div><div class="line">2218</div><div class="line">2219</div><div class="line">2220</div><div class="line">2221</div><div class="line">2222</div><div class="line">2223</div><div class="line">2224</div><div class="line">2225</div><div class="line">2226</div><div class="line">2227</div><div class="line">2228</div><div class="line">2229</div><div class="line">2230</div><div class="line">2231</div><div class="line">2232</div><div class="line">2233</div><div class="line">2234</div><div class="line">2235</div><div class="line">2236</div><div class="line">2237</div><div class="line">2238</div><div class="line">2239</div><div class="line">2240</div><div class="line">2241</div><div class="line">2242</div><div class="line">2243</div><div class="line">2244</div><div class="line">2245</div><div class="line">2246</div><div class="line">2247</div><div class="line">2248</div><div class="line">2249</div><div class="line">2250</div><div class="line">2251</div><div class="line">2252</div><div class="line">2253</div><div class="line">2254</div><div class="line">2255</div><div class="line">2256</div><div class="line">2257</div><div class="line">2258</div><div class="line">2259</div><div class="line">2260</div><div class="line">2261</div><div class="line">2262</div><div class="line">2263</div><div class="line">2264</div><div class="line">2265</div><div class="line">2266</div><div class="line">2267</div><div class="line">2268</div><div class="line">2269</div><div class="line">2270</div><div class="line">2271</div><div class="line">2272</div><div class="line">2273</div><div class="line">2274</div><div class="line">2275</div><div class="line">2276</div><div class="line">2277</div><div class="line">2278</div><div class="line">2279</div><div class="line">2280</div><div class="line">2281</div><div class="line">2282</div><div class="line">2283</div><div class="line">2284</div><div class="line">2285</div><div class="line">2286</div><div class="line">2287</div><div class="line">2288</div><div class="line">2289</div><div class="line">2290</div><div class="line">2291</div><div class="line">2292</div><div class="line">2293</div><div class="line">2294</div><div class="line">2295</div><div class="line">2296</div><div class="line">2297</div><div class="line">2298</div><div class="line">2299</div><div class="line">2300</div><div class="line">2301</div><div class="line">2302</div><div class="line">2303</div><div class="line">2304</div><div class="line">2305</div><div class="line">2306</div><div class="line">2307</div><div class="line">2308</div><div class="line">2309</div><div class="line">2310</div><div class="line">2311</div><div class="line">2312</div><div class="line">2313</div><div class="line">2314</div><div class="line">2315</div><div class="line">2316</div><div class="line">2317</div><div class="line">2318</div><div class="line">2319</div><div class="line">2320</div><div class="line">2321</div><div class="line">2322</div><div class="line">2323</div><div class="line">2324</div><div class="line">2325</div><div class="line">2326</div><div class="line">2327</div><div class="line">2328</div><div class="line">2329</div><div class="line">2330</div><div class="line">2331</div><div class="line">2332</div><div class="line">2333</div><div class="line">2334</div><div class="line">2335</div><div class="line">2336</div><div class="line">2337</div><div class="line">2338</div><div class="line">2339</div><div class="line">2340</div><div class="line">2341</div><div class="line">2342</div><div class="line">2343</div><div class="line">2344</div><div class="line">2345</div><div class="line">2346</div><div class="line">2347</div><div class="line">2348</div><div class="line">2349</div><div class="line">2350</div><div class="line">2351</div><div class="line">2352</div><div class="line">2353</div><div class="line">2354</div><div class="line">2355</div><div class="line">2356</div><div class="line">2357</div><div class="line">2358</div><div class="line">2359</div><div class="line">2360</div><div class="line">2361</div><div class="line">2362</div><div class="line">2363</div><div class="line">2364</div><div class="line">2365</div><div class="line">2366</div><div class="line">2367</div><div class="line">2368</div><div class="line">2369</div><div class="line">2370</div><div class="line">2371</div><div class="line">2372</div><div class="line">2373</div><div class="line">2374</div><div class="line">2375</div><div class="line">2376</div><div class="line">2377</div><div class="line">2378</div><div class="line">2379</div><div class="line">2380</div><div class="line">2381</div><div class="line">2382</div><div class="line">2383</div><div class="line">2384</div><div class="line">2385</div><div class="line">2386</div><div class="line">2387</div><div class="line">2388</div><div class="line">2389</div><div class="line">2390</div><div class="line">2391</div><div class="line">2392</div><div class="line">2393</div><div class="line">2394</div><div class="line">2395</div><div class="line">2396</div><div class="line">2397</div><div class="line">2398</div><div class="line">2399</div><div class="line">2400</div><div class="line">2401</div><div class="line">2402</div><div class="line">2403</div><div class="line">2404</div><div class="line">2405</div><div class="line">2406</div><div class="line">2407</div><div class="line">2408</div><div class="line">2409</div><div class="line">2410</div><div class="line">2411</div><div class="line">2412</div><div class="line">2413</div><div class="line">2414</div><div class="line">2415</div><div class="line">2416</div><div class="line">2417</div><div class="line">2418</div><div class="line">2419</div><div class="line">2420</div><div class="line">2421</div><div class="line">2422</div><div class="line">2423</div><div class="line">2424</div><div class="line">2425</div><div class="line">2426</div><div class="line">2427</div><div class="line">2428</div><div class="line">2429</div><div class="line">2430</div><div class="line">2431</div><div class="line">2432</div><div class="line">2433</div><div class="line">2434</div><div class="line">2435</div><div class="line">2436</div><div class="line">2437</div><div class="line">2438</div><div class="line">2439</div><div class="line">2440</div><div class="line">2441</div><div class="line">2442</div><div class="line">2443</div><div class="line">2444</div><div class="line">2445</div><div class="line">2446</div><div class="line">2447</div><div class="line">2448</div><div class="line">2449</div><div class="line">2450</div><div class="line">2451</div><div class="line">2452</div><div class="line">2453</div><div class="line">2454</div><div class="line">2455</div><div class="line">2456</div><div class="line">2457</div><div class="line">2458</div><div class="line">2459</div><div class="line">2460</div><div class="line">2461</div><div class="line">2462</div><div class="line">2463</div><div class="line">2464</div><div class="line">2465</div><div class="line">2466</div><div class="line">2467</div><div class="line">2468</div><div class="line">2469</div><div class="line">2470</div><div class="line">2471</div><div class="line">2472</div><div class="line">2473</div><div class="line">2474</div><div class="line">2475</div><div class="line">2476</div><div class="line">2477</div><div class="line">2478</div><div class="line">2479</div><div class="line">2480</div><div class="line">2481</div><div class="line">2482</div><div class="line">2483</div><div class="line">2484</div><div class="line">2485</div><div class="line">2486</div><div class="line">2487</div><div class="line">2488</div><div class="line">2489</div><div class="line">2490</div><div class="line">2491</div><div class="line">2492</div><div class="line">2493</div><div class="line">2494</div><div class="line">2495</div><div class="line">2496</div><div class="line">2497</div><div class="line">2498</div><div class="line">2499</div><div class="line">2500</div><div class="line">2501</div><div class="line">2502</div><div class="line">2503</div><div class="line">2504</div><div class="line">2505</div><div class="line">2506</div><div class="line">2507</div><div class="line">2508</div><div class="line">2509</div><div class="line">2510</div><div class="line">2511</div><div class="line">2512</div><div class="line">2513</div><div class="line">2514</div><div class="line">2515</div><div class="line">2516</div><div class="line">2517</div><div class="line">2518</div><div class="line">2519</div><div class="line">2520</div><div class="line">2521</div><div class="line">2522</div><div class="line">2523</div><div class="line">2524</div><div class="line">2525</div><div class="line">2526</div><div class="line">2527</div><div class="line">2528</div><div class="line">2529</div><div class="line">2530</div><div class="line">2531</div><div class="line">2532</div><div class="line">2533</div><div class="line">2534</div><div class="line">2535</div><div class="line">2536</div><div class="line">2537</div><div class="line">2538</div><div class="line">2539</div><div class="line">2540</div><div class="line">2541</div><div class="line">2542</div><div class="line">2543</div><div class="line">2544</div><div class="line">2545</div><div class="line">2546</div><div class="line">2547</div><div class="line">2548</div><div class="line">2549</div><div class="line">2550</div><div class="line">2551</div><div class="line">2552</div><div class="line">2553</div><div class="line">2554</div><div class="line">2555</div><div class="line">2556</div><div class="line">2557</div><div class="line">2558</div><div class="line">2559</div><div class="line">2560</div><div class="line">2561</div><div class="line">2562</div><div class="line">2563</div><div class="line">2564</div><div class="line">2565</div><div class="line">2566</div><div class="line">2567</div><div class="line">2568</div><div class="line">2569</div><div class="line">2570</div><div class="line">2571</div><div class="line">2572</div><div class="line">2573</div><div class="line">2574</div><div class="line">2575</div><div class="line">2576</div><div class="line">2577</div><div class="line">2578</div><div class="line">2579</div><div class="line">2580</div><div class="line">2581</div><div class="line">2582</div><div class="line">2583</div><div class="line">2584</div><div class="line">2585</div><div class="line">2586</div><div class="line">2587</div><div class="line">2588</div><div class="line">2589</div><div class="line">2590</div><div class="line">2591</div><div class="line">2592</div><div class="line">2593</div><div class="line">2594</div><div class="line">2595</div><div class="line">2596</div><div class="line">2597</div><div class="line">2598</div><div class="line">2599</div><div class="line">2600</div><div class="line">2601</div><div class="line">2602</div><div class="line">2603</div><div class="line">2604</div><div class="line">2605</div><div class="line">2606</div><div class="line">2607</div><div class="line">2608</div><div class="line">2609</div><div class="line">2610</div><div class="line">2611</div><div class="line">2612</div><div class="line">2613</div><div class="line">2614</div><div class="line">2615</div><div class="line">2616</div><div class="line">2617</div><div class="line">2618</div><div class="line">2619</div><div class="line">2620</div><div class="line">2621</div><div class="line">2622</div><div class="line">2623</div><div class="line">2624</div><div class="line">2625</div><div class="line">2626</div><div class="line">2627</div><div class="line">2628</div><div class="line">2629</div><div class="line">2630</div><div class="line">2631</div><div class="line">2632</div><div class="line">2633</div><div class="line">2634</div><div class="line">2635</div><div class="line">2636</div><div class="line">2637</div><div class="line">2638</div><div class="line">2639</div><div class="line">2640</div><div class="line">2641</div><div class="line">2642</div><div class="line">2643</div><div class="line">2644</div><div class="line">2645</div><div class="line">2646</div><div class="line">2647</div><div class="line">2648</div><div class="line">2649</div><div class="line">2650</div><div class="line">2651</div><div class="line">2652</div><div class="line">2653</div><div class="line">2654</div><div class="line">2655</div><div class="line">2656</div><div class="line">2657</div><div class="line">2658</div><div class="line">2659</div><div class="line">2660</div><div class="line">2661</div><div class="line">2662</div><div class="line">2663</div><div class="line">2664</div><div class="line">2665</div><div class="line">2666</div><div class="line">2667</div><div class="line">2668</div><div class="line">2669</div><div class="line">2670</div><div class="line">2671</div><div class="line">2672</div><div class="line">2673</div><div class="line">2674</div><div class="line">2675</div><div class="line">2676</div><div class="line">2677</div><div class="line">2678</div><div class="line">2679</div><div class="line">2680</div><div class="line">2681</div><div class="line">2682</div><div class="line">2683</div><div class="line">2684</div><div class="line">2685</div><div class="line">2686</div><div class="line">2687</div><div class="line">2688</div><div class="line">2689</div><div class="line">2690</div><div class="line">2691</div><div class="line">2692</div><div class="line">2693</div><div class="line">2694</div><div class="line">2695</div><div class="line">2696</div><div class="line">2697</div><div class="line">2698</div><div class="line">2699</div><div class="line">2700</div><div class="line">2701</div><div class="line">2702</div><div class="line">2703</div><div class="line">2704</div><div class="line">2705</div><div class="line">2706</div><div class="line">2707</div><div class="line">2708</div><div class="line">2709</div><div class="line">2710</div><div class="line">2711</div><div class="line">2712</div><div class="line">2713</div><div class="line">2714</div><div class="line">2715</div><div class="line">2716</div><div class="line">2717</div><div class="line">2718</div><div class="line">2719</div><div class="line">2720</div><div class="line">2721</div><div class="line">2722</div><div class="line">2723</div><div class="line">2724</div><div class="line">2725</div><div class="line">2726</div><div class="line">2727</div><div class="line">2728</div><div class="line">2729</div><div class="line">2730</div><div class="line">2731</div><div class="line">2732</div><div class="line">2733</div><div class="line">2734</div><div class="line">2735</div><div class="line">2736</div><div class="line">2737</div><div class="line">2738</div><div class="line">2739</div><div class="line">2740</div><div class="line">2741</div><div class="line">2742</div><div class="line">2743</div><div class="line">2744</div><div class="line">2745</div><div class="line">2746</div><div class="line">2747</div><div class="line">2748</div><div class="line">2749</div><div class="line">2750</div><div class="line">2751</div><div class="line">2752</div><div class="line">2753</div><div class="line">2754</div><div class="line">2755</div><div class="line">2756</div><div class="line">2757</div><div class="line">2758</div><div class="line">2759</div><div class="line">2760</div><div class="line">2761</div><div class="line">2762</div><div class="line">2763</div><div class="line">2764</div><div class="line">2765</div><div class="line">2766</div><div class="line">2767</div><div class="line">2768</div><div class="line">2769</div><div class="line">2770</div><div class="line">2771</div><div class="line">2772</div><div class="line">2773</div><div class="line">2774</div><div class="line">2775</div><div class="line">2776</div><div class="line">2777</div><div class="line">2778</div><div class="line">2779</div><div class="line">2780</div><div class="line">2781</div><div class="line">2782</div><div class="line">2783</div><div class="line">2784</div><div class="line">2785</div><div class="line">2786</div><div class="line">2787</div><div class="line">2788</div><div class="line">2789</div><div class="line">2790</div><div class="line">2791</div><div class="line">2792</div><div class="line">2793</div><div class="line">2794</div><div class="line">2795</div><div class="line">2796</div><div class="line">2797</div><div class="line">2798</div><div class="line">2799</div><div class="line">2800</div><div class="line">2801</div><div class="line">2802</div><div class="line">2803</div><div class="line">2804</div><div class="line">2805</div><div class="line">2806</div><div class="line">2807</div><div class="line">2808</div><div class="line">2809</div><div class="line">2810</div><div class="line">2811</div><div class="line">2812</div><div class="line">2813</div><div class="line">2814</div><div class="line">2815</div><div class="line">2816</div><div class="line">2817</div><div class="line">2818</div><div class="line">2819</div><div class="line">2820</div><div class="line">2821</div><div class="line">2822</div><div class="line">2823</div><div class="line">2824</div><div class="line">2825</div><div class="line">2826</div><div class="line">2827</div><div class="line">2828</div><div class="line">2829</div><div class="line">2830</div><div class="line">2831</div><div class="line">2832</div><div class="line">2833</div><div class="line">2834</div><div class="line">2835</div><div class="line">2836</div><div class="line">2837</div><div class="line">2838</div><div class="line">2839</div><div class="line">2840</div><div class="line">2841</div><div class="line">2842</div><div class="line">2843</div><div class="line">2844</div><div class="line">2845</div><div class="line">2846</div><div class="line">2847</div><div class="line">2848</div><div class="line">2849</div><div class="line">2850</div><div class="line">2851</div><div class="line">2852</div><div class="line">2853</div><div class="line">2854</div><div class="line">2855</div><div class="line">2856</div><div class="line">2857</div><div class="line">2858</div><div class="line">2859</div><div class="line">2860</div><div class="line">2861</div><div class="line">2862</div><div class="line">2863</div><div class="line">2864</div><div class="line">2865</div><div class="line">2866</div><div class="line">2867</div><div class="line">2868</div><div class="line">2869</div><div class="line">2870</div><div class="line">2871</div><div class="line">2872</div><div class="line">2873</div><div class="line">2874</div><div class="line">2875</div><div class="line">2876</div><div class="line">2877</div><div class="line">2878</div><div class="line">2879</div><div class="line">2880</div><div class="line">2881</div><div class="line">2882</div><div class="line">2883</div><div class="line">2884</div><div class="line">2885</div><div class="line">2886</div><div class="line">2887</div><div class="line">2888</div><div class="line">2889</div><div class="line">2890</div><div class="line">2891</div><div class="line">2892</div><div class="line">2893</div><div class="line">2894</div><div class="line">2895</div><div class="line">2896</div><div class="line">2897</div><div class="line">2898</div><div class="line">2899</div><div class="line">2900</div><div class="line">2901</div><div class="line">2902</div><div class="line">2903</div><div class="line">2904</div><div class="line">2905</div><div class="line">2906</div><div class="line">2907</div><div class="line">2908</div><div class="line">2909</div><div class="line">2910</div><div class="line">2911</div><div class="line">2912</div><div class="line">2913</div><div class="line">2914</div><div class="line">2915</div><div class="line">2916</div><div class="line">2917</div><div class="line">2918</div><div class="line">2919</div><div class="line">2920</div><div class="line">2921</div><div class="line">2922</div><div class="line">2923</div><div class="line">2924</div><div class="line">2925</div><div class="line">2926</div><div class="line">2927</div><div class="line">2928</div><div class="line">2929</div><div class="line">2930</div><div class="line">2931</div><div class="line">2932</div><div class="line">2933</div><div class="line">2934</div><div class="line">2935</div><div class="line">2936</div><div class="line">2937</div><div class="line">2938</div><div class="line">2939</div><div class="line">2940</div><div class="line">2941</div><div class="line">2942</div><div class="line">2943</div><div class="line">2944</div><div class="line">2945</div><div class="line">2946</div><div class="line">2947</div><div class="line">2948</div><div class="line">2949</div><div class="line">2950</div><div class="line">2951</div><div class="line">2952</div><div class="line">2953</div><div class="line">2954</div><div class="line">2955</div><div class="line">2956</div><div class="line">2957</div><div class="line">2958</div><div class="line">2959</div><div class="line">2960</div><div class="line">2961</div><div class="line">2962</div><div class="line">2963</div><div class="line">2964</div><div class="line">2965</div><div class="line">2966</div><div class="line">2967</div><div class="line">2968</div><div class="line">2969</div><div class="line">2970</div><div class="line">2971</div><div class="line">2972</div><div class="line">2973</div><div class="line">2974</div><div class="line">2975</div><div class="line">2976</div><div class="line">2977</div><div class="line">2978</div><div class="line">2979</div><div class="line">2980</div><div class="line">2981</div><div class="line">2982</div><div class="line">2983</div><div class="line">2984</div><div class="line">2985</div><div class="line">2986</div><div class="line">2987</div><div class="line">2988</div><div class="line">2989</div><div class="line">2990</div><div class="line">2991</div><div class="line">2992</div><div class="line">2993</div><div class="line">2994</div><div class="line">2995</div><div class="line">2996</div><div class="line">2997</div><div class="line">2998</div><div class="line">2999</div><div class="line">3000</div><div class="line">3001</div><div class="line">3002</div><div class="line">3003</div><div class="line">3004</div><div class="line">3005</div><div class="line">3006</div><div class="line">3007</div><div class="line">3008</div><div class="line">3009</div><div class="line">3010</div><div class="line">3011</div><div class="line">3012</div><div class="line">3013</div><div class="line">3014</div><div class="line">3015</div><div class="line">3016</div><div class="line">3017</div><div class="line">3018</div><div class="line">3019</div><div class="line">3020</div><div class="line">3021</div><div class="line">3022</div><div class="line">3023</div><div class="line">3024</div><div class="line">3025</div><div class="line">3026</div><div class="line">3027</div><div class="line">3028</div><div class="line">3029</div><div class="line">3030</div><div class="line">3031</div><div class="line">3032</div><div class="line">3033</div><div class="line">3034</div><div class="line">3035</div><div class="line">3036</div><div class="line">3037</div><div class="line">3038</div><div class="line">3039</div><div class="line">3040</div><div class="line">3041</div><div class="line">3042</div><div class="line">3043</div><div class="line">3044</div><div class="line">3045</div><div class="line">3046</div><div class="line">3047</div><div class="line">3048</div><div class="line">3049</div><div class="line">3050</div><div class="line">3051</div><div class="line">3052</div><div class="line">3053</div><div class="line">3054</div><div class="line">3055</div><div class="line">3056</div><div class="line">3057</div><div class="line">3058</div><div class="line">3059</div><div class="line">3060</div><div class="line">3061</div><div class="line">3062</div><div class="line">3063</div><div class="line">3064</div><div class="line">3065</div><div class="line">3066</div><div class="line">3067</div><div class="line">3068</div><div class="line">3069</div><div class="line">3070</div><div class="line">3071</div><div class="line">3072</div><div class="line">3073</div><div class="line">3074</div><div class="line">3075</div><div class="line">3076</div><div class="line">3077</div><div class="line">3078</div><div class="line">3079</div><div class="line">3080</div><div class="line">3081</div><div class="line">3082</div><div class="line">3083</div><div class="line">3084</div><div class="line">3085</div><div class="line">3086</div><div class="line">3087</div><div class="line">3088</div><div class="line">3089</div><div class="line">3090</div><div class="line">3091</div><div class="line">3092</div><div class="line">3093</div><div class="line">3094</div><div class="line">3095</div><div class="line">3096</div><div class="line">3097</div><div class="line">3098</div><div class="line">3099</div><div class="line">3100</div><div class="line">3101</div><div class="line">3102</div><div class="line">3103</div><div class="line">3104</div><div class="line">3105</div><div class="line">3106</div><div class="line">3107</div><div class="line">3108</div><div class="line">3109</div><div class="line">3110</div><div class="line">3111</div><div class="line">3112</div><div class="line">3113</div><div class="line">3114</div><div class="line">3115</div><div class="line">3116</div><div class="line">3117</div><div class="line">3118</div><div class="line">3119</div><div class="line">3120</div><div class="line">3121</div><div class="line">3122</div><div class="line">3123</div><div class="line">3124</div><div class="line">3125</div><div class="line">3126</div><div class="line">3127</div><div class="line">3128</div><div class="line">3129</div><div class="line">3130</div><div class="line">3131</div><div class="line">3132</div><div class="line">3133</div><div class="line">3134</div><div class="line">3135</div><div class="line">3136</div><div class="line">3137</div><div class="line">3138</div><div class="line">3139</div><div class="line">3140</div><div class="line">3141</div><div class="line">3142</div><div class="line">3143</div><div class="line">3144</div><div class="line">3145</div><div class="line">3146</div><div class="line">3147</div><div class="line">3148</div><div class="line">3149</div><div class="line">3150</div><div class="line">3151</div><div class="line">3152</div><div class="line">3153</div><div class="line">3154</div><div class="line">3155</div><div class="line">3156</div><div class="line">3157</div><div class="line">3158</div><div class="line">3159</div><div class="line">3160</div><div class="line">3161</div><div class="line">3162</div><div class="line">3163</div><div class="line">3164</div><div class="line">3165</div><div class="line">3166</div><div class="line">3167</div><div class="line">3168</div><div class="line">3169</div><div class="line">3170</div><div class="line">3171</div><div class="line">3172</div><div class="line">3173</div><div class="line">3174</div><div class="line">3175</div><div class="line">3176</div><div class="line">3177</div><div class="line">3178</div><div class="line">3179</div><div class="line">3180</div><div class="line">3181</div><div class="line">3182</div><div class="line">3183</div><div class="line">3184</div><div class="line">3185</div><div class="line">3186</div><div class="line">3187</div><div class="line">3188</div><div class="line">3189</div><div class="line">3190</div><div class="line">3191</div><div class="line">3192</div><div class="line">3193</div><div class="line">3194</div><div class="line">3195</div><div class="line">3196</div><div class="line">3197</div><div class="line">3198</div><div class="line">3199</div><div class="line">3200</div><div class="line">3201</div><div class="line">3202</div><div class="line">3203</div><div class="line">3204</div><div class="line">3205</div><div class="line">3206</div><div class="line">3207</div><div class="line">3208</div><div class="line">3209</div><div class="line">3210</div><div class="line">3211</div><div class="line">3212</div><div class="line">3213</div><div class="line">3214</div><div class="line">3215</div><div class="line">3216</div><div class="line">3217</div><div class="line">3218</div><div class="line">3219</div><div class="line">3220</div><div class="line">3221</div><div class="line">3222</div><div class="line">3223</div><div class="line">3224</div><div class="line">3225</div><div class="line">3226</div><div class="line">3227</div><div class="line">3228</div><div class="line">3229</div><div class="line">3230</div><div class="line">3231</div><div class="line">3232</div><div class="line">3233</div><div class="line">3234</div><div class="line">3235</div><div class="line">3236</div><div class="line">3237</div><div class="line">3238</div><div class="line">3239</div><div class="line">3240</div><div class="line">3241</div><div class="line">3242</div><div class="line">3243</div><div class="line">3244</div><div class="line">3245</div><div class="line">3246</div><div class="line">3247</div><div class="line">3248</div><div class="line">3249</div><div class="line">3250</div><div class="line">3251</div><div class="line">3252</div><div class="line">3253</div><div class="line">3254</div><div class="line">3255</div><div class="line">3256</div><div class="line">3257</div><div class="line">3258</div><div class="line">3259</div><div class="line">3260</div><div class="line">3261</div><div class="line">3262</div><div class="line">3263</div><div class="line">3264</div><div class="line">3265</div><div class="line">3266</div><div class="line">3267</div><div class="line">3268</div><div class="line">3269</div><div class="line">3270</div><div class="line">3271</div><div class="line">3272</div><div class="line">3273</div><div class="line">3274</div><div class="line">3275</div><div class="line">3276</div><div class="line">3277</div><div class="line">3278</div><div class="line">3279</div><div class="line">3280</div><div class="line">3281</div><div class="line">3282</div><div class="line">3283</div><div class="line">3284</div><div class="line">3285</div><div class="line">3286</div><div class="line">3287</div><div class="line">3288</div><div class="line">3289</div><div class="line">3290</div><div class="line">3291</div><div class="line">3292</div><div class="line">3293</div><div class="line">3294</div><div class="line">3295</div><div class="line">3296</div><div class="line">3297</div><div class="line">3298</div><div class="line">3299</div><div class="line">3300</div><div class="line">3301</div><div class="line">3302</div><div class="line">3303</div><div class="line">3304</div><div class="line">3305</div><div class="line">3306</div><div class="line">3307</div><div class="line">3308</div><div class="line">3309</div><div class="line">3310</div><div class="line">3311</div><div class="line">3312</div><div class="line">3313</div><div class="line">3314</div><div class="line">3315</div><div class="line">3316</div><div class="line">3317</div><div class="line">3318</div><div class="line">3319</div><div class="line">3320</div><div class="line">3321</div><div class="line">3322</div><div class="line">3323</div><div class="line">3324</div><div class="line">3325</div><div class="line">3326</div><div class="line">3327</div><div class="line">3328</div><div class="line">3329</div><div class="line">3330</div><div class="line">3331</div><div class="line">3332</div><div class="line">3333</div><div class="line">3334</div><div class="line">3335</div><div class="line">3336</div><div class="line">3337</div><div class="line">3338</div><div class="line">3339</div><div class="line">3340</div><div class="line">3341</div><div class="line">3342</div><div class="line">3343</div><div class="line">3344</div><div class="line">3345</div><div class="line">3346</div><div class="line">3347</div><div class="line">3348</div><div class="line">3349</div><div class="line">3350</div><div class="line">3351</div><div class="line">3352</div><div class="line">3353</div><div class="line">3354</div><div class="line">3355</div><div class="line">3356</div><div class="line">3357</div><div class="line">3358</div><div class="line">3359</div><div class="line">3360</div><div class="line">3361</div><div class="line">3362</div><div class="line">3363</div><div class="line">3364</div><div class="line">3365</div><div class="line">3366</div><div class="line">3367</div><div class="line">3368</div><div class="line">3369</div><div class="line">3370</div><div class="line">3371</div><div class="line">3372</div><div class="line">3373</div><div class="line">3374</div><div class="line">3375</div><div class="line">3376</div><div class="line">3377</div><div class="line">3378</div><div class="line">3379</div><div class="line">3380</div><div class="line">3381</div><div class="line">3382</div><div class="line">3383</div><div class="line">3384</div><div class="line">3385</div><div class="line">3386</div><div class="line">3387</div><div class="line">3388</div><div class="line">3389</div><div class="line">3390</div><div class="line">3391</div><div class="line">3392</div><div class="line">3393</div><div class="line">3394</div><div class="line">3395</div><div class="line">3396</div><div class="line">3397</div><div class="line">3398</div><div class="line">3399</div><div class="line">3400</div><div class="line">3401</div><div class="line">3402</div><div class="line">3403</div><div class="line">3404</div><div class="line">3405</div><div class="line">3406</div><div class="line">3407</div><div class="line">3408</div><div class="line">3409</div><div class="line">3410</div><div class="line">3411</div><div class="line">3412</div><div class="line">3413</div><div class="line">3414</div><div class="line">3415</div><div class="line">3416</div><div class="line">3417</div><div class="line">3418</div><div class="line">3419</div><div class="line">3420</div><div class="line">3421</div><div class="line">3422</div><div class="line">3423</div><div class="line">3424</div><div class="line">3425</div><div class="line">3426</div><div class="line">3427</div><div class="line">3428</div><div class="line">3429</div><div class="line">3430</div><div class="line">3431</div><div class="line">3432</div><div class="line">3433</div><div class="line">3434</div><div class="line">3435</div><div class="line">3436</div><div class="line">3437</div><div class="line">3438</div><div class="line">3439</div><div class="line">3440</div><div class="line">3441</div><div class="line">3442</div><div class="line">3443</div><div class="line">3444</div><div class="line">3445</div><div class="line">3446</div><div class="line">3447</div><div class="line">3448</div><div class="line">3449</div><div class="line">3450</div><div class="line">3451</div><div class="line">3452</div><div class="line">3453</div><div class="line">3454</div><div class="line">3455</div><div class="line">3456</div><div class="line">3457</div><div class="line">3458</div><div class="line">3459</div><div class="line">3460</div><div class="line">3461</div><div class="line">3462</div><div class="line">3463</div><div class="line">3464</div><div class="line">3465</div><div class="line">3466</div><div class="line">3467</div><div class="line">3468</div><div class="line">3469</div><div class="line">3470</div><div class="line">3471</div><div class="line">3472</div><div class="line">3473</div><div class="line">3474</div><div class="line">3475</div><div class="line">3476</div><div class="line">3477</div><div class="line">3478</div><div class="line">3479</div><div class="line">3480</div><div class="line">3481</div><div class="line">3482</div><div class="line">3483</div><div class="line">3484</div><div class="line">3485</div><div class="line">3486</div><div class="line">3487</div><div class="line">3488</div><div class="line">3489</div><div class="line">3490</div><div class="line">3491</div><div class="line">3492</div><div class="line">3493</div><div class="line">3494</div><div class="line">3495</div><div class="line">3496</div><div class="line">3497</div><div class="line">3498</div><div class="line">3499</div><div class="line">3500</div><div class="line">3501</div><div class="line">3502</div><div class="line">3503</div><div class="line">3504</div><div class="line">3505</div><div class="line">3506</div><div class="line">3507</div><div class="line">3508</div><div class="line">3509</div><div class="line">3510</div><div class="line">3511</div><div class="line">3512</div><div class="line">3513</div><div class="line">3514</div><div class="line">3515</div><div class="line">3516</div><div class="line">3517</div><div class="line">3518</div><div class="line">3519</div><div class="line">3520</div><div class="line">3521</div><div class="line">3522</div><div class="line">3523</div><div class="line">3524</div><div class="line">3525</div><div class="line">3526</div><div class="line">3527</div><div class="line">3528</div><div class="line">3529</div><div class="line">3530</div><div class="line">3531</div><div class="line">3532</div><div class="line">3533</div><div class="line">3534</div><div class="line">3535</div><div class="line">3536</div><div class="line">3537</div><div class="line">3538</div><div class="line">3539</div><div class="line">3540</div><div class="line">3541</div><div class="line">3542</div><div class="line">3543</div><div class="line">3544</div><div class="line">3545</div><div class="line">3546</div><div class="line">3547</div><div class="line">3548</div><div class="line">3549</div><div class="line">3550</div><div class="line">3551</div><div class="line">3552</div><div class="line">3553</div><div class="line">3554</div><div class="line">3555</div><div class="line">3556</div><div class="line">3557</div><div class="line">3558</div><div class="line">3559</div><div class="line">3560</div><div class="line">3561</div><div class="line">3562</div><div class="line">3563</div><div class="line">3564</div><div class="line">3565</div><div class="line">3566</div><div class="line">3567</div><div class="line">3568</div><div class="line">3569</div><div class="line">3570</div><div class="line">3571</div><div class="line">3572</div><div class="line">3573</div><div class="line">3574</div><div class="line">3575</div><div class="line">3576</div><div class="line">3577</div><div class="line">3578</div><div class="line">3579</div><div class="line">3580</div><div class="line">3581</div><div class="line">3582</div><div class="line">3583</div><div class="line">3584</div><div class="line">3585</div><div class="line">3586</div><div class="line">3587</div><div class="line">3588</div><div class="line">3589</div><div class="line">3590</div><div class="line">3591</div><div class="line">3592</div><div class="line">3593</div><div class="line">3594</div><div class="line">3595</div><div class="line">3596</div><div class="line">3597</div><div class="line">3598</div><div class="line">3599</div><div class="line">3600</div><div class="line">3601</div><div class="line">3602</div><div class="line">3603</div><div class="line">3604</div><div class="line">3605</div><div class="line">3606</div><div class="line">3607</div><div class="line">3608</div><div class="line">3609</div><div class="line">3610</div><div class="line">3611</div><div class="line">3612</div><div class="line">3613</div><div class="line">3614</div><div class="line">3615</div><div class="line">3616</div><div class="line">3617</div><div class="line">3618</div><div class="line">3619</div><div class="line">3620</div><div class="line">3621</div><div class="line">3622</div><div class="line">3623</div><div class="line">3624</div><div class="line">3625</div><div class="line">3626</div><div class="line">3627</div><div class="line">3628</div><div class="line">3629</div><div class="line">3630</div><div class="line">3631</div><div class="line">3632</div><div class="line">3633</div><div class="line">3634</div><div class="line">3635</div><div class="line">3636</div><div class="line">3637</div><div class="line">3638</div><div class="line">3639</div><div class="line">3640</div><div class="line">3641</div><div class="line">3642</div><div class="line">3643</div><div class="line">3644</div><div class="line">3645</div><div class="line">3646</div><div class="line">3647</div><div class="line">3648</div><div class="line">3649</div><div class="line">3650</div><div class="line">3651</div><div class="line">3652</div><div class="line">3653</div><div class="line">3654</div><div class="line">3655</div><div class="line">3656</div><div class="line">3657</div><div class="line">3658</div><div class="line">3659</div><div class="line">3660</div><div class="line">3661</div><div class="line">3662</div><div class="line">3663</div><div class="line">3664</div><div class="line">3665</div><div class="line">3666</div><div class="line">3667</div><div class="line">3668</div><div class="line">3669</div><div class="line">3670</div><div class="line">3671</div><div class="line">3672</div><div class="line">3673</div><div class="line">3674</div><div class="line">3675</div><div class="line">3676</div><div class="line">3677</div><div class="line">3678</div><div class="line">3679</div><div class="line">3680</div><div class="line">3681</div><div class="line">3682</div><div class="line">3683</div><div class="line">3684</div><div class="line">3685</div><div class="line">3686</div><div class="line">3687</div><div class="line">3688</div><div class="line">3689</div><div class="line">3690</div><div class="line">3691</div><div class="line">3692</div><div class="line">3693</div><div class="line">3694</div><div class="line">3695</div><div class="line">3696</div><div class="line">3697</div><div class="line">3698</div><div class="line">3699</div><div class="line">3700</div><div class="line">3701</div><div class="line">3702</div><div class="line">3703</div><div class="line">3704</div><div class="line">3705</div><div class="line">3706</div><div class="line">3707</div><div class="line">3708</div><div class="line">3709</div><div class="line">3710</div><div class="line">3711</div><div class="line">3712</div><div class="line">3713</div><div class="line">3714</div><div class="line">3715</div><div class="line">3716</div><div class="line">3717</div><div class="line">3718</div><div class="line">3719</div><div class="line">3720</div><div class="line">3721</div><div class="line">3722</div><div class="line">3723</div><div class="line">3724</div><div class="line">3725</div><div class="line">3726</div><div class="line">3727</div><div class="line">3728</div><div class="line">3729</div><div class="line">3730</div><div class="line">3731</div><div class="line">3732</div><div class="line">3733</div><div class="line">3734</div><div class="line">3735</div><div class="line">3736</div><div class="line">3737</div><div class="line">3738</div><div class="line">3739</div><div class="line">3740</div><div class="line">3741</div><div class="line">3742</div><div class="line">3743</div><div class="line">3744</div><div class="line">3745</div><div class="line">3746</div><div class="line">3747</div><div class="line">3748</div><div class="line">3749</div><div class="line">3750</div><div class="line">3751</div><div class="line">3752</div><div class="line">3753</div><div class="line">3754</div><div class="line">3755</div><div class="line">3756</div><div class="line">3757</div><div class="line">3758</div><div class="line">3759</div><div class="line">3760</div><div class="line">3761</div><div class="line">3762</div><div class="line">3763</div><div class="line">3764</div><div class="line">3765</div><div class="line">3766</div><div class="line">3767</div><div class="line">3768</div><div class="line">3769</div><div class="line">3770</div><div class="line">3771</div><div class="line">3772</div><div class="line">3773</div><div class="line">3774</div><div class="line">3775</div><div class="line">3776</div><div class="line">3777</div><div class="line">3778</div><div class="line">3779</div><div class="line">3780</div><div class="line">3781</div><div class="line">3782</div><div class="line">3783</div><div class="line">3784</div><div class="line">3785</div><div class="line">3786</div><div class="line">3787</div><div class="line">3788</div><div class="line">3789</div><div class="line">3790</div><div class="line">3791</div><div class="line">3792</div><div class="line">3793</div><div class="line">3794</div><div class="line">3795</div><div class="line">3796</div><div class="line">3797</div><div class="line">3798</div><div class="line">3799</div><div class="line">3800</div><div class="line">3801</div><div class="line">3802</div><div class="line">3803</div><div class="line">3804</div><div class="line">3805</div><div class="line">3806</div><div class="line">3807</div><div class="line">3808</div><div class="line">3809</div><div class="line">3810</div><div class="line">3811</div><div class="line">3812</div><div class="line">3813</div><div class="line">3814</div><div class="line">3815</div><div class="line">3816</div><div class="line">3817</div><div class="line">3818</div><div class="line">3819</div><div class="line">3820</div><div class="line">3821</div><div class="line">3822</div><div class="line">3823</div><div class="line">3824</div><div class="line">3825</div><div class="line">3826</div><div class="line">3827</div><div class="line">3828</div><div class="line">3829</div><div class="line">3830</div><div class="line">3831</div><div class="line">3832</div><div class="line">3833</div><div class="line">3834</div><div class="line">3835</div><div class="line">3836</div><div class="line">3837</div><div class="line">3838</div><div class="line">3839</div><div class="line">3840</div><div class="line">3841</div><div class="line">3842</div><div class="line">3843</div><div class="line">3844</div><div class="line">3845</div><div class="line">3846</div><div class="line">3847</div><div class="line">3848</div><div class="line">3849</div><div class="line">3850</div><div class="line">3851</div><div class="line">3852</div><div class="line">3853</div><div class="line">3854</div><div class="line">3855</div><div class="line">3856</div><div class="line">3857</div><div class="line">3858</div><div class="line">3859</div><div class="line">3860</div><div class="line">3861</div><div class="line">3862</div><div class="line">3863</div><div class="line">3864</div><div class="line">3865</div><div class="line">3866</div><div class="line">3867</div><div class="line">3868</div><div class="line">3869</div><div class="line">3870</div><div class="line">3871</div><div class="line">3872</div><div class="line">3873</div><div class="line">3874</div><div class="line">3875</div><div class="line">3876</div><div class="line">3877</div><div class="line">3878</div><div class="line">3879</div><div class="line">3880</div><div class="line">3881</div><div class="line">3882</div><div class="line">3883</div><div class="line">3884</div><div class="line">3885</div><div class="line">3886</div><div class="line">3887</div><div class="line">3888</div><div class="line">3889</div><div class="line">3890</div><div class="line">3891</div><div class="line">3892</div><div class="line">3893</div><div class="line">3894</div><div class="line">3895</div><div class="line">3896</div><div class="line">3897</div><div class="line">3898</div><div class="line">3899</div><div class="line">3900</div><div class="line">3901</div><div class="line">3902</div><div class="line">3903</div><div class="line">3904</div><div class="line">3905</div><div class="line">3906</div><div class="line">3907</div><div class="line">3908</div><div class="line">3909</div><div class="line">3910</div><div class="line">3911</div><div class="line">3912</div><div class="line">3913</div><div class="line">3914</div><div class="line">3915</div><div class="line">3916</div><div class="line">3917</div><div class="line">3918</div><div class="line">3919</div><div class="line">3920</div><div class="line">3921</div><div class="line">3922</div><div class="line">3923</div><div class="line">3924</div><div class="line">3925</div><div class="line">3926</div><div class="line">3927</div><div class="line">3928</div><div class="line">3929</div><div class="line">3930</div><div class="line">3931</div><div class="line">3932</div><div class="line">3933</div><div class="line">3934</div><div class="line">3935</div><div class="line">3936</div><div class="line">3937</div><div class="line">3938</div><div class="line">3939</div><div class="line">3940</div><div class="line">3941</div><div class="line">3942</div><div class="line">3943</div><div class="line">3944</div><div class="line">3945</div><div class="line">3946</div><div class="line">3947</div><div class="line">3948</div><div class="line">3949</div><div class="line">3950</div><div class="line">3951</div><div class="line">3952</div><div class="line">3953</div><div class="line">3954</div><div class="line">3955</div><div class="line">3956</div><div class="line">3957</div><div class="line">3958</div><div class="line">3959</div><div class="line">3960</div><div class="line">3961</div><div class="line">3962</div><div class="line">3963</div><div class="line">3964</div><div class="line">3965</div><div class="line">3966</div><div class="line">3967</div><div class="line">3968</div><div class="line">3969</div><div class="line">3970</div><div class="line">3971</div><div class="line">3972</div><div class="line">3973</div><div class="line">3974</div><div class="line">3975</div><div class="line">3976</div><div class="line">3977</div><div class="line">3978</div><div class="line">3979</div><div class="line">3980</div><div class="line">3981</div><div class="line">3982</div><div class="line">3983</div><div class="line">3984</div><div class="line">3985</div><div class="line">3986</div><div class="line">3987</div><div class="line">3988</div><div class="line">3989</div><div class="line">3990</div><div class="line">3991</div><div class="line">3992</div><div class="line">3993</div><div class="line">3994</div><div class="line">3995</div><div class="line">3996</div><div class="line">3997</div><div class="line">3998</div><div class="line">3999</div><div class="line">4000</div><div class="line">4001</div><div class="line">4002</div><div class="line">4003</div><div class="line">4004</div><div class="line">4005</div><div class="line">4006</div><div class="line">4007</div><div class="line">4008</div><div class="line">4009</div><div class="line">4010</div><div class="line">4011</div><div class="line">4012</div><div class="line">4013</div><div class="line">4014</div><div class="line">4015</div><div class="line">4016</div><div class="line">4017</div><div class="line">4018</div><div class="line">4019</div><div class="line">4020</div><div class="line">4021</div><div class="line">4022</div><div class="line">4023</div><div class="line">4024</div><div class="line">4025</div><div class="line">4026</div><div class="line">4027</div><div class="line">4028</div><div class="line">4029</div><div class="line">4030</div><div class="line">4031</div><div class="line">4032</div><div class="line">4033</div><div class="line">4034</div><div class="line">4035</div><div class="line">4036</div><div class="line">4037</div><div class="line">4038</div><div class="line">4039</div><div class="line">4040</div><div class="line">4041</div><div class="line">4042</div><div class="line">4043</div><div class="line">4044</div><div class="line">4045</div><div class="line">4046</div><div class="line">4047</div><div class="line">4048</div><div class="line">4049</div><div class="line">4050</div><div class="line">4051</div><div class="line">4052</div><div class="line">4053</div><div class="line">4054</div><div class="line">4055</div><div class="line">4056</div><div class="line">4057</div><div class="line">4058</div><div class="line">4059</div><div class="line">4060</div><div class="line">4061</div><div class="line">4062</div><div class="line">4063</div><div class="line">4064</div><div class="line">4065</div><div class="line">4066</div><div class="line">4067</div><div class="line">4068</div><div class="line">4069</div><div class="line">4070</div><div class="line">4071</div><div class="line">4072</div><div class="line">4073</div><div class="line">4074</div><div class="line">4075</div><div class="line">4076</div><div class="line">4077</div><div class="line">4078</div><div class="line">4079</div><div class="line">4080</div><div class="line">4081</div><div class="line">4082</div><div class="line">4083</div><div class="line">4084</div><div class="line">4085</div><div class="line">4086</div><div class="line">4087</div><div class="line">4088</div><div class="line">4089</div><div class="line">4090</div><div class="line">4091</div><div class="line">4092</div><div class="line">4093</div><div class="line">4094</div><div class="line">4095</div><div class="line">4096</div><div class="line">4097</div><div class="line">4098</div><div class="line">4099</div><div class="line">4100</div><div class="line">4101</div><div class="line">4102</div><div class="line">4103</div><div class="line">4104</div><div class="line">4105</div><div class="line">4106</div><div class="line">4107</div><div class="line">4108</div><div class="line">4109</div><div class="line">4110</div><div class="line">4111</div><div class="line">4112</div><div class="line">4113</div><div class="line">4114</div><div class="line">4115</div><div class="line">4116</div><div class="line">4117</div><div class="line">4118</div><div class="line">4119</div><div class="line">4120</div><div class="line">4121</div><div class="line">4122</div><div class="line">4123</div><div class="line">4124</div><div class="line">4125</div><div class="line">4126</div><div class="line">4127</div><div class="line">4128</div><div class="line">4129</div><div class="line">4130</div><div class="line">4131</div><div class="line">4132</div><div class="line">4133</div><div class="line">4134</div><div class="line">4135</div><div class="line">4136</div><div class="line">4137</div><div class="line">4138</div><div class="line">4139</div><div class="line">4140</div><div class="line">4141</div><div class="line">4142</div><div class="line">4143</div><div class="line">4144</div><div class="line">4145</div><div class="line">4146</div><div class="line">4147</div><div class="line">4148</div><div class="line">4149</div><div class="line">4150</div><div class="line">4151</div><div class="line">4152</div><div class="line">4153</div><div class="line">4154</div><div class="line">4155</div><div class="line">4156</div><div class="line">4157</div><div class="line">4158</div><div class="line">4159</div><div class="line">4160</div><div class="line">4161</div><div class="line">4162</div><div class="line">4163</div><div class="line">4164</div><div class="line">4165</div><div class="line">4166</div><div class="line">4167</div><div class="line">4168</div><div class="line">4169</div><div class="line">4170</div><div class="line">4171</div><div class="line">4172</div><div class="line">4173</div><div class="line">4174</div><div class="line">4175</div><div class="line">4176</div><div class="line">4177</div><div class="line">4178</div><div class="line">4179</div><div class="line">4180</div><div class="line">4181</div><div class="line">4182</div><div class="line">4183</div><div class="line">4184</div><div class="line">4185</div><div class="line">4186</div><div class="line">4187</div><div class="line">4188</div><div class="line">4189</div><div class="line">4190</div><div class="line">4191</div><div class="line">4192</div><div class="line">4193</div><div class="line">4194</div><div class="line">4195</div><div class="line">4196</div><div class="line">4197</div><div class="line">4198</div><div class="line">4199</div><div class="line">4200</div><div class="line">4201</div><div class="line">4202</div><div class="line">4203</div><div class="line">4204</div><div class="line">4205</div><div class="line">4206</div><div class="line">4207</div><div class="line">4208</div><div class="line">4209</div><div class="line">4210</div><div class="line">4211</div><div class="line">4212</div><div class="line">4213</div><div class="line">4214</div><div class="line">4215</div><div class="line">4216</div><div class="line">4217</div><div class="line">4218</div><div class="line">4219</div><div class="line">4220</div><div class="line">4221</div><div class="line">4222</div><div class="line">4223</div><div class="line">4224</div><div class="line">4225</div><div class="line">4226</div><div class="line">4227</div><div class="line">4228</div><div class="line">4229</div><div class="line">4230</div><div class="line">4231</div><div class="line">4232</div><div class="line">4233</div><div class="line">4234</div><div class="line">4235</div><div class="line">4236</div><div class="line">4237</div><div class="line">4238</div><div class="line">4239</div><div class="line">4240</div><div class="line">4241</div><div class="line">4242</div><div class="line">4243</div><div class="line">4244</div><div class="line">4245</div><div class="line">4246</div><div class="line">4247</div><div class="line">4248</div><div class="line">4249</div><div class="line">4250</div><div class="line">4251</div><div class="line">4252</div><div class="line">4253</div><div class="line">4254</div><div class="line">4255</div><div class="line">4256</div><div class="line">4257</div><div class="line">4258</div><div class="line">4259</div><div class="line">4260</div><div class="line">4261</div><div class="line">4262</div><div class="line">4263</div><div class="line">4264</div><div class="line">4265</div><div class="line">4266</div><div class="line">4267</div><div class="line">4268</div><div class="line">4269</div><div class="line">4270</div><div class="line">4271</div><div class="line">4272</div><div class="line">4273</div><div class="line">4274</div><div class="line">4275</div><div class="line">4276</div><div class="line">4277</div><div class="line">4278</div><div class="line">4279</div><div class="line">4280</div><div class="line">4281</div><div class="line">4282</div><div class="line">4283</div><div class="line">4284</div><div class="line">4285</div><div class="line">4286</div><div class="line">4287</div><div class="line">4288</div><div class="line">4289</div><div class="line">4290</div><div class="line">4291</div><div class="line">4292</div><div class="line">4293</div><div class="line">4294</div><div class="line">4295</div><div class="line">4296</div><div class="line">4297</div><div class="line">4298</div><div class="line">4299</div><div class="line">4300</div><div class="line">4301</div><div class="line">4302</div><div class="line">4303</div><div class="line">4304</div><div class="line">4305</div><div class="line">4306</div><div class="line">4307</div><div class="line">4308</div><div class="line">4309</div><div class="line">4310</div><div class="line">4311</div><div class="line">4312</div><div class="line">4313</div><div class="line">4314</div><div class="line">4315</div><div class="line">4316</div><div class="line">4317</div><div class="line">4318</div><div class="line">4319</div><div class="line">4320</div><div class="line">4321</div><div class="line">4322</div><div class="line">4323</div><div class="line">4324</div><div class="line">4325</div><div class="line">4326</div><div class="line">4327</div><div class="line">4328</div><div class="line">4329</div><div class="line">4330</div><div class="line">4331</div><div class="line">4332</div><div class="line">4333</div><div class="line">4334</div><div class="line">4335</div><div class="line">4336</div><div class="line">4337</div><div class="line">4338</div><div class="line">4339</div><div class="line">4340</div><div class="line">4341</div><div class="line">4342</div><div class="line">4343</div><div class="line">4344</div><div class="line">4345</div><div class="line">4346</div><div class="line">4347</div><div class="line">4348</div><div class="line">4349</div><div class="line">4350</div><div class="line">4351</div><div class="line">4352</div><div class="line">4353</div><div class="line">4354</div><div class="line">4355</div><div class="line">4356</div><div class="line">4357</div><div class="line">4358</div><div class="line">4359</div><div class="line">4360</div><div class="line">4361</div><div class="line">4362</div><div class="line">4363</div><div class="line">4364</div><div class="line">4365</div><div class="line">4366</div><div class="line">4367</div><div class="line">4368</div><div class="line">4369</div><div class="line">4370</div><div class="line">4371</div><div class="line">4372</div><div class="line">4373</div><div class="line">4374</div><div class="line">4375</div><div class="line">4376</div><div class="line">4377</div><div class="line">4378</div><div class="line">4379</div><div class="line">4380</div><div class="line">4381</div><div class="line">4382</div><div class="line">4383</div><div class="line">4384</div><div class="line">4385</div><div class="line">4386</div><div class="line">4387</div><div class="line">4388</div><div class="line">4389</div><div class="line">4390</div><div class="line">4391</div><div class="line">4392</div><div class="line">4393</div><div class="line">4394</div><div class="line">4395</div><div class="line">4396</div><div class="line">4397</div><div class="line">4398</div><div class="line">4399</div><div class="line">4400</div><div class="line">4401</div><div class="line">4402</div><div class="line">4403</div><div class="line">4404</div><div class="line">4405</div><div class="line">4406</div><div class="line">4407</div><div class="line">4408</div><div class="line">4409</div><div class="line">4410</div><div class="line">4411</div><div class="line">4412</div><div class="line">4413</div><div class="line">4414</div><div class="line">4415</div><div class="line">4416</div><div class="line">4417</div><div class="line">4418</div><div class="line">4419</div><div class="line">4420</div><div class="line">4421</div><div class="line">4422</div><div class="line">4423</div><div class="line">4424</div><div class="line">4425</div><div class="line">4426</div><div class="line">4427</div><div class="line">4428</div><div class="line">4429</div><div class="line">4430</div><div class="line">4431</div><div class="line">4432</div><div class="line">4433</div><div class="line">4434</div><div class="line">4435</div><div class="line">4436</div><div class="line">4437</div><div class="line">4438</div><div class="line">4439</div><div class="line">4440</div><div class="line">4441</div><div class="line">4442</div><div class="line">4443</div><div class="line">4444</div><div class="line">4445</div><div class="line">4446</div><div class="line">4447</div><div class="line">4448</div><div class="line">4449</div><div class="line">4450</div><div class="line">4451</div><div class="line">4452</div><div class="line">4453</div><div class="line">4454</div><div class="line">4455</div><div class="line">4456</div><div class="line">4457</div><div class="line">4458</div><div class="line">4459</div><div class="line">4460</div><div class="line">4461</div><div class="line">4462</div><div class="line">4463</div><div class="line">4464</div><div class="line">4465</div><div class="line">4466</div><div class="line">4467</div><div class="line">4468</div><div class="line">4469</div><div class="line">4470</div><div class="line">4471</div><div class="line">4472</div><div class="line">4473</div><div class="line">4474</div><div class="line">4475</div><div class="line">4476</div><div class="line">4477</div><div class="line">4478</div><div class="line">4479</div><div class="line">4480</div><div class="line">4481</div><div class="line">4482</div><div class="line">4483</div><div class="line">4484</div><div class="line">4485</div><div class="line">4486</div><div class="line">4487</div><div class="line">4488</div><div class="line">4489</div><div class="line">4490</div><div class="line">4491</div><div class="line">4492</div><div class="line">4493</div><div class="line">4494</div><div class="line">4495</div><div class="line">4496</div><div class="line">4497</div><div class="line">4498</div><div class="line">4499</div><div class="line">4500</div><div class="line">4501</div><div class="line">4502</div><div class="line">4503</div><div class="line">4504</div><div class="line">4505</div><div class="line">4506</div><div class="line">4507</div><div class="line">4508</div><div class="line">4509</div><div class="line">4510</div><div class="line">4511</div><div class="line">4512</div><div class="line">4513</div><div class="line">4514</div><div class="line">4515</div><div class="line">4516</div><div class="line">4517</div><div class="line">4518</div><div class="line">4519</div><div class="line">4520</div><div class="line">4521</div><div class="line">4522</div><div class="line">4523</div><div class="line">4524</div><div class="line">4525</div><div class="line">4526</div><div class="line">4527</div><div class="line">4528</div><div class="line">4529</div><div class="line">4530</div><div class="line">4531</div><div class="line">4532</div><div class="line">4533</div><div class="line">4534</div><div class="line">4535</div><div class="line">4536</div><div class="line">4537</div><div class="line">4538</div><div class="line">4539</div><div class="line">4540</div><div class="line">4541</div><div class="line">4542</div><div class="line">4543</div><div class="line">4544</div><div class="line">4545</div><div class="line">4546</div><div class="line">4547</div><div class="line">4548</div><div class="line">4549</div><div class="line">4550</div><div class="line">4551</div><div class="line">4552</div><div class="line">4553</div><div class="line">4554</div><div class="line">4555</div><div class="line">4556</div><div class="line">4557</div><div class="line">4558</div><div class="line">4559</div><div class="line">4560</div><div class="line">4561</div><div class="line">4562</div><div class="line">4563</div><div class="line">4564</div><div class="line">4565</div><div class="line">4566</div><div class="line">4567</div><div class="line">4568</div><div class="line">4569</div><div class="line">4570</div><div class="line">4571</div><div class="line">4572</div><div class="line">4573</div><div class="line">4574</div><div class="line">4575</div><div class="line">4576</div><div class="line">4577</div><div class="line">4578</div><div class="line">4579</div><div class="line">4580</div><div class="line">4581</div><div class="line">4582</div><div class="line">4583</div><div class="line">4584</div><div class="line">4585</div><div class="line">4586</div><div class="line">4587</div><div class="line">4588</div><div class="line">4589</div><div class="line">4590</div><div class="line">4591</div><div class="line">4592</div><div class="line">4593</div><div class="line">4594</div><div class="line">4595</div><div class="line">4596</div><div class="line">4597</div><div class="line">4598</div><div class="line">4599</div><div class="line">4600</div><div class="line">4601</div><div class="line">4602</div><div class="line">4603</div><div class="line">4604</div><div class="line">4605</div><div class="line">4606</div><div class="line">4607</div><div class="line">4608</div><div class="line">4609</div><div class="line">4610</div><div class="line">4611</div><div class="line">4612</div><div class="line">4613</div><div class="line">4614</div><div class="line">4615</div><div class="line">4616</div><div class="line">4617</div><div class="line">4618</div><div class="line">4619</div><div class="line">4620</div><div class="line">4621</div><div class="line">4622</div><div class="line">4623</div><div class="line">4624</div><div class="line">4625</div><div class="line">4626</div><div class="line">4627</div><div class="line">4628</div><div class="line">4629</div><div class="line">4630</div><div class="line">4631</div><div class="line">4632</div><div class="line">4633</div><div class="line">4634</div><div class="line">4635</div><div class="line">4636</div><div class="line">4637</div><div class="line">4638</div><div class="line">4639</div><div class="line">4640</div><div class="line">4641</div><div class="line">4642</div><div class="line">4643</div><div class="line">4644</div><div class="line">4645</div><div class="line">4646</div><div class="line">4647</div><div class="line">4648</div><div class="line">4649</div><div class="line">4650</div><div class="line">4651</div><div class="line">4652</div><div class="line">4653</div><div class="line">4654</div><div class="line">4655</div><div class="line">4656</div><div class="line">4657</div><div class="line">4658</div><div class="line">4659</div><div class="line">4660</div><div class="line">4661</div><div class="line">4662</div><div class="line">4663</div><div class="line">4664</div><div class="line">4665</div><div class="line">4666</div><div class="line">4667</div><div class="line">4668</div><div class="line">4669</div><div class="line">4670</div><div class="line">4671</div><div class="line">4672</div><div class="line">4673</div><div class="line">4674</div><div class="line">4675</div><div class="line">4676</div><div class="line">4677</div><div class="line">4678</div><div class="line">4679</div><div class="line">4680</div><div class="line">4681</div><div class="line">4682</div><div class="line">4683</div><div class="line">4684</div><div class="line">4685</div><div class="line">4686</div><div class="line">4687</div><div class="line">4688</div><div class="line">4689</div><div class="line">4690</div><div class="line">4691</div><div class="line">4692</div><div class="line">4693</div><div class="line">4694</div><div class="line">4695</div><div class="line">4696</div><div class="line">4697</div><div class="line">4698</div><div class="line">4699</div><div class="line">4700</div><div class="line">4701</div><div class="line">4702</div><div class="line">4703</div><div class="line">4704</div><div class="line">4705</div><div class="line">4706</div><div class="line">4707</div><div class="line">4708</div><div class="line">4709</div><div class="line">4710</div><div class="line">4711</div><div class="line">4712</div><div class="line">4713</div><div class="line">4714</div><div class="line">4715</div><div class="line">4716</div><div class="line">4717</div><div class="line">4718</div><div class="line">4719</div><div class="line">4720</div><div class="line">4721</div><div class="line">4722</div><div class="line">4723</div><div class="line">4724</div><div class="line">4725</div><div class="line">4726</div><div class="line">4727</div><div class="line">4728</div><div class="line">4729</div><div class="line">4730</div><div class="line">4731</div><div class="line">4732</div><div class="line">4733</div><div class="line">4734</div><div class="line">4735</div><div class="line">4736</div><div class="line">4737</div><div class="line">4738</div><div class="line">4739</div><div class="line">4740</div><div class="line">4741</div><div class="line">4742</div><div class="line">4743</div><div class="line">4744</div><div class="line">4745</div><div class="line">4746</div><div class="line">4747</div><div class="line">4748</div><div class="line">4749</div><div class="line">4750</div><div class="line">4751</div><div class="line">4752</div><div class="line">4753</div><div class="line">4754</div><div class="line">4755</div><div class="line">4756</div><div class="line">4757</div><div class="line">4758</div><div class="line">4759</div><div class="line">4760</div><div class="line">4761</div><div class="line">4762</div><div class="line">4763</div><div class="line">4764</div><div class="line">4765</div><div class="line">4766</div><div class="line">4767</div><div class="line">4768</div><div class="line">4769</div><div class="line">4770</div><div class="line">4771</div><div class="line">4772</div><div class="line">4773</div><div class="line">4774</div><div class="line">4775</div><div class="line">4776</div><div class="line">4777</div><div class="line">4778</div><div class="line">4779</div><div class="line">4780</div><div class="line">4781</div><div class="line">4782</div><div class="line">4783</div><div class="line">4784</div><div class="line">4785</div><div class="line">4786</div><div class="line">4787</div><div class="line">4788</div><div class="line">4789</div><div class="line">4790</div><div class="line">4791</div><div class="line">4792</div><div class="line">4793</div><div class="line">4794</div><div class="line">4795</div><div class="line">4796</div><div class="line">4797</div><div class="line">4798</div><div class="line">4799</div><div class="line">4800</div><div class="line">4801</div><div class="line">4802</div><div class="line">4803</div><div class="line">4804</div><div class="line">4805</div><div class="line">4806</div><div class="line">4807</div><div class="line">4808</div><div class="line">4809</div><div class="line">4810</div><div class="line">4811</div><div class="line">4812</div><div class="line">4813</div><div class="line">4814</div><div class="line">4815</div><div class="line">4816</div><div class="line">4817</div><div class="line">4818</div><div class="line">4819</div><div class="line">4820</div><div class="line">4821</div><div class="line">4822</div><div class="line">4823</div><div class="line">4824</div><div class="line">4825</div><div class="line">4826</div><div class="line">4827</div><div class="line">4828</div><div class="line">4829</div><div class="line">4830</div><div class="line">4831</div><div class="line">4832</div><div class="line">4833</div><div class="line">4834</div><div class="line">4835</div><div class="line">4836</div><div class="line">4837</div><div class="line">4838</div><div class="line">4839</div><div class="line">4840</div><div class="line">4841</div><div class="line">4842</div><div class="line">4843</div><div class="line">4844</div><div class="line">4845</div><div class="line">4846</div><div class="line">4847</div><div class="line">4848</div><div class="line">4849</div><div class="line">4850</div><div class="line">4851</div><div class="line">4852</div><div class="line">4853</div><div class="line">4854</div><div class="line">4855</div><div class="line">4856</div><div class="line">4857</div><div class="line">4858</div><div class="line">4859</div><div class="line">4860</div><div class="line">4861</div><div class="line">4862</div><div class="line">4863</div><div class="line">4864</div><div class="line">4865</div><div class="line">4866</div><div class="line">4867</div><div class="line">4868</div><div class="line">4869</div><div class="line">4870</div><div class="line">4871</div><div class="line">4872</div><div class="line">4873</div><div class="line">4874</div><div class="line">4875</div><div class="line">4876</div><div class="line">4877</div><div class="line">4878</div><div class="line">4879</div><div class="line">4880</div><div class="line">4881</div><div class="line">4882</div><div class="line">4883</div><div class="line">4884</div><div class="line">4885</div><div class="line">4886</div><div class="line">4887</div><div class="line">4888</div><div class="line">4889</div><div class="line">4890</div><div class="line">4891</div><div class="line">4892</div><div class="line">4893</div><div class="line">4894</div><div class="line">4895</div><div class="line">4896</div><div class="line">4897</div><div class="line">4898</div><div class="line">4899</div><div class="line">4900</div><div class="line">4901</div><div class="line">4902</div><div class="line">4903</div><div class="line">4904</div><div class="line">4905</div><div class="line">4906</div><div class="line">4907</div><div class="line">4908</div><div class="line">4909</div><div class="line">4910</div><div class="line">4911</div><div class="line">4912</div><div class="line">4913</div><div class="line">4914</div><div class="line">4915</div><div class="line">4916</div><div class="line">4917</div><div class="line">4918</div><div class="line">4919</div><div class="line">4920</div><div class="line">4921</div><div class="line">4922</div><div class="line">4923</div><div class="line">4924</div><div class="line">4925</div><div class="line">4926</div><div class="line">4927</div><div class="line">4928</div><div class="line">4929</div><div class="line">4930</div><div class="line">4931</div><div class="line">4932</div><div class="line">4933</div><div class="line">4934</div><div class="line">4935</div><div class="line">4936</div><div class="line">4937</div><div class="line">4938</div><div class="line">4939</div><div class="line">4940</div><div class="line">4941</div><div class="line">4942</div><div class="line">4943</div><div class="line">4944</div><div class="line">4945</div><div class="line">4946</div><div class="line">4947</div><div class="line">4948</div><div class="line">4949</div><div class="line">4950</div><div class="line">4951</div><div class="line">4952</div><div class="line">4953</div><div class="line">4954</div><div class="line">4955</div><div class="line">4956</div><div class="line">4957</div><div class="line">4958</div><div class="line">4959</div><div class="line">4960</div><div class="line">4961</div><div class="line">4962</div><div class="line">4963</div><div class="line">4964</div><div class="line">4965</div><div class="line">4966</div><div class="line">4967</div><div class="line">4968</div><div class="line">4969</div><div class="line">4970</div><div class="line">4971</div><div class="line">4972</div><div class="line">4973</div><div class="line">4974</div><div class="line">4975</div><div class="line">4976</div><div class="line">4977</div><div class="line">4978</div><div class="line">4979</div><div class="line">4980</div><div class="line">4981</div><div class="line">4982</div><div class="line">4983</div><div class="line">4984</div><div class="line">4985</div><div class="line">4986</div><div class="line">4987</div><div class="line">4988</div><div class="line">4989</div><div class="line">4990</div><div class="line">4991</div><div class="line">4992</div><div class="line">4993</div><div class="line">4994</div><div class="line">4995</div><div class="line">4996</div><div class="line">4997</div><div class="line">4998</div><div class="line">4999</div><div class="line">5000</div><div class="line">5001</div><div class="line">5002</div><div class="line">5003</div><div class="line">5004</div><div class="line">5005</div><div class="line">5006</div><div class="line">5007</div><div class="line">5008</div><div class="line">5009</div><div class="line">5010</div><div class="line">5011</div><div class="line">5012</div><div class="line">5013</div><div class="line">5014</div><div class="line">5015</div><div class="line">5016</div><div class="line">5017</div><div class="line">5018</div><div class="line">5019</div><div class="line">5020</div><div class="line">5021</div><div class="line">5022</div><div class="line">5023</div><div class="line">5024</div><div class="line">5025</div><div class="line">5026</div><div class="line">5027</div><div class="line">5028</div><div class="line">5029</div><div class="line">5030</div><div class="line">5031</div><div class="line">5032</div><div class="line">5033</div><div class="line">5034</div><div class="line">5035</div><div class="line">5036</div><div class="line">5037</div><div class="line">5038</div><div class="line">5039</div><div class="line">5040</div><div class="line">5041</div><div class="line">5042</div><div class="line">5043</div><div class="line">5044</div><div class="line">5045</div><div class="line">5046</div><div class="line">5047</div><div class="line">5048</div><div class="line">5049</div><div class="line">5050</div><div class="line">5051</div><div class="line">5052</div><div class="line">5053</div><div class="line">5054</div><div class="line">5055</div><div class="line">5056</div><div class="line">5057</div><div class="line">5058</div><div class="line">5059</div><div class="line">5060</div><div class="line">5061</div><div class="line">5062</div><div class="line">5063</div><div class="line">5064</div><div class="line">5065</div><div class="line">5066</div><div class="line">5067</div><div class="line">5068</div><div class="line">5069</div><div class="line">5070</div><div class="line">5071</div><div class="line">5072</div><div class="line">5073</div><div class="line">5074</div><div class="line">5075</div><div class="line">5076</div><div class="line">5077</div><div class="line">5078</div><div class="line">5079</div><div class="line">5080</div><div class="line">5081</div><div class="line">5082</div><div class="line">5083</div><div class="line">5084</div><div class="line">5085</div><div class="line">5086</div><div class="line">5087</div><div class="line">5088</div><div class="line">5089</div><div class="line">5090</div><div class="line">5091</div><div class="line">5092</div><div class="line">5093</div><div class="line">5094</div><div class="line">5095</div><div class="line">5096</div><div class="line">5097</div><div class="line">5098</div><div class="line">5099</div><div class="line">5100</div><div class="line">5101</div><div class="line">5102</div><div class="line">5103</div><div class="line">5104</div><div class="line">5105</div><div class="line">5106</div><div class="line">5107</div><div class="line">5108</div><div class="line">5109</div><div class="line">5110</div><div class="line">5111</div><div class="line">5112</div><div class="line">5113</div><div class="line">5114</div><div class="line">5115</div><div class="line">5116</div><div class="line">5117</div><div class="line">5118</div><div class="line">5119</div><div class="line">5120</div><div class="line">5121</div><div class="line">5122</div><div class="line">5123</div><div class="line">5124</div><div class="line">5125</div><div class="line">5126</div><div class="line">5127</div><div class="line">5128</div><div class="line">5129</div><div class="line">5130</div><div class="line">5131</div><div class="line">5132</div><div class="line">5133</div><div class="line">5134</div><div class="line">5135</div><div class="line">5136</div><div class="line">5137</div><div class="line">5138</div><div class="line">5139</div><div class="line">5140</div><div class="line">5141</div><div class="line">5142</div><div class="line">5143</div><div class="line">5144</div><div class="line">5145</div><div class="line">5146</div><div class="line">5147</div><div class="line">5148</div><div class="line">5149</div><div class="line">5150</div><div class="line">5151</div><div class="line">5152</div><div class="line">5153</div><div class="line">5154</div><div class="line">5155</div><div class="line">5156</div><div class="line">5157</div><div class="line">5158</div><div class="line">5159</div><div class="line">5160</div><div class="line">5161</div><div class="line">5162</div><div class="line">5163</div><div class="line">5164</div><div class="line">5165</div><div class="line">5166</div><div class="line">5167</div><div class="line">5168</div><div class="line">5169</div><div class="line">5170</div><div class="line">5171</div><div class="line">5172</div><div class="line">5173</div><div class="line">5174</div><div class="line">5175</div><div class="line">5176</div><div class="line">5177</div><div class="line">5178</div><div class="line">5179</div><div class="line">5180</div><div class="line">5181</div><div class="line">5182</div><div class="line">5183</div><div class="line">5184</div><div class="line">5185</div><div class="line">5186</div><div class="line">5187</div><div class="line">5188</div><div class="line">5189</div><div class="line">5190</div><div class="line">5191</div><div class="line">5192</div><div class="line">5193</div><div class="line">5194</div><div class="line">5195</div><div class="line">5196</div><div class="line">5197</div><div class="line">5198</div><div class="line">5199</div><div class="line">5200</div><div class="line">5201</div><div class="line">5202</div><div class="line">5203</div><div class="line">5204</div><div class="line">5205</div><div class="line">5206</div><div class="line">5207</div><div class="line">5208</div><div class="line">5209</div><div class="line">5210</div><div class="line">5211</div><div class="line">5212</div><div class="line">5213</div><div class="line">5214</div><div class="line">5215</div><div class="line">5216</div><div class="line">5217</div><div class="line">5218</div><div class="line">5219</div><div class="line">5220</div><div class="line">5221</div><div class="line">5222</div><div class="line">5223</div><div class="line">5224</div><div class="line">5225</div><div class="line">5226</div><div class="line">5227</div><div class="line">5228</div><div class="line">5229</div><div class="line">5230</div><div class="line">5231</div><div class="line">5232</div><div class="line">5233</div><div class="line">5234</div><div class="line">5235</div><div class="line">5236</div><div class="line">5237</div><div class="line">5238</div><div class="line">5239</div><div class="line">5240</div><div class="line">5241</div><div class="line">5242</div><div class="line">5243</div><div class="line">5244</div><div class="line">5245</div><div class="line">5246</div><div class="line">5247</div><div class="line">5248</div><div class="line">5249</div><div class="line">5250</div><div class="line">5251</div><div class="line">5252</div><div class="line">5253</div><div class="line">5254</div><div class="line">5255</div><div class="line">5256</div><div class="line">5257</div><div class="line">5258</div><div class="line">5259</div><div class="line">5260</div><div class="line">5261</div><div class="line">5262</div><div class="line">5263</div><div class="line">5264</div><div class="line">5265</div><div class="line">5266</div><div class="line">5267</div><div class="line">5268</div><div class="line">5269</div><div class="line">5270</div><div class="line">5271</div><div class="line">5272</div><div class="line">5273</div><div class="line">5274</div><div class="line">5275</div><div class="line">5276</div><div class="line">5277</div><div class="line">5278</div><div class="line">5279</div><div class="line">5280</div><div class="line">5281</div><div class="line">5282</div><div class="line">5283</div><div class="line">5284</div><div class="line">5285</div><div class="line">5286</div><div class="line">5287</div><div class="line">5288</div><div class="line">5289</div><div class="line">5290</div><div class="line">5291</div><div class="line">5292</div><div class="line">5293</div><div class="line">5294</div><div class="line">5295</div><div class="line">5296</div><div class="line">5297</div><div class="line">5298</div><div class="line">5299</div><div class="line">5300</div><div class="line">5301</div><div class="line">5302</div><div class="line">5303</div><div class="line">5304</div><div class="line">5305</div><div class="line">5306</div><div class="line">5307</div><div class="line">5308</div><div class="line">5309</div><div class="line">5310</div><div class="line">5311</div><div class="line">5312</div><div class="line">5313</div><div class="line">5314</div><div class="line">5315</div><div class="line">5316</div><div class="line">5317</div><div class="line">5318</div><div class="line">5319</div><div class="line">5320</div><div class="line">5321</div><div class="line">5322</div><div class="line">5323</div><div class="line">5324</div><div class="line">5325</div><div class="line">5326</div><div class="line">5327</div><div class="line">5328</div><div class="line">5329</div><div class="line">5330</div><div class="line">5331</div><div class="line">5332</div><div class="line">5333</div><div class="line">5334</div><div class="line">5335</div><div class="line">5336</div><div class="line">5337</div><div class="line">5338</div><div class="line">5339</div><div class="line">5340</div><div class="line">5341</div><div class="line">5342</div><div class="line">5343</div><div class="line">5344</div><div class="line">5345</div><div class="line">5346</div><div class="line">5347</div><div class="line">5348</div><div class="line">5349</div><div class="line">5350</div><div class="line">5351</div><div class="line">5352</div><div class="line">5353</div><div class="line">5354</div><div class="line">5355</div><div class="line">5356</div><div class="line">5357</div><div class="line">5358</div><div class="line">5359</div><div class="line">5360</div><div class="line">5361</div><div class="line">5362</div><div class="line">5363</div><div class="line">5364</div><div class="line">5365</div><div class="line">5366</div><div class="line">5367</div><div class="line">5368</div><div class="line">5369</div><div class="line">5370</div><div class="line">5371</div><div class="line">5372</div><div class="line">5373</div><div class="line">5374</div><div class="line">5375</div><div class="line">5376</div><div class="line">5377</div><div class="line">5378</div><div class="line">5379</div><div class="line">5380</div><div class="line">5381</div><div class="line">5382</div><div class="line">5383</div><div class="line">5384</div><div class="line">5385</div><div class="line">5386</div><div class="line">5387</div><div class="line">5388</div><div class="line">5389</div><div class="line">5390</div><div class="line">5391</div><div class="line">5392</div><div class="line">5393</div><div class="line">5394</div><div class="line">5395</div><div class="line">5396</div><div class="line">5397</div><div class="line">5398</div><div class="line">5399</div><div class="line">5400</div><div class="line">5401</div><div class="line">5402</div><div class="line">5403</div><div class="line">5404</div><div class="line">5405</div><div class="line">5406</div><div class="line">5407</div><div class="line">5408</div><div class="line">5409</div><div class="line">5410</div><div class="line">5411</div><div class="line">5412</div><div class="line">5413</div><div class="line">5414</div><div class="line">5415</div><div class="line">5416</div><div class="line">5417</div><div class="line">5418</div><div class="line">5419</div><div class="line">5420</div><div class="line">5421</div><div class="line">5422</div><div class="line">5423</div><div class="line">5424</div><div class="line">5425</div><div class="line">5426</div><div class="line">5427</div><div class="line">5428</div><div class="line">5429</div><div class="line">5430</div><div class="line">5431</div><div class="line">5432</div><div class="line">5433</div><div class="line">5434</div><div class="line">5435</div><div class="line">5436</div><div class="line">5437</div><div class="line">5438</div><div class="line">5439</div><div class="line">5440</div><div class="line">5441</div><div class="line">5442</div><div class="line">5443</div><div class="line">5444</div><div class="line">5445</div><div class="line">5446</div><div class="line">5447</div><div class="line">5448</div><div class="line">5449</div><div class="line">5450</div><div class="line">5451</div><div class="line">5452</div><div class="line">5453</div><div class="line">5454</div><div class="line">5455</div><div class="line">5456</div><div class="line">5457</div><div class="line">5458</div><div class="line">5459</div><div class="line">5460</div><div class="line">5461</div><div class="line">5462</div><div class="line">5463</div><div class="line">5464</div><div class="line">5465</div><div class="line">5466</div><div class="line">5467</div><div class="line">5468</div><div class="line">5469</div><div class="line">5470</div><div class="line">5471</div><div class="line">5472</div><div class="line">5473</div><div class="line">5474</div><div class="line">5475</div><div class="line">5476</div><div class="line">5477</div><div class="line">5478</div><div class="line">5479</div><div class="line">5480</div><div class="line">5481</div><div class="line">5482</div><div class="line">5483</div><div class="line">5484</div><div class="line">5485</div><div class="line">5486</div><div class="line">5487</div><div class="line">5488</div><div class="line">5489</div><div class="line">5490</div><div class="line">5491</div><div class="line">5492</div><div class="line">5493</div><div class="line">5494</div><div class="line">5495</div><div class="line">5496</div><div class="line">5497</div><div class="line">5498</div><div class="line">5499</div><div class="line">5500</div><div class="line">5501</div><div class="line">5502</div><div class="line">5503</div><div class="line">5504</div><div class="line">5505</div><div class="line">5506</div><div class="line">5507</div><div class="line">5508</div><div class="line">5509</div><div class="line">5510</div><div class="line">5511</div><div class="line">5512</div><div class="line">5513</div><div class="line">5514</div><div class="line">5515</div><div class="line">5516</div><div class="line">5517</div><div class="line">5518</div><div class="line">5519</div><div class="line">5520</div><div class="line">5521</div><div class="line">5522</div><div class="line">5523</div><div class="line">5524</div><div class="line">5525</div><div class="line">5526</div><div class="line">5527</div><div class="line">5528</div><div class="line">5529</div><div class="line">5530</div><div class="line">5531</div><div class="line">5532</div><div class="line">5533</div><div class="line">5534</div><div class="line">5535</div><div class="line">5536</div><div class="line">5537</div><div class="line">5538</div><div class="line">5539</div><div class="line">5540</div><div class="line">5541</div><div class="line">5542</div><div class="line">5543</div><div class="line">5544</div><div class="line">5545</div><div class="line">5546</div><div class="line">5547</div><div class="line">5548</div><div class="line">5549</div><div class="line">5550</div><div class="line">5551</div><div class="line">5552</div><div class="line">5553</div><div class="line">5554</div><div class="line">5555</div><div class="line">5556</div><div class="line">5557</div><div class="line">5558</div><div class="line">5559</div><div class="line">5560</div><div class="line">5561</div><div class="line">5562</div><div class="line">5563</div><div class="line">5564</div><div class="line">5565</div><div class="line">5566</div><div class="line">5567</div><div class="line">5568</div><div class="line">5569</div><div class="line">5570</div><div class="line">5571</div><div class="line">5572</div><div class="line">5573</div><div class="line">5574</div><div class="line">5575</div><div class="line">5576</div><div class="line">5577</div><div class="line">5578</div><div class="line">5579</div><div class="line">5580</div><div class="line">5581</div><div class="line">5582</div><div class="line">5583</div><div class="line">5584</div><div class="line">5585</div><div class="line">5586</div><div class="line">5587</div><div class="line">5588</div><div class="line">5589</div><div class="line">5590</div><div class="line">5591</div><div class="line">5592</div><div class="line">5593</div><div class="line">5594</div><div class="line">5595</div><div class="line">5596</div><div class="line">5597</div><div class="line">5598</div><div class="line">5599</div><div class="line">5600</div><div class="line">5601</div><div class="line">5602</div><div class="line">5603</div><div class="line">5604</div><div class="line">5605</div><div class="line">5606</div><div class="line">5607</div><div class="line">5608</div><div class="line">5609</div><div class="line">5610</div><div class="line">5611</div><div class="line">5612</div><div class="line">5613</div><div class="line">5614</div><div class="line">5615</div><div class="line">5616</div><div class="line">5617</div><div class="line">5618</div><div class="line">5619</div><div class="line">5620</div><div class="line">5621</div><div class="line">5622</div><div class="line">5623</div><div class="line">5624</div><div class="line">5625</div><div class="line">5626</div><div class="line">5627</div><div class="line">5628</div><div class="line">5629</div><div class="line">5630</div><div class="line">5631</div><div class="line">5632</div><div class="line">5633</div><div class="line">5634</div><div class="line">5635</div><div class="line">5636</div><div class="line">5637</div><div class="line">5638</div><div class="line">5639</div><div class="line">5640</div><div class="line">5641</div><div class="line">5642</div><div class="line">5643</div><div class="line">5644</div><div class="line">5645</div><div class="line">5646</div><div class="line">5647</div><div class="line">5648</div><div class="line">5649</div><div class="line">5650</div><div class="line">5651</div><div class="line">5652</div><div class="line">5653</div><div class="line">5654</div><div class="line">5655</div><div class="line">5656</div><div class="line">5657</div><div class="line">5658</div><div class="line">5659</div><div class="line">5660</div><div class="line">5661</div><div class="line">5662</div><div class="line">5663</div><div class="line">5664</div><div class="line">5665</div><div class="line">5666</div><div class="line">5667</div><div class="line">5668</div><div class="line">5669</div><div class="line">5670</div><div class="line">5671</div><div class="line">5672</div><div class="line">5673</div><div class="line">5674</div><div class="line">5675</div><div class="line">5676</div><div class="line">5677</div><div class="line">5678</div><div class="line">5679</div><div class="line">5680</div><div class="line">5681</div><div class="line">5682</div><div class="line">5683</div><div class="line">5684</div><div class="line">5685</div><div class="line">5686</div><div class="line">5687</div><div class="line">5688</div><div class="line">5689</div><div class="line">5690</div><div class="line">5691</div><div class="line">5692</div><div class="line">5693</div><div class="line">5694</div><div class="line">5695</div><div class="line">5696</div><div class="line">5697</div><div class="line">5698</div><div class="line">5699</div><div class="line">5700</div><div class="line">5701</div><div class="line">5702</div><div class="line">5703</div><div class="line">5704</div><div class="line">5705</div><div class="line">5706</div><div class="line">5707</div><div class="line">5708</div><div class="line">5709</div><div class="line">5710</div><div class="line">5711</div><div class="line">5712</div><div class="line">5713</div><div class="line">5714</div><div class="line">5715</div><div class="line">5716</div><div class="line">5717</div><div class="line">5718</div><div class="line">5719</div><div class="line">5720</div><div class="line">5721</div><div class="line">5722</div><div class="line">5723</div><div class="line">5724</div><div class="line">5725</div><div class="line">5726</div><div class="line">5727</div><div class="line">5728</div><div class="line">5729</div><div class="line">5730</div><div class="line">5731</div><div class="line">5732</div><div class="line">5733</div><div class="line">5734</div><div class="line">5735</div><div class="line">5736</div><div class="line">5737</div><div class="line">5738</div><div class="line">5739</div><div class="line">5740</div><div class="line">5741</div><div class="line">5742</div><div class="line">5743</div><div class="line">5744</div><div class="line">5745</div><div class="line">5746</div><div class="line">5747</div><div class="line">5748</div><div class="line">5749</div><div class="line">5750</div><div class="line">5751</div><div class="line">5752</div><div class="line">5753</div><div class="line">5754</div><div class="line">5755</div><div class="line">5756</div><div class="line">5757</div><div class="line">5758</div><div class="line">5759</div><div class="line">5760</div><div class="line">5761</div><div class="line">5762</div><div class="line">5763</div><div class="line">5764</div><div class="line">5765</div><div class="line">5766</div><div class="line">5767</div><div class="line">5768</div><div class="line">5769</div><div class="line">5770</div><div class="line">5771</div><div class="line">5772</div><div class="line">5773</div><div class="line">5774</div><div class="line">5775</div><div class="line">5776</div><div class="line">5777</div><div class="line">5778</div><div class="line">5779</div><div class="line">5780</div><div class="line">5781</div><div class="line">5782</div><div class="line">5783</div><div class="line">5784</div><div class="line">5785</div><div class="line">5786</div><div class="line">5787</div><div class="line">5788</div><div class="line">5789</div><div class="line">5790</div><div class="line">5791</div><div class="line">5792</div><div class="line">5793</div><div class="line">5794</div><div class="line">5795</div><div class="line">5796</div><div class="line">5797</div><div class="line">5798</div><div class="line">5799</div><div class="line">5800</div><div class="line">5801</div><div class="line">5802</div><div class="line">5803</div><div class="line">5804</div><div class="line">5805</div><div class="line">5806</div><div class="line">5807</div><div class="line">5808</div><div class="line">5809</div><div class="line">5810</div><div class="line">5811</div><div class="line">5812</div><div class="line">5813</div><div class="line">5814</div><div class="line">5815</div><div class="line">5816</div><div class="line">5817</div><div class="line">5818</div><div class="line">5819</div><div class="line">5820</div><div class="line">5821</div><div class="line">5822</div><div class="line">5823</div><div class="line">5824</div><div class="line">5825</div><div class="line">5826</div><div class="line">5827</div><div class="line">5828</div><div class="line">5829</div><div class="line">5830</div><div class="line">5831</div><div class="line">5832</div><div class="line">5833</div><div class="line">5834</div><div class="line">5835</div><div class="line">5836</div><div class="line">5837</div><div class="line">5838</div><div class="line">5839</div><div class="line">5840</div><div class="line">5841</div><div class="line">5842</div><div class="line">5843</div><div class="line">5844</div><div class="line">5845</div><div class="line">5846</div><div class="line">5847</div><div class="line">5848</div><div class="line">5849</div><div class="line">5850</div><div class="line">5851</div><div class="line">5852</div><div class="line">5853</div><div class="line">5854</div><div class="line">5855</div><div class="line">5856</div><div class="line">5857</div><div class="line">5858</div><div class="line">5859</div><div class="line">5860</div><div class="line">5861</div><div class="line">5862</div><div class="line">5863</div><div class="line">5864</div><div class="line">5865</div><div class="line">5866</div><div class="line">5867</div><div class="line">5868</div><div class="line">5869</div><div class="line">5870</div><div class="line">5871</div><div class="line">5872</div><div class="line">5873</div><div class="line">5874</div><div class="line">5875</div><div class="line">5876</div><div class="line">5877</div><div class="line">5878</div><div class="line">5879</div><div class="line">5880</div><div class="line">5881</div><div class="line">5882</div><div class="line">5883</div><div class="line">5884</div><div class="line">5885</div><div class="line">5886</div><div class="line">5887</div><div class="line">5888</div><div class="line">5889</div><div class="line">5890</div><div class="line">5891</div><div class="line">5892</div><div class="line">5893</div><div class="line">5894</div><div class="line">5895</div><div class="line">5896</div><div class="line">5897</div><div class="line">5898</div><div class="line">5899</div><div class="line">5900</div><div class="line">5901</div><div class="line">5902</div><div class="line">5903</div><div class="line">5904</div><div class="line">5905</div><div class="line">5906</div><div class="line">5907</div><div class="line">5908</div><div class="line">5909</div><div class="line">5910</div><div class="line">5911</div><div class="line">5912</div><div class="line">5913</div><div class="line">5914</div><div class="line">5915</div><div class="line">5916</div><div class="line">5917</div><div class="line">5918</div><div class="line">5919</div><div class="line">5920</div><div class="line">5921</div><div class="line">5922</div><div class="line">5923</div><div class="line">5924</div><div class="line">5925</div><div class="line">5926</div><div class="line">5927</div><div class="line">5928</div><div class="line">5929</div><div class="line">5930</div><div class="line">5931</div><div class="line">5932</div><div class="line">5933</div><div class="line">5934</div><div class="line">5935</div><div class="line">5936</div><div class="line">5937</div><div class="line">5938</div><div class="line">5939</div><div class="line">5940</div><div class="line">5941</div><div class="line">5942</div><div class="line">5943</div><div class="line">5944</div><div class="line">5945</div><div class="line">5946</div><div class="line">5947</div><div class="line">5948</div><div class="line">5949</div><div class="line">5950</div><div class="line">5951</div><div class="line">5952</div><div class="line">5953</div><div class="line">5954</div><div class="line">5955</div><div class="line">5956</div><div class="line">5957</div><div class="line">5958</div><div class="line">5959</div><div class="line">5960</div><div class="line">5961</div><div class="line">5962</div><div class="line">5963</div><div class="line">5964</div><div class="line">5965</div><div class="line">5966</div><div class="line">5967</div><div class="line">5968</div><div class="line">5969</div><div class="line">5970</div><div class="line">5971</div><div class="line">5972</div><div class="line">5973</div><div class="line">5974</div><div class="line">5975</div><div class="line">5976</div><div class="line">5977</div><div class="line">5978</div><div class="line">5979</div><div class="line">5980</div><div class="line">5981</div><div class="line">5982</div><div class="line">5983</div><div class="line">5984</div><div class="line">5985</div><div class="line">5986</div><div class="line">5987</div><div class="line">5988</div><div class="line">5989</div><div class="line">5990</div><div class="line">5991</div><div class="line">5992</div><div class="line">5993</div><div class="line">5994</div><div class="line">5995</div><div class="line">5996</div><div class="line">5997</div><div class="line">5998</div><div class="line">5999</div><div class="line">6000</div><div class="line">6001</div><div class="line">6002</div><div class="line">6003</div><div class="line">6004</div><div class="line">6005</div><div class="line">6006</div><div class="line">6007</div><div class="line">6008</div><div class="line">6009</div><div class="line">6010</div><div class="line">6011</div><div class="line">6012</div><div class="line">6013</div><div class="line">6014</div><div class="line">6015</div><div class="line">6016</div><div class="line">6017</div><div class="line">6018</div><div class="line">6019</div><div class="line">6020</div><div class="line">6021</div><div class="line">6022</div><div class="line">6023</div><div class="line">6024</div><div class="line">6025</div><div class="line">6026</div><div class="line">6027</div><div class="line">6028</div><div class="line">6029</div><div class="line">6030</div><div class="line">6031</div><div class="line">6032</div><div class="line">6033</div><div class="line">6034</div><div class="line">6035</div><div class="line">6036</div><div class="line">6037</div><div class="line">6038</div><div class="line">6039</div><div class="line">6040</div><div class="line">6041</div><div class="line">6042</div><div class="line">6043</div><div class="line">6044</div><div class="line">6045</div><div class="line">6046</div><div class="line">6047</div><div class="line">6048</div><div class="line">6049</div><div class="line">6050</div><div class="line">6051</div><div class="line">6052</div><div class="line">6053</div><div class="line">6054</div><div class="line">6055</div><div class="line">6056</div><div class="line">6057</div><div class="line">6058</div><div class="line">6059</div><div class="line">6060</div><div class="line">6061</div><div class="line">6062</div><div class="line">6063</div><div class="line">6064</div><div class="line">6065</div><div class="line">6066</div><div class="line">6067</div><div class="line">6068</div><div class="line">6069</div><div class="line">6070</div><div class="line">6071</div><div class="line">6072</div><div class="line">6073</div><div class="line">6074</div><div class="line">6075</div><div class="line">6076</div><div class="line">6077</div><div class="line">6078</div><div class="line">6079</div><div class="line">6080</div><div class="line">6081</div><div class="line">6082</div><div class="line">6083</div><div class="line">6084</div><div class="line">6085</div><div class="line">6086</div><div class="line">6087</div><div class="line">6088</div><div class="line">6089</div><div class="line">6090</div><div class="line">6091</div><div class="line">6092</div><div class="line">6093</div><div class="line">6094</div><div class="line">6095</div><div class="line">6096</div><div class="line">6097</div><div class="line">6098</div><div class="line">6099</div><div class="line">6100</div><div class="line">6101</div><div class="line">6102</div><div class="line">6103</div><div class="line">6104</div><div class="line">6105</div><div class="line">6106</div><div class="line">6107</div><div class="line">6108</div><div class="line">6109</div><div class="line">6110</div><div class="line">6111</div><div class="line">6112</div><div class="line">6113</div><div class="line">6114</div><div class="line">6115</div><div class="line">6116</div><div class="line">6117</div><div class="line">6118</div><div class="line">6119</div><div class="line">6120</div><div class="line">6121</div><div class="line">6122</div><div class="line">6123</div><div class="line">6124</div><div class="line">6125</div><div class="line">6126</div><div class="line">6127</div><div class="line">6128</div><div class="line">6129</div><div class="line">6130</div><div class="line">6131</div><div class="line">6132</div><div class="line">6133</div><div class="line">6134</div><div class="line">6135</div><div class="line">6136</div><div class="line">6137</div><div class="line">6138</div><div class="line">6139</div><div class="line">6140</div><div class="line">6141</div><div class="line">6142</div><div class="line">6143</div><div class="line">6144</div><div class="line">6145</div><div class="line">6146</div><div class="line">6147</div><div class="line">6148</div><div class="line">6149</div><div class="line">6150</div><div class="line">6151</div><div class="line">6152</div><div class="line">6153</div><div class="line">6154</div><div class="line">6155</div><div class="line">6156</div><div class="line">6157</div><div class="line">6158</div><div class="line">6159</div><div class="line">6160</div><div class="line">6161</div><div class="line">6162</div><div class="line">6163</div><div class="line">6164</div><div class="line">6165</div><div class="line">6166</div><div class="line">6167</div><div class="line">6168</div><div class="line">6169</div><div class="line">6170</div><div class="line">6171</div><div class="line">6172</div><div class="line">6173</div><div class="line">6174</div><div class="line">6175</div><div class="line">6176</div><div class="line">6177</div><div class="line">6178</div><div class="line">6179</div><div class="line">6180</div><div class="line">6181</div><div class="line">6182</div><div class="line">6183</div><div class="line">6184</div><div class="line">6185</div><div class="line">6186</div><div class="line">6187</div><div class="line">6188</div><div class="line">6189</div><div class="line">6190</div><div class="line">6191</div><div class="line">6192</div><div class="line">6193</div><div class="line">6194</div><div class="line">6195</div><div class="line">6196</div><div class="line">6197</div><div class="line">6198</div><div class="line">6199</div><div class="line">6200</div><div class="line">6201</div><div class="line">6202</div><div class="line">6203</div><div class="line">6204</div><div class="line">6205</div><div class="line">6206</div><div class="line">6207</div><div class="line">6208</div><div class="line">6209</div><div class="line">6210</div><div class="line">6211</div><div class="line">6212</div><div class="line">6213</div><div class="line">6214</div><div class="line">6215</div><div class="line">6216</div><div class="line">6217</div><div class="line">6218</div><div class="line">6219</div><div class="line">6220</div><div class="line">6221</div><div class="line">6222</div><div class="line">6223</div><div class="line">6224</div><div class="line">6225</div><div class="line">6226</div><div class="line">6227</div><div class="line">6228</div><div class="line">6229</div><div class="line">6230</div><div class="line">6231</div><div class="line">6232</div><div class="line">6233</div><div class="line">6234</div><div class="line">6235</div><div class="line">6236</div><div class="line">6237</div><div class="line">6238</div><div class="line">6239</div><div class="line">6240</div><div class="line">6241</div><div class="line">6242</div><div class="line">6243</div><div class="line">6244</div><div class="line">6245</div><div class="line">6246</div><div class="line">6247</div><div class="line">6248</div><div class="line">6249</div><div class="line">6250</div><div class="line">6251</div><div class="line">6252</div><div class="line">6253</div><div class="line">6254</div><div class="line">6255</div><div class="line">6256</div><div class="line">6257</div><div class="line">6258</div><div class="line">6259</div><div class="line">6260</div><div class="line">6261</div><div class="line">6262</div><div class="line">6263</div><div class="line">6264</div><div class="line">6265</div><div class="line">6266</div><div class="line">6267</div><div class="line">6268</div><div class="line">6269</div><div class="line">6270</div><div class="line">6271</div><div class="line">6272</div><div class="line">6273</div><div class="line">6274</div><div class="line">6275</div><div class="line">6276</div><div class="line">6277</div><div class="line">6278</div><div class="line">6279</div><div class="line">6280</div><div class="line">6281</div><div class="line">6282</div><div class="line">6283</div><div class="line">6284</div><div class="line">6285</div><div class="line">6286</div><div class="line">6287</div><div class="line">6288</div><div class="line">6289</div><div class="line">6290</div><div class="line">6291</div><div class="line">6292</div><div class="line">6293</div><div class="line">6294</div><div class="line">6295</div><div class="line">6296</div><div class="line">6297</div><div class="line">6298</div><div class="line">6299</div><div class="line">6300</div><div class="line">6301</div><div class="line">6302</div><div class="line">6303</div><div class="line">6304</div><div class="line">6305</div><div class="line">6306</div><div class="line">6307</div><div class="line">6308</div><div class="line">6309</div><div class="line">6310</div><div class="line">6311</div><div class="line">6312</div><div class="line">6313</div><div class="line">6314</div><div class="line">6315</div><div class="line">6316</div><div class="line">6317</div><div class="line">6318</div><div class="line">6319</div><div class="line">6320</div><div class="line">6321</div><div class="line">6322</div><div class="line">6323</div><div class="line">6324</div><div class="line">6325</div><div class="line">6326</div><div class="line">6327</div><div class="line">6328</div><div class="line">6329</div><div class="line">6330</div><div class="line">6331</div><div class="line">6332</div><div class="line">6333</div><div class="line">6334</div><div class="line">6335</div><div class="line">6336</div><div class="line">6337</div><div class="line">6338</div><div class="line">6339</div><div class="line">6340</div><div class="line">6341</div><div class="line">6342</div><div class="line">6343</div><div class="line">6344</div><div class="line">6345</div><div class="line">6346</div><div class="line">6347</div><div class="line">6348</div><div class="line">6349</div><div class="line">6350</div><div class="line">6351</div><div class="line">6352</div><div class="line">6353</div><div class="line">6354</div><div class="line">6355</div><div class="line">6356</div><div class="line">6357</div><div class="line">6358</div><div class="line">6359</div><div class="line">6360</div><div class="line">6361</div><div class="line">6362</div><div class="line">6363</div><div class="line">6364</div><div class="line">6365</div><div class="line">6366</div><div class="line">6367</div><div class="line">6368</div><div class="line">6369</div><div class="line">6370</div><div class="line">6371</div><div class="line">6372</div><div class="line">6373</div><div class="line">6374</div><div class="line">6375</div><div class="line">6376</div><div class="line">6377</div><div class="line">6378</div><div class="line">6379</div><div class="line">6380</div><div class="line">6381</div><div class="line">6382</div><div class="line">6383</div><div class="line">6384</div><div class="line">6385</div><div class="line">6386</div><div class="line">6387</div><div class="line">6388</div><div class="line">6389</div><div class="line">6390</div><div class="line">6391</div><div class="line">6392</div><div class="line">6393</div><div class="line">6394</div><div class="line">6395</div><div class="line">6396</div><div class="line">6397</div><div class="line">6398</div><div class="line">6399</div><div class="line">6400</div><div class="line">6401</div><div class="line">6402</div><div class="line">6403</div><div class="line">6404</div><div class="line">6405</div><div class="line">6406</div><div class="line">6407</div><div class="line">6408</div><div class="line">6409</div><div class="line">6410</div><div class="line">6411</div><div class="line">6412</div><div class="line">6413</div><div class="line">6414</div><div class="line">6415</div><div class="line">6416</div><div class="line">6417</div><div class="line">6418</div><div class="line">6419</div><div class="line">6420</div><div class="line">6421</div><div class="line">6422</div><div class="line">6423</div><div class="line">6424</div><div class="line">6425</div><div class="line">6426</div><div class="line">6427</div><div class="line">6428</div><div class="line">6429</div><div class="line">6430</div><div class="line">6431</div><div class="line">6432</div><div class="line">6433</div><div class="line">6434</div><div class="line">6435</div><div class="line">6436</div><div class="line">6437</div><div class="line">6438</div><div class="line">6439</div><div class="line">6440</div><div class="line">6441</div><div class="line">6442</div><div class="line">6443</div><div class="line">6444</div><div class="line">6445</div><div class="line">6446</div><div class="line">6447</div><div class="line">6448</div><div class="line">6449</div><div class="line">6450</div><div class="line">6451</div><div class="line">6452</div><div class="line">6453</div><div class="line">6454</div><div class="line">6455</div><div class="line">6456</div><div class="line">6457</div><div class="line">6458</div><div class="line">6459</div><div class="line">6460</div><div class="line">6461</div><div class="line">6462</div><div class="line">6463</div><div class="line">6464</div><div class="line">6465</div><div class="line">6466</div><div class="line">6467</div><div class="line">6468</div><div class="line">6469</div><div class="line">6470</div><div class="line">6471</div><div class="line">6472</div><div class="line">6473</div><div class="line">6474</div><div class="line">6475</div><div class="line">6476</div><div class="line">6477</div><div class="line">6478</div><div class="line">6479</div><div class="line">6480</div><div class="line">6481</div><div class="line">6482</div><div class="line">6483</div><div class="line">6484</div><div class="line">6485</div><div class="line">6486</div><div class="line">6487</div><div class="line">6488</div><div class="line">6489</div><div class="line">6490</div><div class="line">6491</div><div class="line">6492</div><div class="line">6493</div><div class="line">6494</div><div class="line">6495</div><div class="line">6496</div><div class="line">6497</div><div class="line">6498</div><div class="line">6499</div><div class="line">6500</div><div class="line">6501</div><div class="line">6502</div><div class="line">6503</div><div class="line">6504</div><div class="line">6505</div><div class="line">6506</div><div class="line">6507</div><div class="line">6508</div><div class="line">6509</div><div class="line">6510</div><div class="line">6511</div><div class="line">6512</div><div class="line">6513</div><div class="line">6514</div><div class="line">6515</div><div class="line">6516</div><div class="line">6517</div><div class="line">6518</div><div class="line">6519</div><div class="line">6520</div><div class="line">6521</div><div class="line">6522</div><div class="line">6523</div><div class="line">6524</div><div class="line">6525</div><div class="line">6526</div><div class="line">6527</div><div class="line">6528</div><div class="line">6529</div><div class="line">6530</div><div class="line">6531</div><div class="line">6532</div><div class="line">6533</div><div class="line">6534</div><div class="line">6535</div><div class="line">6536</div><div class="line">6537</div><div class="line">6538</div><div class="line">6539</div><div class="line">6540</div><div class="line">6541</div><div class="line">6542</div><div class="line">6543</div><div class="line">6544</div><div class="line">6545</div><div class="line">6546</div><div class="line">6547</div><div class="line">6548</div><div class="line">6549</div><div class="line">6550</div><div class="line">6551</div><div class="line">6552</div><div class="line">6553</div><div class="line">6554</div><div class="line">6555</div><div class="line">6556</div><div class="line">6557</div><div class="line">6558</div><div class="line">6559</div><div class="line">6560</div><div class="line">6561</div><div class="line">6562</div><div class="line">6563</div><div class="line">6564</div><div class="line">6565</div><div class="line">6566</div><div class="line">6567</div><div class="line">6568</div><div class="line">6569</div><div class="line">6570</div><div class="line">6571</div><div class="line">6572</div><div class="line">6573</div><div class="line">6574</div><div class="line">6575</div><div class="line">6576</div><div class="line">6577</div><div class="line">6578</div><div class="line">6579</div><div class="line">6580</div><div class="line">6581</div><div class="line">6582</div><div class="line">6583</div><div class="line">6584</div><div class="line">6585</div><div class="line">6586</div><div class="line">6587</div><div class="line">6588</div><div class="line">6589</div><div class="line">6590</div><div class="line">6591</div><div class="line">6592</div><div class="line">6593</div><div class="line">6594</div><div class="line">6595</div><div class="line">6596</div><div class="line">6597</div><div class="line">6598</div><div class="line">6599</div><div class="line">6600</div><div class="line">6601</div><div class="line">6602</div><div class="line">6603</div><div class="line">6604</div><div class="line">6605</div><div class="line">6606</div><div class="line">6607</div><div class="line">6608</div><div class="line">6609</div><div class="line">6610</div><div class="line">6611</div><div class="line">6612</div><div class="line">6613</div><div class="line">6614</div><div class="line">6615</div><div class="line">6616</div><div class="line">6617</div><div class="line">6618</div><div class="line">6619</div><div class="line">6620</div><div class="line">6621</div><div class="line">6622</div><div class="line">6623</div><div class="line">6624</div><div class="line">6625</div><div class="line">6626</div><div class="line">6627</div><div class="line">6628</div><div class="line">6629</div><div class="line">6630</div><div class="line">6631</div><div class="line">6632</div><div class="line">6633</div><div class="line">6634</div><div class="line">6635</div><div class="line">6636</div><div class="line">6637</div><div class="line">6638</div><div class="line">6639</div><div class="line">6640</div><div class="line">6641</div><div class="line">6642</div><div class="line">6643</div><div class="line">6644</div><div class="line">6645</div><div class="line">6646</div><div class="line">6647</div><div class="line">6648</div><div class="line">6649</div><div class="line">6650</div><div class="line">6651</div><div class="line">6652</div><div class="line">6653</div><div class="line">6654</div><div class="line">6655</div><div class="line">6656</div><div class="line">6657</div><div class="line">6658</div><div class="line">6659</div><div class="line">6660</div><div class="line">6661</div><div class="line">6662</div><div class="line">6663</div><div class="line">6664</div><div class="line">6665</div><div class="line">6666</div><div class="line">6667</div><div class="line">6668</div><div class="line">6669</div><div class="line">6670</div><div class="line">6671</div><div class="line">6672</div><div class="line">6673</div><div class="line">6674</div><div class="line">6675</div><div class="line">6676</div><div class="line">6677</div><div class="line">6678</div><div class="line">6679</div><div class="line">6680</div><div class="line">6681</div><div class="line">6682</div><div class="line">6683</div><div class="line">6684</div><div class="line">6685</div><div class="line">6686</div><div class="line">6687</div><div class="line">6688</div><div class="line">6689</div><div class="line">6690</div><div class="line">6691</div><div class="line">6692</div><div class="line">6693</div><div class="line">6694</div><div class="line">6695</div><div class="line">6696</div><div class="line">6697</div><div class="line">6698</div><div class="line">6699</div><div class="line">6700</div><div class="line">6701</div><div class="line">6702</div><div class="line">6703</div><div class="line">6704</div><div class="line">6705</div><div class="line">6706</div><div class="line">6707</div><div class="line">6708</div><div class="line">6709</div><div class="line">6710</div><div class="line">6711</div><div class="line">6712</div><div class="line">6713</div><div class="line">6714</div><div class="line">6715</div><div class="line">6716</div><div class="line">6717</div><div class="line">6718</div><div class="line">6719</div><div class="line">6720</div><div class="line">6721</div><div class="line">6722</div><div class="line">6723</div><div class="line">6724</div><div class="line">6725</div><div class="line">6726</div><div class="line">6727</div><div class="line">6728</div><div class="line">6729</div><div class="line">6730</div><div class="line">6731</div><div class="line">6732</div><div class="line">6733</div><div class="line">6734</div><div class="line">6735</div><div class="line">6736</div><div class="line">6737</div><div class="line">6738</div><div class="line">6739</div><div class="line">6740</div><div class="line">6741</div><div class="line">6742</div><div class="line">6743</div><div class="line">6744</div><div class="line">6745</div><div class="line">6746</div><div class="line">6747</div><div class="line">6748</div><div class="line">6749</div><div class="line">6750</div><div class="line">6751</div><div class="line">6752</div><div class="line">6753</div><div class="line">6754</div><div class="line">6755</div><div class="line">6756</div><div class="line">6757</div><div class="line">6758</div><div class="line">6759</div><div class="line">6760</div><div class="line">6761</div><div class="line">6762</div><div class="line">6763</div><div class="line">6764</div><div class="line">6765</div><div class="line">6766</div><div class="line">6767</div><div class="line">6768</div><div class="line">6769</div><div class="line">6770</div><div class="line">6771</div><div class="line">6772</div><div class="line">6773</div><div class="line">6774</div><div class="line">6775</div><div class="line">6776</div><div class="line">6777</div><div class="line">6778</div><div class="line">6779</div><div class="line">6780</div><div class="line">6781</div><div class="line">6782</div><div class="line">6783</div><div class="line">6784</div><div class="line">6785</div><div class="line">6786</div><div class="line">6787</div><div class="line">6788</div><div class="line">6789</div><div class="line">6790</div><div class="line">6791</div><div class="line">6792</div><div class="line">6793</div><div class="line">6794</div><div class="line">6795</div><div class="line">6796</div><div class="line">6797</div><div class="line">6798</div><div class="line">6799</div><div class="line">6800</div><div class="line">6801</div><div class="line">6802</div><div class="line">6803</div><div class="line">6804</div><div class="line">6805</div><div class="line">6806</div><div class="line">6807</div><div class="line">6808</div><div class="line">6809</div><div class="line">6810</div><div class="line">6811</div><div class="line">6812</div><div class="line">6813</div><div class="line">6814</div><div class="line">6815</div><div class="line">6816</div><div class="line">6817</div><div class="line">6818</div><div class="line">6819</div><div class="line">6820</div><div class="line">6821</div><div class="line">6822</div><div class="line">6823</div><div class="line">6824</div><div class="line">6825</div><div class="line">6826</div><div class="line">6827</div><div class="line">6828</div><div class="line">6829</div><div class="line">6830</div><div class="line">6831</div><div class="line">6832</div><div class="line">6833</div><div class="line">6834</div><div class="line">6835</div><div class="line">6836</div><div class="line">6837</div><div class="line">6838</div><div class="line">6839</div><div class="line">6840</div><div class="line">6841</div><div class="line">6842</div><div class="line">6843</div><div class="line">6844</div><div class="line">6845</div><div class="line">6846</div><div class="line">6847</div><div class="line">6848</div><div class="line">6849</div><div class="line">6850</div><div class="line">6851</div><div class="line">6852</div><div class="line">6853</div><div class="line">6854</div><div class="line">6855</div><div class="line">6856</div><div class="line">6857</div><div class="line">6858</div><div class="line">6859</div><div class="line">6860</div><div class="line">6861</div><div class="line">6862</div><div class="line">6863</div><div class="line">6864</div><div class="line">6865</div><div class="line">6866</div><div class="line">6867</div><div class="line">6868</div><div class="line">6869</div><div class="line">6870</div><div class="line">6871</div><div class="line">6872</div><div class="line">6873</div><div class="line">6874</div><div class="line">6875</div><div class="line">6876</div><div class="line">6877</div><div class="line">6878</div><div class="line">6879</div><div class="line">6880</div><div class="line">6881</div><div class="line">6882</div><div class="line">6883</div><div class="line">6884</div><div class="line">6885</div><div class="line">6886</div><div class="line">6887</div><div class="line">6888</div><div class="line">6889</div><div class="line">6890</div><div class="line">6891</div><div class="line">6892</div><div class="line">6893</div><div class="line">6894</div><div class="line">6895</div><div class="line">6896</div><div class="line">6897</div><div class="line">6898</div><div class="line">6899</div><div class="line">6900</div><div class="line">6901</div><div class="line">6902</div><div class="line">6903</div><div class="line">6904</div><div class="line">6905</div><div class="line">6906</div><div class="line">6907</div><div class="line">6908</div><div class="line">6909</div><div class="line">6910</div><div class="line">6911</div><div class="line">6912</div><div class="line">6913</div><div class="line">6914</div><div class="line">6915</div><div class="line">6916</div><div class="line">6917</div><div class="line">6918</div><div class="line">6919</div><div class="line">6920</div><div class="line">6921</div><div class="line">6922</div><div class="line">6923</div><div class="line">6924</div><div class="line">6925</div><div class="line">6926</div><div class="line">6927</div><div class="line">6928</div><div class="line">6929</div><div class="line">6930</div><div class="line">6931</div><div class="line">6932</div><div class="line">6933</div><div class="line">6934</div><div class="line">6935</div><div class="line">6936</div><div class="line">6937</div><div class="line">6938</div><div class="line">6939</div><div class="line">6940</div><div class="line">6941</div><div class="line">6942</div><div class="line">6943</div><div class="line">6944</div><div class="line">6945</div><div class="line">6946</div><div class="line">6947</div><div class="line">6948</div><div class="line">6949</div><div class="line">6950</div><div class="line">6951</div><div class="line">6952</div><div class="line">6953</div><div class="line">6954</div><div class="line">6955</div><div class="line">6956</div><div class="line">6957</div><div class="line">6958</div><div class="line">6959</div><div class="line">6960</div><div class="line">6961</div><div class="line">6962</div><div class="line">6963</div><div class="line">6964</div><div class="line">6965</div><div class="line">6966</div><div class="line">6967</div><div class="line">6968</div><div class="line">6969</div><div class="line">6970</div><div class="line">6971</div><div class="line">6972</div><div class="line">6973</div><div class="line">6974</div><div class="line">6975</div><div class="line">6976</div><div class="line">6977</div><div class="line">6978</div><div class="line">6979</div><div class="line">6980</div><div class="line">6981</div><div class="line">6982</div><div class="line">6983</div><div class="line">6984</div><div class="line">6985</div><div class="line">6986</div><div class="line">6987</div><div class="line">6988</div><div class="line">6989</div><div class="line">6990</div><div class="line">6991</div><div class="line">6992</div><div class="line">6993</div><div class="line">6994</div><div class="line">6995</div><div class="line">6996</div><div class="line">6997</div><div class="line">6998</div><div class="line">6999</div><div class="line">7000</div><div class="line">7001</div><div class="line">7002</div><div class="line">7003</div><div class="line">7004</div><div class="line">7005</div><div class="line">7006</div><div class="line">7007</div><div class="line">7008</div><div class="line">7009</div><div class="line">7010</div><div class="line">7011</div><div class="line">7012</div><div class="line">7013</div><div class="line">7014</div><div class="line">7015</div><div class="line">7016</div><div class="line">7017</div><div class="line">7018</div><div class="line">7019</div><div class="line">7020</div><div class="line">7021</div><div class="line">7022</div><div class="line">7023</div><div class="line">7024</div><div class="line">7025</div><div class="line">7026</div><div class="line">7027</div><div class="line">7028</div><div class="line">7029</div><div class="line">7030</div><div class="line">7031</div><div class="line">7032</div><div class="line">7033</div><div class="line">7034</div><div class="line">7035</div><div class="line">7036</div><div class="line">7037</div><div class="line">7038</div><div class="line">7039</div><div class="line">7040</div><div class="line">7041</div><div class="line">7042</div><div class="line">7043</div><div class="line">7044</div><div class="line">7045</div><div class="line">7046</div><div class="line">7047</div><div class="line">7048</div><div class="line">7049</div><div class="line">7050</div><div class="line">7051</div><div class="line">7052</div><div class="line">7053</div><div class="line">7054</div><div class="line">7055</div><div class="line">7056</div><div class="line">7057</div><div class="line">7058</div><div class="line">7059</div><div class="line">7060</div><div class="line">7061</div><div class="line">7062</div><div class="line">7063</div><div class="line">7064</div><div class="line">7065</div><div class="line">7066</div><div class="line">7067</div><div class="line">7068</div><div class="line">7069</div><div class="line">7070</div><div class="line">7071</div><div class="line">7072</div><div class="line">7073</div><div class="line">7074</div><div class="line">7075</div><div class="line">7076</div><div class="line">7077</div><div class="line">7078</div><div class="line">7079</div><div class="line">7080</div><div class="line">7081</div><div class="line">7082</div><div class="line">7083</div><div class="line">7084</div><div class="line">7085</div><div class="line">7086</div><div class="line">7087</div><div class="line">7088</div><div class="line">7089</div><div class="line">7090</div><div class="line">7091</div><div class="line">7092</div><div class="line">7093</div><div class="line">7094</div><div class="line">7095</div><div class="line">7096</div><div class="line">7097</div><div class="line">7098</div><div class="line">7099</div><div class="line">7100</div><div class="line">7101</div><div class="line">7102</div><div class="line">7103</div><div class="line">7104</div><div class="line">7105</div><div class="line">7106</div><div class="line">7107</div><div class="line">7108</div><div class="line">7109</div><div class="line">7110</div><div class="line">7111</div><div class="line">7112</div><div class="line">7113</div><div class="line">7114</div><div class="line">7115</div><div class="line">7116</div><div class="line">7117</div><div class="line">7118</div><div class="line">7119</div><div class="line">7120</div><div class="line">7121</div><div class="line">7122</div><div class="line">7123</div><div class="line">7124</div><div class="line">7125</div><div class="line">7126</div><div class="line">7127</div><div class="line">7128</div><div class="line">7129</div><div class="line">7130</div><div class="line">7131</div><div class="line">7132</div><div class="line">7133</div><div class="line">7134</div><div class="line">7135</div><div class="line">7136</div><div class="line">7137</div><div class="line">7138</div><div class="line">7139</div><div class="line">7140</div><div class="line">7141</div><div class="line">7142</div><div class="line">7143</div><div class="line">7144</div><div class="line">7145</div><div class="line">7146</div><div class="line">7147</div><div class="line">7148</div><div class="line">7149</div><div class="line">7150</div><div class="line">7151</div><div class="line">7152</div><div class="line">7153</div><div class="line">7154</div><div class="line">7155</div><div class="line">7156</div><div class="line">7157</div><div class="line">7158</div><div class="line">7159</div><div class="line">7160</div><div class="line">7161</div><div class="line">7162</div><div class="line">7163</div><div class="line">7164</div><div class="line">7165</div><div class="line">7166</div><div class="line">7167</div><div class="line">7168</div><div class="line">7169</div><div class="line">7170</div><div class="line">7171</div><div class="line">7172</div><div class="line">7173</div><div class="line">7174</div><div class="line">7175</div><div class="line">7176</div><div class="line">7177</div><div class="line">7178</div><div class="line">7179</div><div class="line">7180</div><div class="line">7181</div><div class="line">7182</div><div class="line">7183</div><div class="line">7184</div><div class="line">7185</div><div class="line">7186</div><div class="line">7187</div><div class="line">7188</div><div class="line">7189</div><div class="line">7190</div><div class="line">7191</div><div class="line">7192</div><div class="line">7193</div><div class="line">7194</div><div class="line">7195</div><div class="line">7196</div><div class="line">7197</div><div class="line">7198</div><div class="line">7199</div><div class="line">7200</div><div class="line">7201</div><div class="line">7202</div><div class="line">7203</div><div class="line">7204</div><div class="line">7205</div><div class="line">7206</div><div class="line">7207</div><div class="line">7208</div><div class="line">7209</div><div class="line">7210</div><div class="line">7211</div><div class="line">7212</div><div class="line">7213</div><div class="line">7214</div><div class="line">7215</div><div class="line">7216</div><div class="line">7217</div><div class="line">7218</div><div class="line">7219</div><div class="line">7220</div><div class="line">7221</div><div class="line">7222</div><div class="line">7223</div><div class="line">7224</div><div class="line">7225</div><div class="line">7226</div><div class="line">7227</div><div class="line">7228</div><div class="line">7229</div><div class="line">7230</div><div class="line">7231</div><div class="line">7232</div><div class="line">7233</div><div class="line">7234</div><div class="line">7235</div><div class="line">7236</div><div class="line">7237</div><div class="line">7238</div><div class="line">7239</div><div class="line">7240</div><div class="line">7241</div><div class="line">7242</div><div class="line">7243</div><div class="line">7244</div><div class="line">7245</div><div class="line">7246</div><div class="line">7247</div><div class="line">7248</div><div class="line">7249</div><div class="line">7250</div><div class="line">7251</div><div class="line">7252</div><div class="line">7253</div><div class="line">7254</div><div class="line">7255</div><div class="line">7256</div><div class="line">7257</div><div class="line">7258</div><div class="line">7259</div><div class="line">7260</div><div class="line">7261</div><div class="line">7262</div><div class="line">7263</div><div class="line">7264</div><div class="line">7265</div><div class="line">7266</div><div class="line">7267</div><div class="line">7268</div><div class="line">7269</div><div class="line">7270</div><div class="line">7271</div><div class="line">7272</div><div class="line">7273</div><div class="line">7274</div><div class="line">7275</div><div class="line">7276</div><div class="line">7277</div><div class="line">7278</div><div class="line">7279</div><div class="line">7280</div><div class="line">7281</div><div class="line">7282</div><div class="line">7283</div><div class="line">7284</div><div class="line">7285</div><div class="line">7286</div><div class="line">7287</div><div class="line">7288</div><div class="line">7289</div><div class="line">7290</div><div class="line">7291</div><div class="line">7292</div><div class="line">7293</div><div class="line">7294</div><div class="line">7295</div><div class="line">7296</div><div class="line">7297</div><div class="line">7298</div><div class="line">7299</div><div class="line">7300</div><div class="line">7301</div><div class="line">7302</div><div class="line">7303</div><div class="line">7304</div><div class="line">7305</div><div class="line">7306</div><div class="line">7307</div><div class="line">7308</div><div class="line">7309</div><div class="line">7310</div><div class="line">7311</div><div class="line">7312</div><div class="line">7313</div><div class="line">7314</div><div class="line">7315</div><div class="line">7316</div><div class="line">7317</div><div class="line">7318</div><div class="line">7319</div><div class="line">7320</div><div class="line">7321</div><div class="line">7322</div><div class="line">7323</div><div class="line">7324</div><div class="line">7325</div><div class="line">7326</div><div class="line">7327</div><div class="line">7328</div><div class="line">7329</div><div class="line">7330</div><div class="line">7331</div><div class="line">7332</div><div class="line">7333</div><div class="line">7334</div><div class="line">7335</div><div class="line">7336</div><div class="line">7337</div><div class="line">7338</div><div class="line">7339</div><div class="line">7340</div><div class="line">7341</div><div class="line">7342</div><div class="line">7343</div><div class="line">7344</div><div class="line">7345</div><div class="line">7346</div><div class="line">7347</div><div class="line">7348</div><div class="line">7349</div><div class="line">7350</div><div class="line">7351</div><div class="line">7352</div><div class="line">7353</div><div class="line">7354</div><div class="line">7355</div><div class="line">7356</div><div class="line">7357</div><div class="line">7358</div><div class="line">7359</div><div class="line">7360</div><div class="line">7361</div><div class="line">7362</div><div class="line">7363</div><div class="line">7364</div><div class="line">7365</div><div class="line">7366</div><div class="line">7367</div><div class="line">7368</div><div class="line">7369</div><div class="line">7370</div><div class="line">7371</div><div class="line">7372</div><div class="line">7373</div><div class="line">7374</div><div class="line">7375</div><div class="line">7376</div><div class="line">7377</div><div class="line">7378</div><div class="line">7379</div><div class="line">7380</div><div class="line">7381</div><div class="line">7382</div><div class="line">7383</div><div class="line">7384</div><div class="line">7385</div><div class="line">7386</div><div class="line">7387</div><div class="line">7388</div><div class="line">7389</div><div class="line">7390</div><div class="line">7391</div><div class="line">7392</div><div class="line">7393</div><div class="line">7394</div><div class="line">7395</div><div class="line">7396</div><div class="line">7397</div><div class="line">7398</div><div class="line">7399</div><div class="line">7400</div><div class="line">7401</div><div class="line">7402</div><div class="line">7403</div><div class="line">7404</div><div class="line">7405</div><div class="line">7406</div><div class="line">7407</div><div class="line">7408</div><div class="line">7409</div><div class="line">7410</div><div class="line">7411</div><div class="line">7412</div><div class="line">7413</div><div class="line">7414</div><div class="line">7415</div><div class="line">7416</div><div class="line">7417</div><div class="line">7418</div><div class="line">7419</div><div class="line">7420</div><div class="line">7421</div><div class="line">7422</div><div class="line">7423</div><div class="line">7424</div><div class="line">7425</div><div class="line">7426</div><div class="line">7427</div><div class="line">7428</div><div class="line">7429</div><div class="line">7430</div><div class="line">7431</div><div class="line">7432</div><div class="line">7433</div><div class="line">7434</div><div class="line">7435</div><div class="line">7436</div><div class="line">7437</div><div class="line">7438</div><div class="line">7439</div><div class="line">7440</div><div class="line">7441</div><div class="line">7442</div><div class="line">7443</div><div class="line">7444</div><div class="line">7445</div><div class="line">7446</div><div class="line">7447</div><div class="line">7448</div><div class="line">7449</div><div class="line">7450</div><div class="line">7451</div><div class="line">7452</div><div class="line">7453</div><div class="line">7454</div><div class="line">7455</div><div class="line">7456</div><div class="line">7457</div><div class="line">7458</div><div class="line">7459</div><div class="line">7460</div><div class="line">7461</div><div class="line">7462</div><div class="line">7463</div><div class="line">7464</div><div class="line">7465</div><div class="line">7466</div><div class="line">7467</div><div class="line">7468</div><div class="line">7469</div><div class="line">7470</div><div class="line">7471</div><div class="line">7472</div><div class="line">7473</div><div class="line">7474</div><div class="line">7475</div><div class="line">7476</div><div class="line">7477</div><div class="line">7478</div><div class="line">7479</div><div class="line">7480</div><div class="line">7481</div><div class="line">7482</div><div class="line">7483</div><div class="line">7484</div><div class="line">7485</div><div class="line">7486</div><div class="line">7487</div><div class="line">7488</div><div class="line">7489</div><div class="line">7490</div><div class="line">7491</div><div class="line">7492</div><div class="line">7493</div><div class="line">7494</div><div class="line">7495</div><div class="line">7496</div><div class="line">7497</div><div class="line">7498</div><div class="line">7499</div><div class="line">7500</div><div class="line">7501</div><div class="line">7502</div><div class="line">7503</div><div class="line">7504</div><div class="line">7505</div><div class="line">7506</div><div class="line">7507</div><div class="line">7508</div><div class="line">7509</div><div class="line">7510</div><div class="line">7511</div><div class="line">7512</div><div class="line">7513</div><div class="line">7514</div><div class="line">7515</div><div class="line">7516</div><div class="line">7517</div><div class="line">7518</div><div class="line">7519</div><div class="line">7520</div><div class="line">7521</div><div class="line">7522</div><div class="line">7523</div><div class="line">7524</div><div class="line">7525</div><div class="line">7526</div><div class="line">7527</div><div class="line">7528</div><div class="line">7529</div><div class="line">7530</div><div class="line">7531</div><div class="line">7532</div><div class="line">7533</div><div class="line">7534</div><div class="line">7535</div><div class="line">7536</div><div class="line">7537</div><div class="line">7538</div><div class="line">7539</div><div class="line">7540</div><div class="line">7541</div><div class="line">7542</div><div class="line">7543</div><div class="line">7544</div><div class="line">7545</div><div class="line">7546</div><div class="line">7547</div><div class="line">7548</div><div class="line">7549</div><div class="line">7550</div><div class="line">7551</div><div class="line">7552</div><div class="line">7553</div><div class="line">7554</div><div class="line">7555</div><div class="line">7556</div><div class="line">7557</div><div class="line">7558</div><div class="line">7559</div><div class="line">7560</div><div class="line">7561</div><div class="line">7562</div><div class="line">7563</div><div class="line">7564</div><div class="line">7565</div><div class="line">7566</div><div class="line">7567</div><div class="line">7568</div><div class="line">7569</div><div class="line">7570</div><div class="line">7571</div><div class="line">7572</div><div class="line">7573</div><div class="line">7574</div><div class="line">7575</div><div class="line">7576</div><div class="line">7577</div><div class="line">7578</div><div class="line">7579</div><div class="line">7580</div><div class="line">7581</div><div class="line">7582</div><div class="line">7583</div><div class="line">7584</div><div class="line">7585</div><div class="line">7586</div><div class="line">7587</div><div class="line">7588</div><div class="line">7589</div><div class="line">7590</div><div class="line">7591</div><div class="line">7592</div><div class="line">7593</div><div class="line">7594</div><div class="line">7595</div><div class="line">7596</div><div class="line">7597</div><div class="line">7598</div><div class="line">7599</div><div class="line">7600</div><div class="line">7601</div><div class="line">7602</div><div class="line">7603</div><div class="line">7604</div><div class="line">7605</div><div class="line">7606</div><div class="line">7607</div><div class="line">7608</div><div class="line">7609</div><div class="line">7610</div><div class="line">7611</div><div class="line">7612</div><div class="line">7613</div><div class="line">7614</div><div class="line">7615</div><div class="line">7616</div><div class="line">7617</div><div class="line">7618</div><div class="line">7619</div><div class="line">7620</div><div class="line">7621</div><div class="line">7622</div><div class="line">7623</div><div class="line">7624</div><div class="line">7625</div><div class="line">7626</div><div class="line">7627</div><div class="line">7628</div><div class="line">7629</div><div class="line">7630</div><div class="line">7631</div><div class="line">7632</div><div class="line">7633</div><div class="line">7634</div><div class="line">7635</div><div class="line">7636</div><div class="line">7637</div><div class="line">7638</div><div class="line">7639</div><div class="line">7640</div><div class="line">7641</div><div class="line">7642</div><div class="line">7643</div><div class="line">7644</div><div class="line">7645</div><div class="line">7646</div><div class="line">7647</div><div class="line">7648</div><div class="line">7649</div><div class="line">7650</div><div class="line">7651</div><div class="line">7652</div><div class="line">7653</div><div class="line">7654</div><div class="line">7655</div><div class="line">7656</div><div class="line">7657</div><div class="line">7658</div><div class="line">7659</div><div class="line">7660</div><div class="line">7661</div><div class="line">7662</div><div class="line">7663</div><div class="line">7664</div><div class="line">7665</div><div class="line">7666</div><div class="line">7667</div><div class="line">7668</div><div class="line">7669</div><div class="line">7670</div><div class="line">7671</div><div class="line">7672</div><div class="line">7673</div><div class="line">7674</div><div class="line">7675</div><div class="line">7676</div><div class="line">7677</div><div class="line">7678</div><div class="line">7679</div><div class="line">7680</div><div class="line">7681</div><div class="line">7682</div><div class="line">7683</div><div class="line">7684</div><div class="line">7685</div><div class="line">7686</div><div class="line">7687</div><div class="line">7688</div><div class="line">7689</div><div class="line">7690</div><div class="line">7691</div><div class="line">7692</div><div class="line">7693</div><div class="line">7694</div><div class="line">7695</div><div class="line">7696</div><div class="line">7697</div><div class="line">7698</div><div class="line">7699</div><div class="line">7700</div><div class="line">7701</div><div class="line">7702</div><div class="line">7703</div><div class="line">7704</div><div class="line">7705</div><div class="line">7706</div><div class="line">7707</div><div class="line">7708</div><div class="line">7709</div><div class="line">7710</div><div class="line">7711</div><div class="line">7712</div><div class="line">7713</div><div class="line">7714</div><div class="line">7715</div><div class="line">7716</div><div class="line">7717</div><div class="line">7718</div><div class="line">7719</div><div class="line">7720</div><div class="line">7721</div><div class="line">7722</div><div class="line">7723</div><div class="line">7724</div><div class="line">7725</div><div class="line">7726</div><div class="line">7727</div><div class="line">7728</div><div class="line">7729</div><div class="line">7730</div><div class="line">7731</div><div class="line">7732</div><div class="line">7733</div><div class="line">7734</div><div class="line">7735</div><div class="line">7736</div><div class="line">7737</div><div class="line">7738</div><div class="line">7739</div><div class="line">7740</div><div class="line">7741</div><div class="line">7742</div><div class="line">7743</div><div class="line">7744</div><div class="line">7745</div><div class="line">7746</div><div class="line">7747</div><div class="line">7748</div><div class="line">7749</div><div class="line">7750</div><div class="line">7751</div><div class="line">7752</div><div class="line">7753</div><div class="line">7754</div><div class="line">7755</div><div class="line">7756</div><div class="line">7757</div><div class="line">7758</div><div class="line">7759</div><div class="line">7760</div><div class="line">7761</div><div class="line">7762</div><div class="line">7763</div><div class="line">7764</div><div class="line">7765</div><div class="line">7766</div><div class="line">7767</div><div class="line">7768</div><div class="line">7769</div><div class="line">7770</div><div class="line">7771</div><div class="line">7772</div><div class="line">7773</div><div class="line">7774</div><div class="line">7775</div><div class="line">7776</div><div class="line">7777</div><div class="line">7778</div><div class="line">7779</div><div class="line">7780</div><div class="line">7781</div><div class="line">7782</div><div class="line">7783</div><div class="line">7784</div><div class="line">7785</div><div class="line">7786</div><div class="line">7787</div><div class="line">7788</div><div class="line">7789</div><div class="line">7790</div><div class="line">7791</div><div class="line">7792</div><div class="line">7793</div><div class="line">7794</div><div class="line">7795</div><div class="line">7796</div><div class="line">7797</div><div class="line">7798</div><div class="line">7799</div><div class="line">7800</div><div class="line">7801</div><div class="line">7802</div><div class="line">7803</div><div class="line">7804</div><div class="line">7805</div><div class="line">7806</div><div class="line">7807</div><div class="line">7808</div><div class="line">7809</div><div class="line">7810</div><div class="line">7811</div><div class="line">7812</div><div class="line">7813</div><div class="line">7814</div><div class="line">7815</div><div class="line">7816</div><div class="line">7817</div><div class="line">7818</div><div class="line">7819</div><div class="line">7820</div><div class="line">7821</div><div class="line">7822</div><div class="line">7823</div><div class="line">7824</div><div class="line">7825</div><div class="line">7826</div><div class="line">7827</div><div class="line">7828</div><div class="line">7829</div><div class="line">7830</div><div class="line">7831</div><div class="line">7832</div><div class="line">7833</div><div class="line">7834</div><div class="line">7835</div><div class="line">7836</div><div class="line">7837</div><div class="line">7838</div><div class="line">7839</div><div class="line">7840</div><div class="line">7841</div><div class="line">7842</div><div class="line">7843</div><div class="line">7844</div><div class="line">7845</div><div class="line">7846</div><div class="line">7847</div><div class="line">7848</div><div class="line">7849</div><div class="line">7850</div><div class="line">7851</div><div class="line">7852</div><div class="line">7853</div><div class="line">7854</div><div class="line">7855</div><div class="line">7856</div><div class="line">7857</div><div class="line">7858</div><div class="line">7859</div><div class="line">7860</div><div class="line">7861</div><div class="line">7862</div><div class="line">7863</div><div class="line">7864</div><div class="line">7865</div><div class="line">7866</div><div class="line">7867</div><div class="line">7868</div><div class="line">7869</div><div class="line">7870</div><div class="line">7871</div><div class="line">7872</div><div class="line">7873</div><div class="line">7874</div><div class="line">7875</div><div class="line">7876</div><div class="line">7877</div><div class="line">7878</div><div class="line">7879</div><div class="line">7880</div><div class="line">7881</div><div class="line">7882</div><div class="line">7883</div><div class="line">7884</div><div class="line">7885</div><div class="line">7886</div><div class="line">7887</div><div class="line">7888</div><div class="line">7889</div><div class="line">7890</div><div class="line">7891</div><div class="line">7892</div><div class="line">7893</div><div class="line">7894</div><div class="line">7895</div><div class="line">7896</div><div class="line">7897</div><div class="line">7898</div><div class="line">7899</div><div class="line">7900</div><div class="line">7901</div><div class="line">7902</div><div class="line">7903</div><div class="line">7904</div><div class="line">7905</div><div class="line">7906</div><div class="line">7907</div><div class="line">7908</div><div class="line">7909</div><div class="line">7910</div><div class="line">7911</div><div class="line">7912</div><div class="line">7913</div><div class="line">7914</div><div class="line">7915</div><div class="line">7916</div><div class="line">7917</div><div class="line">7918</div><div class="line">7919</div><div class="line">7920</div><div class="line">7921</div><div class="line">7922</div><div class="line">7923</div><div class="line">7924</div><div class="line">7925</div><div class="line">7926</div><div class="line">7927</div><div class="line">7928</div><div class="line">7929</div><div class="line">7930</div><div class="line">7931</div><div class="line">7932</div><div class="line">7933</div><div class="line">7934</div><div class="line">7935</div><div class="line">7936</div><div class="line">7937</div><div class="line">7938</div><div class="line">7939</div><div class="line">7940</div><div class="line">7941</div><div class="line">7942</div><div class="line">7943</div><div class="line">7944</div><div class="line">7945</div><div class="line">7946</div><div class="line">7947</div><div class="line">7948</div><div class="line">7949</div><div class="line">7950</div><div class="line">7951</div><div class="line">7952</div><div class="line">7953</div><div class="line">7954</div><div class="line">7955</div><div class="line">7956</div><div class="line">7957</div><div class="line">7958</div><div class="line">7959</div><div class="line">7960</div><div class="line">7961</div><div class="line">7962</div><div class="line">7963</div><div class="line">7964</div><div class="line">7965</div><div class="line">7966</div><div class="line">7967</div><div class="line">7968</div><div class="line">7969</div><div class="line">7970</div><div class="line">7971</div><div class="line">7972</div><div class="line">7973</div><div class="line">7974</div><div class="line">7975</div><div class="line">7976</div><div class="line">7977</div><div class="line">7978</div><div class="line">7979</div><div class="line">7980</div><div class="line">7981</div><div class="line">7982</div><div class="line">7983</div><div class="line">7984</div><div class="line">7985</div><div class="line">7986</div><div class="line">7987</div><div class="line">7988</div><div class="line">7989</div><div class="line">7990</div><div class="line">7991</div><div class="line">7992</div><div class="line">7993</div><div class="line">7994</div><div class="line">7995</div><div class="line">7996</div><div class="line">7997</div><div class="line">7998</div><div class="line">7999</div><div class="line">8000</div><div class="line">8001</div><div class="line">8002</div><div class="line">8003</div><div class="line">8004</div><div class="line">8005</div><div class="line">8006</div><div class="line">8007</div><div class="line">8008</div><div class="line">8009</div><div class="line">8010</div><div class="line">8011</div><div class="line">8012</div><div class="line">8013</div><div class="line">8014</div><div class="line">8015</div><div class="line">8016</div><div class="line">8017</div><div class="line">8018</div><div class="line">8019</div><div class="line">8020</div><div class="line">8021</div><div class="line">8022</div><div class="line">8023</div><div class="line">8024</div><div class="line">8025</div><div class="line">8026</div><div class="line">8027</div><div class="line">8028</div><div class="line">8029</div><div class="line">8030</div><div class="line">8031</div><div class="line">8032</div><div class="line">8033</div><div class="line">8034</div><div class="line">8035</div><div class="line">8036</div><div class="line">8037</div><div class="line">8038</div><div class="line">8039</div><div class="line">8040</div><div class="line">8041</div><div class="line">8042</div><div class="line">8043</div><div class="line">8044</div><div class="line">8045</div><div class="line">8046</div><div class="line">8047</div><div class="line">8048</div><div class="line">8049</div><div class="line">8050</div><div class="line">8051</div><div class="line">8052</div><div class="line">8053</div><div class="line">8054</div><div class="line">8055</div><div class="line">8056</div><div class="line">8057</div><div class="line">8058</div><div class="line">8059</div><div class="line">8060</div><div class="line">8061</div><div class="line">8062</div><div class="line">8063</div><div class="line">8064</div><div class="line">8065</div><div class="line">8066</div><div class="line">8067</div><div class="line">8068</div><div class="line">8069</div><div class="line">8070</div><div class="line">8071</div><div class="line">8072</div><div class="line">8073</div><div class="line">8074</div><div class="line">8075</div><div class="line">8076</div><div class="line">8077</div><div class="line">8078</div><div class="line">8079</div><div class="line">8080</div><div class="line">8081</div><div class="line">8082</div><div class="line">8083</div><div class="line">8084</div><div class="line">8085</div><div class="line">8086</div><div class="line">8087</div><div class="line">8088</div><div class="line">8089</div><div class="line">8090</div><div class="line">8091</div><div class="line">8092</div><div class="line">8093</div><div class="line">8094</div><div class="line">8095</div><div class="line">8096</div><div class="line">8097</div><div class="line">8098</div><div class="line">8099</div><div class="line">8100</div><div class="line">8101</div><div class="line">8102</div><div class="line">8103</div><div class="line">8104</div><div class="line">8105</div><div class="line">8106</div><div class="line">8107</div><div class="line">8108</div><div class="line">8109</div><div class="line">8110</div><div class="line">8111</div><div class="line">8112</div><div class="line">8113</div><div class="line">8114</div><div class="line">8115</div><div class="line">8116</div><div class="line">8117</div><div class="line">8118</div><div class="line">8119</div><div class="line">8120</div><div class="line">8121</div><div class="line">8122</div><div class="line">8123</div><div class="line">8124</div><div class="line">8125</div><div class="line">8126</div><div class="line">8127</div><div class="line">8128</div><div class="line">8129</div><div class="line">8130</div><div class="line">8131</div><div class="line">8132</div><div class="line">8133</div><div class="line">8134</div><div class="line">8135</div><div class="line">8136</div><div class="line">8137</div><div class="line">8138</div><div class="line">8139</div><div class="line">8140</div><div class="line">8141</div><div class="line">8142</div><div class="line">8143</div><div class="line">8144</div><div class="line">8145</div><div class="line">8146</div><div class="line">8147</div><div class="line">8148</div><div class="line">8149</div><div class="line">8150</div><div class="line">8151</div><div class="line">8152</div><div class="line">8153</div><div class="line">8154</div><div class="line">8155</div><div class="line">8156</div><div class="line">8157</div><div class="line">8158</div><div class="line">8159</div><div class="line">8160</div><div class="line">8161</div><div class="line">8162</div><div class="line">8163</div><div class="line">8164</div><div class="line">8165</div><div class="line">8166</div><div class="line">8167</div><div class="line">8168</div><div class="line">8169</div><div class="line">8170</div><div class="line">8171</div><div class="line">8172</div><div class="line">8173</div><div class="line">8174</div><div class="line">8175</div><div class="line">8176</div><div class="line">8177</div><div class="line">8178</div><div class="line">8179</div><div class="line">8180</div><div class="line">8181</div><div class="line">8182</div><div class="line">8183</div><div class="line">8184</div><div class="line">8185</div><div class="line">8186</div><div class="line">8187</div><div class="line">8188</div><div class="line">8189</div><div class="line">8190</div><div class="line">8191</div><div class="line">8192</div><div class="line">8193</div><div class="line">8194</div><div class="line">8195</div><div class="line">8196</div><div class="line">8197</div><div class="line">8198</div><div class="line">8199</div><div class="line">8200</div><div class="line">8201</div><div class="line">8202</div><div class="line">8203</div><div class="line">8204</div><div class="line">8205</div><div class="line">8206</div><div class="line">8207</div><div class="line">8208</div><div class="line">8209</div><div class="line">8210</div><div class="line">8211</div><div class="line">8212</div><div class="line">8213</div><div class="line">8214</div><div class="line">8215</div><div class="line">8216</div><div class="line">8217</div><div class="line">8218</div><div class="line">8219</div><div class="line">8220</div><div class="line">8221</div><div class="line">8222</div><div class="line">8223</div><div class="line">8224</div><div class="line">8225</div><div class="line">8226</div><div class="line">8227</div><div class="line">8228</div><div class="line">8229</div><div class="line">8230</div><div class="line">8231</div><div class="line">8232</div><div class="line">8233</div><div class="line">8234</div><div class="line">8235</div><div class="line">8236</div><div class="line">8237</div><div class="line">8238</div><div class="line">8239</div><div class="line">8240</div><div class="line">8241</div><div class="line">8242</div><div class="line">8243</div><div class="line">8244</div><div class="line">8245</div><div class="line">8246</div><div class="line">8247</div><div class="line">8248</div><div class="line">8249</div><div class="line">8250</div><div class="line">8251</div><div class="line">8252</div><div class="line">8253</div><div class="line">8254</div><div class="line">8255</div><div class="line">8256</div><div class="line">8257</div><div class="line">8258</div><div class="line">8259</div><div class="line">8260</div><div class="line">8261</div><div class="line">8262</div><div class="line">8263</div><div class="line">8264</div><div class="line">8265</div><div class="line">8266</div><div class="line">8267</div><div class="line">8268</div><div class="line">8269</div><div class="line">8270</div><div class="line">8271</div><div class="line">8272</div><div class="line">8273</div><div class="line">8274</div><div class="line">8275</div><div class="line">8276</div><div class="line">8277</div><div class="line">8278</div><div class="line">8279</div><div class="line">8280</div><div class="line">8281</div><div class="line">8282</div><div class="line">8283</div><div class="line">8284</div><div class="line">8285</div><div class="line">8286</div><div class="line">8287</div><div class="line">8288</div><div class="line">8289</div><div class="line">8290</div><div class="line">8291</div><div class="line">8292</div><div class="line">8293</div><div class="line">8294</div><div class="line">8295</div><div class="line">8296</div><div class="line">8297</div><div class="line">8298</div><div class="line">8299</div><div class="line">8300</div><div class="line">8301</div><div class="line">8302</div><div class="line">8303</div><div class="line">8304</div><div class="line">8305</div><div class="line">8306</div><div class="line">8307</div><div class="line">8308</div><div class="line">8309</div><div class="line">8310</div><div class="line">8311</div><div class="line">8312</div><div class="line">8313</div><div class="line">8314</div><div class="line">8315</div><div class="line">8316</div><div class="line">8317</div><div class="line">8318</div><div class="line">8319</div><div class="line">8320</div><div class="line">8321</div><div class="line">8322</div><div class="line">8323</div><div class="line">8324</div><div class="line">8325</div><div class="line">8326</div><div class="line">8327</div><div class="line">8328</div><div class="line">8329</div><div class="line">8330</div><div class="line">8331</div><div class="line">8332</div><div class="line">8333</div><div class="line">8334</div><div class="line">8335</div><div class="line">8336</div><div class="line">8337</div><div class="line">8338</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line">  ******************************************************************************</div><div class="line">  * @file    stm32f10x.h</div><div class="line">  * @author  MCD Application Team</div><div class="line">  * @version V3.5.0</div><div class="line">  * @date    11-March-2011</div><div class="line">  * @brief   CMSIS Cortex-M3 Device Peripheral Access Layer Header File. </div><div class="line">  *          This file contains all the peripheral register's definitions, bits </div><div class="line">  *          definitions and memory mapping for STM32F10x Connectivity line, </div><div class="line">  *          High density, High density value line, Medium density, </div><div class="line">  *          Medium density Value line, Low density, Low density Value line </div><div class="line">  *          and XL-density devices.</div><div class="line">  *</div><div class="line">  *          The file is the unique include file that the application programmer</div><div class="line">  *          is using in the C source code, usually in main.c. This file contains:</div><div class="line">  *           - Configuration section that allows to select:</div><div class="line">  *              - The device used in the target application</div><div class="line">  *              - To use or not the peripheralís drivers in application code(i.e. </div><div class="line">  *                code will be based on direct access to peripheralís registers </div><div class="line">  *                rather than drivers API), this option is controlled by </div><div class="line">  *                "#define USE_STDPERIPH_DRIVER"</div><div class="line">  *              - To change few application-specific parameters such as the HSE </div><div class="line">  *                crystal frequency</div><div class="line">  *           - Data structures and the address mapping for all peripherals</div><div class="line">  *           - Peripheral's registers declarations and bits definition</div><div class="line">  *           - Macros to access peripheralís registers hardware</div><div class="line">  *</div><div class="line">  ******************************************************************************</div><div class="line">  * @attention</div><div class="line">  *</div><div class="line">  * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS</div><div class="line">  * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE</div><div class="line">  * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY</div><div class="line">  * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING</div><div class="line">  * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE</div><div class="line">  * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.</div><div class="line">  *</div><div class="line">  * &lt;h2&gt;&lt;center&gt;&amp;copy; COPYRIGHT 2011 STMicroelectronics&lt;/center&gt;&lt;/h2&gt;</div><div class="line">  ******************************************************************************</div><div class="line">  */</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">/** @addtogroup CMSIS</div><div class="line">  * @&#123;</div><div class="line">  */</div><div class="line"></div><div class="line">/** @addtogroup stm32f10x</div><div class="line">  * @&#123;</div><div class="line">  */</div><div class="line">    </div><div class="line">#ifndef __STM32F10x_H</div><div class="line">#define __STM32F10x_H</div><div class="line"></div><div class="line">#ifdef __cplusplus</div><div class="line"> extern "C" &#123;</div><div class="line">#endif </div><div class="line">  </div><div class="line">/** @addtogroup Library_configuration_section</div><div class="line">  * @&#123;</div><div class="line">  */</div><div class="line">  </div><div class="line">/* Uncomment the line below according to the target STM32 device used in your</div><div class="line">   application </div><div class="line">  */</div><div class="line"></div><div class="line">#if !defined (STM32F10X_LD) &amp;&amp; !defined (STM32F10X_LD_VL) &amp;&amp; !defined (STM32F10X_MD) &amp;&amp; !defined (STM32F10X_MD_VL) &amp;&amp; !defined (STM32F10X_HD) &amp;&amp; !defined (STM32F10X_HD_VL) &amp;&amp; !defined (STM32F10X_XL) &amp;&amp; !defined (STM32F10X_CL) </div><div class="line">  /* #define STM32F10X_LD */     /*!&lt; STM32F10X_LD: STM32 Low density devices */</div><div class="line">  /* #define STM32F10X_LD_VL */  /*!&lt; STM32F10X_LD_VL: STM32 Low density Value Line devices */  </div><div class="line">  /* #define STM32F10X_MD */     /*!&lt; STM32F10X_MD: STM32 Medium density devices */</div><div class="line">  /* #define STM32F10X_MD_VL */  /*!&lt; STM32F10X_MD_VL: STM32 Medium density Value Line devices */  </div><div class="line">  /* #define STM32F10X_HD */     /*!&lt; STM32F10X_HD: STM32 High density devices */</div><div class="line">  /* #define STM32F10X_HD_VL */  /*!&lt; STM32F10X_HD_VL: STM32 High density value line devices */  </div><div class="line">  /* #define STM32F10X_XL */     /*!&lt; STM32F10X_XL: STM32 XL-density devices */</div><div class="line">  /* #define STM32F10X_CL */     /*!&lt; STM32F10X_CL: STM32 Connectivity line devices */</div><div class="line">#endif</div><div class="line">/*  Tip: To avoid modifying this file each time you need to switch between these</div><div class="line">        devices, you can define the device in your toolchain compiler preprocessor.</div><div class="line"></div><div class="line"> - Low-density devices are STM32F101xx, STM32F102xx and STM32F103xx microcontrollers</div><div class="line">   where the Flash memory density ranges between 16 and 32 Kbytes.</div><div class="line"> - Low-density value line devices are STM32F100xx microcontrollers where the Flash</div><div class="line">   memory density ranges between 16 and 32 Kbytes.</div><div class="line"> - Medium-density devices are STM32F101xx, STM32F102xx and STM32F103xx microcontrollers</div><div class="line">   where the Flash memory density ranges between 64 and 128 Kbytes.</div><div class="line"> - Medium-density value line devices are STM32F100xx microcontrollers where the </div><div class="line">   Flash memory density ranges between 64 and 128 Kbytes.   </div><div class="line"> - High-density devices are STM32F101xx and STM32F103xx microcontrollers where</div><div class="line">   the Flash memory density ranges between 256 and 512 Kbytes.</div><div class="line"> - High-density value line devices are STM32F100xx microcontrollers where the </div><div class="line">   Flash memory density ranges between 256 and 512 Kbytes.   </div><div class="line"> - XL-density devices are STM32F101xx and STM32F103xx microcontrollers where</div><div class="line">   the Flash memory density ranges between 512 and 1024 Kbytes.</div><div class="line"> - Connectivity line devices are STM32F105xx and STM32F107xx microcontrollers.</div><div class="line">  */</div><div class="line"></div><div class="line">#if !defined (STM32F10X_LD) &amp;&amp; !defined (STM32F10X_LD_VL) &amp;&amp; !defined (STM32F10X_MD) &amp;&amp; !defined (STM32F10X_MD_VL) &amp;&amp; !defined (STM32F10X_HD) &amp;&amp; !defined (STM32F10X_HD_VL) &amp;&amp; !defined (STM32F10X_XL) &amp;&amp; !defined (STM32F10X_CL)</div><div class="line"> #error "Please select first the target STM32F10x device used in your application (in stm32f10x.h file)"</div><div class="line">#endif</div><div class="line"></div><div class="line">#if !defined  USE_STDPERIPH_DRIVER</div><div class="line">/**</div><div class="line"> * @brief Comment the line below if you will not use the peripherals drivers.</div><div class="line">   In this case, these drivers will not be included and the application code will </div><div class="line">   be based on direct access to peripherals registers </div><div class="line">   */</div><div class="line">  /*#define USE_STDPERIPH_DRIVER*/</div><div class="line">#endif</div><div class="line"></div><div class="line">/**</div><div class="line"> * @brief In the following line adjust the value of External High Speed oscillator (HSE)</div><div class="line">   used in your application </div><div class="line">   </div><div class="line">   Tip: To avoid modifying this file each time you need to use different HSE, you</div><div class="line">        can define the HSE value in your toolchain compiler preprocessor.</div><div class="line">  */           </div><div class="line">#if !defined  HSE_VALUE</div><div class="line"> #ifdef STM32F10X_CL   </div><div class="line">  #define HSE_VALUE    ((uint32_t)25000000) /*!&lt; Value of the External oscillator in Hz */</div><div class="line"> #else </div><div class="line">  #define HSE_VALUE    ((uint32_t)8000000) /*!&lt; Value of the External oscillator in Hz */</div><div class="line"> #endif /* STM32F10X_CL */</div><div class="line">#endif /* HSE_VALUE */</div><div class="line"></div><div class="line"></div><div class="line">/**</div><div class="line"> * @brief In the following line adjust the External High Speed oscillator (HSE) Startup </div><div class="line">   Timeout value </div><div class="line">   */</div><div class="line">#define HSE_STARTUP_TIMEOUT   ((uint16_t)0x0500) /*!&lt; Time out for HSE start up */</div><div class="line"></div><div class="line">#define HSI_VALUE    ((uint32_t)8000000) /*!&lt; Value of the Internal oscillator in Hz*/</div><div class="line"></div><div class="line">/**</div><div class="line"> * @brief STM32F10x Standard Peripheral Library version number</div><div class="line">   */</div><div class="line">#define __STM32F10X_STDPERIPH_VERSION_MAIN   (0x03) /*!&lt; [31:24] main version */                                  </div><div class="line">#define __STM32F10X_STDPERIPH_VERSION_SUB1   (0x05) /*!&lt; [23:16] sub1 version */</div><div class="line">#define __STM32F10X_STDPERIPH_VERSION_SUB2   (0x00) /*!&lt; [15:8]  sub2 version */</div><div class="line">#define __STM32F10X_STDPERIPH_VERSION_RC     (0x00) /*!&lt; [7:0]  release candidate */ </div><div class="line">#define __STM32F10X_STDPERIPH_VERSION       ( (__STM32F10X_STDPERIPH_VERSION_MAIN &lt;&lt; 24)\</div><div class="line">                                             |(__STM32F10X_STDPERIPH_VERSION_SUB1 &lt;&lt; 16)\</div><div class="line">                                             |(__STM32F10X_STDPERIPH_VERSION_SUB2 &lt;&lt; 8)\</div><div class="line">                                             |(__STM32F10X_STDPERIPH_VERSION_RC))</div><div class="line"></div><div class="line">/**</div><div class="line">  * @&#125;</div><div class="line">  */</div><div class="line"></div><div class="line">/** @addtogroup Configuration_section_for_CMSIS</div><div class="line">  * @&#123;</div><div class="line">  */</div><div class="line"></div><div class="line">/**</div><div class="line"> * @brief Configuration of the Cortex-M3 Processor and Core Peripherals </div><div class="line"> */</div><div class="line">#ifdef STM32F10X_XL</div><div class="line"> #define __MPU_PRESENT             1 /*!&lt; STM32 XL-density devices provide an MPU */</div><div class="line">#else</div><div class="line"> #define __MPU_PRESENT             0 /*!&lt; Other STM32 devices does not provide an MPU */</div><div class="line">#endif /* STM32F10X_XL */</div><div class="line">#define __NVIC_PRIO_BITS          4 /*!&lt; STM32 uses 4 Bits for the Priority Levels    */</div><div class="line">#define __Vendor_SysTickConfig    0 /*!&lt; Set to 1 if different SysTick Config is used */</div><div class="line"></div><div class="line">/**</div><div class="line"> * @brief STM32F10x Interrupt Number Definition, according to the selected device </div><div class="line"> *        in @ref Library_configuration_section </div><div class="line"> */</div><div class="line">typedef enum IRQn</div><div class="line">&#123;</div><div class="line">/******  Cortex-M3 Processor Exceptions Numbers ***************************************************/</div><div class="line">  NonMaskableInt_IRQn         = -14,    /*!&lt; 2 Non Maskable Interrupt                             */</div><div class="line">  MemoryManagement_IRQn       = -12,    /*!&lt; 4 Cortex-M3 Memory Management Interrupt              */</div><div class="line">  BusFault_IRQn               = -11,    /*!&lt; 5 Cortex-M3 Bus Fault Interrupt                      */</div><div class="line">  UsageFault_IRQn             = -10,    /*!&lt; 6 Cortex-M3 Usage Fault Interrupt                    */</div><div class="line">  SVCall_IRQn                 = -5,     /*!&lt; 11 Cortex-M3 SV Call Interrupt                       */</div><div class="line">  DebugMonitor_IRQn           = -4,     /*!&lt; 12 Cortex-M3 Debug Monitor Interrupt                 */</div><div class="line">  PendSV_IRQn                 = -2,     /*!&lt; 14 Cortex-M3 Pend SV Interrupt                       */</div><div class="line">  SysTick_IRQn                = -1,     /*!&lt; 15 Cortex-M3 System Tick Interrupt                   */</div><div class="line"></div><div class="line">/******  STM32 specific Interrupt Numbers *********************************************************/</div><div class="line">  WWDG_IRQn                   = 0,      /*!&lt; Window WatchDog Interrupt                            */</div><div class="line">  PVD_IRQn                    = 1,      /*!&lt; PVD through EXTI Line detection Interrupt            */</div><div class="line">  TAMPER_IRQn                 = 2,      /*!&lt; Tamper Interrupt                                     */</div><div class="line">  RTC_IRQn                    = 3,      /*!&lt; RTC global Interrupt                                 */</div><div class="line">  FLASH_IRQn                  = 4,      /*!&lt; FLASH global Interrupt                               */</div><div class="line">  RCC_IRQn                    = 5,      /*!&lt; RCC global Interrupt                                 */</div><div class="line">  EXTI0_IRQn                  = 6,      /*!&lt; EXTI Line0 Interrupt                                 */</div><div class="line">  EXTI1_IRQn                  = 7,      /*!&lt; EXTI Line1 Interrupt                                 */</div><div class="line">  EXTI2_IRQn                  = 8,      /*!&lt; EXTI Line2 Interrupt                                 */</div><div class="line">  EXTI3_IRQn                  = 9,      /*!&lt; EXTI Line3 Interrupt                                 */</div><div class="line">  EXTI4_IRQn                  = 10,     /*!&lt; EXTI Line4 Interrupt                                 */</div><div class="line">  DMA1_Channel1_IRQn          = 11,     /*!&lt; DMA1 Channel 1 global Interrupt                      */</div><div class="line">  DMA1_Channel2_IRQn          = 12,     /*!&lt; DMA1 Channel 2 global Interrupt                      */</div><div class="line">  DMA1_Channel3_IRQn          = 13,     /*!&lt; DMA1 Channel 3 global Interrupt                      */</div><div class="line">  DMA1_Channel4_IRQn          = 14,     /*!&lt; DMA1 Channel 4 global Interrupt                      */</div><div class="line">  DMA1_Channel5_IRQn          = 15,     /*!&lt; DMA1 Channel 5 global Interrupt                      */</div><div class="line">  DMA1_Channel6_IRQn          = 16,     /*!&lt; DMA1 Channel 6 global Interrupt                      */</div><div class="line">  DMA1_Channel7_IRQn          = 17,     /*!&lt; DMA1 Channel 7 global Interrupt                      */</div><div class="line"></div><div class="line">#ifdef STM32F10X_LD</div><div class="line">  ADC1_2_IRQn                 = 18,     /*!&lt; ADC1 and ADC2 global Interrupt                       */</div><div class="line">  USB_HP_CAN1_TX_IRQn         = 19,     /*!&lt; USB Device High Priority or CAN1 TX Interrupts       */</div><div class="line">  USB_LP_CAN1_RX0_IRQn        = 20,     /*!&lt; USB Device Low Priority or CAN1 RX0 Interrupts       */</div><div class="line">  CAN1_RX1_IRQn               = 21,     /*!&lt; CAN1 RX1 Interrupt                                   */</div><div class="line">  CAN1_SCE_IRQn               = 22,     /*!&lt; CAN1 SCE Interrupt                                   */</div><div class="line">  EXTI9_5_IRQn                = 23,     /*!&lt; External Line[9:5] Interrupts                        */</div><div class="line">  TIM1_BRK_IRQn               = 24,     /*!&lt; TIM1 Break Interrupt                                 */</div><div class="line">  TIM1_UP_IRQn                = 25,     /*!&lt; TIM1 Update Interrupt                                */</div><div class="line">  TIM1_TRG_COM_IRQn           = 26,     /*!&lt; TIM1 Trigger and Commutation Interrupt               */</div><div class="line">  TIM1_CC_IRQn                = 27,     /*!&lt; TIM1 Capture Compare Interrupt                       */</div><div class="line">  TIM2_IRQn                   = 28,     /*!&lt; TIM2 global Interrupt                                */</div><div class="line">  TIM3_IRQn                   = 29,     /*!&lt; TIM3 global Interrupt                                */</div><div class="line">  I2C1_EV_IRQn                = 31,     /*!&lt; I2C1 Event Interrupt                                 */</div><div class="line">  I2C1_ER_IRQn                = 32,     /*!&lt; I2C1 Error Interrupt                                 */</div><div class="line">  SPI1_IRQn                   = 35,     /*!&lt; SPI1 global Interrupt                                */</div><div class="line">  USART1_IRQn                 = 37,     /*!&lt; USART1 global Interrupt                              */</div><div class="line">  USART2_IRQn                 = 38,     /*!&lt; USART2 global Interrupt                              */</div><div class="line">  EXTI15_10_IRQn              = 40,     /*!&lt; External Line[15:10] Interrupts                      */</div><div class="line">  RTCAlarm_IRQn               = 41,     /*!&lt; RTC Alarm through EXTI Line Interrupt                */</div><div class="line">  USBWakeUp_IRQn              = 42      /*!&lt; USB Device WakeUp from suspend through EXTI Line Interrupt */    </div><div class="line">#endif /* STM32F10X_LD */  </div><div class="line"></div><div class="line">#ifdef STM32F10X_LD_VL</div><div class="line">  ADC1_IRQn                   = 18,     /*!&lt; ADC1 global Interrupt                                */</div><div class="line">  EXTI9_5_IRQn                = 23,     /*!&lt; External Line[9:5] Interrupts                        */</div><div class="line">  TIM1_BRK_TIM15_IRQn         = 24,     /*!&lt; TIM1 Break and TIM15 Interrupts                      */</div><div class="line">  TIM1_UP_TIM16_IRQn          = 25,     /*!&lt; TIM1 Update and TIM16 Interrupts                     */</div><div class="line">  TIM1_TRG_COM_TIM17_IRQn     = 26,     /*!&lt; TIM1 Trigger and Commutation and TIM17 Interrupt     */</div><div class="line">  TIM1_CC_IRQn                = 27,     /*!&lt; TIM1 Capture Compare Interrupt                       */</div><div class="line">  TIM2_IRQn                   = 28,     /*!&lt; TIM2 global Interrupt                                */</div><div class="line">  TIM3_IRQn                   = 29,     /*!&lt; TIM3 global Interrupt                                */</div><div class="line">  I2C1_EV_IRQn                = 31,     /*!&lt; I2C1 Event Interrupt                                 */</div><div class="line">  I2C1_ER_IRQn                = 32,     /*!&lt; I2C1 Error Interrupt                                 */</div><div class="line">  SPI1_IRQn                   = 35,     /*!&lt; SPI1 global Interrupt                                */</div><div class="line">  USART1_IRQn                 = 37,     /*!&lt; USART1 global Interrupt                              */</div><div class="line">  USART2_IRQn                 = 38,     /*!&lt; USART2 global Interrupt                              */</div><div class="line">  EXTI15_10_IRQn              = 40,     /*!&lt; External Line[15:10] Interrupts                      */</div><div class="line">  RTCAlarm_IRQn               = 41,     /*!&lt; RTC Alarm through EXTI Line Interrupt                */</div><div class="line">  CEC_IRQn                    = 42,     /*!&lt; HDMI-CEC Interrupt                                   */</div><div class="line">  TIM6_DAC_IRQn               = 54,     /*!&lt; TIM6 and DAC underrun Interrupt                      */</div><div class="line">  TIM7_IRQn                   = 55      /*!&lt; TIM7 Interrupt                                       */       </div><div class="line">#endif /* STM32F10X_LD_VL */</div><div class="line"></div><div class="line">#ifdef STM32F10X_MD</div><div class="line">  ADC1_2_IRQn                 = 18,     /*!&lt; ADC1 and ADC2 global Interrupt                       */</div><div class="line">  USB_HP_CAN1_TX_IRQn         = 19,     /*!&lt; USB Device High Priority or CAN1 TX Interrupts       */</div><div class="line">  USB_LP_CAN1_RX0_IRQn        = 20,     /*!&lt; USB Device Low Priority or CAN1 RX0 Interrupts       */</div><div class="line">  CAN1_RX1_IRQn               = 21,     /*!&lt; CAN1 RX1 Interrupt                                   */</div><div class="line">  CAN1_SCE_IRQn               = 22,     /*!&lt; CAN1 SCE Interrupt                                   */</div><div class="line">  EXTI9_5_IRQn                = 23,     /*!&lt; External Line[9:5] Interrupts                        */</div><div class="line">  TIM1_BRK_IRQn               = 24,     /*!&lt; TIM1 Break Interrupt                                 */</div><div class="line">  TIM1_UP_IRQn                = 25,     /*!&lt; TIM1 Update Interrupt                                */</div><div class="line">  TIM1_TRG_COM_IRQn           = 26,     /*!&lt; TIM1 Trigger and Commutation Interrupt               */</div><div class="line">  TIM1_CC_IRQn                = 27,     /*!&lt; TIM1 Capture Compare Interrupt                       */</div><div class="line">  TIM2_IRQn                   = 28,     /*!&lt; TIM2 global Interrupt                                */</div><div class="line">  TIM3_IRQn                   = 29,     /*!&lt; TIM3 global Interrupt                                */</div><div class="line">  TIM4_IRQn                   = 30,     /*!&lt; TIM4 global Interrupt                                */</div><div class="line">  I2C1_EV_IRQn                = 31,     /*!&lt; I2C1 Event Interrupt                                 */</div><div class="line">  I2C1_ER_IRQn                = 32,     /*!&lt; I2C1 Error Interrupt                                 */</div><div class="line">  I2C2_EV_IRQn                = 33,     /*!&lt; I2C2 Event Interrupt                                 */</div><div class="line">  I2C2_ER_IRQn                = 34,     /*!&lt; I2C2 Error Interrupt                                 */</div><div class="line">  SPI1_IRQn                   = 35,     /*!&lt; SPI1 global Interrupt                                */</div><div class="line">  SPI2_IRQn                   = 36,     /*!&lt; SPI2 global Interrupt                                */</div><div class="line">  USART1_IRQn                 = 37,     /*!&lt; USART1 global Interrupt                              */</div><div class="line">  USART2_IRQn                 = 38,     /*!&lt; USART2 global Interrupt                              */</div><div class="line">  USART3_IRQn                 = 39,     /*!&lt; USART3 global Interrupt                              */</div><div class="line">  EXTI15_10_IRQn              = 40,     /*!&lt; External Line[15:10] Interrupts                      */</div><div class="line">  RTCAlarm_IRQn               = 41,     /*!&lt; RTC Alarm through EXTI Line Interrupt                */</div><div class="line">  USBWakeUp_IRQn              = 42      /*!&lt; USB Device WakeUp from suspend through EXTI Line Interrupt */  </div><div class="line">#endif /* STM32F10X_MD */  </div><div class="line"></div><div class="line">#ifdef STM32F10X_MD_VL</div><div class="line">  ADC1_IRQn                   = 18,     /*!&lt; ADC1 global Interrupt                                */</div><div class="line">  EXTI9_5_IRQn                = 23,     /*!&lt; External Line[9:5] Interrupts                        */</div><div class="line">  TIM1_BRK_TIM15_IRQn         = 24,     /*!&lt; TIM1 Break and TIM15 Interrupts                      */</div><div class="line">  TIM1_UP_TIM16_IRQn          = 25,     /*!&lt; TIM1 Update and TIM16 Interrupts                     */</div><div class="line">  TIM1_TRG_COM_TIM17_IRQn     = 26,     /*!&lt; TIM1 Trigger and Commutation and TIM17 Interrupt     */</div><div class="line">  TIM1_CC_IRQn                = 27,     /*!&lt; TIM1 Capture Compare Interrupt                       */</div><div class="line">  TIM2_IRQn                   = 28,     /*!&lt; TIM2 global Interrupt                                */</div><div class="line">  TIM3_IRQn                   = 29,     /*!&lt; TIM3 global Interrupt                                */</div><div class="line">  TIM4_IRQn                   = 30,     /*!&lt; TIM4 global Interrupt                                */</div><div class="line">  I2C1_EV_IRQn                = 31,     /*!&lt; I2C1 Event Interrupt                                 */</div><div class="line">  I2C1_ER_IRQn                = 32,     /*!&lt; I2C1 Error Interrupt                                 */</div><div class="line">  I2C2_EV_IRQn                = 33,     /*!&lt; I2C2 Event Interrupt                                 */</div><div class="line">  I2C2_ER_IRQn                = 34,     /*!&lt; I2C2 Error Interrupt                                 */</div><div class="line">  SPI1_IRQn                   = 35,     /*!&lt; SPI1 global Interrupt                                */</div><div class="line">  SPI2_IRQn                   = 36,     /*!&lt; SPI2 global Interrupt                                */</div><div class="line">  USART1_IRQn                 = 37,     /*!&lt; USART1 global Interrupt                              */</div><div class="line">  USART2_IRQn                 = 38,     /*!&lt; USART2 global Interrupt                              */</div><div class="line">  USART3_IRQn                 = 39,     /*!&lt; USART3 global Interrupt                              */</div><div class="line">  EXTI15_10_IRQn              = 40,     /*!&lt; External Line[15:10] Interrupts                      */</div><div class="line">  RTCAlarm_IRQn               = 41,     /*!&lt; RTC Alarm through EXTI Line Interrupt                */</div><div class="line">  CEC_IRQn                    = 42,     /*!&lt; HDMI-CEC Interrupt                                   */</div><div class="line">  TIM6_DAC_IRQn               = 54,     /*!&lt; TIM6 and DAC underrun Interrupt                      */</div><div class="line">  TIM7_IRQn                   = 55      /*!&lt; TIM7 Interrupt                                       */       </div><div class="line">#endif /* STM32F10X_MD_VL */</div><div class="line"></div><div class="line">#ifdef STM32F10X_HD</div><div class="line">  ADC1_2_IRQn                 = 18,     /*!&lt; ADC1 and ADC2 global Interrupt                       */</div><div class="line">  USB_HP_CAN1_TX_IRQn         = 19,     /*!&lt; USB Device High Priority or CAN1 TX Interrupts       */</div><div class="line">  USB_LP_CAN1_RX0_IRQn        = 20,     /*!&lt; USB Device Low Priority or CAN1 RX0 Interrupts       */</div><div class="line">  CAN1_RX1_IRQn               = 21,     /*!&lt; CAN1 RX1 Interrupt                                   */</div><div class="line">  CAN1_SCE_IRQn               = 22,     /*!&lt; CAN1 SCE Interrupt                                   */</div><div class="line">  EXTI9_5_IRQn                = 23,     /*!&lt; External Line[9:5] Interrupts                        */</div><div class="line">  TIM1_BRK_IRQn               = 24,     /*!&lt; TIM1 Break Interrupt                                 */</div><div class="line">  TIM1_UP_IRQn                = 25,     /*!&lt; TIM1 Update Interrupt                                */</div><div class="line">  TIM1_TRG_COM_IRQn           = 26,     /*!&lt; TIM1 Trigger and Commutation Interrupt               */</div><div class="line">  TIM1_CC_IRQn                = 27,     /*!&lt; TIM1 Capture Compare Interrupt                       */</div><div class="line">  TIM2_IRQn                   = 28,     /*!&lt; TIM2 global Interrupt                                */</div><div class="line">  TIM3_IRQn                   = 29,     /*!&lt; TIM3 global Interrupt                                */</div><div class="line">  TIM4_IRQn                   = 30,     /*!&lt; TIM4 global Interrupt                                */</div><div class="line">  I2C1_EV_IRQn                = 31,     /*!&lt; I2C1 Event Interrupt                                 */</div><div class="line">  I2C1_ER_IRQn                = 32,     /*!&lt; I2C1 Error Interrupt                                 */</div><div class="line">  I2C2_EV_IRQn                = 33,     /*!&lt; I2C2 Event Interrupt                                 */</div><div class="line">  I2C2_ER_IRQn                = 34,     /*!&lt; I2C2 Error Interrupt                                 */</div><div class="line">  SPI1_IRQn                   = 35,     /*!&lt; SPI1 global Interrupt                                */</div><div class="line">  SPI2_IRQn                   = 36,     /*!&lt; SPI2 global Interrupt                                */</div><div class="line">  USART1_IRQn                 = 37,     /*!&lt; USART1 global Interrupt                              */</div><div class="line">  USART2_IRQn                 = 38,     /*!&lt; USART2 global Interrupt                              */</div><div class="line">  USART3_IRQn                 = 39,     /*!&lt; USART3 global Interrupt                              */</div><div class="line">  EXTI15_10_IRQn              = 40,     /*!&lt; External Line[15:10] Interrupts                      */</div><div class="line">  RTCAlarm_IRQn               = 41,     /*!&lt; RTC Alarm through EXTI Line Interrupt                */</div><div class="line">  USBWakeUp_IRQn              = 42,     /*!&lt; USB Device WakeUp from suspend through EXTI Line Interrupt */</div><div class="line">  TIM8_BRK_IRQn               = 43,     /*!&lt; TIM8 Break Interrupt                                 */</div><div class="line">  TIM8_UP_IRQn                = 44,     /*!&lt; TIM8 Update Interrupt                                */</div><div class="line">  TIM8_TRG_COM_IRQn           = 45,     /*!&lt; TIM8 Trigger and Commutation Interrupt               */</div><div class="line">  TIM8_CC_IRQn                = 46,     /*!&lt; TIM8 Capture Compare Interrupt                       */</div><div class="line">  ADC3_IRQn                   = 47,     /*!&lt; ADC3 global Interrupt                                */</div><div class="line">  FSMC_IRQn                   = 48,     /*!&lt; FSMC global Interrupt                                */</div><div class="line">  SDIO_IRQn                   = 49,     /*!&lt; SDIO global Interrupt                                */</div><div class="line">  TIM5_IRQn                   = 50,     /*!&lt; TIM5 global Interrupt                                */</div><div class="line">  SPI3_IRQn                   = 51,     /*!&lt; SPI3 global Interrupt                                */</div><div class="line">  UART4_IRQn                  = 52,     /*!&lt; UART4 global Interrupt                               */</div><div class="line">  UART5_IRQn                  = 53,     /*!&lt; UART5 global Interrupt                               */</div><div class="line">  TIM6_IRQn                   = 54,     /*!&lt; TIM6 global Interrupt                                */</div><div class="line">  TIM7_IRQn                   = 55,     /*!&lt; TIM7 global Interrupt                                */</div><div class="line">  DMA2_Channel1_IRQn          = 56,     /*!&lt; DMA2 Channel 1 global Interrupt                      */</div><div class="line">  DMA2_Channel2_IRQn          = 57,     /*!&lt; DMA2 Channel 2 global Interrupt                      */</div><div class="line">  DMA2_Channel3_IRQn          = 58,     /*!&lt; DMA2 Channel 3 global Interrupt                      */</div><div class="line">  DMA2_Channel4_5_IRQn        = 59      /*!&lt; DMA2 Channel 4 and Channel 5 global Interrupt        */</div><div class="line">#endif /* STM32F10X_HD */  </div><div class="line"></div><div class="line">#ifdef STM32F10X_HD_VL</div><div class="line">  ADC1_IRQn                   = 18,     /*!&lt; ADC1 global Interrupt                                */</div><div class="line">  EXTI9_5_IRQn                = 23,     /*!&lt; External Line[9:5] Interrupts                        */</div><div class="line">  TIM1_BRK_TIM15_IRQn         = 24,     /*!&lt; TIM1 Break and TIM15 Interrupts                      */</div><div class="line">  TIM1_UP_TIM16_IRQn          = 25,     /*!&lt; TIM1 Update and TIM16 Interrupts                     */</div><div class="line">  TIM1_TRG_COM_TIM17_IRQn     = 26,     /*!&lt; TIM1 Trigger and Commutation and TIM17 Interrupt     */</div><div class="line">  TIM1_CC_IRQn                = 27,     /*!&lt; TIM1 Capture Compare Interrupt                       */</div><div class="line">  TIM2_IRQn                   = 28,     /*!&lt; TIM2 global Interrupt                                */</div><div class="line">  TIM3_IRQn                   = 29,     /*!&lt; TIM3 global Interrupt                                */</div><div class="line">  TIM4_IRQn                   = 30,     /*!&lt; TIM4 global Interrupt                                */</div><div class="line">  I2C1_EV_IRQn                = 31,     /*!&lt; I2C1 Event Interrupt                                 */</div><div class="line">  I2C1_ER_IRQn                = 32,     /*!&lt; I2C1 Error Interrupt                                 */</div><div class="line">  I2C2_EV_IRQn                = 33,     /*!&lt; I2C2 Event Interrupt                                 */</div><div class="line">  I2C2_ER_IRQn                = 34,     /*!&lt; I2C2 Error Interrupt                                 */</div><div class="line">  SPI1_IRQn                   = 35,     /*!&lt; SPI1 global Interrupt                                */</div><div class="line">  SPI2_IRQn                   = 36,     /*!&lt; SPI2 global Interrupt                                */</div><div class="line">  USART1_IRQn                 = 37,     /*!&lt; USART1 global Interrupt                              */</div><div class="line">  USART2_IRQn                 = 38,     /*!&lt; USART2 global Interrupt                              */</div><div class="line">  USART3_IRQn                 = 39,     /*!&lt; USART3 global Interrupt                              */</div><div class="line">  EXTI15_10_IRQn              = 40,     /*!&lt; External Line[15:10] Interrupts                      */</div><div class="line">  RTCAlarm_IRQn               = 41,     /*!&lt; RTC Alarm through EXTI Line Interrupt                */</div><div class="line">  CEC_IRQn                    = 42,     /*!&lt; HDMI-CEC Interrupt                                   */</div><div class="line">  TIM12_IRQn                  = 43,     /*!&lt; TIM12 global Interrupt                               */</div><div class="line">  TIM13_IRQn                  = 44,     /*!&lt; TIM13 global Interrupt                               */</div><div class="line">  TIM14_IRQn                  = 45,     /*!&lt; TIM14 global Interrupt                               */</div><div class="line">  TIM5_IRQn                   = 50,     /*!&lt; TIM5 global Interrupt                                */</div><div class="line">  SPI3_IRQn                   = 51,     /*!&lt; SPI3 global Interrupt                                */</div><div class="line">  UART4_IRQn                  = 52,     /*!&lt; UART4 global Interrupt                               */</div><div class="line">  UART5_IRQn                  = 53,     /*!&lt; UART5 global Interrupt                               */  </div><div class="line">  TIM6_DAC_IRQn               = 54,     /*!&lt; TIM6 and DAC underrun Interrupt                      */</div><div class="line">  TIM7_IRQn                   = 55,     /*!&lt; TIM7 Interrupt                                       */  </div><div class="line">  DMA2_Channel1_IRQn          = 56,     /*!&lt; DMA2 Channel 1 global Interrupt                      */</div><div class="line">  DMA2_Channel2_IRQn          = 57,     /*!&lt; DMA2 Channel 2 global Interrupt                      */</div><div class="line">  DMA2_Channel3_IRQn          = 58,     /*!&lt; DMA2 Channel 3 global Interrupt                      */</div><div class="line">  DMA2_Channel4_5_IRQn        = 59,     /*!&lt; DMA2 Channel 4 and Channel 5 global Interrupt        */</div><div class="line">  DMA2_Channel5_IRQn          = 60      /*!&lt; DMA2 Channel 5 global Interrupt (DMA2 Channel 5 is </div><div class="line">                                             mapped at position 60 only if the MISC_REMAP bit in </div><div class="line">                                             the AFIO_MAPR2 register is set)                      */       </div><div class="line">#endif /* STM32F10X_HD_VL */</div><div class="line"></div><div class="line">#ifdef STM32F10X_XL</div><div class="line">  ADC1_2_IRQn                 = 18,     /*!&lt; ADC1 and ADC2 global Interrupt                       */</div><div class="line">  USB_HP_CAN1_TX_IRQn         = 19,     /*!&lt; USB Device High Priority or CAN1 TX Interrupts       */</div><div class="line">  USB_LP_CAN1_RX0_IRQn        = 20,     /*!&lt; USB Device Low Priority or CAN1 RX0 Interrupts       */</div><div class="line">  CAN1_RX1_IRQn               = 21,     /*!&lt; CAN1 RX1 Interrupt                                   */</div><div class="line">  CAN1_SCE_IRQn               = 22,     /*!&lt; CAN1 SCE Interrupt                                   */</div><div class="line">  EXTI9_5_IRQn                = 23,     /*!&lt; External Line[9:5] Interrupts                        */</div><div class="line">  TIM1_BRK_TIM9_IRQn          = 24,     /*!&lt; TIM1 Break Interrupt and TIM9 global Interrupt       */</div><div class="line">  TIM1_UP_TIM10_IRQn          = 25,     /*!&lt; TIM1 Update Interrupt and TIM10 global Interrupt     */</div><div class="line">  TIM1_TRG_COM_TIM11_IRQn     = 26,     /*!&lt; TIM1 Trigger and Commutation Interrupt and TIM11 global interrupt */</div><div class="line">  TIM1_CC_IRQn                = 27,     /*!&lt; TIM1 Capture Compare Interrupt                       */</div><div class="line">  TIM2_IRQn                   = 28,     /*!&lt; TIM2 global Interrupt                                */</div><div class="line">  TIM3_IRQn                   = 29,     /*!&lt; TIM3 global Interrupt                                */</div><div class="line">  TIM4_IRQn                   = 30,     /*!&lt; TIM4 global Interrupt                                */</div><div class="line">  I2C1_EV_IRQn                = 31,     /*!&lt; I2C1 Event Interrupt                                 */</div><div class="line">  I2C1_ER_IRQn                = 32,     /*!&lt; I2C1 Error Interrupt                                 */</div><div class="line">  I2C2_EV_IRQn                = 33,     /*!&lt; I2C2 Event Interrupt                                 */</div><div class="line">  I2C2_ER_IRQn                = 34,     /*!&lt; I2C2 Error Interrupt                                 */</div><div class="line">  SPI1_IRQn                   = 35,     /*!&lt; SPI1 global Interrupt                                */</div><div class="line">  SPI2_IRQn                   = 36,     /*!&lt; SPI2 global Interrupt                                */</div><div class="line">  USART1_IRQn                 = 37,     /*!&lt; USART1 global Interrupt                              */</div><div class="line">  USART2_IRQn                 = 38,     /*!&lt; USART2 global Interrupt                              */</div><div class="line">  USART3_IRQn                 = 39,     /*!&lt; USART3 global Interrupt                              */</div><div class="line">  EXTI15_10_IRQn              = 40,     /*!&lt; External Line[15:10] Interrupts                      */</div><div class="line">  RTCAlarm_IRQn               = 41,     /*!&lt; RTC Alarm through EXTI Line Interrupt                */</div><div class="line">  USBWakeUp_IRQn              = 42,     /*!&lt; USB Device WakeUp from suspend through EXTI Line Interrupt */</div><div class="line">  TIM8_BRK_TIM12_IRQn         = 43,     /*!&lt; TIM8 Break Interrupt and TIM12 global Interrupt      */</div><div class="line">  TIM8_UP_TIM13_IRQn          = 44,     /*!&lt; TIM8 Update Interrupt and TIM13 global Interrupt     */</div><div class="line">  TIM8_TRG_COM_TIM14_IRQn     = 45,     /*!&lt; TIM8 Trigger and Commutation Interrupt and TIM14 global interrupt */</div><div class="line">  TIM8_CC_IRQn                = 46,     /*!&lt; TIM8 Capture Compare Interrupt                       */</div><div class="line">  ADC3_IRQn                   = 47,     /*!&lt; ADC3 global Interrupt                                */</div><div class="line">  FSMC_IRQn                   = 48,     /*!&lt; FSMC global Interrupt                                */</div><div class="line">  SDIO_IRQn                   = 49,     /*!&lt; SDIO global Interrupt                                */</div><div class="line">  TIM5_IRQn                   = 50,     /*!&lt; TIM5 global Interrupt                                */</div><div class="line">  SPI3_IRQn                   = 51,     /*!&lt; SPI3 global Interrupt                                */</div><div class="line">  UART4_IRQn                  = 52,     /*!&lt; UART4 global Interrupt                               */</div><div class="line">  UART5_IRQn                  = 53,     /*!&lt; UART5 global Interrupt                               */</div><div class="line">  TIM6_IRQn                   = 54,     /*!&lt; TIM6 global Interrupt                                */</div><div class="line">  TIM7_IRQn                   = 55,     /*!&lt; TIM7 global Interrupt                                */</div><div class="line">  DMA2_Channel1_IRQn          = 56,     /*!&lt; DMA2 Channel 1 global Interrupt                      */</div><div class="line">  DMA2_Channel2_IRQn          = 57,     /*!&lt; DMA2 Channel 2 global Interrupt                      */</div><div class="line">  DMA2_Channel3_IRQn          = 58,     /*!&lt; DMA2 Channel 3 global Interrupt                      */</div><div class="line">  DMA2_Channel4_5_IRQn        = 59      /*!&lt; DMA2 Channel 4 and Channel 5 global Interrupt        */</div><div class="line">#endif /* STM32F10X_XL */  </div><div class="line"></div><div class="line">#ifdef STM32F10X_CL</div><div class="line">  ADC1_2_IRQn                 = 18,     /*!&lt; ADC1 and ADC2 global Interrupt                       */</div><div class="line">  CAN1_TX_IRQn                = 19,     /*!&lt; USB Device High Priority or CAN1 TX Interrupts       */</div><div class="line">  CAN1_RX0_IRQn               = 20,     /*!&lt; USB Device Low Priority or CAN1 RX0 Interrupts       */</div><div class="line">  CAN1_RX1_IRQn               = 21,     /*!&lt; CAN1 RX1 Interrupt                                   */</div><div class="line">  CAN1_SCE_IRQn               = 22,     /*!&lt; CAN1 SCE Interrupt                                   */</div><div class="line">  EXTI9_5_IRQn                = 23,     /*!&lt; External Line[9:5] Interrupts                        */</div><div class="line">  TIM1_BRK_IRQn               = 24,     /*!&lt; TIM1 Break Interrupt                                 */</div><div class="line">  TIM1_UP_IRQn                = 25,     /*!&lt; TIM1 Update Interrupt                                */</div><div class="line">  TIM1_TRG_COM_IRQn           = 26,     /*!&lt; TIM1 Trigger and Commutation Interrupt               */</div><div class="line">  TIM1_CC_IRQn                = 27,     /*!&lt; TIM1 Capture Compare Interrupt                       */</div><div class="line">  TIM2_IRQn                   = 28,     /*!&lt; TIM2 global Interrupt                                */</div><div class="line">  TIM3_IRQn                   = 29,     /*!&lt; TIM3 global Interrupt                                */</div><div class="line">  TIM4_IRQn                   = 30,     /*!&lt; TIM4 global Interrupt                                */</div><div class="line">  I2C1_EV_IRQn                = 31,     /*!&lt; I2C1 Event Interrupt                                 */</div><div class="line">  I2C1_ER_IRQn                = 32,     /*!&lt; I2C1 Error Interrupt                                 */</div><div class="line">  I2C2_EV_IRQn                = 33,     /*!&lt; I2C2 Event Interrupt                                 */</div><div class="line">  I2C2_ER_IRQn                = 34,     /*!&lt; I2C2 Error Interrupt                                 */</div><div class="line">  SPI1_IRQn                   = 35,     /*!&lt; SPI1 global Interrupt                                */</div><div class="line">  SPI2_IRQn                   = 36,     /*!&lt; SPI2 global Interrupt                                */</div><div class="line">  USART1_IRQn                 = 37,     /*!&lt; USART1 global Interrupt                              */</div><div class="line">  USART2_IRQn                 = 38,     /*!&lt; USART2 global Interrupt                              */</div><div class="line">  USART3_IRQn                 = 39,     /*!&lt; USART3 global Interrupt                              */</div><div class="line">  EXTI15_10_IRQn              = 40,     /*!&lt; External Line[15:10] Interrupts                      */</div><div class="line">  RTCAlarm_IRQn               = 41,     /*!&lt; RTC Alarm through EXTI Line Interrupt                */</div><div class="line">  OTG_FS_WKUP_IRQn            = 42,     /*!&lt; USB OTG FS WakeUp from suspend through EXTI Line Interrupt */</div><div class="line">  TIM5_IRQn                   = 50,     /*!&lt; TIM5 global Interrupt                                */</div><div class="line">  SPI3_IRQn                   = 51,     /*!&lt; SPI3 global Interrupt                                */</div><div class="line">  UART4_IRQn                  = 52,     /*!&lt; UART4 global Interrupt                               */</div><div class="line">  UART5_IRQn                  = 53,     /*!&lt; UART5 global Interrupt                               */</div><div class="line">  TIM6_IRQn                   = 54,     /*!&lt; TIM6 global Interrupt                                */</div><div class="line">  TIM7_IRQn                   = 55,     /*!&lt; TIM7 global Interrupt                                */</div><div class="line">  DMA2_Channel1_IRQn          = 56,     /*!&lt; DMA2 Channel 1 global Interrupt                      */</div><div class="line">  DMA2_Channel2_IRQn          = 57,     /*!&lt; DMA2 Channel 2 global Interrupt                      */</div><div class="line">  DMA2_Channel3_IRQn          = 58,     /*!&lt; DMA2 Channel 3 global Interrupt                      */</div><div class="line">  DMA2_Channel4_IRQn          = 59,     /*!&lt; DMA2 Channel 4 global Interrupt                      */</div><div class="line">  DMA2_Channel5_IRQn          = 60,     /*!&lt; DMA2 Channel 5 global Interrupt                      */</div><div class="line">  ETH_IRQn                    = 61,     /*!&lt; Ethernet global Interrupt                            */</div><div class="line">  ETH_WKUP_IRQn               = 62,     /*!&lt; Ethernet Wakeup through EXTI line Interrupt          */</div><div class="line">  CAN2_TX_IRQn                = 63,     /*!&lt; CAN2 TX Interrupt                                    */</div><div class="line">  CAN2_RX0_IRQn               = 64,     /*!&lt; CAN2 RX0 Interrupt                                   */</div><div class="line">  CAN2_RX1_IRQn               = 65,     /*!&lt; CAN2 RX1 Interrupt                                   */</div><div class="line">  CAN2_SCE_IRQn               = 66,     /*!&lt; CAN2 SCE Interrupt                                   */</div><div class="line">  OTG_FS_IRQn                 = 67      /*!&lt; USB OTG FS global Interrupt                          */</div><div class="line">#endif /* STM32F10X_CL */     </div><div class="line">&#125; IRQn_Type;</div><div class="line"></div><div class="line">/**</div><div class="line">  * @&#125;</div><div class="line">  */</div><div class="line"></div><div class="line">#include "core_cm3.h"</div><div class="line">#include "system_stm32f10x.h"</div><div class="line">#include &lt;stdint.h&gt;</div><div class="line"></div><div class="line">/** @addtogroup Exported_types</div><div class="line">  * @&#123;</div><div class="line">  */  </div><div class="line"></div><div class="line">/*!&lt; STM32F10x Standard Peripheral Library old types (maintained for legacy purpose) */</div><div class="line">typedef int32_t  s32;</div><div class="line">typedef int16_t s16;</div><div class="line">typedef int8_t  s8;</div><div class="line"></div><div class="line">typedef const int32_t sc32;  /*!&lt; Read Only */</div><div class="line">typedef const int16_t sc16;  /*!&lt; Read Only */</div><div class="line">typedef const int8_t sc8;   /*!&lt; Read Only */</div><div class="line"></div><div class="line">typedef __IO int32_t  vs32;</div><div class="line">typedef __IO int16_t  vs16;</div><div class="line">typedef __IO int8_t   vs8;</div><div class="line"></div><div class="line">typedef __I int32_t vsc32;  /*!&lt; Read Only */</div><div class="line">typedef __I int16_t vsc16;  /*!&lt; Read Only */</div><div class="line">typedef __I int8_t vsc8;   /*!&lt; Read Only */</div><div class="line"></div><div class="line">typedef uint32_t  u32;</div><div class="line">typedef uint16_t u16;</div><div class="line">typedef uint8_t  u8;</div><div class="line"></div><div class="line">typedef const uint32_t uc32;  /*!&lt; Read Only */</div><div class="line">typedef const uint16_t uc16;  /*!&lt; Read Only */</div><div class="line">typedef const uint8_t uc8;   /*!&lt; Read Only */</div><div class="line"></div><div class="line">typedef __IO uint32_t  vu32;</div><div class="line">typedef __IO uint16_t vu16;</div><div class="line">typedef __IO uint8_t  vu8;</div><div class="line"></div><div class="line">typedef __I uint32_t vuc32;  /*!&lt; Read Only */</div><div class="line">typedef __I uint16_t vuc16;  /*!&lt; Read Only */</div><div class="line">typedef __I uint8_t vuc8;   /*!&lt; Read Only */</div><div class="line"></div><div class="line">typedef enum &#123;RESET = 0, SET = !RESET&#125; FlagStatus, ITStatus;</div><div class="line"></div><div class="line">typedef enum &#123;DISABLE = 0, ENABLE = !DISABLE&#125; FunctionalState;</div><div class="line">#define IS_FUNCTIONAL_STATE(STATE) (((STATE) == DISABLE) || ((STATE) == ENABLE))</div><div class="line"></div><div class="line">typedef enum &#123;ERROR = 0, SUCCESS = !ERROR&#125; ErrorStatus;</div><div class="line"></div><div class="line">/*!&lt; STM32F10x Standard Peripheral Library old definitions (maintained for legacy purpose) */</div><div class="line">#define HSEStartUp_TimeOut   HSE_STARTUP_TIMEOUT</div><div class="line">#define HSE_Value            HSE_VALUE</div><div class="line">#define HSI_Value            HSI_VALUE</div><div class="line">/**</div><div class="line">  * @&#125;</div><div class="line">  */</div><div class="line"></div><div class="line">/** @addtogroup Peripheral_registers_structures</div><div class="line">  * @&#123;</div><div class="line">  */   </div><div class="line"></div><div class="line">/** </div><div class="line">  * @brief Analog to Digital Converter  </div><div class="line">  */</div><div class="line"></div><div class="line">typedef struct</div><div class="line">&#123;</div><div class="line">  __IO uint32_t SR;</div><div class="line">  __IO uint32_t CR1;</div><div class="line">  __IO uint32_t CR2;</div><div class="line">  __IO uint32_t SMPR1;</div><div class="line">  __IO uint32_t SMPR2;</div><div class="line">  __IO uint32_t JOFR1;</div><div class="line">  __IO uint32_t JOFR2;</div><div class="line">  __IO uint32_t JOFR3;</div><div class="line">  __IO uint32_t JOFR4;</div><div class="line">  __IO uint32_t HTR;</div><div class="line">  __IO uint32_t LTR;</div><div class="line">  __IO uint32_t SQR1;</div><div class="line">  __IO uint32_t SQR2;</div><div class="line">  __IO uint32_t SQR3;</div><div class="line">  __IO uint32_t JSQR;</div><div class="line">  __IO uint32_t JDR1;</div><div class="line">  __IO uint32_t JDR2;</div><div class="line">  __IO uint32_t JDR3;</div><div class="line">  __IO uint32_t JDR4;</div><div class="line">  __IO uint32_t DR;</div><div class="line">&#125; ADC_TypeDef;</div><div class="line"></div><div class="line">/** </div><div class="line">  * @brief Backup Registers  </div><div class="line">  */</div><div class="line"></div><div class="line">typedef struct</div><div class="line">&#123;</div><div class="line">  uint32_t  RESERVED0;</div><div class="line">  __IO uint16_t DR1;</div><div class="line">  uint16_t  RESERVED1;</div><div class="line">  __IO uint16_t DR2;</div><div class="line">  uint16_t  RESERVED2;</div><div class="line">  __IO uint16_t DR3;</div><div class="line">  uint16_t  RESERVED3;</div><div class="line">  __IO uint16_t DR4;</div><div class="line">  uint16_t  RESERVED4;</div><div class="line">  __IO uint16_t DR5;</div><div class="line">  uint16_t  RESERVED5;</div><div class="line">  __IO uint16_t DR6;</div><div class="line">  uint16_t  RESERVED6;</div><div class="line">  __IO uint16_t DR7;</div><div class="line">  uint16_t  RESERVED7;</div><div class="line">  __IO uint16_t DR8;</div><div class="line">  uint16_t  RESERVED8;</div><div class="line">  __IO uint16_t DR9;</div><div class="line">  uint16_t  RESERVED9;</div><div class="line">  __IO uint16_t DR10;</div><div class="line">  uint16_t  RESERVED10; </div><div class="line">  __IO uint16_t RTCCR;</div><div class="line">  uint16_t  RESERVED11;</div><div class="line">  __IO uint16_t CR;</div><div class="line">  uint16_t  RESERVED12;</div><div class="line">  __IO uint16_t CSR;</div><div class="line">  uint16_t  RESERVED13[5];</div><div class="line">  __IO uint16_t DR11;</div><div class="line">  uint16_t  RESERVED14;</div><div class="line">  __IO uint16_t DR12;</div><div class="line">  uint16_t  RESERVED15;</div><div class="line">  __IO uint16_t DR13;</div><div class="line">  uint16_t  RESERVED16;</div><div class="line">  __IO uint16_t DR14;</div><div class="line">  uint16_t  RESERVED17;</div><div class="line">  __IO uint16_t DR15;</div><div class="line">  uint16_t  RESERVED18;</div><div class="line">  __IO uint16_t DR16;</div><div class="line">  uint16_t  RESERVED19;</div><div class="line">  __IO uint16_t DR17;</div><div class="line">  uint16_t  RESERVED20;</div><div class="line">  __IO uint16_t DR18;</div><div class="line">  uint16_t  RESERVED21;</div><div class="line">  __IO uint16_t DR19;</div><div class="line">  uint16_t  RESERVED22;</div><div class="line">  __IO uint16_t DR20;</div><div class="line">  uint16_t  RESERVED23;</div><div class="line">  __IO uint16_t DR21;</div><div class="line">  uint16_t  RESERVED24;</div><div class="line">  __IO uint16_t DR22;</div><div class="line">  uint16_t  RESERVED25;</div><div class="line">  __IO uint16_t DR23;</div><div class="line">  uint16_t  RESERVED26;</div><div class="line">  __IO uint16_t DR24;</div><div class="line">  uint16_t  RESERVED27;</div><div class="line">  __IO uint16_t DR25;</div><div class="line">  uint16_t  RESERVED28;</div><div class="line">  __IO uint16_t DR26;</div><div class="line">  uint16_t  RESERVED29;</div><div class="line">  __IO uint16_t DR27;</div><div class="line">  uint16_t  RESERVED30;</div><div class="line">  __IO uint16_t DR28;</div><div class="line">  uint16_t  RESERVED31;</div><div class="line">  __IO uint16_t DR29;</div><div class="line">  uint16_t  RESERVED32;</div><div class="line">  __IO uint16_t DR30;</div><div class="line">  uint16_t  RESERVED33; </div><div class="line">  __IO uint16_t DR31;</div><div class="line">  uint16_t  RESERVED34;</div><div class="line">  __IO uint16_t DR32;</div><div class="line">  uint16_t  RESERVED35;</div><div class="line">  __IO uint16_t DR33;</div><div class="line">  uint16_t  RESERVED36;</div><div class="line">  __IO uint16_t DR34;</div><div class="line">  uint16_t  RESERVED37;</div><div class="line">  __IO uint16_t DR35;</div><div class="line">  uint16_t  RESERVED38;</div><div class="line">  __IO uint16_t DR36;</div><div class="line">  uint16_t  RESERVED39;</div><div class="line">  __IO uint16_t DR37;</div><div class="line">  uint16_t  RESERVED40;</div><div class="line">  __IO uint16_t DR38;</div><div class="line">  uint16_t  RESERVED41;</div><div class="line">  __IO uint16_t DR39;</div><div class="line">  uint16_t  RESERVED42;</div><div class="line">  __IO uint16_t DR40;</div><div class="line">  uint16_t  RESERVED43;</div><div class="line">  __IO uint16_t DR41;</div><div class="line">  uint16_t  RESERVED44;</div><div class="line">  __IO uint16_t DR42;</div><div class="line">  uint16_t  RESERVED45;    </div><div class="line">&#125; BKP_TypeDef;</div><div class="line">  </div><div class="line">/** </div><div class="line">  * @brief Controller Area Network TxMailBox </div><div class="line">  */</div><div class="line"></div><div class="line">typedef struct</div><div class="line">&#123;</div><div class="line">  __IO uint32_t TIR;</div><div class="line">  __IO uint32_t TDTR;</div><div class="line">  __IO uint32_t TDLR;</div><div class="line">  __IO uint32_t TDHR;</div><div class="line">&#125; CAN_TxMailBox_TypeDef;</div><div class="line"></div><div class="line">/** </div><div class="line">  * @brief Controller Area Network FIFOMailBox </div><div class="line">  */</div><div class="line">  </div><div class="line">typedef struct</div><div class="line">&#123;</div><div class="line">  __IO uint32_t RIR;</div><div class="line">  __IO uint32_t RDTR;</div><div class="line">  __IO uint32_t RDLR;</div><div class="line">  __IO uint32_t RDHR;</div><div class="line">&#125; CAN_FIFOMailBox_TypeDef;</div><div class="line"></div><div class="line">/** </div><div class="line">  * @brief Controller Area Network FilterRegister </div><div class="line">  */</div><div class="line">  </div><div class="line">typedef struct</div><div class="line">&#123;</div><div class="line">  __IO uint32_t FR1;</div><div class="line">  __IO uint32_t FR2;</div><div class="line">&#125; CAN_FilterRegister_TypeDef;</div><div class="line"></div><div class="line">/** </div><div class="line">  * @brief Controller Area Network </div><div class="line">  */</div><div class="line">  </div><div class="line">typedef struct</div><div class="line">&#123;</div><div class="line">  __IO uint32_t MCR;</div><div class="line">  __IO uint32_t MSR;</div><div class="line">  __IO uint32_t TSR;</div><div class="line">  __IO uint32_t RF0R;</div><div class="line">  __IO uint32_t RF1R;</div><div class="line">  __IO uint32_t IER;</div><div class="line">  __IO uint32_t ESR;</div><div class="line">  __IO uint32_t BTR;</div><div class="line">  uint32_t  RESERVED0[88];</div><div class="line">  CAN_TxMailBox_TypeDef sTxMailBox[3];</div><div class="line">  CAN_FIFOMailBox_TypeDef sFIFOMailBox[2];</div><div class="line">  uint32_t  RESERVED1[12];</div><div class="line">  __IO uint32_t FMR;</div><div class="line">  __IO uint32_t FM1R;</div><div class="line">  uint32_t  RESERVED2;</div><div class="line">  __IO uint32_t FS1R;</div><div class="line">  uint32_t  RESERVED3;</div><div class="line">  __IO uint32_t FFA1R;</div><div class="line">  uint32_t  RESERVED4;</div><div class="line">  __IO uint32_t FA1R;</div><div class="line">  uint32_t  RESERVED5[8];</div><div class="line">#ifndef STM32F10X_CL</div><div class="line">  CAN_FilterRegister_TypeDef sFilterRegister[14];</div><div class="line">#else</div><div class="line">  CAN_FilterRegister_TypeDef sFilterRegister[28];</div><div class="line">#endif /* STM32F10X_CL */  </div><div class="line">&#125; CAN_TypeDef;</div><div class="line"></div><div class="line">/** </div><div class="line">  * @brief Consumer Electronics Control (CEC)</div><div class="line">  */</div><div class="line">typedef struct</div><div class="line">&#123;</div><div class="line">  __IO uint32_t CFGR;</div><div class="line">  __IO uint32_t OAR;</div><div class="line">  __IO uint32_t PRES;</div><div class="line">  __IO uint32_t ESR;</div><div class="line">  __IO uint32_t CSR;</div><div class="line">  __IO uint32_t TXD;</div><div class="line">  __IO uint32_t RXD;  </div><div class="line">&#125; CEC_TypeDef;</div><div class="line"></div><div class="line">/** </div><div class="line">  * @brief CRC calculation unit </div><div class="line">  */</div><div class="line"></div><div class="line">typedef struct</div><div class="line">&#123;</div><div class="line">  __IO uint32_t DR;</div><div class="line">  __IO uint8_t  IDR;</div><div class="line">  uint8_t   RESERVED0;</div><div class="line">  uint16_t  RESERVED1;</div><div class="line">  __IO uint32_t CR;</div><div class="line">&#125; CRC_TypeDef;</div><div class="line"></div><div class="line">/** </div><div class="line">  * @brief Digital to Analog Converter</div><div class="line">  */</div><div class="line"></div><div class="line">typedef struct</div><div class="line">&#123;</div><div class="line">  __IO uint32_t CR;</div><div class="line">  __IO uint32_t SWTRIGR;</div><div class="line">  __IO uint32_t DHR12R1;</div><div class="line">  __IO uint32_t DHR12L1;</div><div class="line">  __IO uint32_t DHR8R1;</div><div class="line">  __IO uint32_t DHR12R2;</div><div class="line">  __IO uint32_t DHR12L2;</div><div class="line">  __IO uint32_t DHR8R2;</div><div class="line">  __IO uint32_t DHR12RD;</div><div class="line">  __IO uint32_t DHR12LD;</div><div class="line">  __IO uint32_t DHR8RD;</div><div class="line">  __IO uint32_t DOR1;</div><div class="line">  __IO uint32_t DOR2;</div><div class="line">#if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL)</div><div class="line">  __IO uint32_t SR;</div><div class="line">#endif</div><div class="line">&#125; DAC_TypeDef;</div><div class="line"></div><div class="line">/** </div><div class="line">  * @brief Debug MCU</div><div class="line">  */</div><div class="line"></div><div class="line">typedef struct</div><div class="line">&#123;</div><div class="line">  __IO uint32_t IDCODE;</div><div class="line">  __IO uint32_t CR;	</div><div class="line">&#125;DBGMCU_TypeDef;</div><div class="line"></div><div class="line">/** </div><div class="line">  * @brief DMA Controller</div><div class="line">  */</div><div class="line"></div><div class="line">typedef struct</div><div class="line">&#123;</div><div class="line">  __IO uint32_t CCR;</div><div class="line">  __IO uint32_t CNDTR;</div><div class="line">  __IO uint32_t CPAR;</div><div class="line">  __IO uint32_t CMAR;</div><div class="line">&#125; DMA_Channel_TypeDef;</div><div class="line"></div><div class="line">typedef struct</div><div class="line">&#123;</div><div class="line">  __IO uint32_t ISR;</div><div class="line">  __IO uint32_t IFCR;</div><div class="line">&#125; DMA_TypeDef;</div><div class="line"></div><div class="line">/** </div><div class="line">  * @brief Ethernet MAC</div><div class="line">  */</div><div class="line"></div><div class="line">typedef struct</div><div class="line">&#123;</div><div class="line">  __IO uint32_t MACCR;</div><div class="line">  __IO uint32_t MACFFR;</div><div class="line">  __IO uint32_t MACHTHR;</div><div class="line">  __IO uint32_t MACHTLR;</div><div class="line">  __IO uint32_t MACMIIAR;</div><div class="line">  __IO uint32_t MACMIIDR;</div><div class="line">  __IO uint32_t MACFCR;</div><div class="line">  __IO uint32_t MACVLANTR;             /*    8 */</div><div class="line">       uint32_t RESERVED0[2];</div><div class="line">  __IO uint32_t MACRWUFFR;             /*   11 */</div><div class="line">  __IO uint32_t MACPMTCSR;</div><div class="line">       uint32_t RESERVED1[2];</div><div class="line">  __IO uint32_t MACSR;                 /*   15 */</div><div class="line">  __IO uint32_t MACIMR;</div><div class="line">  __IO uint32_t MACA0HR;</div><div class="line">  __IO uint32_t MACA0LR;</div><div class="line">  __IO uint32_t MACA1HR;</div><div class="line">  __IO uint32_t MACA1LR;</div><div class="line">  __IO uint32_t MACA2HR;</div><div class="line">  __IO uint32_t MACA2LR;</div><div class="line">  __IO uint32_t MACA3HR;</div><div class="line">  __IO uint32_t MACA3LR;               /*   24 */</div><div class="line">       uint32_t RESERVED2[40];</div><div class="line">  __IO uint32_t MMCCR;                 /*   65 */</div><div class="line">  __IO uint32_t MMCRIR;</div><div class="line">  __IO uint32_t MMCTIR;</div><div class="line">  __IO uint32_t MMCRIMR;</div><div class="line">  __IO uint32_t MMCTIMR;               /*   69 */</div><div class="line">       uint32_t RESERVED3[14];</div><div class="line">  __IO uint32_t MMCTGFSCCR;            /*   84 */</div><div class="line">  __IO uint32_t MMCTGFMSCCR;</div><div class="line">       uint32_t RESERVED4[5];</div><div class="line">  __IO uint32_t MMCTGFCR;</div><div class="line">       uint32_t RESERVED5[10];</div><div class="line">  __IO uint32_t MMCRFCECR;</div><div class="line">  __IO uint32_t MMCRFAECR;</div><div class="line">       uint32_t RESERVED6[10];</div><div class="line">  __IO uint32_t MMCRGUFCR;</div><div class="line">       uint32_t RESERVED7[334];</div><div class="line">  __IO uint32_t PTPTSCR;</div><div class="line">  __IO uint32_t PTPSSIR;</div><div class="line">  __IO uint32_t PTPTSHR;</div><div class="line">  __IO uint32_t PTPTSLR;</div><div class="line">  __IO uint32_t PTPTSHUR;</div><div class="line">  __IO uint32_t PTPTSLUR;</div><div class="line">  __IO uint32_t PTPTSAR;</div><div class="line">  __IO uint32_t PTPTTHR;</div><div class="line">  __IO uint32_t PTPTTLR;</div><div class="line">       uint32_t RESERVED8[567];</div><div class="line">  __IO uint32_t DMABMR;</div><div class="line">  __IO uint32_t DMATPDR;</div><div class="line">  __IO uint32_t DMARPDR;</div><div class="line">  __IO uint32_t DMARDLAR;</div><div class="line">  __IO uint32_t DMATDLAR;</div><div class="line">  __IO uint32_t DMASR;</div><div class="line">  __IO uint32_t DMAOMR;</div><div class="line">  __IO uint32_t DMAIER;</div><div class="line">  __IO uint32_t DMAMFBOCR;</div><div class="line">       uint32_t RESERVED9[9];</div><div class="line">  __IO uint32_t DMACHTDR;</div><div class="line">  __IO uint32_t DMACHRDR;</div><div class="line">  __IO uint32_t DMACHTBAR;</div><div class="line">  __IO uint32_t DMACHRBAR;</div><div class="line">&#125; ETH_TypeDef;</div><div class="line"></div><div class="line">/** </div><div class="line">  * @brief External Interrupt/Event Controller</div><div class="line">  */</div><div class="line"></div><div class="line">typedef struct</div><div class="line">&#123;</div><div class="line">  __IO uint32_t IMR;</div><div class="line">  __IO uint32_t EMR;</div><div class="line">  __IO uint32_t RTSR;</div><div class="line">  __IO uint32_t FTSR;</div><div class="line">  __IO uint32_t SWIER;</div><div class="line">  __IO uint32_t PR;</div><div class="line">&#125; EXTI_TypeDef;</div><div class="line"></div><div class="line">/** </div><div class="line">  * @brief FLASH Registers</div><div class="line">  */</div><div class="line"></div><div class="line">typedef struct</div><div class="line">&#123;</div><div class="line">  __IO uint32_t ACR;</div><div class="line">  __IO uint32_t KEYR;</div><div class="line">  __IO uint32_t OPTKEYR;</div><div class="line">  __IO uint32_t SR;</div><div class="line">  __IO uint32_t CR;</div><div class="line">  __IO uint32_t AR;</div><div class="line">  __IO uint32_t RESERVED;</div><div class="line">  __IO uint32_t OBR;</div><div class="line">  __IO uint32_t WRPR;</div><div class="line">#ifdef STM32F10X_XL</div><div class="line">  uint32_t RESERVED1[8]; </div><div class="line">  __IO uint32_t KEYR2;</div><div class="line">  uint32_t RESERVED2;   </div><div class="line">  __IO uint32_t SR2;</div><div class="line">  __IO uint32_t CR2;</div><div class="line">  __IO uint32_t AR2; </div><div class="line">#endif /* STM32F10X_XL */  </div><div class="line">&#125; FLASH_TypeDef;</div><div class="line"></div><div class="line">/** </div><div class="line">  * @brief Option Bytes Registers</div><div class="line">  */</div><div class="line">  </div><div class="line">typedef struct</div><div class="line">&#123;</div><div class="line">  __IO uint16_t RDP;</div><div class="line">  __IO uint16_t USER;</div><div class="line">  __IO uint16_t Data0;</div><div class="line">  __IO uint16_t Data1;</div><div class="line">  __IO uint16_t WRP0;</div><div class="line">  __IO uint16_t WRP1;</div><div class="line">  __IO uint16_t WRP2;</div><div class="line">  __IO uint16_t WRP3;</div><div class="line">&#125; OB_TypeDef;</div><div class="line"></div><div class="line">/** </div><div class="line">  * @brief Flexible Static Memory Controller</div><div class="line">  */</div><div class="line"></div><div class="line">typedef struct</div><div class="line">&#123;</div><div class="line">  __IO uint32_t BTCR[8];   </div><div class="line">&#125; FSMC_Bank1_TypeDef; </div><div class="line"></div><div class="line">/** </div><div class="line">  * @brief Flexible Static Memory Controller Bank1E</div><div class="line">  */</div><div class="line">  </div><div class="line">typedef struct</div><div class="line">&#123;</div><div class="line">  __IO uint32_t BWTR[7];</div><div class="line">&#125; FSMC_Bank1E_TypeDef;</div><div class="line"></div><div class="line">/** </div><div class="line">  * @brief Flexible Static Memory Controller Bank2</div><div class="line">  */</div><div class="line">  </div><div class="line">typedef struct</div><div class="line">&#123;</div><div class="line">  __IO uint32_t PCR2;</div><div class="line">  __IO uint32_t SR2;</div><div class="line">  __IO uint32_t PMEM2;</div><div class="line">  __IO uint32_t PATT2;</div><div class="line">  uint32_t  RESERVED0;   </div><div class="line">  __IO uint32_t ECCR2; </div><div class="line">&#125; FSMC_Bank2_TypeDef;  </div><div class="line"></div><div class="line">/** </div><div class="line">  * @brief Flexible Static Memory Controller Bank3</div><div class="line">  */</div><div class="line">  </div><div class="line">typedef struct</div><div class="line">&#123;</div><div class="line">  __IO uint32_t PCR3;</div><div class="line">  __IO uint32_t SR3;</div><div class="line">  __IO uint32_t PMEM3;</div><div class="line">  __IO uint32_t PATT3;</div><div class="line">  uint32_t  RESERVED0;   </div><div class="line">  __IO uint32_t ECCR3; </div><div class="line">&#125; FSMC_Bank3_TypeDef; </div><div class="line"></div><div class="line">/** </div><div class="line">  * @brief Flexible Static Memory Controller Bank4</div><div class="line">  */</div><div class="line">  </div><div class="line">typedef struct</div><div class="line">&#123;</div><div class="line">  __IO uint32_t PCR4;</div><div class="line">  __IO uint32_t SR4;</div><div class="line">  __IO uint32_t PMEM4;</div><div class="line">  __IO uint32_t PATT4;</div><div class="line">  __IO uint32_t PIO4; </div><div class="line">&#125; FSMC_Bank4_TypeDef; </div><div class="line"></div><div class="line">/** </div><div class="line">  * @brief General Purpose I/O</div><div class="line">  */</div><div class="line"></div><div class="line">typedef struct</div><div class="line">&#123;</div><div class="line">  __IO uint32_t CRL;</div><div class="line">  __IO uint32_t CRH;</div><div class="line">  __IO uint32_t IDR;</div><div class="line">  __IO uint32_t ODR;</div><div class="line">  __IO uint32_t BSRR;</div><div class="line">  __IO uint32_t BRR;</div><div class="line">  __IO uint32_t LCKR;</div><div class="line">&#125; GPIO_TypeDef;</div><div class="line"></div><div class="line">/** </div><div class="line">  * @brief Alternate Function I/O</div><div class="line">  */</div><div class="line"></div><div class="line">typedef struct</div><div class="line">&#123;</div><div class="line">  __IO uint32_t EVCR;</div><div class="line">  __IO uint32_t MAPR;</div><div class="line">  __IO uint32_t EXTICR[4];</div><div class="line">  uint32_t RESERVED0;</div><div class="line">  __IO uint32_t MAPR2;  </div><div class="line">&#125; AFIO_TypeDef;</div><div class="line">/** </div><div class="line">  * @brief Inter Integrated Circuit Interface</div><div class="line">  */</div><div class="line"></div><div class="line">typedef struct</div><div class="line">&#123;</div><div class="line">  __IO uint16_t CR1;</div><div class="line">  uint16_t  RESERVED0;</div><div class="line">  __IO uint16_t CR2;</div><div class="line">  uint16_t  RESERVED1;</div><div class="line">  __IO uint16_t OAR1;</div><div class="line">  uint16_t  RESERVED2;</div><div class="line">  __IO uint16_t OAR2;</div><div class="line">  uint16_t  RESERVED3;</div><div class="line">  __IO uint16_t DR;</div><div class="line">  uint16_t  RESERVED4;</div><div class="line">  __IO uint16_t SR1;</div><div class="line">  uint16_t  RESERVED5;</div><div class="line">  __IO uint16_t SR2;</div><div class="line">  uint16_t  RESERVED6;</div><div class="line">  __IO uint16_t CCR;</div><div class="line">  uint16_t  RESERVED7;</div><div class="line">  __IO uint16_t TRISE;</div><div class="line">  uint16_t  RESERVED8;</div><div class="line">&#125; I2C_TypeDef;</div><div class="line"></div><div class="line">/** </div><div class="line">  * @brief Independent WATCHDOG</div><div class="line">  */</div><div class="line"></div><div class="line">typedef struct</div><div class="line">&#123;</div><div class="line">  __IO uint32_t KR;</div><div class="line">  __IO uint32_t PR;</div><div class="line">  __IO uint32_t RLR;</div><div class="line">  __IO uint32_t SR;</div><div class="line">&#125; IWDG_TypeDef;</div><div class="line"></div><div class="line">/** </div><div class="line">  * @brief Power Control</div><div class="line">  */</div><div class="line"></div><div class="line">typedef struct</div><div class="line">&#123;</div><div class="line">  __IO uint32_t CR;</div><div class="line">  __IO uint32_t CSR;</div><div class="line">&#125; PWR_TypeDef;</div><div class="line"></div><div class="line">/** </div><div class="line">  * @brief Reset and Clock Control</div><div class="line">  */</div><div class="line"></div><div class="line">typedef struct</div><div class="line">&#123;</div><div class="line">  __IO uint32_t CR;</div><div class="line">  __IO uint32_t CFGR;</div><div class="line">  __IO uint32_t CIR;</div><div class="line">  __IO uint32_t APB2RSTR;</div><div class="line">  __IO uint32_t APB1RSTR;</div><div class="line">  __IO uint32_t AHBENR;</div><div class="line">  __IO uint32_t APB2ENR;</div><div class="line">  __IO uint32_t APB1ENR;</div><div class="line">  __IO uint32_t BDCR;</div><div class="line">  __IO uint32_t CSR;</div><div class="line"></div><div class="line">#ifdef STM32F10X_CL  </div><div class="line">  __IO uint32_t AHBRSTR;</div><div class="line">  __IO uint32_t CFGR2;</div><div class="line">#endif /* STM32F10X_CL */ </div><div class="line"></div><div class="line">#if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL)   </div><div class="line">  uint32_t RESERVED0;</div><div class="line">  __IO uint32_t CFGR2;</div><div class="line">#endif /* STM32F10X_LD_VL || STM32F10X_MD_VL || STM32F10X_HD_VL */ </div><div class="line">&#125; RCC_TypeDef;</div><div class="line"></div><div class="line">/** </div><div class="line">  * @brief Real-Time Clock</div><div class="line">  */</div><div class="line"></div><div class="line">typedef struct</div><div class="line">&#123;</div><div class="line">  __IO uint16_t CRH;</div><div class="line">  uint16_t  RESERVED0;</div><div class="line">  __IO uint16_t CRL;</div><div class="line">  uint16_t  RESERVED1;</div><div class="line">  __IO uint16_t PRLH;</div><div class="line">  uint16_t  RESERVED2;</div><div class="line">  __IO uint16_t PRLL;</div><div class="line">  uint16_t  RESERVED3;</div><div class="line">  __IO uint16_t DIVH;</div><div class="line">  uint16_t  RESERVED4;</div><div class="line">  __IO uint16_t DIVL;</div><div class="line">  uint16_t  RESERVED5;</div><div class="line">  __IO uint16_t CNTH;</div><div class="line">  uint16_t  RESERVED6;</div><div class="line">  __IO uint16_t CNTL;</div><div class="line">  uint16_t  RESERVED7;</div><div class="line">  __IO uint16_t ALRH;</div><div class="line">  uint16_t  RESERVED8;</div><div class="line">  __IO uint16_t ALRL;</div><div class="line">  uint16_t  RESERVED9;</div><div class="line">&#125; RTC_TypeDef;</div><div class="line"></div><div class="line">/** </div><div class="line">  * @brief SD host Interface</div><div class="line">  */</div><div class="line"></div><div class="line">typedef struct</div><div class="line">&#123;</div><div class="line">  __IO uint32_t POWER;</div><div class="line">  __IO uint32_t CLKCR;</div><div class="line">  __IO uint32_t ARG;</div><div class="line">  __IO uint32_t CMD;</div><div class="line">  __I uint32_t RESPCMD;</div><div class="line">  __I uint32_t RESP1;</div><div class="line">  __I uint32_t RESP2;</div><div class="line">  __I uint32_t RESP3;</div><div class="line">  __I uint32_t RESP4;</div><div class="line">  __IO uint32_t DTIMER;</div><div class="line">  __IO uint32_t DLEN;</div><div class="line">  __IO uint32_t DCTRL;</div><div class="line">  __I uint32_t DCOUNT;</div><div class="line">  __I uint32_t STA;</div><div class="line">  __IO uint32_t ICR;</div><div class="line">  __IO uint32_t MASK;</div><div class="line">  uint32_t  RESERVED0[2];</div><div class="line">  __I uint32_t FIFOCNT;</div><div class="line">  uint32_t  RESERVED1[13];</div><div class="line">  __IO uint32_t FIFO;</div><div class="line">&#125; SDIO_TypeDef;</div><div class="line"></div><div class="line">/** </div><div class="line">  * @brief Serial Peripheral Interface</div><div class="line">  */</div><div class="line"></div><div class="line">typedef struct</div><div class="line">&#123;</div><div class="line">  __IO uint16_t CR1;</div><div class="line">  uint16_t  RESERVED0;</div><div class="line">  __IO uint16_t CR2;</div><div class="line">  uint16_t  RESERVED1;</div><div class="line">  __IO uint16_t SR;</div><div class="line">  uint16_t  RESERVED2;</div><div class="line">  __IO uint16_t DR;</div><div class="line">  uint16_t  RESERVED3;</div><div class="line">  __IO uint16_t CRCPR;</div><div class="line">  uint16_t  RESERVED4;</div><div class="line">  __IO uint16_t RXCRCR;</div><div class="line">  uint16_t  RESERVED5;</div><div class="line">  __IO uint16_t TXCRCR;</div><div class="line">  uint16_t  RESERVED6;</div><div class="line">  __IO uint16_t I2SCFGR;</div><div class="line">  uint16_t  RESERVED7;</div><div class="line">  __IO uint16_t I2SPR;</div><div class="line">  uint16_t  RESERVED8;  </div><div class="line">&#125; SPI_TypeDef;</div><div class="line"></div><div class="line">/** </div><div class="line">  * @brief TIM</div><div class="line">  */</div><div class="line"></div><div class="line">typedef struct</div><div class="line">&#123;</div><div class="line">  __IO uint16_t CR1;</div><div class="line">  uint16_t  RESERVED0;</div><div class="line">  __IO uint16_t CR2;</div><div class="line">  uint16_t  RESERVED1;</div><div class="line">  __IO uint16_t SMCR;</div><div class="line">  uint16_t  RESERVED2;</div><div class="line">  __IO uint16_t DIER;</div><div class="line">  uint16_t  RESERVED3;</div><div class="line">  __IO uint16_t SR;</div><div class="line">  uint16_t  RESERVED4;</div><div class="line">  __IO uint16_t EGR;</div><div class="line">  uint16_t  RESERVED5;</div><div class="line">  __IO uint16_t CCMR1;</div><div class="line">  uint16_t  RESERVED6;</div><div class="line">  __IO uint16_t CCMR2;</div><div class="line">  uint16_t  RESERVED7;</div><div class="line">  __IO uint16_t CCER;</div><div class="line">  uint16_t  RESERVED8;</div><div class="line">  __IO uint16_t CNT;</div><div class="line">  uint16_t  RESERVED9;</div><div class="line">  __IO uint16_t PSC;</div><div class="line">  uint16_t  RESERVED10;</div><div class="line">  __IO uint16_t ARR;</div><div class="line">  uint16_t  RESERVED11;</div><div class="line">  __IO uint16_t RCR;</div><div class="line">  uint16_t  RESERVED12;</div><div class="line">  __IO uint16_t CCR1;</div><div class="line">  uint16_t  RESERVED13;</div><div class="line">  __IO uint16_t CCR2;</div><div class="line">  uint16_t  RESERVED14;</div><div class="line">  __IO uint16_t CCR3;</div><div class="line">  uint16_t  RESERVED15;</div><div class="line">  __IO uint16_t CCR4;</div><div class="line">  uint16_t  RESERVED16;</div><div class="line">  __IO uint16_t BDTR;</div><div class="line">  uint16_t  RESERVED17;</div><div class="line">  __IO uint16_t DCR;</div><div class="line">  uint16_t  RESERVED18;</div><div class="line">  __IO uint16_t DMAR;</div><div class="line">  uint16_t  RESERVED19;</div><div class="line">&#125; TIM_TypeDef;</div><div class="line"></div><div class="line">/** </div><div class="line">  * @brief Universal Synchronous Asynchronous Receiver Transmitter</div><div class="line">  */</div><div class="line"> </div><div class="line">typedef struct</div><div class="line">&#123;</div><div class="line">  __IO uint16_t SR;</div><div class="line">  uint16_t  RESERVED0;</div><div class="line">  __IO uint16_t DR;</div><div class="line">  uint16_t  RESERVED1;</div><div class="line">  __IO uint16_t BRR;</div><div class="line">  uint16_t  RESERVED2;</div><div class="line">  __IO uint16_t CR1;</div><div class="line">  uint16_t  RESERVED3;</div><div class="line">  __IO uint16_t CR2;</div><div class="line">  uint16_t  RESERVED4;</div><div class="line">  __IO uint16_t CR3;</div><div class="line">  uint16_t  RESERVED5;</div><div class="line">  __IO uint16_t GTPR;</div><div class="line">  uint16_t  RESERVED6;</div><div class="line">&#125; USART_TypeDef;</div><div class="line"></div><div class="line">/** </div><div class="line">  * @brief Window WATCHDOG</div><div class="line">  */</div><div class="line"></div><div class="line">typedef struct</div><div class="line">&#123;</div><div class="line">  __IO uint32_t CR;</div><div class="line">  __IO uint32_t CFR;</div><div class="line">  __IO uint32_t SR;</div><div class="line">&#125; WWDG_TypeDef;</div><div class="line"></div><div class="line">/**</div><div class="line">  * @&#125;</div><div class="line">  */</div><div class="line">  </div><div class="line">/** @addtogroup Peripheral_memory_map</div><div class="line">  * @&#123;</div><div class="line">  */</div><div class="line"></div><div class="line"></div><div class="line">#define FLASH_BASE            ((uint32_t)0x08000000) /*!&lt; FLASH base address in the alias region */</div><div class="line">#define SRAM_BASE             ((uint32_t)0x20000000) /*!&lt; SRAM base address in the alias region */</div><div class="line">#define PERIPH_BASE           ((uint32_t)0x40000000) /*!&lt; Peripheral base address in the alias region */</div><div class="line"></div><div class="line">#define SRAM_BB_BASE          ((uint32_t)0x22000000) /*!&lt; SRAM base address in the bit-band region */</div><div class="line">#define PERIPH_BB_BASE        ((uint32_t)0x42000000) /*!&lt; Peripheral base address in the bit-band region */</div><div class="line"></div><div class="line">#define FSMC_R_BASE           ((uint32_t)0xA0000000) /*!&lt; FSMC registers base address */</div><div class="line"></div><div class="line">/*!&lt; Peripheral memory map */</div><div class="line">#define APB1PERIPH_BASE       PERIPH_BASE</div><div class="line">#define APB2PERIPH_BASE       (PERIPH_BASE + 0x10000)</div><div class="line">#define AHBPERIPH_BASE        (PERIPH_BASE + 0x20000)</div><div class="line"></div><div class="line">#define TIM2_BASE             (APB1PERIPH_BASE + 0x0000)</div><div class="line">#define TIM3_BASE             (APB1PERIPH_BASE + 0x0400)</div><div class="line">#define TIM4_BASE             (APB1PERIPH_BASE + 0x0800)</div><div class="line">#define TIM5_BASE             (APB1PERIPH_BASE + 0x0C00)</div><div class="line">#define TIM6_BASE             (APB1PERIPH_BASE + 0x1000)</div><div class="line">#define TIM7_BASE             (APB1PERIPH_BASE + 0x1400)</div><div class="line">#define TIM12_BASE            (APB1PERIPH_BASE + 0x1800)</div><div class="line">#define TIM13_BASE            (APB1PERIPH_BASE + 0x1C00)</div><div class="line">#define TIM14_BASE            (APB1PERIPH_BASE + 0x2000)</div><div class="line">#define RTC_BASE              (APB1PERIPH_BASE + 0x2800)</div><div class="line">#define WWDG_BASE             (APB1PERIPH_BASE + 0x2C00)</div><div class="line">#define IWDG_BASE             (APB1PERIPH_BASE + 0x3000)</div><div class="line">#define SPI2_BASE             (APB1PERIPH_BASE + 0x3800)</div><div class="line">#define SPI3_BASE             (APB1PERIPH_BASE + 0x3C00)</div><div class="line">#define USART2_BASE           (APB1PERIPH_BASE + 0x4400)</div><div class="line">#define USART3_BASE           (APB1PERIPH_BASE + 0x4800)</div><div class="line">#define UART4_BASE            (APB1PERIPH_BASE + 0x4C00)</div><div class="line">#define UART5_BASE            (APB1PERIPH_BASE + 0x5000)</div><div class="line">#define I2C1_BASE             (APB1PERIPH_BASE + 0x5400)</div><div class="line">#define I2C2_BASE             (APB1PERIPH_BASE + 0x5800)</div><div class="line">#define CAN1_BASE             (APB1PERIPH_BASE + 0x6400)</div><div class="line">#define CAN2_BASE             (APB1PERIPH_BASE + 0x6800)</div><div class="line">#define BKP_BASE              (APB1PERIPH_BASE + 0x6C00)</div><div class="line">#define PWR_BASE              (APB1PERIPH_BASE + 0x7000)</div><div class="line">#define DAC_BASE              (APB1PERIPH_BASE + 0x7400)</div><div class="line">#define CEC_BASE              (APB1PERIPH_BASE + 0x7800)</div><div class="line"></div><div class="line">#define AFIO_BASE             (APB2PERIPH_BASE + 0x0000)</div><div class="line">#define EXTI_BASE             (APB2PERIPH_BASE + 0x0400)</div><div class="line">#define GPIOA_BASE            (APB2PERIPH_BASE + 0x0800)</div><div class="line">#define GPIOB_BASE            (APB2PERIPH_BASE + 0x0C00)</div><div class="line">#define GPIOC_BASE            (APB2PERIPH_BASE + 0x1000)</div><div class="line">#define GPIOD_BASE            (APB2PERIPH_BASE + 0x1400)</div><div class="line">#define GPIOE_BASE            (APB2PERIPH_BASE + 0x1800)</div><div class="line">#define GPIOF_BASE            (APB2PERIPH_BASE + 0x1C00)</div><div class="line">#define GPIOG_BASE            (APB2PERIPH_BASE + 0x2000)</div><div class="line">#define ADC1_BASE             (APB2PERIPH_BASE + 0x2400)</div><div class="line">#define ADC2_BASE             (APB2PERIPH_BASE + 0x2800)</div><div class="line">#define TIM1_BASE             (APB2PERIPH_BASE + 0x2C00)</div><div class="line">#define SPI1_BASE             (APB2PERIPH_BASE + 0x3000)</div><div class="line">#define TIM8_BASE             (APB2PERIPH_BASE + 0x3400)</div><div class="line">#define USART1_BASE           (APB2PERIPH_BASE + 0x3800)</div><div class="line">#define ADC3_BASE             (APB2PERIPH_BASE + 0x3C00)</div><div class="line">#define TIM15_BASE            (APB2PERIPH_BASE + 0x4000)</div><div class="line">#define TIM16_BASE            (APB2PERIPH_BASE + 0x4400)</div><div class="line">#define TIM17_BASE            (APB2PERIPH_BASE + 0x4800)</div><div class="line">#define TIM9_BASE             (APB2PERIPH_BASE + 0x4C00)</div><div class="line">#define TIM10_BASE            (APB2PERIPH_BASE + 0x5000)</div><div class="line">#define TIM11_BASE            (APB2PERIPH_BASE + 0x5400)</div><div class="line"></div><div class="line">#define SDIO_BASE             (PERIPH_BASE + 0x18000)</div><div class="line"></div><div class="line">#define DMA1_BASE             (AHBPERIPH_BASE + 0x0000)</div><div class="line">#define DMA1_Channel1_BASE    (AHBPERIPH_BASE + 0x0008)</div><div class="line">#define DMA1_Channel2_BASE    (AHBPERIPH_BASE + 0x001C)</div><div class="line">#define DMA1_Channel3_BASE    (AHBPERIPH_BASE + 0x0030)</div><div class="line">#define DMA1_Channel4_BASE    (AHBPERIPH_BASE + 0x0044)</div><div class="line">#define DMA1_Channel5_BASE    (AHBPERIPH_BASE + 0x0058)</div><div class="line">#define DMA1_Channel6_BASE    (AHBPERIPH_BASE + 0x006C)</div><div class="line">#define DMA1_Channel7_BASE    (AHBPERIPH_BASE + 0x0080)</div><div class="line">#define DMA2_BASE             (AHBPERIPH_BASE + 0x0400)</div><div class="line">#define DMA2_Channel1_BASE    (AHBPERIPH_BASE + 0x0408)</div><div class="line">#define DMA2_Channel2_BASE    (AHBPERIPH_BASE + 0x041C)</div><div class="line">#define DMA2_Channel3_BASE    (AHBPERIPH_BASE + 0x0430)</div><div class="line">#define DMA2_Channel4_BASE    (AHBPERIPH_BASE + 0x0444)</div><div class="line">#define DMA2_Channel5_BASE    (AHBPERIPH_BASE + 0x0458)</div><div class="line">#define RCC_BASE              (AHBPERIPH_BASE + 0x1000)</div><div class="line">#define CRC_BASE              (AHBPERIPH_BASE + 0x3000)</div><div class="line"></div><div class="line">#define FLASH_R_BASE          (AHBPERIPH_BASE + 0x2000) /*!&lt; Flash registers base address */</div><div class="line">#define OB_BASE               ((uint32_t)0x1FFFF800)    /*!&lt; Flash Option Bytes base address */</div><div class="line"></div><div class="line">#define ETH_BASE              (AHBPERIPH_BASE + 0x8000)</div><div class="line">#define ETH_MAC_BASE          (ETH_BASE)</div><div class="line">#define ETH_MMC_BASE          (ETH_BASE + 0x0100)</div><div class="line">#define ETH_PTP_BASE          (ETH_BASE + 0x0700)</div><div class="line">#define ETH_DMA_BASE          (ETH_BASE + 0x1000)</div><div class="line"></div><div class="line">#define FSMC_Bank1_R_BASE     (FSMC_R_BASE + 0x0000) /*!&lt; FSMC Bank1 registers base address */</div><div class="line">#define FSMC_Bank1E_R_BASE    (FSMC_R_BASE + 0x0104) /*!&lt; FSMC Bank1E registers base address */</div><div class="line">#define FSMC_Bank2_R_BASE     (FSMC_R_BASE + 0x0060) /*!&lt; FSMC Bank2 registers base address */</div><div class="line">#define FSMC_Bank3_R_BASE     (FSMC_R_BASE + 0x0080) /*!&lt; FSMC Bank3 registers base address */</div><div class="line">#define FSMC_Bank4_R_BASE     (FSMC_R_BASE + 0x00A0) /*!&lt; FSMC Bank4 registers base address */</div><div class="line"></div><div class="line">#define DBGMCU_BASE          ((uint32_t)0xE0042000) /*!&lt; Debug MCU registers base address */</div><div class="line"></div><div class="line">/**</div><div class="line">  * @&#125;</div><div class="line">  */</div><div class="line">  </div><div class="line">/** @addtogroup Peripheral_declaration</div><div class="line">  * @&#123;</div><div class="line">  */  </div><div class="line"></div><div class="line">#define TIM2                ((TIM_TypeDef *) TIM2_BASE)</div><div class="line">#define TIM3                ((TIM_TypeDef *) TIM3_BASE)</div><div class="line">#define TIM4                ((TIM_TypeDef *) TIM4_BASE)</div><div class="line">#define TIM5                ((TIM_TypeDef *) TIM5_BASE)</div><div class="line">#define TIM6                ((TIM_TypeDef *) TIM6_BASE)</div><div class="line">#define TIM7                ((TIM_TypeDef *) TIM7_BASE)</div><div class="line">#define TIM12               ((TIM_TypeDef *) TIM12_BASE)</div><div class="line">#define TIM13               ((TIM_TypeDef *) TIM13_BASE)</div><div class="line">#define TIM14               ((TIM_TypeDef *) TIM14_BASE)</div><div class="line">#define RTC                 ((RTC_TypeDef *) RTC_BASE)</div><div class="line">#define WWDG                ((WWDG_TypeDef *) WWDG_BASE)</div><div class="line">#define IWDG                ((IWDG_TypeDef *) IWDG_BASE)</div><div class="line">#define SPI2                ((SPI_TypeDef *) SPI2_BASE)</div><div class="line">#define SPI3                ((SPI_TypeDef *) SPI3_BASE)</div><div class="line">#define USART2              ((USART_TypeDef *) USART2_BASE)</div><div class="line">#define USART3              ((USART_TypeDef *) USART3_BASE)</div><div class="line">#define UART4               ((USART_TypeDef *) UART4_BASE)</div><div class="line">#define UART5               ((USART_TypeDef *) UART5_BASE)</div><div class="line">#define I2C1                ((I2C_TypeDef *) I2C1_BASE)</div><div class="line">#define I2C2                ((I2C_TypeDef *) I2C2_BASE)</div><div class="line">#define CAN1                ((CAN_TypeDef *) CAN1_BASE)</div><div class="line">#define CAN2                ((CAN_TypeDef *) CAN2_BASE)</div><div class="line">#define BKP                 ((BKP_TypeDef *) BKP_BASE)</div><div class="line">#define PWR                 ((PWR_TypeDef *) PWR_BASE)</div><div class="line">#define DAC                 ((DAC_TypeDef *) DAC_BASE)</div><div class="line">#define CEC                 ((CEC_TypeDef *) CEC_BASE)</div><div class="line">#define AFIO                ((AFIO_TypeDef *) AFIO_BASE)</div><div class="line">#define EXTI                ((EXTI_TypeDef *) EXTI_BASE)</div><div class="line">#define GPIOA               ((GPIO_TypeDef *) GPIOA_BASE)</div><div class="line">#define GPIOB               ((GPIO_TypeDef *) GPIOB_BASE)</div><div class="line">#define GPIOC               ((GPIO_TypeDef *) GPIOC_BASE)</div><div class="line">#define GPIOD               ((GPIO_TypeDef *) GPIOD_BASE)</div><div class="line">#define GPIOE               ((GPIO_TypeDef *) GPIOE_BASE)</div><div class="line">#define GPIOF               ((GPIO_TypeDef *) GPIOF_BASE)</div><div class="line">#define GPIOG               ((GPIO_TypeDef *) GPIOG_BASE)</div><div class="line">#define ADC1                ((ADC_TypeDef *) ADC1_BASE)</div><div class="line">#define ADC2                ((ADC_TypeDef *) ADC2_BASE)</div><div class="line">#define TIM1                ((TIM_TypeDef *) TIM1_BASE)</div><div class="line">#define SPI1                ((SPI_TypeDef *) SPI1_BASE)</div><div class="line">#define TIM8                ((TIM_TypeDef *) TIM8_BASE)</div><div class="line">#define USART1              ((USART_TypeDef *) USART1_BASE)</div><div class="line">#define ADC3                ((ADC_TypeDef *) ADC3_BASE)</div><div class="line">#define TIM15               ((TIM_TypeDef *) TIM15_BASE)</div><div class="line">#define TIM16               ((TIM_TypeDef *) TIM16_BASE)</div><div class="line">#define TIM17               ((TIM_TypeDef *) TIM17_BASE)</div><div class="line">#define TIM9                ((TIM_TypeDef *) TIM9_BASE)</div><div class="line">#define TIM10               ((TIM_TypeDef *) TIM10_BASE)</div><div class="line">#define TIM11               ((TIM_TypeDef *) TIM11_BASE)</div><div class="line">#define SDIO                ((SDIO_TypeDef *) SDIO_BASE)</div><div class="line">#define DMA1                ((DMA_TypeDef *) DMA1_BASE)</div><div class="line">#define DMA2                ((DMA_TypeDef *) DMA2_BASE)</div><div class="line">#define DMA1_Channel1       ((DMA_Channel_TypeDef *) DMA1_Channel1_BASE)</div><div class="line">#define DMA1_Channel2       ((DMA_Channel_TypeDef *) DMA1_Channel2_BASE)</div><div class="line">#define DMA1_Channel3       ((DMA_Channel_TypeDef *) DMA1_Channel3_BASE)</div><div class="line">#define DMA1_Channel4       ((DMA_Channel_TypeDef *) DMA1_Channel4_BASE)</div><div class="line">#define DMA1_Channel5       ((DMA_Channel_TypeDef *) DMA1_Channel5_BASE)</div><div class="line">#define DMA1_Channel6       ((DMA_Channel_TypeDef *) DMA1_Channel6_BASE)</div><div class="line">#define DMA1_Channel7       ((DMA_Channel_TypeDef *) DMA1_Channel7_BASE)</div><div class="line">#define DMA2_Channel1       ((DMA_Channel_TypeDef *) DMA2_Channel1_BASE)</div><div class="line">#define DMA2_Channel2       ((DMA_Channel_TypeDef *) DMA2_Channel2_BASE)</div><div class="line">#define DMA2_Channel3       ((DMA_Channel_TypeDef *) DMA2_Channel3_BASE)</div><div class="line">#define DMA2_Channel4       ((DMA_Channel_TypeDef *) DMA2_Channel4_BASE)</div><div class="line">#define DMA2_Channel5       ((DMA_Channel_TypeDef *) DMA2_Channel5_BASE)</div><div class="line">#define RCC                 ((RCC_TypeDef *) RCC_BASE)</div><div class="line">#define CRC                 ((CRC_TypeDef *) CRC_BASE)</div><div class="line">#define FLASH               ((FLASH_TypeDef *) FLASH_R_BASE)</div><div class="line">#define OB                  ((OB_TypeDef *) OB_BASE) </div><div class="line">#define ETH                 ((ETH_TypeDef *) ETH_BASE)</div><div class="line">#define FSMC_Bank1          ((FSMC_Bank1_TypeDef *) FSMC_Bank1_R_BASE)</div><div class="line">#define FSMC_Bank1E         ((FSMC_Bank1E_TypeDef *) FSMC_Bank1E_R_BASE)</div><div class="line">#define FSMC_Bank2          ((FSMC_Bank2_TypeDef *) FSMC_Bank2_R_BASE)</div><div class="line">#define FSMC_Bank3          ((FSMC_Bank3_TypeDef *) FSMC_Bank3_R_BASE)</div><div class="line">#define FSMC_Bank4          ((FSMC_Bank4_TypeDef *) FSMC_Bank4_R_BASE)</div><div class="line">#define DBGMCU              ((DBGMCU_TypeDef *) DBGMCU_BASE)</div><div class="line"></div><div class="line">/**</div><div class="line">  * @&#125;</div><div class="line">  */</div><div class="line"></div><div class="line">/** @addtogroup Exported_constants</div><div class="line">  * @&#123;</div><div class="line">  */</div><div class="line">  </div><div class="line">  /** @addtogroup Peripheral_Registers_Bits_Definition</div><div class="line">  * @&#123;</div><div class="line">  */</div><div class="line">    </div><div class="line">/******************************************************************************/</div><div class="line">/*                         Peripheral Registers_Bits_Definition               */</div><div class="line">/******************************************************************************/</div><div class="line"></div><div class="line">/******************************************************************************/</div><div class="line">/*                                                                            */</div><div class="line">/*                          CRC calculation unit                              */</div><div class="line">/*                                                                            */</div><div class="line">/******************************************************************************/</div><div class="line"></div><div class="line">/*******************  Bit definition for CRC_DR register  *********************/</div><div class="line">#define  CRC_DR_DR                           ((uint32_t)0xFFFFFFFF) /*!&lt; Data register bits */</div><div class="line"></div><div class="line"></div><div class="line">/*******************  Bit definition for CRC_IDR register  ********************/</div><div class="line">#define  CRC_IDR_IDR                         ((uint8_t)0xFF)        /*!&lt; General-purpose 8-bit data register bits */</div><div class="line"></div><div class="line"></div><div class="line">/********************  Bit definition for CRC_CR register  ********************/</div><div class="line">#define  CRC_CR_RESET                        ((uint8_t)0x01)        /*!&lt; RESET bit */</div><div class="line"></div><div class="line">/******************************************************************************/</div><div class="line">/*                                                                            */</div><div class="line">/*                             Power Control                                  */</div><div class="line">/*                                                                            */</div><div class="line">/******************************************************************************/</div><div class="line"></div><div class="line">/********************  Bit definition for PWR_CR register  ********************/</div><div class="line">#define  PWR_CR_LPDS                         ((uint16_t)0x0001)     /*!&lt; Low-Power Deepsleep */</div><div class="line">#define  PWR_CR_PDDS                         ((uint16_t)0x0002)     /*!&lt; Power Down Deepsleep */</div><div class="line">#define  PWR_CR_CWUF                         ((uint16_t)0x0004)     /*!&lt; Clear Wakeup Flag */</div><div class="line">#define  PWR_CR_CSBF                         ((uint16_t)0x0008)     /*!&lt; Clear Standby Flag */</div><div class="line">#define  PWR_CR_PVDE                         ((uint16_t)0x0010)     /*!&lt; Power Voltage Detector Enable */</div><div class="line"></div><div class="line">#define  PWR_CR_PLS                          ((uint16_t)0x00E0)     /*!&lt; PLS[2:0] bits (PVD Level Selection) */</div><div class="line">#define  PWR_CR_PLS_0                        ((uint16_t)0x0020)     /*!&lt; Bit 0 */</div><div class="line">#define  PWR_CR_PLS_1                        ((uint16_t)0x0040)     /*!&lt; Bit 1 */</div><div class="line">#define  PWR_CR_PLS_2                        ((uint16_t)0x0080)     /*!&lt; Bit 2 */</div><div class="line"></div><div class="line">/*!&lt; PVD level configuration */</div><div class="line">#define  PWR_CR_PLS_2V2                      ((uint16_t)0x0000)     /*!&lt; PVD level 2.2V */</div><div class="line">#define  PWR_CR_PLS_2V3                      ((uint16_t)0x0020)     /*!&lt; PVD level 2.3V */</div><div class="line">#define  PWR_CR_PLS_2V4                      ((uint16_t)0x0040)     /*!&lt; PVD level 2.4V */</div><div class="line">#define  PWR_CR_PLS_2V5                      ((uint16_t)0x0060)     /*!&lt; PVD level 2.5V */</div><div class="line">#define  PWR_CR_PLS_2V6                      ((uint16_t)0x0080)     /*!&lt; PVD level 2.6V */</div><div class="line">#define  PWR_CR_PLS_2V7                      ((uint16_t)0x00A0)     /*!&lt; PVD level 2.7V */</div><div class="line">#define  PWR_CR_PLS_2V8                      ((uint16_t)0x00C0)     /*!&lt; PVD level 2.8V */</div><div class="line">#define  PWR_CR_PLS_2V9                      ((uint16_t)0x00E0)     /*!&lt; PVD level 2.9V */</div><div class="line"></div><div class="line">#define  PWR_CR_DBP                          ((uint16_t)0x0100)     /*!&lt; Disable Backup Domain write protection */</div><div class="line"></div><div class="line"></div><div class="line">/*******************  Bit definition for PWR_CSR register  ********************/</div><div class="line">#define  PWR_CSR_WUF                         ((uint16_t)0x0001)     /*!&lt; Wakeup Flag */</div><div class="line">#define  PWR_CSR_SBF                         ((uint16_t)0x0002)     /*!&lt; Standby Flag */</div><div class="line">#define  PWR_CSR_PVDO                        ((uint16_t)0x0004)     /*!&lt; PVD Output */</div><div class="line">#define  PWR_CSR_EWUP                        ((uint16_t)0x0100)     /*!&lt; Enable WKUP pin */</div><div class="line"></div><div class="line">/******************************************************************************/</div><div class="line">/*                                                                            */</div><div class="line">/*                            Backup registers                                */</div><div class="line">/*                                                                            */</div><div class="line">/******************************************************************************/</div><div class="line"></div><div class="line">/*******************  Bit definition for BKP_DR1 register  ********************/</div><div class="line">#define  BKP_DR1_D                           ((uint16_t)0xFFFF)     /*!&lt; Backup data */</div><div class="line"></div><div class="line">/*******************  Bit definition for BKP_DR2 register  ********************/</div><div class="line">#define  BKP_DR2_D                           ((uint16_t)0xFFFF)     /*!&lt; Backup data */</div><div class="line"></div><div class="line">/*******************  Bit definition for BKP_DR3 register  ********************/</div><div class="line">#define  BKP_DR3_D                           ((uint16_t)0xFFFF)     /*!&lt; Backup data */</div><div class="line"></div><div class="line">/*******************  Bit definition for BKP_DR4 register  ********************/</div><div class="line">#define  BKP_DR4_D                           ((uint16_t)0xFFFF)     /*!&lt; Backup data */</div><div class="line"></div><div class="line">/*******************  Bit definition for BKP_DR5 register  ********************/</div><div class="line">#define  BKP_DR5_D                           ((uint16_t)0xFFFF)     /*!&lt; Backup data */</div><div class="line"></div><div class="line">/*******************  Bit definition for BKP_DR6 register  ********************/</div><div class="line">#define  BKP_DR6_D                           ((uint16_t)0xFFFF)     /*!&lt; Backup data */</div><div class="line"></div><div class="line">/*******************  Bit definition for BKP_DR7 register  ********************/</div><div class="line">#define  BKP_DR7_D                           ((uint16_t)0xFFFF)     /*!&lt; Backup data */</div><div class="line"></div><div class="line">/*******************  Bit definition for BKP_DR8 register  ********************/</div><div class="line">#define  BKP_DR8_D                           ((uint16_t)0xFFFF)     /*!&lt; Backup data */</div><div class="line"></div><div class="line">/*******************  Bit definition for BKP_DR9 register  ********************/</div><div class="line">#define  BKP_DR9_D                           ((uint16_t)0xFFFF)     /*!&lt; Backup data */</div><div class="line"></div><div class="line">/*******************  Bit definition for BKP_DR10 register  *******************/</div><div class="line">#define  BKP_DR10_D                          ((uint16_t)0xFFFF)     /*!&lt; Backup data */</div><div class="line"></div><div class="line">/*******************  Bit definition for BKP_DR11 register  *******************/</div><div class="line">#define  BKP_DR11_D                          ((uint16_t)0xFFFF)     /*!&lt; Backup data */</div><div class="line"></div><div class="line">/*******************  Bit definition for BKP_DR12 register  *******************/</div><div class="line">#define  BKP_DR12_D                          ((uint16_t)0xFFFF)     /*!&lt; Backup data */</div><div class="line"></div><div class="line">/*******************  Bit definition for BKP_DR13 register  *******************/</div><div class="line">#define  BKP_DR13_D                          ((uint16_t)0xFFFF)     /*!&lt; Backup data */</div><div class="line"></div><div class="line">/*******************  Bit definition for BKP_DR14 register  *******************/</div><div class="line">#define  BKP_DR14_D                          ((uint16_t)0xFFFF)     /*!&lt; Backup data */</div><div class="line"></div><div class="line">/*******************  Bit definition for BKP_DR15 register  *******************/</div><div class="line">#define  BKP_DR15_D                          ((uint16_t)0xFFFF)     /*!&lt; Backup data */</div><div class="line"></div><div class="line">/*******************  Bit definition for BKP_DR16 register  *******************/</div><div class="line">#define  BKP_DR16_D                          ((uint16_t)0xFFFF)     /*!&lt; Backup data */</div><div class="line"></div><div class="line">/*******************  Bit definition for BKP_DR17 register  *******************/</div><div class="line">#define  BKP_DR17_D                          ((uint16_t)0xFFFF)     /*!&lt; Backup data */</div><div class="line"></div><div class="line">/******************  Bit definition for BKP_DR18 register  ********************/</div><div class="line">#define  BKP_DR18_D                          ((uint16_t)0xFFFF)     /*!&lt; Backup data */</div><div class="line"></div><div class="line">/*******************  Bit definition for BKP_DR19 register  *******************/</div><div class="line">#define  BKP_DR19_D                          ((uint16_t)0xFFFF)     /*!&lt; Backup data */</div><div class="line"></div><div class="line">/*******************  Bit definition for BKP_DR20 register  *******************/</div><div class="line">#define  BKP_DR20_D                          ((uint16_t)0xFFFF)     /*!&lt; Backup data */</div><div class="line"></div><div class="line">/*******************  Bit definition for BKP_DR21 register  *******************/</div><div class="line">#define  BKP_DR21_D                          ((uint16_t)0xFFFF)     /*!&lt; Backup data */</div><div class="line"></div><div class="line">/*******************  Bit definition for BKP_DR22 register  *******************/</div><div class="line">#define  BKP_DR22_D                          ((uint16_t)0xFFFF)     /*!&lt; Backup data */</div><div class="line"></div><div class="line">/*******************  Bit definition for BKP_DR23 register  *******************/</div><div class="line">#define  BKP_DR23_D                          ((uint16_t)0xFFFF)     /*!&lt; Backup data */</div><div class="line"></div><div class="line">/*******************  Bit definition for BKP_DR24 register  *******************/</div><div class="line">#define  BKP_DR24_D                          ((uint16_t)0xFFFF)     /*!&lt; Backup data */</div><div class="line"></div><div class="line">/*******************  Bit definition for BKP_DR25 register  *******************/</div><div class="line">#define  BKP_DR25_D                          ((uint16_t)0xFFFF)     /*!&lt; Backup data */</div><div class="line"></div><div class="line">/*******************  Bit definition for BKP_DR26 register  *******************/</div><div class="line">#define  BKP_DR26_D                          ((uint16_t)0xFFFF)     /*!&lt; Backup data */</div><div class="line"></div><div class="line">/*******************  Bit definition for BKP_DR27 register  *******************/</div><div class="line">#define  BKP_DR27_D                          ((uint16_t)0xFFFF)     /*!&lt; Backup data */</div><div class="line"></div><div class="line">/*******************  Bit definition for BKP_DR28 register  *******************/</div><div class="line">#define  BKP_DR28_D                          ((uint16_t)0xFFFF)     /*!&lt; Backup data */</div><div class="line"></div><div class="line">/*******************  Bit definition for BKP_DR29 register  *******************/</div><div class="line">#define  BKP_DR29_D                          ((uint16_t)0xFFFF)     /*!&lt; Backup data */</div><div class="line"></div><div class="line">/*******************  Bit definition for BKP_DR30 register  *******************/</div><div class="line">#define  BKP_DR30_D                          ((uint16_t)0xFFFF)     /*!&lt; Backup data */</div><div class="line"></div><div class="line">/*******************  Bit definition for BKP_DR31 register  *******************/</div><div class="line">#define  BKP_DR31_D                          ((uint16_t)0xFFFF)     /*!&lt; Backup data */</div><div class="line"></div><div class="line">/*******************  Bit definition for BKP_DR32 register  *******************/</div><div class="line">#define  BKP_DR32_D                          ((uint16_t)0xFFFF)     /*!&lt; Backup data */</div><div class="line"></div><div class="line">/*******************  Bit definition for BKP_DR33 register  *******************/</div><div class="line">#define  BKP_DR33_D                          ((uint16_t)0xFFFF)     /*!&lt; Backup data */</div><div class="line"></div><div class="line">/*******************  Bit definition for BKP_DR34 register  *******************/</div><div class="line">#define  BKP_DR34_D                          ((uint16_t)0xFFFF)     /*!&lt; Backup data */</div><div class="line"></div><div class="line">/*******************  Bit definition for BKP_DR35 register  *******************/</div><div class="line">#define  BKP_DR35_D                          ((uint16_t)0xFFFF)     /*!&lt; Backup data */</div><div class="line"></div><div class="line">/*******************  Bit definition for BKP_DR36 register  *******************/</div><div class="line">#define  BKP_DR36_D                          ((uint16_t)0xFFFF)     /*!&lt; Backup data */</div><div class="line"></div><div class="line">/*******************  Bit definition for BKP_DR37 register  *******************/</div><div class="line">#define  BKP_DR37_D                          ((uint16_t)0xFFFF)     /*!&lt; Backup data */</div><div class="line"></div><div class="line">/*******************  Bit definition for BKP_DR38 register  *******************/</div><div class="line">#define  BKP_DR38_D                          ((uint16_t)0xFFFF)     /*!&lt; Backup data */</div><div class="line"></div><div class="line">/*******************  Bit definition for BKP_DR39 register  *******************/</div><div class="line">#define  BKP_DR39_D                          ((uint16_t)0xFFFF)     /*!&lt; Backup data */</div><div class="line"></div><div class="line">/*******************  Bit definition for BKP_DR40 register  *******************/</div><div class="line">#define  BKP_DR40_D                          ((uint16_t)0xFFFF)     /*!&lt; Backup data */</div><div class="line"></div><div class="line">/*******************  Bit definition for BKP_DR41 register  *******************/</div><div class="line">#define  BKP_DR41_D                          ((uint16_t)0xFFFF)     /*!&lt; Backup data */</div><div class="line"></div><div class="line">/*******************  Bit definition for BKP_DR42 register  *******************/</div><div class="line">#define  BKP_DR42_D                          ((uint16_t)0xFFFF)     /*!&lt; Backup data */</div><div class="line"></div><div class="line">/******************  Bit definition for BKP_RTCCR register  *******************/</div><div class="line">#define  BKP_RTCCR_CAL                       ((uint16_t)0x007F)     /*!&lt; Calibration value */</div><div class="line">#define  BKP_RTCCR_CCO                       ((uint16_t)0x0080)     /*!&lt; Calibration Clock Output */</div><div class="line">#define  BKP_RTCCR_ASOE                      ((uint16_t)0x0100)     /*!&lt; Alarm or Second Output Enable */</div><div class="line">#define  BKP_RTCCR_ASOS                      ((uint16_t)0x0200)     /*!&lt; Alarm or Second Output Selection */</div><div class="line"></div><div class="line">/********************  Bit definition for BKP_CR register  ********************/</div><div class="line">#define  BKP_CR_TPE                          ((uint8_t)0x01)        /*!&lt; TAMPER pin enable */</div><div class="line">#define  BKP_CR_TPAL                         ((uint8_t)0x02)        /*!&lt; TAMPER pin active level */</div><div class="line"></div><div class="line">/*******************  Bit definition for BKP_CSR register  ********************/</div><div class="line">#define  BKP_CSR_CTE                         ((uint16_t)0x0001)     /*!&lt; Clear Tamper event */</div><div class="line">#define  BKP_CSR_CTI                         ((uint16_t)0x0002)     /*!&lt; Clear Tamper Interrupt */</div><div class="line">#define  BKP_CSR_TPIE                        ((uint16_t)0x0004)     /*!&lt; TAMPER Pin interrupt enable */</div><div class="line">#define  BKP_CSR_TEF                         ((uint16_t)0x0100)     /*!&lt; Tamper Event Flag */</div><div class="line">#define  BKP_CSR_TIF                         ((uint16_t)0x0200)     /*!&lt; Tamper Interrupt Flag */</div><div class="line"></div><div class="line">/******************************************************************************/</div><div class="line">/*                                                                            */</div><div class="line">/*                         Reset and Clock Control                            */</div><div class="line">/*                                                                            */</div><div class="line">/******************************************************************************/</div><div class="line"></div><div class="line">/********************  Bit definition for RCC_CR register  ********************/</div><div class="line">#define  RCC_CR_HSION                        ((uint32_t)0x00000001)        /*!&lt; Internal High Speed clock enable */</div><div class="line">#define  RCC_CR_HSIRDY                       ((uint32_t)0x00000002)        /*!&lt; Internal High Speed clock ready flag */</div><div class="line">#define  RCC_CR_HSITRIM                      ((uint32_t)0x000000F8)        /*!&lt; Internal High Speed clock trimming */</div><div class="line">#define  RCC_CR_HSICAL                       ((uint32_t)0x0000FF00)        /*!&lt; Internal High Speed clock Calibration */</div><div class="line">#define  RCC_CR_HSEON                        ((uint32_t)0x00010000)        /*!&lt; External High Speed clock enable */</div><div class="line">#define  RCC_CR_HSERDY                       ((uint32_t)0x00020000)        /*!&lt; External High Speed clock ready flag */</div><div class="line">#define  RCC_CR_HSEBYP                       ((uint32_t)0x00040000)        /*!&lt; External High Speed clock Bypass */</div><div class="line">#define  RCC_CR_CSSON                        ((uint32_t)0x00080000)        /*!&lt; Clock Security System enable */</div><div class="line">#define  RCC_CR_PLLON                        ((uint32_t)0x01000000)        /*!&lt; PLL enable */</div><div class="line">#define  RCC_CR_PLLRDY                       ((uint32_t)0x02000000)        /*!&lt; PLL clock ready flag */</div><div class="line"></div><div class="line">#ifdef STM32F10X_CL</div><div class="line"> #define  RCC_CR_PLL2ON                       ((uint32_t)0x04000000)        /*!&lt; PLL2 enable */</div><div class="line"> #define  RCC_CR_PLL2RDY                      ((uint32_t)0x08000000)        /*!&lt; PLL2 clock ready flag */</div><div class="line"> #define  RCC_CR_PLL3ON                       ((uint32_t)0x10000000)        /*!&lt; PLL3 enable */</div><div class="line"> #define  RCC_CR_PLL3RDY                      ((uint32_t)0x20000000)        /*!&lt; PLL3 clock ready flag */</div><div class="line">#endif /* STM32F10X_CL */</div><div class="line"></div><div class="line">/*******************  Bit definition for RCC_CFGR register  *******************/</div><div class="line">/*!&lt; SW configuration */</div><div class="line">#define  RCC_CFGR_SW                         ((uint32_t)0x00000003)        /*!&lt; SW[1:0] bits (System clock Switch) */</div><div class="line">#define  RCC_CFGR_SW_0                       ((uint32_t)0x00000001)        /*!&lt; Bit 0 */</div><div class="line">#define  RCC_CFGR_SW_1                       ((uint32_t)0x00000002)        /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  RCC_CFGR_SW_HSI                     ((uint32_t)0x00000000)        /*!&lt; HSI selected as system clock */</div><div class="line">#define  RCC_CFGR_SW_HSE                     ((uint32_t)0x00000001)        /*!&lt; HSE selected as system clock */</div><div class="line">#define  RCC_CFGR_SW_PLL                     ((uint32_t)0x00000002)        /*!&lt; PLL selected as system clock */</div><div class="line"></div><div class="line">/*!&lt; SWS configuration */</div><div class="line">#define  RCC_CFGR_SWS                        ((uint32_t)0x0000000C)        /*!&lt; SWS[1:0] bits (System Clock Switch Status) */</div><div class="line">#define  RCC_CFGR_SWS_0                      ((uint32_t)0x00000004)        /*!&lt; Bit 0 */</div><div class="line">#define  RCC_CFGR_SWS_1                      ((uint32_t)0x00000008)        /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  RCC_CFGR_SWS_HSI                    ((uint32_t)0x00000000)        /*!&lt; HSI oscillator used as system clock */</div><div class="line">#define  RCC_CFGR_SWS_HSE                    ((uint32_t)0x00000004)        /*!&lt; HSE oscillator used as system clock */</div><div class="line">#define  RCC_CFGR_SWS_PLL                    ((uint32_t)0x00000008)        /*!&lt; PLL used as system clock */</div><div class="line"></div><div class="line">/*!&lt; HPRE configuration */</div><div class="line">#define  RCC_CFGR_HPRE                       ((uint32_t)0x000000F0)        /*!&lt; HPRE[3:0] bits (AHB prescaler) */</div><div class="line">#define  RCC_CFGR_HPRE_0                     ((uint32_t)0x00000010)        /*!&lt; Bit 0 */</div><div class="line">#define  RCC_CFGR_HPRE_1                     ((uint32_t)0x00000020)        /*!&lt; Bit 1 */</div><div class="line">#define  RCC_CFGR_HPRE_2                     ((uint32_t)0x00000040)        /*!&lt; Bit 2 */</div><div class="line">#define  RCC_CFGR_HPRE_3                     ((uint32_t)0x00000080)        /*!&lt; Bit 3 */</div><div class="line"></div><div class="line">#define  RCC_CFGR_HPRE_DIV1                  ((uint32_t)0x00000000)        /*!&lt; SYSCLK not divided */</div><div class="line">#define  RCC_CFGR_HPRE_DIV2                  ((uint32_t)0x00000080)        /*!&lt; SYSCLK divided by 2 */</div><div class="line">#define  RCC_CFGR_HPRE_DIV4                  ((uint32_t)0x00000090)        /*!&lt; SYSCLK divided by 4 */</div><div class="line">#define  RCC_CFGR_HPRE_DIV8                  ((uint32_t)0x000000A0)        /*!&lt; SYSCLK divided by 8 */</div><div class="line">#define  RCC_CFGR_HPRE_DIV16                 ((uint32_t)0x000000B0)        /*!&lt; SYSCLK divided by 16 */</div><div class="line">#define  RCC_CFGR_HPRE_DIV64                 ((uint32_t)0x000000C0)        /*!&lt; SYSCLK divided by 64 */</div><div class="line">#define  RCC_CFGR_HPRE_DIV128                ((uint32_t)0x000000D0)        /*!&lt; SYSCLK divided by 128 */</div><div class="line">#define  RCC_CFGR_HPRE_DIV256                ((uint32_t)0x000000E0)        /*!&lt; SYSCLK divided by 256 */</div><div class="line">#define  RCC_CFGR_HPRE_DIV512                ((uint32_t)0x000000F0)        /*!&lt; SYSCLK divided by 512 */</div><div class="line"></div><div class="line">/*!&lt; PPRE1 configuration */</div><div class="line">#define  RCC_CFGR_PPRE1                      ((uint32_t)0x00000700)        /*!&lt; PRE1[2:0] bits (APB1 prescaler) */</div><div class="line">#define  RCC_CFGR_PPRE1_0                    ((uint32_t)0x00000100)        /*!&lt; Bit 0 */</div><div class="line">#define  RCC_CFGR_PPRE1_1                    ((uint32_t)0x00000200)        /*!&lt; Bit 1 */</div><div class="line">#define  RCC_CFGR_PPRE1_2                    ((uint32_t)0x00000400)        /*!&lt; Bit 2 */</div><div class="line"></div><div class="line">#define  RCC_CFGR_PPRE1_DIV1                 ((uint32_t)0x00000000)        /*!&lt; HCLK not divided */</div><div class="line">#define  RCC_CFGR_PPRE1_DIV2                 ((uint32_t)0x00000400)        /*!&lt; HCLK divided by 2 */</div><div class="line">#define  RCC_CFGR_PPRE1_DIV4                 ((uint32_t)0x00000500)        /*!&lt; HCLK divided by 4 */</div><div class="line">#define  RCC_CFGR_PPRE1_DIV8                 ((uint32_t)0x00000600)        /*!&lt; HCLK divided by 8 */</div><div class="line">#define  RCC_CFGR_PPRE1_DIV16                ((uint32_t)0x00000700)        /*!&lt; HCLK divided by 16 */</div><div class="line"></div><div class="line">/*!&lt; PPRE2 configuration */</div><div class="line">#define  RCC_CFGR_PPRE2                      ((uint32_t)0x00003800)        /*!&lt; PRE2[2:0] bits (APB2 prescaler) */</div><div class="line">#define  RCC_CFGR_PPRE2_0                    ((uint32_t)0x00000800)        /*!&lt; Bit 0 */</div><div class="line">#define  RCC_CFGR_PPRE2_1                    ((uint32_t)0x00001000)        /*!&lt; Bit 1 */</div><div class="line">#define  RCC_CFGR_PPRE2_2                    ((uint32_t)0x00002000)        /*!&lt; Bit 2 */</div><div class="line"></div><div class="line">#define  RCC_CFGR_PPRE2_DIV1                 ((uint32_t)0x00000000)        /*!&lt; HCLK not divided */</div><div class="line">#define  RCC_CFGR_PPRE2_DIV2                 ((uint32_t)0x00002000)        /*!&lt; HCLK divided by 2 */</div><div class="line">#define  RCC_CFGR_PPRE2_DIV4                 ((uint32_t)0x00002800)        /*!&lt; HCLK divided by 4 */</div><div class="line">#define  RCC_CFGR_PPRE2_DIV8                 ((uint32_t)0x00003000)        /*!&lt; HCLK divided by 8 */</div><div class="line">#define  RCC_CFGR_PPRE2_DIV16                ((uint32_t)0x00003800)        /*!&lt; HCLK divided by 16 */</div><div class="line"></div><div class="line">/*!&lt; ADCPPRE configuration */</div><div class="line">#define  RCC_CFGR_ADCPRE                     ((uint32_t)0x0000C000)        /*!&lt; ADCPRE[1:0] bits (ADC prescaler) */</div><div class="line">#define  RCC_CFGR_ADCPRE_0                   ((uint32_t)0x00004000)        /*!&lt; Bit 0 */</div><div class="line">#define  RCC_CFGR_ADCPRE_1                   ((uint32_t)0x00008000)        /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  RCC_CFGR_ADCPRE_DIV2                ((uint32_t)0x00000000)        /*!&lt; PCLK2 divided by 2 */</div><div class="line">#define  RCC_CFGR_ADCPRE_DIV4                ((uint32_t)0x00004000)        /*!&lt; PCLK2 divided by 4 */</div><div class="line">#define  RCC_CFGR_ADCPRE_DIV6                ((uint32_t)0x00008000)        /*!&lt; PCLK2 divided by 6 */</div><div class="line">#define  RCC_CFGR_ADCPRE_DIV8                ((uint32_t)0x0000C000)        /*!&lt; PCLK2 divided by 8 */</div><div class="line"></div><div class="line">#define  RCC_CFGR_PLLSRC                     ((uint32_t)0x00010000)        /*!&lt; PLL entry clock source */</div><div class="line"></div><div class="line">#define  RCC_CFGR_PLLXTPRE                   ((uint32_t)0x00020000)        /*!&lt; HSE divider for PLL entry */</div><div class="line"></div><div class="line">/*!&lt; PLLMUL configuration */</div><div class="line">#define  RCC_CFGR_PLLMULL                    ((uint32_t)0x003C0000)        /*!&lt; PLLMUL[3:0] bits (PLL multiplication factor) */</div><div class="line">#define  RCC_CFGR_PLLMULL_0                  ((uint32_t)0x00040000)        /*!&lt; Bit 0 */</div><div class="line">#define  RCC_CFGR_PLLMULL_1                  ((uint32_t)0x00080000)        /*!&lt; Bit 1 */</div><div class="line">#define  RCC_CFGR_PLLMULL_2                  ((uint32_t)0x00100000)        /*!&lt; Bit 2 */</div><div class="line">#define  RCC_CFGR_PLLMULL_3                  ((uint32_t)0x00200000)        /*!&lt; Bit 3 */</div><div class="line"></div><div class="line">#ifdef STM32F10X_CL</div><div class="line"> #define  RCC_CFGR_PLLSRC_HSI_Div2           ((uint32_t)0x00000000)        /*!&lt; HSI clock divided by 2 selected as PLL entry clock source */</div><div class="line"> #define  RCC_CFGR_PLLSRC_PREDIV1            ((uint32_t)0x00010000)        /*!&lt; PREDIV1 clock selected as PLL entry clock source */</div><div class="line"></div><div class="line"> #define  RCC_CFGR_PLLXTPRE_PREDIV1          ((uint32_t)0x00000000)        /*!&lt; PREDIV1 clock not divided for PLL entry */</div><div class="line"> #define  RCC_CFGR_PLLXTPRE_PREDIV1_Div2     ((uint32_t)0x00020000)        /*!&lt; PREDIV1 clock divided by 2 for PLL entry */</div><div class="line"></div><div class="line"> #define  RCC_CFGR_PLLMULL4                  ((uint32_t)0x00080000)        /*!&lt; PLL input clock * 4 */</div><div class="line"> #define  RCC_CFGR_PLLMULL5                  ((uint32_t)0x000C0000)        /*!&lt; PLL input clock * 5 */</div><div class="line"> #define  RCC_CFGR_PLLMULL6                  ((uint32_t)0x00100000)        /*!&lt; PLL input clock * 6 */</div><div class="line"> #define  RCC_CFGR_PLLMULL7                  ((uint32_t)0x00140000)        /*!&lt; PLL input clock * 7 */</div><div class="line"> #define  RCC_CFGR_PLLMULL8                  ((uint32_t)0x00180000)        /*!&lt; PLL input clock * 8 */</div><div class="line"> #define  RCC_CFGR_PLLMULL9                  ((uint32_t)0x001C0000)        /*!&lt; PLL input clock * 9 */</div><div class="line"> #define  RCC_CFGR_PLLMULL6_5                ((uint32_t)0x00340000)        /*!&lt; PLL input clock * 6.5 */</div><div class="line"> </div><div class="line"> #define  RCC_CFGR_OTGFSPRE                  ((uint32_t)0x00400000)        /*!&lt; USB OTG FS prescaler */</div><div class="line"> </div><div class="line">/*!&lt; MCO configuration */</div><div class="line"> #define  RCC_CFGR_MCO                       ((uint32_t)0x0F000000)        /*!&lt; MCO[3:0] bits (Microcontroller Clock Output) */</div><div class="line"> #define  RCC_CFGR_MCO_0                     ((uint32_t)0x01000000)        /*!&lt; Bit 0 */</div><div class="line"> #define  RCC_CFGR_MCO_1                     ((uint32_t)0x02000000)        /*!&lt; Bit 1 */</div><div class="line"> #define  RCC_CFGR_MCO_2                     ((uint32_t)0x04000000)        /*!&lt; Bit 2 */</div><div class="line"> #define  RCC_CFGR_MCO_3                     ((uint32_t)0x08000000)        /*!&lt; Bit 3 */</div><div class="line"></div><div class="line"> #define  RCC_CFGR_MCO_NOCLOCK               ((uint32_t)0x00000000)        /*!&lt; No clock */</div><div class="line"> #define  RCC_CFGR_MCO_SYSCLK                ((uint32_t)0x04000000)        /*!&lt; System clock selected as MCO source */</div><div class="line"> #define  RCC_CFGR_MCO_HSI                   ((uint32_t)0x05000000)        /*!&lt; HSI clock selected as MCO source */</div><div class="line"> #define  RCC_CFGR_MCO_HSE                   ((uint32_t)0x06000000)        /*!&lt; HSE clock selected as MCO source */</div><div class="line"> #define  RCC_CFGR_MCO_PLLCLK_Div2           ((uint32_t)0x07000000)        /*!&lt; PLL clock divided by 2 selected as MCO source */</div><div class="line"> #define  RCC_CFGR_MCO_PLL2CLK               ((uint32_t)0x08000000)        /*!&lt; PLL2 clock selected as MCO source*/</div><div class="line"> #define  RCC_CFGR_MCO_PLL3CLK_Div2          ((uint32_t)0x09000000)        /*!&lt; PLL3 clock divided by 2 selected as MCO source*/</div><div class="line"> #define  RCC_CFGR_MCO_Ext_HSE               ((uint32_t)0x0A000000)        /*!&lt; XT1 external 3-25 MHz oscillator clock selected as MCO source */</div><div class="line"> #define  RCC_CFGR_MCO_PLL3CLK               ((uint32_t)0x0B000000)        /*!&lt; PLL3 clock selected as MCO source */</div><div class="line">#elif defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL)</div><div class="line"> #define  RCC_CFGR_PLLSRC_HSI_Div2           ((uint32_t)0x00000000)        /*!&lt; HSI clock divided by 2 selected as PLL entry clock source */</div><div class="line"> #define  RCC_CFGR_PLLSRC_PREDIV1            ((uint32_t)0x00010000)        /*!&lt; PREDIV1 clock selected as PLL entry clock source */</div><div class="line"></div><div class="line"> #define  RCC_CFGR_PLLXTPRE_PREDIV1          ((uint32_t)0x00000000)        /*!&lt; PREDIV1 clock not divided for PLL entry */</div><div class="line"> #define  RCC_CFGR_PLLXTPRE_PREDIV1_Div2     ((uint32_t)0x00020000)        /*!&lt; PREDIV1 clock divided by 2 for PLL entry */</div><div class="line"></div><div class="line"> #define  RCC_CFGR_PLLMULL2                  ((uint32_t)0x00000000)        /*!&lt; PLL input clock*2 */</div><div class="line"> #define  RCC_CFGR_PLLMULL3                  ((uint32_t)0x00040000)        /*!&lt; PLL input clock*3 */</div><div class="line"> #define  RCC_CFGR_PLLMULL4                  ((uint32_t)0x00080000)        /*!&lt; PLL input clock*4 */</div><div class="line"> #define  RCC_CFGR_PLLMULL5                  ((uint32_t)0x000C0000)        /*!&lt; PLL input clock*5 */</div><div class="line"> #define  RCC_CFGR_PLLMULL6                  ((uint32_t)0x00100000)        /*!&lt; PLL input clock*6 */</div><div class="line"> #define  RCC_CFGR_PLLMULL7                  ((uint32_t)0x00140000)        /*!&lt; PLL input clock*7 */</div><div class="line"> #define  RCC_CFGR_PLLMULL8                  ((uint32_t)0x00180000)        /*!&lt; PLL input clock*8 */</div><div class="line"> #define  RCC_CFGR_PLLMULL9                  ((uint32_t)0x001C0000)        /*!&lt; PLL input clock*9 */</div><div class="line"> #define  RCC_CFGR_PLLMULL10                 ((uint32_t)0x00200000)        /*!&lt; PLL input clock10 */</div><div class="line"> #define  RCC_CFGR_PLLMULL11                 ((uint32_t)0x00240000)        /*!&lt; PLL input clock*11 */</div><div class="line"> #define  RCC_CFGR_PLLMULL12                 ((uint32_t)0x00280000)        /*!&lt; PLL input clock*12 */</div><div class="line"> #define  RCC_CFGR_PLLMULL13                 ((uint32_t)0x002C0000)        /*!&lt; PLL input clock*13 */</div><div class="line"> #define  RCC_CFGR_PLLMULL14                 ((uint32_t)0x00300000)        /*!&lt; PLL input clock*14 */</div><div class="line"> #define  RCC_CFGR_PLLMULL15                 ((uint32_t)0x00340000)        /*!&lt; PLL input clock*15 */</div><div class="line"> #define  RCC_CFGR_PLLMULL16                 ((uint32_t)0x00380000)        /*!&lt; PLL input clock*16 */</div><div class="line"></div><div class="line">/*!&lt; MCO configuration */</div><div class="line"> #define  RCC_CFGR_MCO                       ((uint32_t)0x07000000)        /*!&lt; MCO[2:0] bits (Microcontroller Clock Output) */</div><div class="line"> #define  RCC_CFGR_MCO_0                     ((uint32_t)0x01000000)        /*!&lt; Bit 0 */</div><div class="line"> #define  RCC_CFGR_MCO_1                     ((uint32_t)0x02000000)        /*!&lt; Bit 1 */</div><div class="line"> #define  RCC_CFGR_MCO_2                     ((uint32_t)0x04000000)        /*!&lt; Bit 2 */</div><div class="line"></div><div class="line"> #define  RCC_CFGR_MCO_NOCLOCK               ((uint32_t)0x00000000)        /*!&lt; No clock */</div><div class="line"> #define  RCC_CFGR_MCO_SYSCLK                ((uint32_t)0x04000000)        /*!&lt; System clock selected as MCO source */</div><div class="line"> #define  RCC_CFGR_MCO_HSI                   ((uint32_t)0x05000000)        /*!&lt; HSI clock selected as MCO source */</div><div class="line"> #define  RCC_CFGR_MCO_HSE                   ((uint32_t)0x06000000)        /*!&lt; HSE clock selected as MCO source  */</div><div class="line"> #define  RCC_CFGR_MCO_PLL                   ((uint32_t)0x07000000)        /*!&lt; PLL clock divided by 2 selected as MCO source */</div><div class="line">#else</div><div class="line"> #define  RCC_CFGR_PLLSRC_HSI_Div2           ((uint32_t)0x00000000)        /*!&lt; HSI clock divided by 2 selected as PLL entry clock source */</div><div class="line"> #define  RCC_CFGR_PLLSRC_HSE                ((uint32_t)0x00010000)        /*!&lt; HSE clock selected as PLL entry clock source */</div><div class="line"></div><div class="line"> #define  RCC_CFGR_PLLXTPRE_HSE              ((uint32_t)0x00000000)        /*!&lt; HSE clock not divided for PLL entry */</div><div class="line"> #define  RCC_CFGR_PLLXTPRE_HSE_Div2         ((uint32_t)0x00020000)        /*!&lt; HSE clock divided by 2 for PLL entry */</div><div class="line"></div><div class="line"> #define  RCC_CFGR_PLLMULL2                  ((uint32_t)0x00000000)        /*!&lt; PLL input clock*2 */</div><div class="line"> #define  RCC_CFGR_PLLMULL3                  ((uint32_t)0x00040000)        /*!&lt; PLL input clock*3 */</div><div class="line"> #define  RCC_CFGR_PLLMULL4                  ((uint32_t)0x00080000)        /*!&lt; PLL input clock*4 */</div><div class="line"> #define  RCC_CFGR_PLLMULL5                  ((uint32_t)0x000C0000)        /*!&lt; PLL input clock*5 */</div><div class="line"> #define  RCC_CFGR_PLLMULL6                  ((uint32_t)0x00100000)        /*!&lt; PLL input clock*6 */</div><div class="line"> #define  RCC_CFGR_PLLMULL7                  ((uint32_t)0x00140000)        /*!&lt; PLL input clock*7 */</div><div class="line"> #define  RCC_CFGR_PLLMULL8                  ((uint32_t)0x00180000)        /*!&lt; PLL input clock*8 */</div><div class="line"> #define  RCC_CFGR_PLLMULL9                  ((uint32_t)0x001C0000)        /*!&lt; PLL input clock*9 */</div><div class="line"> #define  RCC_CFGR_PLLMULL10                 ((uint32_t)0x00200000)        /*!&lt; PLL input clock10 */</div><div class="line"> #define  RCC_CFGR_PLLMULL11                 ((uint32_t)0x00240000)        /*!&lt; PLL input clock*11 */</div><div class="line"> #define  RCC_CFGR_PLLMULL12                 ((uint32_t)0x00280000)        /*!&lt; PLL input clock*12 */</div><div class="line"> #define  RCC_CFGR_PLLMULL13                 ((uint32_t)0x002C0000)        /*!&lt; PLL input clock*13 */</div><div class="line"> #define  RCC_CFGR_PLLMULL14                 ((uint32_t)0x00300000)        /*!&lt; PLL input clock*14 */</div><div class="line"> #define  RCC_CFGR_PLLMULL15                 ((uint32_t)0x00340000)        /*!&lt; PLL input clock*15 */</div><div class="line"> #define  RCC_CFGR_PLLMULL16                 ((uint32_t)0x00380000)        /*!&lt; PLL input clock*16 */</div><div class="line"> #define  RCC_CFGR_USBPRE                    ((uint32_t)0x00400000)        /*!&lt; USB Device prescaler */</div><div class="line"></div><div class="line">/*!&lt; MCO configuration */</div><div class="line"> #define  RCC_CFGR_MCO                       ((uint32_t)0x07000000)        /*!&lt; MCO[2:0] bits (Microcontroller Clock Output) */</div><div class="line"> #define  RCC_CFGR_MCO_0                     ((uint32_t)0x01000000)        /*!&lt; Bit 0 */</div><div class="line"> #define  RCC_CFGR_MCO_1                     ((uint32_t)0x02000000)        /*!&lt; Bit 1 */</div><div class="line"> #define  RCC_CFGR_MCO_2                     ((uint32_t)0x04000000)        /*!&lt; Bit 2 */</div><div class="line"></div><div class="line"> #define  RCC_CFGR_MCO_NOCLOCK               ((uint32_t)0x00000000)        /*!&lt; No clock */</div><div class="line"> #define  RCC_CFGR_MCO_SYSCLK                ((uint32_t)0x04000000)        /*!&lt; System clock selected as MCO source */</div><div class="line"> #define  RCC_CFGR_MCO_HSI                   ((uint32_t)0x05000000)        /*!&lt; HSI clock selected as MCO source */</div><div class="line"> #define  RCC_CFGR_MCO_HSE                   ((uint32_t)0x06000000)        /*!&lt; HSE clock selected as MCO source  */</div><div class="line"> #define  RCC_CFGR_MCO_PLL                   ((uint32_t)0x07000000)        /*!&lt; PLL clock divided by 2 selected as MCO source */</div><div class="line">#endif /* STM32F10X_CL */</div><div class="line"></div><div class="line">/*!&lt;******************  Bit definition for RCC_CIR register  ********************/</div><div class="line">#define  RCC_CIR_LSIRDYF                     ((uint32_t)0x00000001)        /*!&lt; LSI Ready Interrupt flag */</div><div class="line">#define  RCC_CIR_LSERDYF                     ((uint32_t)0x00000002)        /*!&lt; LSE Ready Interrupt flag */</div><div class="line">#define  RCC_CIR_HSIRDYF                     ((uint32_t)0x00000004)        /*!&lt; HSI Ready Interrupt flag */</div><div class="line">#define  RCC_CIR_HSERDYF                     ((uint32_t)0x00000008)        /*!&lt; HSE Ready Interrupt flag */</div><div class="line">#define  RCC_CIR_PLLRDYF                     ((uint32_t)0x00000010)        /*!&lt; PLL Ready Interrupt flag */</div><div class="line">#define  RCC_CIR_CSSF                        ((uint32_t)0x00000080)        /*!&lt; Clock Security System Interrupt flag */</div><div class="line">#define  RCC_CIR_LSIRDYIE                    ((uint32_t)0x00000100)        /*!&lt; LSI Ready Interrupt Enable */</div><div class="line">#define  RCC_CIR_LSERDYIE                    ((uint32_t)0x00000200)        /*!&lt; LSE Ready Interrupt Enable */</div><div class="line">#define  RCC_CIR_HSIRDYIE                    ((uint32_t)0x00000400)        /*!&lt; HSI Ready Interrupt Enable */</div><div class="line">#define  RCC_CIR_HSERDYIE                    ((uint32_t)0x00000800)        /*!&lt; HSE Ready Interrupt Enable */</div><div class="line">#define  RCC_CIR_PLLRDYIE                    ((uint32_t)0x00001000)        /*!&lt; PLL Ready Interrupt Enable */</div><div class="line">#define  RCC_CIR_LSIRDYC                     ((uint32_t)0x00010000)        /*!&lt; LSI Ready Interrupt Clear */</div><div class="line">#define  RCC_CIR_LSERDYC                     ((uint32_t)0x00020000)        /*!&lt; LSE Ready Interrupt Clear */</div><div class="line">#define  RCC_CIR_HSIRDYC                     ((uint32_t)0x00040000)        /*!&lt; HSI Ready Interrupt Clear */</div><div class="line">#define  RCC_CIR_HSERDYC                     ((uint32_t)0x00080000)        /*!&lt; HSE Ready Interrupt Clear */</div><div class="line">#define  RCC_CIR_PLLRDYC                     ((uint32_t)0x00100000)        /*!&lt; PLL Ready Interrupt Clear */</div><div class="line">#define  RCC_CIR_CSSC                        ((uint32_t)0x00800000)        /*!&lt; Clock Security System Interrupt Clear */</div><div class="line"></div><div class="line">#ifdef STM32F10X_CL</div><div class="line"> #define  RCC_CIR_PLL2RDYF                    ((uint32_t)0x00000020)        /*!&lt; PLL2 Ready Interrupt flag */</div><div class="line"> #define  RCC_CIR_PLL3RDYF                    ((uint32_t)0x00000040)        /*!&lt; PLL3 Ready Interrupt flag */</div><div class="line"> #define  RCC_CIR_PLL2RDYIE                   ((uint32_t)0x00002000)        /*!&lt; PLL2 Ready Interrupt Enable */</div><div class="line"> #define  RCC_CIR_PLL3RDYIE                   ((uint32_t)0x00004000)        /*!&lt; PLL3 Ready Interrupt Enable */</div><div class="line"> #define  RCC_CIR_PLL2RDYC                    ((uint32_t)0x00200000)        /*!&lt; PLL2 Ready Interrupt Clear */</div><div class="line"> #define  RCC_CIR_PLL3RDYC                    ((uint32_t)0x00400000)        /*!&lt; PLL3 Ready Interrupt Clear */</div><div class="line">#endif /* STM32F10X_CL */</div><div class="line"></div><div class="line">/*****************  Bit definition for RCC_APB2RSTR register  *****************/</div><div class="line">#define  RCC_APB2RSTR_AFIORST                ((uint32_t)0x00000001)        /*!&lt; Alternate Function I/O reset */</div><div class="line">#define  RCC_APB2RSTR_IOPARST                ((uint32_t)0x00000004)        /*!&lt; I/O port A reset */</div><div class="line">#define  RCC_APB2RSTR_IOPBRST                ((uint32_t)0x00000008)        /*!&lt; I/O port B reset */</div><div class="line">#define  RCC_APB2RSTR_IOPCRST                ((uint32_t)0x00000010)        /*!&lt; I/O port C reset */</div><div class="line">#define  RCC_APB2RSTR_IOPDRST                ((uint32_t)0x00000020)        /*!&lt; I/O port D reset */</div><div class="line">#define  RCC_APB2RSTR_ADC1RST                ((uint32_t)0x00000200)        /*!&lt; ADC 1 interface reset */</div><div class="line"></div><div class="line">#if !defined (STM32F10X_LD_VL) &amp;&amp; !defined (STM32F10X_MD_VL) &amp;&amp; !defined (STM32F10X_HD_VL)</div><div class="line">#define  RCC_APB2RSTR_ADC2RST                ((uint32_t)0x00000400)        /*!&lt; ADC 2 interface reset */</div><div class="line">#endif</div><div class="line"></div><div class="line">#define  RCC_APB2RSTR_TIM1RST                ((uint32_t)0x00000800)        /*!&lt; TIM1 Timer reset */</div><div class="line">#define  RCC_APB2RSTR_SPI1RST                ((uint32_t)0x00001000)        /*!&lt; SPI 1 reset */</div><div class="line">#define  RCC_APB2RSTR_USART1RST              ((uint32_t)0x00004000)        /*!&lt; USART1 reset */</div><div class="line"></div><div class="line">#if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL)</div><div class="line">#define  RCC_APB2RSTR_TIM15RST               ((uint32_t)0x00010000)        /*!&lt; TIM15 Timer reset */</div><div class="line">#define  RCC_APB2RSTR_TIM16RST               ((uint32_t)0x00020000)        /*!&lt; TIM16 Timer reset */</div><div class="line">#define  RCC_APB2RSTR_TIM17RST               ((uint32_t)0x00040000)        /*!&lt; TIM17 Timer reset */</div><div class="line">#endif</div><div class="line"></div><div class="line">#if !defined (STM32F10X_LD) &amp;&amp; !defined (STM32F10X_LD_VL)</div><div class="line"> #define  RCC_APB2RSTR_IOPERST               ((uint32_t)0x00000040)        /*!&lt; I/O port E reset */</div><div class="line">#endif /* STM32F10X_LD &amp;&amp; STM32F10X_LD_VL */</div><div class="line"></div><div class="line">#if defined (STM32F10X_HD) || defined (STM32F10X_XL)</div><div class="line"> #define  RCC_APB2RSTR_IOPFRST               ((uint32_t)0x00000080)        /*!&lt; I/O port F reset */</div><div class="line"> #define  RCC_APB2RSTR_IOPGRST               ((uint32_t)0x00000100)        /*!&lt; I/O port G reset */</div><div class="line"> #define  RCC_APB2RSTR_TIM8RST               ((uint32_t)0x00002000)        /*!&lt; TIM8 Timer reset */</div><div class="line"> #define  RCC_APB2RSTR_ADC3RST               ((uint32_t)0x00008000)        /*!&lt; ADC3 interface reset */</div><div class="line">#endif</div><div class="line"></div><div class="line">#if defined (STM32F10X_HD_VL)</div><div class="line"> #define  RCC_APB2RSTR_IOPFRST               ((uint32_t)0x00000080)        /*!&lt; I/O port F reset */</div><div class="line"> #define  RCC_APB2RSTR_IOPGRST               ((uint32_t)0x00000100)        /*!&lt; I/O port G reset */</div><div class="line">#endif</div><div class="line"></div><div class="line">#ifdef STM32F10X_XL</div><div class="line"> #define  RCC_APB2RSTR_TIM9RST               ((uint32_t)0x00080000)         /*!&lt; TIM9 Timer reset */</div><div class="line"> #define  RCC_APB2RSTR_TIM10RST              ((uint32_t)0x00100000)         /*!&lt; TIM10 Timer reset */</div><div class="line"> #define  RCC_APB2RSTR_TIM11RST              ((uint32_t)0x00200000)         /*!&lt; TIM11 Timer reset */</div><div class="line">#endif /* STM32F10X_XL */</div><div class="line"></div><div class="line">/*****************  Bit definition for RCC_APB1RSTR register  *****************/</div><div class="line">#define  RCC_APB1RSTR_TIM2RST                ((uint32_t)0x00000001)        /*!&lt; Timer 2 reset */</div><div class="line">#define  RCC_APB1RSTR_TIM3RST                ((uint32_t)0x00000002)        /*!&lt; Timer 3 reset */</div><div class="line">#define  RCC_APB1RSTR_WWDGRST                ((uint32_t)0x00000800)        /*!&lt; Window Watchdog reset */</div><div class="line">#define  RCC_APB1RSTR_USART2RST              ((uint32_t)0x00020000)        /*!&lt; USART 2 reset */</div><div class="line">#define  RCC_APB1RSTR_I2C1RST                ((uint32_t)0x00200000)        /*!&lt; I2C 1 reset */</div><div class="line"></div><div class="line">#if !defined (STM32F10X_LD_VL) &amp;&amp; !defined (STM32F10X_MD_VL) &amp;&amp; !defined (STM32F10X_HD_VL)</div><div class="line">#define  RCC_APB1RSTR_CAN1RST                ((uint32_t)0x02000000)        /*!&lt; CAN1 reset */</div><div class="line">#endif</div><div class="line"></div><div class="line">#define  RCC_APB1RSTR_BKPRST                 ((uint32_t)0x08000000)        /*!&lt; Backup interface reset */</div><div class="line">#define  RCC_APB1RSTR_PWRRST                 ((uint32_t)0x10000000)        /*!&lt; Power interface reset */</div><div class="line"></div><div class="line">#if !defined (STM32F10X_LD) &amp;&amp; !defined (STM32F10X_LD_VL)</div><div class="line"> #define  RCC_APB1RSTR_TIM4RST               ((uint32_t)0x00000004)        /*!&lt; Timer 4 reset */</div><div class="line"> #define  RCC_APB1RSTR_SPI2RST               ((uint32_t)0x00004000)        /*!&lt; SPI 2 reset */</div><div class="line"> #define  RCC_APB1RSTR_USART3RST             ((uint32_t)0x00040000)        /*!&lt; USART 3 reset */</div><div class="line"> #define  RCC_APB1RSTR_I2C2RST               ((uint32_t)0x00400000)        /*!&lt; I2C 2 reset */</div><div class="line">#endif /* STM32F10X_LD &amp;&amp; STM32F10X_LD_VL */</div><div class="line"></div><div class="line">#if defined (STM32F10X_HD) || defined (STM32F10X_MD) || defined (STM32F10X_LD) || defined  (STM32F10X_XL)</div><div class="line"> #define  RCC_APB1RSTR_USBRST                ((uint32_t)0x00800000)        /*!&lt; USB Device reset */</div><div class="line">#endif</div><div class="line"></div><div class="line">#if defined (STM32F10X_HD) || defined  (STM32F10X_CL) || defined  (STM32F10X_XL)</div><div class="line"> #define  RCC_APB1RSTR_TIM5RST                ((uint32_t)0x00000008)        /*!&lt; Timer 5 reset */</div><div class="line"> #define  RCC_APB1RSTR_TIM6RST                ((uint32_t)0x00000010)        /*!&lt; Timer 6 reset */</div><div class="line"> #define  RCC_APB1RSTR_TIM7RST                ((uint32_t)0x00000020)        /*!&lt; Timer 7 reset */</div><div class="line"> #define  RCC_APB1RSTR_SPI3RST                ((uint32_t)0x00008000)        /*!&lt; SPI 3 reset */</div><div class="line"> #define  RCC_APB1RSTR_UART4RST               ((uint32_t)0x00080000)        /*!&lt; UART 4 reset */</div><div class="line"> #define  RCC_APB1RSTR_UART5RST               ((uint32_t)0x00100000)        /*!&lt; UART 5 reset */</div><div class="line"> #define  RCC_APB1RSTR_DACRST                 ((uint32_t)0x20000000)        /*!&lt; DAC interface reset */</div><div class="line">#endif</div><div class="line"></div><div class="line">#if defined (STM32F10X_LD_VL) || defined  (STM32F10X_MD_VL) || defined  (STM32F10X_HD_VL)</div><div class="line"> #define  RCC_APB1RSTR_TIM6RST                ((uint32_t)0x00000010)        /*!&lt; Timer 6 reset */</div><div class="line"> #define  RCC_APB1RSTR_TIM7RST                ((uint32_t)0x00000020)        /*!&lt; Timer 7 reset */</div><div class="line"> #define  RCC_APB1RSTR_DACRST                 ((uint32_t)0x20000000)        /*!&lt; DAC interface reset */</div><div class="line"> #define  RCC_APB1RSTR_CECRST                 ((uint32_t)0x40000000)        /*!&lt; CEC interface reset */ </div><div class="line">#endif</div><div class="line"></div><div class="line">#if defined  (STM32F10X_HD_VL)</div><div class="line"> #define  RCC_APB1RSTR_TIM5RST                ((uint32_t)0x00000008)        /*!&lt; Timer 5 reset */</div><div class="line"> #define  RCC_APB1RSTR_TIM12RST               ((uint32_t)0x00000040)        /*!&lt; TIM12 Timer reset */</div><div class="line"> #define  RCC_APB1RSTR_TIM13RST               ((uint32_t)0x00000080)        /*!&lt; TIM13 Timer reset */</div><div class="line"> #define  RCC_APB1RSTR_TIM14RST               ((uint32_t)0x00000100)        /*!&lt; TIM14 Timer reset */</div><div class="line"> #define  RCC_APB1RSTR_SPI3RST                ((uint32_t)0x00008000)        /*!&lt; SPI 3 reset */ </div><div class="line"> #define  RCC_APB1RSTR_UART4RST               ((uint32_t)0x00080000)        /*!&lt; UART 4 reset */</div><div class="line"> #define  RCC_APB1RSTR_UART5RST               ((uint32_t)0x00100000)        /*!&lt; UART 5 reset */ </div><div class="line">#endif</div><div class="line"></div><div class="line">#ifdef STM32F10X_CL</div><div class="line"> #define  RCC_APB1RSTR_CAN2RST                ((uint32_t)0x04000000)        /*!&lt; CAN2 reset */</div><div class="line">#endif /* STM32F10X_CL */</div><div class="line"></div><div class="line">#ifdef STM32F10X_XL</div><div class="line"> #define  RCC_APB1RSTR_TIM12RST               ((uint32_t)0x00000040)         /*!&lt; TIM12 Timer reset */</div><div class="line"> #define  RCC_APB1RSTR_TIM13RST               ((uint32_t)0x00000080)         /*!&lt; TIM13 Timer reset */</div><div class="line"> #define  RCC_APB1RSTR_TIM14RST               ((uint32_t)0x00000100)         /*!&lt; TIM14 Timer reset */</div><div class="line">#endif /* STM32F10X_XL */</div><div class="line"></div><div class="line">/******************  Bit definition for RCC_AHBENR register  ******************/</div><div class="line">#define  RCC_AHBENR_DMA1EN                   ((uint16_t)0x0001)            /*!&lt; DMA1 clock enable */</div><div class="line">#define  RCC_AHBENR_SRAMEN                   ((uint16_t)0x0004)            /*!&lt; SRAM interface clock enable */</div><div class="line">#define  RCC_AHBENR_FLITFEN                  ((uint16_t)0x0010)            /*!&lt; FLITF clock enable */</div><div class="line">#define  RCC_AHBENR_CRCEN                    ((uint16_t)0x0040)            /*!&lt; CRC clock enable */</div><div class="line"></div><div class="line">#if defined (STM32F10X_HD) || defined  (STM32F10X_CL) || defined  (STM32F10X_HD_VL)</div><div class="line"> #define  RCC_AHBENR_DMA2EN                  ((uint16_t)0x0002)            /*!&lt; DMA2 clock enable */</div><div class="line">#endif</div><div class="line"></div><div class="line">#if defined (STM32F10X_HD) || defined (STM32F10X_XL)</div><div class="line"> #define  RCC_AHBENR_FSMCEN                  ((uint16_t)0x0100)            /*!&lt; FSMC clock enable */</div><div class="line"> #define  RCC_AHBENR_SDIOEN                  ((uint16_t)0x0400)            /*!&lt; SDIO clock enable */</div><div class="line">#endif</div><div class="line"></div><div class="line">#if defined (STM32F10X_HD_VL)</div><div class="line"> #define  RCC_AHBENR_FSMCEN                  ((uint16_t)0x0100)            /*!&lt; FSMC clock enable */</div><div class="line">#endif</div><div class="line"></div><div class="line">#ifdef STM32F10X_CL</div><div class="line"> #define  RCC_AHBENR_OTGFSEN                 ((uint32_t)0x00001000)         /*!&lt; USB OTG FS clock enable */</div><div class="line"> #define  RCC_AHBENR_ETHMACEN                ((uint32_t)0x00004000)         /*!&lt; ETHERNET MAC clock enable */</div><div class="line"> #define  RCC_AHBENR_ETHMACTXEN              ((uint32_t)0x00008000)         /*!&lt; ETHERNET MAC Tx clock enable */</div><div class="line"> #define  RCC_AHBENR_ETHMACRXEN              ((uint32_t)0x00010000)         /*!&lt; ETHERNET MAC Rx clock enable */</div><div class="line">#endif /* STM32F10X_CL */</div><div class="line"></div><div class="line">/******************  Bit definition for RCC_APB2ENR register  *****************/</div><div class="line">#define  RCC_APB2ENR_AFIOEN                  ((uint32_t)0x00000001)         /*!&lt; Alternate Function I/O clock enable */</div><div class="line">#define  RCC_APB2ENR_IOPAEN                  ((uint32_t)0x00000004)         /*!&lt; I/O port A clock enable */</div><div class="line">#define  RCC_APB2ENR_IOPBEN                  ((uint32_t)0x00000008)         /*!&lt; I/O port B clock enable */</div><div class="line">#define  RCC_APB2ENR_IOPCEN                  ((uint32_t)0x00000010)         /*!&lt; I/O port C clock enable */</div><div class="line">#define  RCC_APB2ENR_IOPDEN                  ((uint32_t)0x00000020)         /*!&lt; I/O port D clock enable */</div><div class="line">#define  RCC_APB2ENR_ADC1EN                  ((uint32_t)0x00000200)         /*!&lt; ADC 1 interface clock enable */</div><div class="line"></div><div class="line">#if !defined (STM32F10X_LD_VL) &amp;&amp; !defined (STM32F10X_MD_VL) &amp;&amp; !defined (STM32F10X_HD_VL)</div><div class="line">#define  RCC_APB2ENR_ADC2EN                  ((uint32_t)0x00000400)         /*!&lt; ADC 2 interface clock enable */</div><div class="line">#endif</div><div class="line"></div><div class="line">#define  RCC_APB2ENR_TIM1EN                  ((uint32_t)0x00000800)         /*!&lt; TIM1 Timer clock enable */</div><div class="line">#define  RCC_APB2ENR_SPI1EN                  ((uint32_t)0x00001000)         /*!&lt; SPI 1 clock enable */</div><div class="line">#define  RCC_APB2ENR_USART1EN                ((uint32_t)0x00004000)         /*!&lt; USART1 clock enable */</div><div class="line"></div><div class="line">#if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL)</div><div class="line">#define  RCC_APB2ENR_TIM15EN                 ((uint32_t)0x00010000)         /*!&lt; TIM15 Timer clock enable */</div><div class="line">#define  RCC_APB2ENR_TIM16EN                 ((uint32_t)0x00020000)         /*!&lt; TIM16 Timer clock enable */</div><div class="line">#define  RCC_APB2ENR_TIM17EN                 ((uint32_t)0x00040000)         /*!&lt; TIM17 Timer clock enable */</div><div class="line">#endif</div><div class="line"></div><div class="line">#if !defined (STM32F10X_LD) &amp;&amp; !defined (STM32F10X_LD_VL)</div><div class="line"> #define  RCC_APB2ENR_IOPEEN                 ((uint32_t)0x00000040)         /*!&lt; I/O port E clock enable */</div><div class="line">#endif /* STM32F10X_LD &amp;&amp; STM32F10X_LD_VL */</div><div class="line"></div><div class="line">#if defined (STM32F10X_HD) || defined (STM32F10X_XL)</div><div class="line"> #define  RCC_APB2ENR_IOPFEN                 ((uint32_t)0x00000080)         /*!&lt; I/O port F clock enable */</div><div class="line"> #define  RCC_APB2ENR_IOPGEN                 ((uint32_t)0x00000100)         /*!&lt; I/O port G clock enable */</div><div class="line"> #define  RCC_APB2ENR_TIM8EN                 ((uint32_t)0x00002000)         /*!&lt; TIM8 Timer clock enable */</div><div class="line"> #define  RCC_APB2ENR_ADC3EN                 ((uint32_t)0x00008000)         /*!&lt; DMA1 clock enable */</div><div class="line">#endif</div><div class="line"></div><div class="line">#if defined (STM32F10X_HD_VL)</div><div class="line"> #define  RCC_APB2ENR_IOPFEN                 ((uint32_t)0x00000080)         /*!&lt; I/O port F clock enable */</div><div class="line"> #define  RCC_APB2ENR_IOPGEN                 ((uint32_t)0x00000100)         /*!&lt; I/O port G clock enable */</div><div class="line">#endif</div><div class="line"></div><div class="line">#ifdef STM32F10X_XL</div><div class="line"> #define  RCC_APB2ENR_TIM9EN                 ((uint32_t)0x00080000)         /*!&lt; TIM9 Timer clock enable  */</div><div class="line"> #define  RCC_APB2ENR_TIM10EN                ((uint32_t)0x00100000)         /*!&lt; TIM10 Timer clock enable  */</div><div class="line"> #define  RCC_APB2ENR_TIM11EN                ((uint32_t)0x00200000)         /*!&lt; TIM11 Timer clock enable */</div><div class="line">#endif</div><div class="line"></div><div class="line">/*****************  Bit definition for RCC_APB1ENR register  ******************/</div><div class="line">#define  RCC_APB1ENR_TIM2EN                  ((uint32_t)0x00000001)        /*!&lt; Timer 2 clock enabled*/</div><div class="line">#define  RCC_APB1ENR_TIM3EN                  ((uint32_t)0x00000002)        /*!&lt; Timer 3 clock enable */</div><div class="line">#define  RCC_APB1ENR_WWDGEN                  ((uint32_t)0x00000800)        /*!&lt; Window Watchdog clock enable */</div><div class="line">#define  RCC_APB1ENR_USART2EN                ((uint32_t)0x00020000)        /*!&lt; USART 2 clock enable */</div><div class="line">#define  RCC_APB1ENR_I2C1EN                  ((uint32_t)0x00200000)        /*!&lt; I2C 1 clock enable */</div><div class="line"></div><div class="line">#if !defined (STM32F10X_LD_VL) &amp;&amp; !defined (STM32F10X_MD_VL) &amp;&amp; !defined (STM32F10X_HD_VL)</div><div class="line">#define  RCC_APB1ENR_CAN1EN                  ((uint32_t)0x02000000)        /*!&lt; CAN1 clock enable */</div><div class="line">#endif</div><div class="line"></div><div class="line">#define  RCC_APB1ENR_BKPEN                   ((uint32_t)0x08000000)        /*!&lt; Backup interface clock enable */</div><div class="line">#define  RCC_APB1ENR_PWREN                   ((uint32_t)0x10000000)        /*!&lt; Power interface clock enable */</div><div class="line"></div><div class="line">#if !defined (STM32F10X_LD) &amp;&amp; !defined (STM32F10X_LD_VL)</div><div class="line"> #define  RCC_APB1ENR_TIM4EN                 ((uint32_t)0x00000004)        /*!&lt; Timer 4 clock enable */</div><div class="line"> #define  RCC_APB1ENR_SPI2EN                 ((uint32_t)0x00004000)        /*!&lt; SPI 2 clock enable */</div><div class="line"> #define  RCC_APB1ENR_USART3EN               ((uint32_t)0x00040000)        /*!&lt; USART 3 clock enable */</div><div class="line"> #define  RCC_APB1ENR_I2C2EN                 ((uint32_t)0x00400000)        /*!&lt; I2C 2 clock enable */</div><div class="line">#endif /* STM32F10X_LD &amp;&amp; STM32F10X_LD_VL */</div><div class="line"></div><div class="line">#if defined (STM32F10X_HD) || defined (STM32F10X_MD) || defined  (STM32F10X_LD)</div><div class="line"> #define  RCC_APB1ENR_USBEN                  ((uint32_t)0x00800000)        /*!&lt; USB Device clock enable */</div><div class="line">#endif</div><div class="line"></div><div class="line">#if defined (STM32F10X_HD) || defined  (STM32F10X_CL)</div><div class="line"> #define  RCC_APB1ENR_TIM5EN                 ((uint32_t)0x00000008)        /*!&lt; Timer 5 clock enable */</div><div class="line"> #define  RCC_APB1ENR_TIM6EN                 ((uint32_t)0x00000010)        /*!&lt; Timer 6 clock enable */</div><div class="line"> #define  RCC_APB1ENR_TIM7EN                 ((uint32_t)0x00000020)        /*!&lt; Timer 7 clock enable */</div><div class="line"> #define  RCC_APB1ENR_SPI3EN                 ((uint32_t)0x00008000)        /*!&lt; SPI 3 clock enable */</div><div class="line"> #define  RCC_APB1ENR_UART4EN                ((uint32_t)0x00080000)        /*!&lt; UART 4 clock enable */</div><div class="line"> #define  RCC_APB1ENR_UART5EN                ((uint32_t)0x00100000)        /*!&lt; UART 5 clock enable */</div><div class="line"> #define  RCC_APB1ENR_DACEN                  ((uint32_t)0x20000000)        /*!&lt; DAC interface clock enable */</div><div class="line">#endif</div><div class="line"></div><div class="line">#if defined (STM32F10X_LD_VL) || defined  (STM32F10X_MD_VL) || defined  (STM32F10X_HD_VL)</div><div class="line"> #define  RCC_APB1ENR_TIM6EN                 ((uint32_t)0x00000010)        /*!&lt; Timer 6 clock enable */</div><div class="line"> #define  RCC_APB1ENR_TIM7EN                 ((uint32_t)0x00000020)        /*!&lt; Timer 7 clock enable */</div><div class="line"> #define  RCC_APB1ENR_DACEN                  ((uint32_t)0x20000000)        /*!&lt; DAC interface clock enable */</div><div class="line"> #define  RCC_APB1ENR_CECEN                  ((uint32_t)0x40000000)        /*!&lt; CEC interface clock enable */ </div><div class="line">#endif</div><div class="line"></div><div class="line">#ifdef STM32F10X_HD_VL</div><div class="line"> #define  RCC_APB1ENR_TIM5EN                 ((uint32_t)0x00000008)        /*!&lt; Timer 5 clock enable */</div><div class="line"> #define  RCC_APB1ENR_TIM12EN                ((uint32_t)0x00000040)         /*!&lt; TIM12 Timer clock enable  */</div><div class="line"> #define  RCC_APB1ENR_TIM13EN                ((uint32_t)0x00000080)         /*!&lt; TIM13 Timer clock enable  */</div><div class="line"> #define  RCC_APB1ENR_TIM14EN                ((uint32_t)0x00000100)         /*!&lt; TIM14 Timer clock enable */</div><div class="line"> #define  RCC_APB1ENR_SPI3EN                 ((uint32_t)0x00008000)        /*!&lt; SPI 3 clock enable */</div><div class="line"> #define  RCC_APB1ENR_UART4EN                ((uint32_t)0x00080000)        /*!&lt; UART 4 clock enable */</div><div class="line"> #define  RCC_APB1ENR_UART5EN                ((uint32_t)0x00100000)        /*!&lt; UART 5 clock enable */ </div><div class="line">#endif /* STM32F10X_HD_VL */</div><div class="line"></div><div class="line">#ifdef STM32F10X_CL</div><div class="line"> #define  RCC_APB1ENR_CAN2EN                  ((uint32_t)0x04000000)        /*!&lt; CAN2 clock enable */</div><div class="line">#endif /* STM32F10X_CL */</div><div class="line"></div><div class="line">#ifdef STM32F10X_XL</div><div class="line"> #define  RCC_APB1ENR_TIM12EN                ((uint32_t)0x00000040)         /*!&lt; TIM12 Timer clock enable  */</div><div class="line"> #define  RCC_APB1ENR_TIM13EN                ((uint32_t)0x00000080)         /*!&lt; TIM13 Timer clock enable  */</div><div class="line"> #define  RCC_APB1ENR_TIM14EN                ((uint32_t)0x00000100)         /*!&lt; TIM14 Timer clock enable */</div><div class="line">#endif /* STM32F10X_XL */</div><div class="line"></div><div class="line">/*******************  Bit definition for RCC_BDCR register  *******************/</div><div class="line">#define  RCC_BDCR_LSEON                      ((uint32_t)0x00000001)        /*!&lt; External Low Speed oscillator enable */</div><div class="line">#define  RCC_BDCR_LSERDY                     ((uint32_t)0x00000002)        /*!&lt; External Low Speed oscillator Ready */</div><div class="line">#define  RCC_BDCR_LSEBYP                     ((uint32_t)0x00000004)        /*!&lt; External Low Speed oscillator Bypass */</div><div class="line"></div><div class="line">#define  RCC_BDCR_RTCSEL                     ((uint32_t)0x00000300)        /*!&lt; RTCSEL[1:0] bits (RTC clock source selection) */</div><div class="line">#define  RCC_BDCR_RTCSEL_0                   ((uint32_t)0x00000100)        /*!&lt; Bit 0 */</div><div class="line">#define  RCC_BDCR_RTCSEL_1                   ((uint32_t)0x00000200)        /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">/*!&lt; RTC congiguration */</div><div class="line">#define  RCC_BDCR_RTCSEL_NOCLOCK             ((uint32_t)0x00000000)        /*!&lt; No clock */</div><div class="line">#define  RCC_BDCR_RTCSEL_LSE                 ((uint32_t)0x00000100)        /*!&lt; LSE oscillator clock used as RTC clock */</div><div class="line">#define  RCC_BDCR_RTCSEL_LSI                 ((uint32_t)0x00000200)        /*!&lt; LSI oscillator clock used as RTC clock */</div><div class="line">#define  RCC_BDCR_RTCSEL_HSE                 ((uint32_t)0x00000300)        /*!&lt; HSE oscillator clock divided by 128 used as RTC clock */</div><div class="line"></div><div class="line">#define  RCC_BDCR_RTCEN                      ((uint32_t)0x00008000)        /*!&lt; RTC clock enable */</div><div class="line">#define  RCC_BDCR_BDRST                      ((uint32_t)0x00010000)        /*!&lt; Backup domain software reset  */</div><div class="line"></div><div class="line">/*******************  Bit definition for RCC_CSR register  ********************/  </div><div class="line">#define  RCC_CSR_LSION                       ((uint32_t)0x00000001)        /*!&lt; Internal Low Speed oscillator enable */</div><div class="line">#define  RCC_CSR_LSIRDY                      ((uint32_t)0x00000002)        /*!&lt; Internal Low Speed oscillator Ready */</div><div class="line">#define  RCC_CSR_RMVF                        ((uint32_t)0x01000000)        /*!&lt; Remove reset flag */</div><div class="line">#define  RCC_CSR_PINRSTF                     ((uint32_t)0x04000000)        /*!&lt; PIN reset flag */</div><div class="line">#define  RCC_CSR_PORRSTF                     ((uint32_t)0x08000000)        /*!&lt; POR/PDR reset flag */</div><div class="line">#define  RCC_CSR_SFTRSTF                     ((uint32_t)0x10000000)        /*!&lt; Software Reset flag */</div><div class="line">#define  RCC_CSR_IWDGRSTF                    ((uint32_t)0x20000000)        /*!&lt; Independent Watchdog reset flag */</div><div class="line">#define  RCC_CSR_WWDGRSTF                    ((uint32_t)0x40000000)        /*!&lt; Window watchdog reset flag */</div><div class="line">#define  RCC_CSR_LPWRRSTF                    ((uint32_t)0x80000000)        /*!&lt; Low-Power reset flag */</div><div class="line"></div><div class="line">#ifdef STM32F10X_CL</div><div class="line">/*******************  Bit definition for RCC_AHBRSTR register  ****************/</div><div class="line"> #define  RCC_AHBRSTR_OTGFSRST               ((uint32_t)0x00001000)         /*!&lt; USB OTG FS reset */</div><div class="line"> #define  RCC_AHBRSTR_ETHMACRST              ((uint32_t)0x00004000)         /*!&lt; ETHERNET MAC reset */</div><div class="line"></div><div class="line">/*******************  Bit definition for RCC_CFGR2 register  ******************/</div><div class="line">/*!&lt; PREDIV1 configuration */</div><div class="line"> #define  RCC_CFGR2_PREDIV1                  ((uint32_t)0x0000000F)        /*!&lt; PREDIV1[3:0] bits */</div><div class="line"> #define  RCC_CFGR2_PREDIV1_0                ((uint32_t)0x00000001)        /*!&lt; Bit 0 */</div><div class="line"> #define  RCC_CFGR2_PREDIV1_1                ((uint32_t)0x00000002)        /*!&lt; Bit 1 */</div><div class="line"> #define  RCC_CFGR2_PREDIV1_2                ((uint32_t)0x00000004)        /*!&lt; Bit 2 */</div><div class="line"> #define  RCC_CFGR2_PREDIV1_3                ((uint32_t)0x00000008)        /*!&lt; Bit 3 */</div><div class="line"></div><div class="line"> #define  RCC_CFGR2_PREDIV1_DIV1             ((uint32_t)0x00000000)        /*!&lt; PREDIV1 input clock not divided */</div><div class="line"> #define  RCC_CFGR2_PREDIV1_DIV2             ((uint32_t)0x00000001)        /*!&lt; PREDIV1 input clock divided by 2 */</div><div class="line"> #define  RCC_CFGR2_PREDIV1_DIV3             ((uint32_t)0x00000002)        /*!&lt; PREDIV1 input clock divided by 3 */</div><div class="line"> #define  RCC_CFGR2_PREDIV1_DIV4             ((uint32_t)0x00000003)        /*!&lt; PREDIV1 input clock divided by 4 */</div><div class="line"> #define  RCC_CFGR2_PREDIV1_DIV5             ((uint32_t)0x00000004)        /*!&lt; PREDIV1 input clock divided by 5 */</div><div class="line"> #define  RCC_CFGR2_PREDIV1_DIV6             ((uint32_t)0x00000005)        /*!&lt; PREDIV1 input clock divided by 6 */</div><div class="line"> #define  RCC_CFGR2_PREDIV1_DIV7             ((uint32_t)0x00000006)        /*!&lt; PREDIV1 input clock divided by 7 */</div><div class="line"> #define  RCC_CFGR2_PREDIV1_DIV8             ((uint32_t)0x00000007)        /*!&lt; PREDIV1 input clock divided by 8 */</div><div class="line"> #define  RCC_CFGR2_PREDIV1_DIV9             ((uint32_t)0x00000008)        /*!&lt; PREDIV1 input clock divided by 9 */</div><div class="line"> #define  RCC_CFGR2_PREDIV1_DIV10            ((uint32_t)0x00000009)        /*!&lt; PREDIV1 input clock divided by 10 */</div><div class="line"> #define  RCC_CFGR2_PREDIV1_DIV11            ((uint32_t)0x0000000A)        /*!&lt; PREDIV1 input clock divided by 11 */</div><div class="line"> #define  RCC_CFGR2_PREDIV1_DIV12            ((uint32_t)0x0000000B)        /*!&lt; PREDIV1 input clock divided by 12 */</div><div class="line"> #define  RCC_CFGR2_PREDIV1_DIV13            ((uint32_t)0x0000000C)        /*!&lt; PREDIV1 input clock divided by 13 */</div><div class="line"> #define  RCC_CFGR2_PREDIV1_DIV14            ((uint32_t)0x0000000D)        /*!&lt; PREDIV1 input clock divided by 14 */</div><div class="line"> #define  RCC_CFGR2_PREDIV1_DIV15            ((uint32_t)0x0000000E)        /*!&lt; PREDIV1 input clock divided by 15 */</div><div class="line"> #define  RCC_CFGR2_PREDIV1_DIV16            ((uint32_t)0x0000000F)        /*!&lt; PREDIV1 input clock divided by 16 */</div><div class="line"></div><div class="line">/*!&lt; PREDIV2 configuration */</div><div class="line"> #define  RCC_CFGR2_PREDIV2                  ((uint32_t)0x000000F0)        /*!&lt; PREDIV2[3:0] bits */</div><div class="line"> #define  RCC_CFGR2_PREDIV2_0                ((uint32_t)0x00000010)        /*!&lt; Bit 0 */</div><div class="line"> #define  RCC_CFGR2_PREDIV2_1                ((uint32_t)0x00000020)        /*!&lt; Bit 1 */</div><div class="line"> #define  RCC_CFGR2_PREDIV2_2                ((uint32_t)0x00000040)        /*!&lt; Bit 2 */</div><div class="line"> #define  RCC_CFGR2_PREDIV2_3                ((uint32_t)0x00000080)        /*!&lt; Bit 3 */</div><div class="line"></div><div class="line"> #define  RCC_CFGR2_PREDIV2_DIV1             ((uint32_t)0x00000000)        /*!&lt; PREDIV2 input clock not divided */</div><div class="line"> #define  RCC_CFGR2_PREDIV2_DIV2             ((uint32_t)0x00000010)        /*!&lt; PREDIV2 input clock divided by 2 */</div><div class="line"> #define  RCC_CFGR2_PREDIV2_DIV3             ((uint32_t)0x00000020)        /*!&lt; PREDIV2 input clock divided by 3 */</div><div class="line"> #define  RCC_CFGR2_PREDIV2_DIV4             ((uint32_t)0x00000030)        /*!&lt; PREDIV2 input clock divided by 4 */</div><div class="line"> #define  RCC_CFGR2_PREDIV2_DIV5             ((uint32_t)0x00000040)        /*!&lt; PREDIV2 input clock divided by 5 */</div><div class="line"> #define  RCC_CFGR2_PREDIV2_DIV6             ((uint32_t)0x00000050)        /*!&lt; PREDIV2 input clock divided by 6 */</div><div class="line"> #define  RCC_CFGR2_PREDIV2_DIV7             ((uint32_t)0x00000060)        /*!&lt; PREDIV2 input clock divided by 7 */</div><div class="line"> #define  RCC_CFGR2_PREDIV2_DIV8             ((uint32_t)0x00000070)        /*!&lt; PREDIV2 input clock divided by 8 */</div><div class="line"> #define  RCC_CFGR2_PREDIV2_DIV9             ((uint32_t)0x00000080)        /*!&lt; PREDIV2 input clock divided by 9 */</div><div class="line"> #define  RCC_CFGR2_PREDIV2_DIV10            ((uint32_t)0x00000090)        /*!&lt; PREDIV2 input clock divided by 10 */</div><div class="line"> #define  RCC_CFGR2_PREDIV2_DIV11            ((uint32_t)0x000000A0)        /*!&lt; PREDIV2 input clock divided by 11 */</div><div class="line"> #define  RCC_CFGR2_PREDIV2_DIV12            ((uint32_t)0x000000B0)        /*!&lt; PREDIV2 input clock divided by 12 */</div><div class="line"> #define  RCC_CFGR2_PREDIV2_DIV13            ((uint32_t)0x000000C0)        /*!&lt; PREDIV2 input clock divided by 13 */</div><div class="line"> #define  RCC_CFGR2_PREDIV2_DIV14            ((uint32_t)0x000000D0)        /*!&lt; PREDIV2 input clock divided by 14 */</div><div class="line"> #define  RCC_CFGR2_PREDIV2_DIV15            ((uint32_t)0x000000E0)        /*!&lt; PREDIV2 input clock divided by 15 */</div><div class="line"> #define  RCC_CFGR2_PREDIV2_DIV16            ((uint32_t)0x000000F0)        /*!&lt; PREDIV2 input clock divided by 16 */</div><div class="line"></div><div class="line">/*!&lt; PLL2MUL configuration */</div><div class="line"> #define  RCC_CFGR2_PLL2MUL                  ((uint32_t)0x00000F00)        /*!&lt; PLL2MUL[3:0] bits */</div><div class="line"> #define  RCC_CFGR2_PLL2MUL_0                ((uint32_t)0x00000100)        /*!&lt; Bit 0 */</div><div class="line"> #define  RCC_CFGR2_PLL2MUL_1                ((uint32_t)0x00000200)        /*!&lt; Bit 1 */</div><div class="line"> #define  RCC_CFGR2_PLL2MUL_2                ((uint32_t)0x00000400)        /*!&lt; Bit 2 */</div><div class="line"> #define  RCC_CFGR2_PLL2MUL_3                ((uint32_t)0x00000800)        /*!&lt; Bit 3 */</div><div class="line"></div><div class="line"> #define  RCC_CFGR2_PLL2MUL8                 ((uint32_t)0x00000600)        /*!&lt; PLL2 input clock * 8 */</div><div class="line"> #define  RCC_CFGR2_PLL2MUL9                 ((uint32_t)0x00000700)        /*!&lt; PLL2 input clock * 9 */</div><div class="line"> #define  RCC_CFGR2_PLL2MUL10                ((uint32_t)0x00000800)        /*!&lt; PLL2 input clock * 10 */</div><div class="line"> #define  RCC_CFGR2_PLL2MUL11                ((uint32_t)0x00000900)        /*!&lt; PLL2 input clock * 11 */</div><div class="line"> #define  RCC_CFGR2_PLL2MUL12                ((uint32_t)0x00000A00)        /*!&lt; PLL2 input clock * 12 */</div><div class="line"> #define  RCC_CFGR2_PLL2MUL13                ((uint32_t)0x00000B00)        /*!&lt; PLL2 input clock * 13 */</div><div class="line"> #define  RCC_CFGR2_PLL2MUL14                ((uint32_t)0x00000C00)        /*!&lt; PLL2 input clock * 14 */</div><div class="line"> #define  RCC_CFGR2_PLL2MUL16                ((uint32_t)0x00000E00)        /*!&lt; PLL2 input clock * 16 */</div><div class="line"> #define  RCC_CFGR2_PLL2MUL20                ((uint32_t)0x00000F00)        /*!&lt; PLL2 input clock * 20 */</div><div class="line"></div><div class="line">/*!&lt; PLL3MUL configuration */</div><div class="line"> #define  RCC_CFGR2_PLL3MUL                  ((uint32_t)0x0000F000)        /*!&lt; PLL3MUL[3:0] bits */</div><div class="line"> #define  RCC_CFGR2_PLL3MUL_0                ((uint32_t)0x00001000)        /*!&lt; Bit 0 */</div><div class="line"> #define  RCC_CFGR2_PLL3MUL_1                ((uint32_t)0x00002000)        /*!&lt; Bit 1 */</div><div class="line"> #define  RCC_CFGR2_PLL3MUL_2                ((uint32_t)0x00004000)        /*!&lt; Bit 2 */</div><div class="line"> #define  RCC_CFGR2_PLL3MUL_3                ((uint32_t)0x00008000)        /*!&lt; Bit 3 */</div><div class="line"></div><div class="line"> #define  RCC_CFGR2_PLL3MUL8                 ((uint32_t)0x00006000)        /*!&lt; PLL3 input clock * 8 */</div><div class="line"> #define  RCC_CFGR2_PLL3MUL9                 ((uint32_t)0x00007000)        /*!&lt; PLL3 input clock * 9 */</div><div class="line"> #define  RCC_CFGR2_PLL3MUL10                ((uint32_t)0x00008000)        /*!&lt; PLL3 input clock * 10 */</div><div class="line"> #define  RCC_CFGR2_PLL3MUL11                ((uint32_t)0x00009000)        /*!&lt; PLL3 input clock * 11 */</div><div class="line"> #define  RCC_CFGR2_PLL3MUL12                ((uint32_t)0x0000A000)        /*!&lt; PLL3 input clock * 12 */</div><div class="line"> #define  RCC_CFGR2_PLL3MUL13                ((uint32_t)0x0000B000)        /*!&lt; PLL3 input clock * 13 */</div><div class="line"> #define  RCC_CFGR2_PLL3MUL14                ((uint32_t)0x0000C000)        /*!&lt; PLL3 input clock * 14 */</div><div class="line"> #define  RCC_CFGR2_PLL3MUL16                ((uint32_t)0x0000E000)        /*!&lt; PLL3 input clock * 16 */</div><div class="line"> #define  RCC_CFGR2_PLL3MUL20                ((uint32_t)0x0000F000)        /*!&lt; PLL3 input clock * 20 */</div><div class="line"></div><div class="line"> #define  RCC_CFGR2_PREDIV1SRC               ((uint32_t)0x00010000)        /*!&lt; PREDIV1 entry clock source */</div><div class="line"> #define  RCC_CFGR2_PREDIV1SRC_PLL2          ((uint32_t)0x00010000)        /*!&lt; PLL2 selected as PREDIV1 entry clock source */</div><div class="line"> #define  RCC_CFGR2_PREDIV1SRC_HSE           ((uint32_t)0x00000000)        /*!&lt; HSE selected as PREDIV1 entry clock source */</div><div class="line"> #define  RCC_CFGR2_I2S2SRC                  ((uint32_t)0x00020000)        /*!&lt; I2S2 entry clock source */</div><div class="line"> #define  RCC_CFGR2_I2S3SRC                  ((uint32_t)0x00040000)        /*!&lt; I2S3 clock source */</div><div class="line">#endif /* STM32F10X_CL */</div><div class="line"></div><div class="line">#if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL)</div><div class="line">/*******************  Bit definition for RCC_CFGR2 register  ******************/</div><div class="line">/*!&lt; PREDIV1 configuration */</div><div class="line"> #define  RCC_CFGR2_PREDIV1                  ((uint32_t)0x0000000F)        /*!&lt; PREDIV1[3:0] bits */</div><div class="line"> #define  RCC_CFGR2_PREDIV1_0                ((uint32_t)0x00000001)        /*!&lt; Bit 0 */</div><div class="line"> #define  RCC_CFGR2_PREDIV1_1                ((uint32_t)0x00000002)        /*!&lt; Bit 1 */</div><div class="line"> #define  RCC_CFGR2_PREDIV1_2                ((uint32_t)0x00000004)        /*!&lt; Bit 2 */</div><div class="line"> #define  RCC_CFGR2_PREDIV1_3                ((uint32_t)0x00000008)        /*!&lt; Bit 3 */</div><div class="line"></div><div class="line"> #define  RCC_CFGR2_PREDIV1_DIV1             ((uint32_t)0x00000000)        /*!&lt; PREDIV1 input clock not divided */</div><div class="line"> #define  RCC_CFGR2_PREDIV1_DIV2             ((uint32_t)0x00000001)        /*!&lt; PREDIV1 input clock divided by 2 */</div><div class="line"> #define  RCC_CFGR2_PREDIV1_DIV3             ((uint32_t)0x00000002)        /*!&lt; PREDIV1 input clock divided by 3 */</div><div class="line"> #define  RCC_CFGR2_PREDIV1_DIV4             ((uint32_t)0x00000003)        /*!&lt; PREDIV1 input clock divided by 4 */</div><div class="line"> #define  RCC_CFGR2_PREDIV1_DIV5             ((uint32_t)0x00000004)        /*!&lt; PREDIV1 input clock divided by 5 */</div><div class="line"> #define  RCC_CFGR2_PREDIV1_DIV6             ((uint32_t)0x00000005)        /*!&lt; PREDIV1 input clock divided by 6 */</div><div class="line"> #define  RCC_CFGR2_PREDIV1_DIV7             ((uint32_t)0x00000006)        /*!&lt; PREDIV1 input clock divided by 7 */</div><div class="line"> #define  RCC_CFGR2_PREDIV1_DIV8             ((uint32_t)0x00000007)        /*!&lt; PREDIV1 input clock divided by 8 */</div><div class="line"> #define  RCC_CFGR2_PREDIV1_DIV9             ((uint32_t)0x00000008)        /*!&lt; PREDIV1 input clock divided by 9 */</div><div class="line"> #define  RCC_CFGR2_PREDIV1_DIV10            ((uint32_t)0x00000009)        /*!&lt; PREDIV1 input clock divided by 10 */</div><div class="line"> #define  RCC_CFGR2_PREDIV1_DIV11            ((uint32_t)0x0000000A)        /*!&lt; PREDIV1 input clock divided by 11 */</div><div class="line"> #define  RCC_CFGR2_PREDIV1_DIV12            ((uint32_t)0x0000000B)        /*!&lt; PREDIV1 input clock divided by 12 */</div><div class="line"> #define  RCC_CFGR2_PREDIV1_DIV13            ((uint32_t)0x0000000C)        /*!&lt; PREDIV1 input clock divided by 13 */</div><div class="line"> #define  RCC_CFGR2_PREDIV1_DIV14            ((uint32_t)0x0000000D)        /*!&lt; PREDIV1 input clock divided by 14 */</div><div class="line"> #define  RCC_CFGR2_PREDIV1_DIV15            ((uint32_t)0x0000000E)        /*!&lt; PREDIV1 input clock divided by 15 */</div><div class="line"> #define  RCC_CFGR2_PREDIV1_DIV16            ((uint32_t)0x0000000F)        /*!&lt; PREDIV1 input clock divided by 16 */</div><div class="line">#endif</div><div class="line"> </div><div class="line">/******************************************************************************/</div><div class="line">/*                                                                            */</div><div class="line">/*                General Purpose and Alternate Function I/O                  */</div><div class="line">/*                                                                            */</div><div class="line">/******************************************************************************/</div><div class="line"></div><div class="line">/*******************  Bit definition for GPIO_CRL register  *******************/</div><div class="line">#define  GPIO_CRL_MODE                       ((uint32_t)0x33333333)        /*!&lt; Port x mode bits */</div><div class="line"></div><div class="line">#define  GPIO_CRL_MODE0                      ((uint32_t)0x00000003)        /*!&lt; MODE0[1:0] bits (Port x mode bits, pin 0) */</div><div class="line">#define  GPIO_CRL_MODE0_0                    ((uint32_t)0x00000001)        /*!&lt; Bit 0 */</div><div class="line">#define  GPIO_CRL_MODE0_1                    ((uint32_t)0x00000002)        /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  GPIO_CRL_MODE1                      ((uint32_t)0x00000030)        /*!&lt; MODE1[1:0] bits (Port x mode bits, pin 1) */</div><div class="line">#define  GPIO_CRL_MODE1_0                    ((uint32_t)0x00000010)        /*!&lt; Bit 0 */</div><div class="line">#define  GPIO_CRL_MODE1_1                    ((uint32_t)0x00000020)        /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  GPIO_CRL_MODE2                      ((uint32_t)0x00000300)        /*!&lt; MODE2[1:0] bits (Port x mode bits, pin 2) */</div><div class="line">#define  GPIO_CRL_MODE2_0                    ((uint32_t)0x00000100)        /*!&lt; Bit 0 */</div><div class="line">#define  GPIO_CRL_MODE2_1                    ((uint32_t)0x00000200)        /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  GPIO_CRL_MODE3                      ((uint32_t)0x00003000)        /*!&lt; MODE3[1:0] bits (Port x mode bits, pin 3) */</div><div class="line">#define  GPIO_CRL_MODE3_0                    ((uint32_t)0x00001000)        /*!&lt; Bit 0 */</div><div class="line">#define  GPIO_CRL_MODE3_1                    ((uint32_t)0x00002000)        /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  GPIO_CRL_MODE4                      ((uint32_t)0x00030000)        /*!&lt; MODE4[1:0] bits (Port x mode bits, pin 4) */</div><div class="line">#define  GPIO_CRL_MODE4_0                    ((uint32_t)0x00010000)        /*!&lt; Bit 0 */</div><div class="line">#define  GPIO_CRL_MODE4_1                    ((uint32_t)0x00020000)        /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  GPIO_CRL_MODE5                      ((uint32_t)0x00300000)        /*!&lt; MODE5[1:0] bits (Port x mode bits, pin 5) */</div><div class="line">#define  GPIO_CRL_MODE5_0                    ((uint32_t)0x00100000)        /*!&lt; Bit 0 */</div><div class="line">#define  GPIO_CRL_MODE5_1                    ((uint32_t)0x00200000)        /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  GPIO_CRL_MODE6                      ((uint32_t)0x03000000)        /*!&lt; MODE6[1:0] bits (Port x mode bits, pin 6) */</div><div class="line">#define  GPIO_CRL_MODE6_0                    ((uint32_t)0x01000000)        /*!&lt; Bit 0 */</div><div class="line">#define  GPIO_CRL_MODE6_1                    ((uint32_t)0x02000000)        /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  GPIO_CRL_MODE7                      ((uint32_t)0x30000000)        /*!&lt; MODE7[1:0] bits (Port x mode bits, pin 7) */</div><div class="line">#define  GPIO_CRL_MODE7_0                    ((uint32_t)0x10000000)        /*!&lt; Bit 0 */</div><div class="line">#define  GPIO_CRL_MODE7_1                    ((uint32_t)0x20000000)        /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  GPIO_CRL_CNF                        ((uint32_t)0xCCCCCCCC)        /*!&lt; Port x configuration bits */</div><div class="line"></div><div class="line">#define  GPIO_CRL_CNF0                       ((uint32_t)0x0000000C)        /*!&lt; CNF0[1:0] bits (Port x configuration bits, pin 0) */</div><div class="line">#define  GPIO_CRL_CNF0_0                     ((uint32_t)0x00000004)        /*!&lt; Bit 0 */</div><div class="line">#define  GPIO_CRL_CNF0_1                     ((uint32_t)0x00000008)        /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  GPIO_CRL_CNF1                       ((uint32_t)0x000000C0)        /*!&lt; CNF1[1:0] bits (Port x configuration bits, pin 1) */</div><div class="line">#define  GPIO_CRL_CNF1_0                     ((uint32_t)0x00000040)        /*!&lt; Bit 0 */</div><div class="line">#define  GPIO_CRL_CNF1_1                     ((uint32_t)0x00000080)        /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  GPIO_CRL_CNF2                       ((uint32_t)0x00000C00)        /*!&lt; CNF2[1:0] bits (Port x configuration bits, pin 2) */</div><div class="line">#define  GPIO_CRL_CNF2_0                     ((uint32_t)0x00000400)        /*!&lt; Bit 0 */</div><div class="line">#define  GPIO_CRL_CNF2_1                     ((uint32_t)0x00000800)        /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  GPIO_CRL_CNF3                       ((uint32_t)0x0000C000)        /*!&lt; CNF3[1:0] bits (Port x configuration bits, pin 3) */</div><div class="line">#define  GPIO_CRL_CNF3_0                     ((uint32_t)0x00004000)        /*!&lt; Bit 0 */</div><div class="line">#define  GPIO_CRL_CNF3_1                     ((uint32_t)0x00008000)        /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  GPIO_CRL_CNF4                       ((uint32_t)0x000C0000)        /*!&lt; CNF4[1:0] bits (Port x configuration bits, pin 4) */</div><div class="line">#define  GPIO_CRL_CNF4_0                     ((uint32_t)0x00040000)        /*!&lt; Bit 0 */</div><div class="line">#define  GPIO_CRL_CNF4_1                     ((uint32_t)0x00080000)        /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  GPIO_CRL_CNF5                       ((uint32_t)0x00C00000)        /*!&lt; CNF5[1:0] bits (Port x configuration bits, pin 5) */</div><div class="line">#define  GPIO_CRL_CNF5_0                     ((uint32_t)0x00400000)        /*!&lt; Bit 0 */</div><div class="line">#define  GPIO_CRL_CNF5_1                     ((uint32_t)0x00800000)        /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  GPIO_CRL_CNF6                       ((uint32_t)0x0C000000)        /*!&lt; CNF6[1:0] bits (Port x configuration bits, pin 6) */</div><div class="line">#define  GPIO_CRL_CNF6_0                     ((uint32_t)0x04000000)        /*!&lt; Bit 0 */</div><div class="line">#define  GPIO_CRL_CNF6_1                     ((uint32_t)0x08000000)        /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  GPIO_CRL_CNF7                       ((uint32_t)0xC0000000)        /*!&lt; CNF7[1:0] bits (Port x configuration bits, pin 7) */</div><div class="line">#define  GPIO_CRL_CNF7_0                     ((uint32_t)0x40000000)        /*!&lt; Bit 0 */</div><div class="line">#define  GPIO_CRL_CNF7_1                     ((uint32_t)0x80000000)        /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">/*******************  Bit definition for GPIO_CRH register  *******************/</div><div class="line">#define  GPIO_CRH_MODE                       ((uint32_t)0x33333333)        /*!&lt; Port x mode bits */</div><div class="line"></div><div class="line">#define  GPIO_CRH_MODE8                      ((uint32_t)0x00000003)        /*!&lt; MODE8[1:0] bits (Port x mode bits, pin 8) */</div><div class="line">#define  GPIO_CRH_MODE8_0                    ((uint32_t)0x00000001)        /*!&lt; Bit 0 */</div><div class="line">#define  GPIO_CRH_MODE8_1                    ((uint32_t)0x00000002)        /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  GPIO_CRH_MODE9                      ((uint32_t)0x00000030)        /*!&lt; MODE9[1:0] bits (Port x mode bits, pin 9) */</div><div class="line">#define  GPIO_CRH_MODE9_0                    ((uint32_t)0x00000010)        /*!&lt; Bit 0 */</div><div class="line">#define  GPIO_CRH_MODE9_1                    ((uint32_t)0x00000020)        /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  GPIO_CRH_MODE10                     ((uint32_t)0x00000300)        /*!&lt; MODE10[1:0] bits (Port x mode bits, pin 10) */</div><div class="line">#define  GPIO_CRH_MODE10_0                   ((uint32_t)0x00000100)        /*!&lt; Bit 0 */</div><div class="line">#define  GPIO_CRH_MODE10_1                   ((uint32_t)0x00000200)        /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  GPIO_CRH_MODE11                     ((uint32_t)0x00003000)        /*!&lt; MODE11[1:0] bits (Port x mode bits, pin 11) */</div><div class="line">#define  GPIO_CRH_MODE11_0                   ((uint32_t)0x00001000)        /*!&lt; Bit 0 */</div><div class="line">#define  GPIO_CRH_MODE11_1                   ((uint32_t)0x00002000)        /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  GPIO_CRH_MODE12                     ((uint32_t)0x00030000)        /*!&lt; MODE12[1:0] bits (Port x mode bits, pin 12) */</div><div class="line">#define  GPIO_CRH_MODE12_0                   ((uint32_t)0x00010000)        /*!&lt; Bit 0 */</div><div class="line">#define  GPIO_CRH_MODE12_1                   ((uint32_t)0x00020000)        /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  GPIO_CRH_MODE13                     ((uint32_t)0x00300000)        /*!&lt; MODE13[1:0] bits (Port x mode bits, pin 13) */</div><div class="line">#define  GPIO_CRH_MODE13_0                   ((uint32_t)0x00100000)        /*!&lt; Bit 0 */</div><div class="line">#define  GPIO_CRH_MODE13_1                   ((uint32_t)0x00200000)        /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  GPIO_CRH_MODE14                     ((uint32_t)0x03000000)        /*!&lt; MODE14[1:0] bits (Port x mode bits, pin 14) */</div><div class="line">#define  GPIO_CRH_MODE14_0                   ((uint32_t)0x01000000)        /*!&lt; Bit 0 */</div><div class="line">#define  GPIO_CRH_MODE14_1                   ((uint32_t)0x02000000)        /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  GPIO_CRH_MODE15                     ((uint32_t)0x30000000)        /*!&lt; MODE15[1:0] bits (Port x mode bits, pin 15) */</div><div class="line">#define  GPIO_CRH_MODE15_0                   ((uint32_t)0x10000000)        /*!&lt; Bit 0 */</div><div class="line">#define  GPIO_CRH_MODE15_1                   ((uint32_t)0x20000000)        /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  GPIO_CRH_CNF                        ((uint32_t)0xCCCCCCCC)        /*!&lt; Port x configuration bits */</div><div class="line"></div><div class="line">#define  GPIO_CRH_CNF8                       ((uint32_t)0x0000000C)        /*!&lt; CNF8[1:0] bits (Port x configuration bits, pin 8) */</div><div class="line">#define  GPIO_CRH_CNF8_0                     ((uint32_t)0x00000004)        /*!&lt; Bit 0 */</div><div class="line">#define  GPIO_CRH_CNF8_1                     ((uint32_t)0x00000008)        /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  GPIO_CRH_CNF9                       ((uint32_t)0x000000C0)        /*!&lt; CNF9[1:0] bits (Port x configuration bits, pin 9) */</div><div class="line">#define  GPIO_CRH_CNF9_0                     ((uint32_t)0x00000040)        /*!&lt; Bit 0 */</div><div class="line">#define  GPIO_CRH_CNF9_1                     ((uint32_t)0x00000080)        /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  GPIO_CRH_CNF10                      ((uint32_t)0x00000C00)        /*!&lt; CNF10[1:0] bits (Port x configuration bits, pin 10) */</div><div class="line">#define  GPIO_CRH_CNF10_0                    ((uint32_t)0x00000400)        /*!&lt; Bit 0 */</div><div class="line">#define  GPIO_CRH_CNF10_1                    ((uint32_t)0x00000800)        /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  GPIO_CRH_CNF11                      ((uint32_t)0x0000C000)        /*!&lt; CNF11[1:0] bits (Port x configuration bits, pin 11) */</div><div class="line">#define  GPIO_CRH_CNF11_0                    ((uint32_t)0x00004000)        /*!&lt; Bit 0 */</div><div class="line">#define  GPIO_CRH_CNF11_1                    ((uint32_t)0x00008000)        /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  GPIO_CRH_CNF12                      ((uint32_t)0x000C0000)        /*!&lt; CNF12[1:0] bits (Port x configuration bits, pin 12) */</div><div class="line">#define  GPIO_CRH_CNF12_0                    ((uint32_t)0x00040000)        /*!&lt; Bit 0 */</div><div class="line">#define  GPIO_CRH_CNF12_1                    ((uint32_t)0x00080000)        /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  GPIO_CRH_CNF13                      ((uint32_t)0x00C00000)        /*!&lt; CNF13[1:0] bits (Port x configuration bits, pin 13) */</div><div class="line">#define  GPIO_CRH_CNF13_0                    ((uint32_t)0x00400000)        /*!&lt; Bit 0 */</div><div class="line">#define  GPIO_CRH_CNF13_1                    ((uint32_t)0x00800000)        /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  GPIO_CRH_CNF14                      ((uint32_t)0x0C000000)        /*!&lt; CNF14[1:0] bits (Port x configuration bits, pin 14) */</div><div class="line">#define  GPIO_CRH_CNF14_0                    ((uint32_t)0x04000000)        /*!&lt; Bit 0 */</div><div class="line">#define  GPIO_CRH_CNF14_1                    ((uint32_t)0x08000000)        /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  GPIO_CRH_CNF15                      ((uint32_t)0xC0000000)        /*!&lt; CNF15[1:0] bits (Port x configuration bits, pin 15) */</div><div class="line">#define  GPIO_CRH_CNF15_0                    ((uint32_t)0x40000000)        /*!&lt; Bit 0 */</div><div class="line">#define  GPIO_CRH_CNF15_1                    ((uint32_t)0x80000000)        /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">/*!&lt;******************  Bit definition for GPIO_IDR register  *******************/</div><div class="line">#define GPIO_IDR_IDR0                        ((uint16_t)0x0001)            /*!&lt; Port input data, bit 0 */</div><div class="line">#define GPIO_IDR_IDR1                        ((uint16_t)0x0002)            /*!&lt; Port input data, bit 1 */</div><div class="line">#define GPIO_IDR_IDR2                        ((uint16_t)0x0004)            /*!&lt; Port input data, bit 2 */</div><div class="line">#define GPIO_IDR_IDR3                        ((uint16_t)0x0008)            /*!&lt; Port input data, bit 3 */</div><div class="line">#define GPIO_IDR_IDR4                        ((uint16_t)0x0010)            /*!&lt; Port input data, bit 4 */</div><div class="line">#define GPIO_IDR_IDR5                        ((uint16_t)0x0020)            /*!&lt; Port input data, bit 5 */</div><div class="line">#define GPIO_IDR_IDR6                        ((uint16_t)0x0040)            /*!&lt; Port input data, bit 6 */</div><div class="line">#define GPIO_IDR_IDR7                        ((uint16_t)0x0080)            /*!&lt; Port input data, bit 7 */</div><div class="line">#define GPIO_IDR_IDR8                        ((uint16_t)0x0100)            /*!&lt; Port input data, bit 8 */</div><div class="line">#define GPIO_IDR_IDR9                        ((uint16_t)0x0200)            /*!&lt; Port input data, bit 9 */</div><div class="line">#define GPIO_IDR_IDR10                       ((uint16_t)0x0400)            /*!&lt; Port input data, bit 10 */</div><div class="line">#define GPIO_IDR_IDR11                       ((uint16_t)0x0800)            /*!&lt; Port input data, bit 11 */</div><div class="line">#define GPIO_IDR_IDR12                       ((uint16_t)0x1000)            /*!&lt; Port input data, bit 12 */</div><div class="line">#define GPIO_IDR_IDR13                       ((uint16_t)0x2000)            /*!&lt; Port input data, bit 13 */</div><div class="line">#define GPIO_IDR_IDR14                       ((uint16_t)0x4000)            /*!&lt; Port input data, bit 14 */</div><div class="line">#define GPIO_IDR_IDR15                       ((uint16_t)0x8000)            /*!&lt; Port input data, bit 15 */</div><div class="line"></div><div class="line">/*******************  Bit definition for GPIO_ODR register  *******************/</div><div class="line">#define GPIO_ODR_ODR0                        ((uint16_t)0x0001)            /*!&lt; Port output data, bit 0 */</div><div class="line">#define GPIO_ODR_ODR1                        ((uint16_t)0x0002)            /*!&lt; Port output data, bit 1 */</div><div class="line">#define GPIO_ODR_ODR2                        ((uint16_t)0x0004)            /*!&lt; Port output data, bit 2 */</div><div class="line">#define GPIO_ODR_ODR3                        ((uint16_t)0x0008)            /*!&lt; Port output data, bit 3 */</div><div class="line">#define GPIO_ODR_ODR4                        ((uint16_t)0x0010)            /*!&lt; Port output data, bit 4 */</div><div class="line">#define GPIO_ODR_ODR5                        ((uint16_t)0x0020)            /*!&lt; Port output data, bit 5 */</div><div class="line">#define GPIO_ODR_ODR6                        ((uint16_t)0x0040)            /*!&lt; Port output data, bit 6 */</div><div class="line">#define GPIO_ODR_ODR7                        ((uint16_t)0x0080)            /*!&lt; Port output data, bit 7 */</div><div class="line">#define GPIO_ODR_ODR8                        ((uint16_t)0x0100)            /*!&lt; Port output data, bit 8 */</div><div class="line">#define GPIO_ODR_ODR9                        ((uint16_t)0x0200)            /*!&lt; Port output data, bit 9 */</div><div class="line">#define GPIO_ODR_ODR10                       ((uint16_t)0x0400)            /*!&lt; Port output data, bit 10 */</div><div class="line">#define GPIO_ODR_ODR11                       ((uint16_t)0x0800)            /*!&lt; Port output data, bit 11 */</div><div class="line">#define GPIO_ODR_ODR12                       ((uint16_t)0x1000)            /*!&lt; Port output data, bit 12 */</div><div class="line">#define GPIO_ODR_ODR13                       ((uint16_t)0x2000)            /*!&lt; Port output data, bit 13 */</div><div class="line">#define GPIO_ODR_ODR14                       ((uint16_t)0x4000)            /*!&lt; Port output data, bit 14 */</div><div class="line">#define GPIO_ODR_ODR15                       ((uint16_t)0x8000)            /*!&lt; Port output data, bit 15 */</div><div class="line"></div><div class="line">/******************  Bit definition for GPIO_BSRR register  *******************/</div><div class="line">#define GPIO_BSRR_BS0                        ((uint32_t)0x00000001)        /*!&lt; Port x Set bit 0 */</div><div class="line">#define GPIO_BSRR_BS1                        ((uint32_t)0x00000002)        /*!&lt; Port x Set bit 1 */</div><div class="line">#define GPIO_BSRR_BS2                        ((uint32_t)0x00000004)        /*!&lt; Port x Set bit 2 */</div><div class="line">#define GPIO_BSRR_BS3                        ((uint32_t)0x00000008)        /*!&lt; Port x Set bit 3 */</div><div class="line">#define GPIO_BSRR_BS4                        ((uint32_t)0x00000010)        /*!&lt; Port x Set bit 4 */</div><div class="line">#define GPIO_BSRR_BS5                        ((uint32_t)0x00000020)        /*!&lt; Port x Set bit 5 */</div><div class="line">#define GPIO_BSRR_BS6                        ((uint32_t)0x00000040)        /*!&lt; Port x Set bit 6 */</div><div class="line">#define GPIO_BSRR_BS7                        ((uint32_t)0x00000080)        /*!&lt; Port x Set bit 7 */</div><div class="line">#define GPIO_BSRR_BS8                        ((uint32_t)0x00000100)        /*!&lt; Port x Set bit 8 */</div><div class="line">#define GPIO_BSRR_BS9                        ((uint32_t)0x00000200)        /*!&lt; Port x Set bit 9 */</div><div class="line">#define GPIO_BSRR_BS10                       ((uint32_t)0x00000400)        /*!&lt; Port x Set bit 10 */</div><div class="line">#define GPIO_BSRR_BS11                       ((uint32_t)0x00000800)        /*!&lt; Port x Set bit 11 */</div><div class="line">#define GPIO_BSRR_BS12                       ((uint32_t)0x00001000)        /*!&lt; Port x Set bit 12 */</div><div class="line">#define GPIO_BSRR_BS13                       ((uint32_t)0x00002000)        /*!&lt; Port x Set bit 13 */</div><div class="line">#define GPIO_BSRR_BS14                       ((uint32_t)0x00004000)        /*!&lt; Port x Set bit 14 */</div><div class="line">#define GPIO_BSRR_BS15                       ((uint32_t)0x00008000)        /*!&lt; Port x Set bit 15 */</div><div class="line"></div><div class="line">#define GPIO_BSRR_BR0                        ((uint32_t)0x00010000)        /*!&lt; Port x Reset bit 0 */</div><div class="line">#define GPIO_BSRR_BR1                        ((uint32_t)0x00020000)        /*!&lt; Port x Reset bit 1 */</div><div class="line">#define GPIO_BSRR_BR2                        ((uint32_t)0x00040000)        /*!&lt; Port x Reset bit 2 */</div><div class="line">#define GPIO_BSRR_BR3                        ((uint32_t)0x00080000)        /*!&lt; Port x Reset bit 3 */</div><div class="line">#define GPIO_BSRR_BR4                        ((uint32_t)0x00100000)        /*!&lt; Port x Reset bit 4 */</div><div class="line">#define GPIO_BSRR_BR5                        ((uint32_t)0x00200000)        /*!&lt; Port x Reset bit 5 */</div><div class="line">#define GPIO_BSRR_BR6                        ((uint32_t)0x00400000)        /*!&lt; Port x Reset bit 6 */</div><div class="line">#define GPIO_BSRR_BR7                        ((uint32_t)0x00800000)        /*!&lt; Port x Reset bit 7 */</div><div class="line">#define GPIO_BSRR_BR8                        ((uint32_t)0x01000000)        /*!&lt; Port x Reset bit 8 */</div><div class="line">#define GPIO_BSRR_BR9                        ((uint32_t)0x02000000)        /*!&lt; Port x Reset bit 9 */</div><div class="line">#define GPIO_BSRR_BR10                       ((uint32_t)0x04000000)        /*!&lt; Port x Reset bit 10 */</div><div class="line">#define GPIO_BSRR_BR11                       ((uint32_t)0x08000000)        /*!&lt; Port x Reset bit 11 */</div><div class="line">#define GPIO_BSRR_BR12                       ((uint32_t)0x10000000)        /*!&lt; Port x Reset bit 12 */</div><div class="line">#define GPIO_BSRR_BR13                       ((uint32_t)0x20000000)        /*!&lt; Port x Reset bit 13 */</div><div class="line">#define GPIO_BSRR_BR14                       ((uint32_t)0x40000000)        /*!&lt; Port x Reset bit 14 */</div><div class="line">#define GPIO_BSRR_BR15                       ((uint32_t)0x80000000)        /*!&lt; Port x Reset bit 15 */</div><div class="line"></div><div class="line">/*******************  Bit definition for GPIO_BRR register  *******************/</div><div class="line">#define GPIO_BRR_BR0                         ((uint16_t)0x0001)            /*!&lt; Port x Reset bit 0 */</div><div class="line">#define GPIO_BRR_BR1                         ((uint16_t)0x0002)            /*!&lt; Port x Reset bit 1 */</div><div class="line">#define GPIO_BRR_BR2                         ((uint16_t)0x0004)            /*!&lt; Port x Reset bit 2 */</div><div class="line">#define GPIO_BRR_BR3                         ((uint16_t)0x0008)            /*!&lt; Port x Reset bit 3 */</div><div class="line">#define GPIO_BRR_BR4                         ((uint16_t)0x0010)            /*!&lt; Port x Reset bit 4 */</div><div class="line">#define GPIO_BRR_BR5                         ((uint16_t)0x0020)            /*!&lt; Port x Reset bit 5 */</div><div class="line">#define GPIO_BRR_BR6                         ((uint16_t)0x0040)            /*!&lt; Port x Reset bit 6 */</div><div class="line">#define GPIO_BRR_BR7                         ((uint16_t)0x0080)            /*!&lt; Port x Reset bit 7 */</div><div class="line">#define GPIO_BRR_BR8                         ((uint16_t)0x0100)            /*!&lt; Port x Reset bit 8 */</div><div class="line">#define GPIO_BRR_BR9                         ((uint16_t)0x0200)            /*!&lt; Port x Reset bit 9 */</div><div class="line">#define GPIO_BRR_BR10                        ((uint16_t)0x0400)            /*!&lt; Port x Reset bit 10 */</div><div class="line">#define GPIO_BRR_BR11                        ((uint16_t)0x0800)            /*!&lt; Port x Reset bit 11 */</div><div class="line">#define GPIO_BRR_BR12                        ((uint16_t)0x1000)            /*!&lt; Port x Reset bit 12 */</div><div class="line">#define GPIO_BRR_BR13                        ((uint16_t)0x2000)            /*!&lt; Port x Reset bit 13 */</div><div class="line">#define GPIO_BRR_BR14                        ((uint16_t)0x4000)            /*!&lt; Port x Reset bit 14 */</div><div class="line">#define GPIO_BRR_BR15                        ((uint16_t)0x8000)            /*!&lt; Port x Reset bit 15 */</div><div class="line"></div><div class="line">/******************  Bit definition for GPIO_LCKR register  *******************/</div><div class="line">#define GPIO_LCKR_LCK0                       ((uint32_t)0x00000001)        /*!&lt; Port x Lock bit 0 */</div><div class="line">#define GPIO_LCKR_LCK1                       ((uint32_t)0x00000002)        /*!&lt; Port x Lock bit 1 */</div><div class="line">#define GPIO_LCKR_LCK2                       ((uint32_t)0x00000004)        /*!&lt; Port x Lock bit 2 */</div><div class="line">#define GPIO_LCKR_LCK3                       ((uint32_t)0x00000008)        /*!&lt; Port x Lock bit 3 */</div><div class="line">#define GPIO_LCKR_LCK4                       ((uint32_t)0x00000010)        /*!&lt; Port x Lock bit 4 */</div><div class="line">#define GPIO_LCKR_LCK5                       ((uint32_t)0x00000020)        /*!&lt; Port x Lock bit 5 */</div><div class="line">#define GPIO_LCKR_LCK6                       ((uint32_t)0x00000040)        /*!&lt; Port x Lock bit 6 */</div><div class="line">#define GPIO_LCKR_LCK7                       ((uint32_t)0x00000080)        /*!&lt; Port x Lock bit 7 */</div><div class="line">#define GPIO_LCKR_LCK8                       ((uint32_t)0x00000100)        /*!&lt; Port x Lock bit 8 */</div><div class="line">#define GPIO_LCKR_LCK9                       ((uint32_t)0x00000200)        /*!&lt; Port x Lock bit 9 */</div><div class="line">#define GPIO_LCKR_LCK10                      ((uint32_t)0x00000400)        /*!&lt; Port x Lock bit 10 */</div><div class="line">#define GPIO_LCKR_LCK11                      ((uint32_t)0x00000800)        /*!&lt; Port x Lock bit 11 */</div><div class="line">#define GPIO_LCKR_LCK12                      ((uint32_t)0x00001000)        /*!&lt; Port x Lock bit 12 */</div><div class="line">#define GPIO_LCKR_LCK13                      ((uint32_t)0x00002000)        /*!&lt; Port x Lock bit 13 */</div><div class="line">#define GPIO_LCKR_LCK14                      ((uint32_t)0x00004000)        /*!&lt; Port x Lock bit 14 */</div><div class="line">#define GPIO_LCKR_LCK15                      ((uint32_t)0x00008000)        /*!&lt; Port x Lock bit 15 */</div><div class="line">#define GPIO_LCKR_LCKK                       ((uint32_t)0x00010000)        /*!&lt; Lock key */</div><div class="line"></div><div class="line">/*----------------------------------------------------------------------------*/</div><div class="line"></div><div class="line">/******************  Bit definition for AFIO_EVCR register  *******************/</div><div class="line">#define AFIO_EVCR_PIN                        ((uint8_t)0x0F)               /*!&lt; PIN[3:0] bits (Pin selection) */</div><div class="line">#define AFIO_EVCR_PIN_0                      ((uint8_t)0x01)               /*!&lt; Bit 0 */</div><div class="line">#define AFIO_EVCR_PIN_1                      ((uint8_t)0x02)               /*!&lt; Bit 1 */</div><div class="line">#define AFIO_EVCR_PIN_2                      ((uint8_t)0x04)               /*!&lt; Bit 2 */</div><div class="line">#define AFIO_EVCR_PIN_3                      ((uint8_t)0x08)               /*!&lt; Bit 3 */</div><div class="line"></div><div class="line">/*!&lt; PIN configuration */</div><div class="line">#define AFIO_EVCR_PIN_PX0                    ((uint8_t)0x00)               /*!&lt; Pin 0 selected */</div><div class="line">#define AFIO_EVCR_PIN_PX1                    ((uint8_t)0x01)               /*!&lt; Pin 1 selected */</div><div class="line">#define AFIO_EVCR_PIN_PX2                    ((uint8_t)0x02)               /*!&lt; Pin 2 selected */</div><div class="line">#define AFIO_EVCR_PIN_PX3                    ((uint8_t)0x03)               /*!&lt; Pin 3 selected */</div><div class="line">#define AFIO_EVCR_PIN_PX4                    ((uint8_t)0x04)               /*!&lt; Pin 4 selected */</div><div class="line">#define AFIO_EVCR_PIN_PX5                    ((uint8_t)0x05)               /*!&lt; Pin 5 selected */</div><div class="line">#define AFIO_EVCR_PIN_PX6                    ((uint8_t)0x06)               /*!&lt; Pin 6 selected */</div><div class="line">#define AFIO_EVCR_PIN_PX7                    ((uint8_t)0x07)               /*!&lt; Pin 7 selected */</div><div class="line">#define AFIO_EVCR_PIN_PX8                    ((uint8_t)0x08)               /*!&lt; Pin 8 selected */</div><div class="line">#define AFIO_EVCR_PIN_PX9                    ((uint8_t)0x09)               /*!&lt; Pin 9 selected */</div><div class="line">#define AFIO_EVCR_PIN_PX10                   ((uint8_t)0x0A)               /*!&lt; Pin 10 selected */</div><div class="line">#define AFIO_EVCR_PIN_PX11                   ((uint8_t)0x0B)               /*!&lt; Pin 11 selected */</div><div class="line">#define AFIO_EVCR_PIN_PX12                   ((uint8_t)0x0C)               /*!&lt; Pin 12 selected */</div><div class="line">#define AFIO_EVCR_PIN_PX13                   ((uint8_t)0x0D)               /*!&lt; Pin 13 selected */</div><div class="line">#define AFIO_EVCR_PIN_PX14                   ((uint8_t)0x0E)               /*!&lt; Pin 14 selected */</div><div class="line">#define AFIO_EVCR_PIN_PX15                   ((uint8_t)0x0F)               /*!&lt; Pin 15 selected */</div><div class="line"></div><div class="line">#define AFIO_EVCR_PORT                       ((uint8_t)0x70)               /*!&lt; PORT[2:0] bits (Port selection) */</div><div class="line">#define AFIO_EVCR_PORT_0                     ((uint8_t)0x10)               /*!&lt; Bit 0 */</div><div class="line">#define AFIO_EVCR_PORT_1                     ((uint8_t)0x20)               /*!&lt; Bit 1 */</div><div class="line">#define AFIO_EVCR_PORT_2                     ((uint8_t)0x40)               /*!&lt; Bit 2 */</div><div class="line"></div><div class="line">/*!&lt; PORT configuration */</div><div class="line">#define AFIO_EVCR_PORT_PA                    ((uint8_t)0x00)               /*!&lt; Port A selected */</div><div class="line">#define AFIO_EVCR_PORT_PB                    ((uint8_t)0x10)               /*!&lt; Port B selected */</div><div class="line">#define AFIO_EVCR_PORT_PC                    ((uint8_t)0x20)               /*!&lt; Port C selected */</div><div class="line">#define AFIO_EVCR_PORT_PD                    ((uint8_t)0x30)               /*!&lt; Port D selected */</div><div class="line">#define AFIO_EVCR_PORT_PE                    ((uint8_t)0x40)               /*!&lt; Port E selected */</div><div class="line"></div><div class="line">#define AFIO_EVCR_EVOE                       ((uint8_t)0x80)               /*!&lt; Event Output Enable */</div><div class="line"></div><div class="line">/******************  Bit definition for AFIO_MAPR register  *******************/</div><div class="line">#define AFIO_MAPR_SPI1_REMAP                 ((uint32_t)0x00000001)        /*!&lt; SPI1 remapping */</div><div class="line">#define AFIO_MAPR_I2C1_REMAP                 ((uint32_t)0x00000002)        /*!&lt; I2C1 remapping */</div><div class="line">#define AFIO_MAPR_USART1_REMAP               ((uint32_t)0x00000004)        /*!&lt; USART1 remapping */</div><div class="line">#define AFIO_MAPR_USART2_REMAP               ((uint32_t)0x00000008)        /*!&lt; USART2 remapping */</div><div class="line"></div><div class="line">#define AFIO_MAPR_USART3_REMAP               ((uint32_t)0x00000030)        /*!&lt; USART3_REMAP[1:0] bits (USART3 remapping) */</div><div class="line">#define AFIO_MAPR_USART3_REMAP_0             ((uint32_t)0x00000010)        /*!&lt; Bit 0 */</div><div class="line">#define AFIO_MAPR_USART3_REMAP_1             ((uint32_t)0x00000020)        /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">/* USART3_REMAP configuration */</div><div class="line">#define AFIO_MAPR_USART3_REMAP_NOREMAP       ((uint32_t)0x00000000)        /*!&lt; No remap (TX/PB10, RX/PB11, CK/PB12, CTS/PB13, RTS/PB14) */</div><div class="line">#define AFIO_MAPR_USART3_REMAP_PARTIALREMAP  ((uint32_t)0x00000010)        /*!&lt; Partial remap (TX/PC10, RX/PC11, CK/PC12, CTS/PB13, RTS/PB14) */</div><div class="line">#define AFIO_MAPR_USART3_REMAP_FULLREMAP     ((uint32_t)0x00000030)        /*!&lt; Full remap (TX/PD8, RX/PD9, CK/PD10, CTS/PD11, RTS/PD12) */</div><div class="line"></div><div class="line">#define AFIO_MAPR_TIM1_REMAP                 ((uint32_t)0x000000C0)        /*!&lt; TIM1_REMAP[1:0] bits (TIM1 remapping) */</div><div class="line">#define AFIO_MAPR_TIM1_REMAP_0               ((uint32_t)0x00000040)        /*!&lt; Bit 0 */</div><div class="line">#define AFIO_MAPR_TIM1_REMAP_1               ((uint32_t)0x00000080)        /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">/*!&lt; TIM1_REMAP configuration */</div><div class="line">#define AFIO_MAPR_TIM1_REMAP_NOREMAP         ((uint32_t)0x00000000)        /*!&lt; No remap (ETR/PA12, CH1/PA8, CH2/PA9, CH3/PA10, CH4/PA11, BKIN/PB12, CH1N/PB13, CH2N/PB14, CH3N/PB15) */</div><div class="line">#define AFIO_MAPR_TIM1_REMAP_PARTIALREMAP    ((uint32_t)0x00000040)        /*!&lt; Partial remap (ETR/PA12, CH1/PA8, CH2/PA9, CH3/PA10, CH4/PA11, BKIN/PA6, CH1N/PA7, CH2N/PB0, CH3N/PB1) */</div><div class="line">#define AFIO_MAPR_TIM1_REMAP_FULLREMAP       ((uint32_t)0x000000C0)        /*!&lt; Full remap (ETR/PE7, CH1/PE9, CH2/PE11, CH3/PE13, CH4/PE14, BKIN/PE15, CH1N/PE8, CH2N/PE10, CH3N/PE12) */</div><div class="line"></div><div class="line">#define AFIO_MAPR_TIM2_REMAP                 ((uint32_t)0x00000300)        /*!&lt; TIM2_REMAP[1:0] bits (TIM2 remapping) */</div><div class="line">#define AFIO_MAPR_TIM2_REMAP_0               ((uint32_t)0x00000100)        /*!&lt; Bit 0 */</div><div class="line">#define AFIO_MAPR_TIM2_REMAP_1               ((uint32_t)0x00000200)        /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">/*!&lt; TIM2_REMAP configuration */</div><div class="line">#define AFIO_MAPR_TIM2_REMAP_NOREMAP         ((uint32_t)0x00000000)        /*!&lt; No remap (CH1/ETR/PA0, CH2/PA1, CH3/PA2, CH4/PA3) */</div><div class="line">#define AFIO_MAPR_TIM2_REMAP_PARTIALREMAP1   ((uint32_t)0x00000100)        /*!&lt; Partial remap (CH1/ETR/PA15, CH2/PB3, CH3/PA2, CH4/PA3) */</div><div class="line">#define AFIO_MAPR_TIM2_REMAP_PARTIALREMAP2   ((uint32_t)0x00000200)        /*!&lt; Partial remap (CH1/ETR/PA0, CH2/PA1, CH3/PB10, CH4/PB11) */</div><div class="line">#define AFIO_MAPR_TIM2_REMAP_FULLREMAP       ((uint32_t)0x00000300)        /*!&lt; Full remap (CH1/ETR/PA15, CH2/PB3, CH3/PB10, CH4/PB11) */</div><div class="line"></div><div class="line">#define AFIO_MAPR_TIM3_REMAP                 ((uint32_t)0x00000C00)        /*!&lt; TIM3_REMAP[1:0] bits (TIM3 remapping) */</div><div class="line">#define AFIO_MAPR_TIM3_REMAP_0               ((uint32_t)0x00000400)        /*!&lt; Bit 0 */</div><div class="line">#define AFIO_MAPR_TIM3_REMAP_1               ((uint32_t)0x00000800)        /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">/*!&lt; TIM3_REMAP configuration */</div><div class="line">#define AFIO_MAPR_TIM3_REMAP_NOREMAP         ((uint32_t)0x00000000)        /*!&lt; No remap (CH1/PA6, CH2/PA7, CH3/PB0, CH4/PB1) */</div><div class="line">#define AFIO_MAPR_TIM3_REMAP_PARTIALREMAP    ((uint32_t)0x00000800)        /*!&lt; Partial remap (CH1/PB4, CH2/PB5, CH3/PB0, CH4/PB1) */</div><div class="line">#define AFIO_MAPR_TIM3_REMAP_FULLREMAP       ((uint32_t)0x00000C00)        /*!&lt; Full remap (CH1/PC6, CH2/PC7, CH3/PC8, CH4/PC9) */</div><div class="line"></div><div class="line">#define AFIO_MAPR_TIM4_REMAP                 ((uint32_t)0x00001000)        /*!&lt; TIM4_REMAP bit (TIM4 remapping) */</div><div class="line"></div><div class="line">#define AFIO_MAPR_CAN_REMAP                  ((uint32_t)0x00006000)        /*!&lt; CAN_REMAP[1:0] bits (CAN Alternate function remapping) */</div><div class="line">#define AFIO_MAPR_CAN_REMAP_0                ((uint32_t)0x00002000)        /*!&lt; Bit 0 */</div><div class="line">#define AFIO_MAPR_CAN_REMAP_1                ((uint32_t)0x00004000)        /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">/*!&lt; CAN_REMAP configuration */</div><div class="line">#define AFIO_MAPR_CAN_REMAP_REMAP1           ((uint32_t)0x00000000)        /*!&lt; CANRX mapped to PA11, CANTX mapped to PA12 */</div><div class="line">#define AFIO_MAPR_CAN_REMAP_REMAP2           ((uint32_t)0x00004000)        /*!&lt; CANRX mapped to PB8, CANTX mapped to PB9 */</div><div class="line">#define AFIO_MAPR_CAN_REMAP_REMAP3           ((uint32_t)0x00006000)        /*!&lt; CANRX mapped to PD0, CANTX mapped to PD1 */</div><div class="line"></div><div class="line">#define AFIO_MAPR_PD01_REMAP                 ((uint32_t)0x00008000)        /*!&lt; Port D0/Port D1 mapping on OSC_IN/OSC_OUT */</div><div class="line">#define AFIO_MAPR_TIM5CH4_IREMAP             ((uint32_t)0x00010000)        /*!&lt; TIM5 Channel4 Internal Remap */</div><div class="line">#define AFIO_MAPR_ADC1_ETRGINJ_REMAP         ((uint32_t)0x00020000)        /*!&lt; ADC 1 External Trigger Injected Conversion remapping */</div><div class="line">#define AFIO_MAPR_ADC1_ETRGREG_REMAP         ((uint32_t)0x00040000)        /*!&lt; ADC 1 External Trigger Regular Conversion remapping */</div><div class="line">#define AFIO_MAPR_ADC2_ETRGINJ_REMAP         ((uint32_t)0x00080000)        /*!&lt; ADC 2 External Trigger Injected Conversion remapping */</div><div class="line">#define AFIO_MAPR_ADC2_ETRGREG_REMAP         ((uint32_t)0x00100000)        /*!&lt; ADC 2 External Trigger Regular Conversion remapping */</div><div class="line"></div><div class="line">/*!&lt; SWJ_CFG configuration */</div><div class="line">#define AFIO_MAPR_SWJ_CFG                    ((uint32_t)0x07000000)        /*!&lt; SWJ_CFG[2:0] bits (Serial Wire JTAG configuration) */</div><div class="line">#define AFIO_MAPR_SWJ_CFG_0                  ((uint32_t)0x01000000)        /*!&lt; Bit 0 */</div><div class="line">#define AFIO_MAPR_SWJ_CFG_1                  ((uint32_t)0x02000000)        /*!&lt; Bit 1 */</div><div class="line">#define AFIO_MAPR_SWJ_CFG_2                  ((uint32_t)0x04000000)        /*!&lt; Bit 2 */</div><div class="line"></div><div class="line">#define AFIO_MAPR_SWJ_CFG_RESET              ((uint32_t)0x00000000)        /*!&lt; Full SWJ (JTAG-DP + SW-DP) : Reset State */</div><div class="line">#define AFIO_MAPR_SWJ_CFG_NOJNTRST           ((uint32_t)0x01000000)        /*!&lt; Full SWJ (JTAG-DP + SW-DP) but without JNTRST */</div><div class="line">#define AFIO_MAPR_SWJ_CFG_JTAGDISABLE        ((uint32_t)0x02000000)        /*!&lt; JTAG-DP Disabled and SW-DP Enabled */</div><div class="line">#define AFIO_MAPR_SWJ_CFG_DISABLE            ((uint32_t)0x04000000)        /*!&lt; JTAG-DP Disabled and SW-DP Disabled */</div><div class="line"></div><div class="line">#ifdef STM32F10X_CL</div><div class="line">/*!&lt; ETH_REMAP configuration */</div><div class="line"> #define AFIO_MAPR_ETH_REMAP                  ((uint32_t)0x00200000)        /*!&lt; SPI3_REMAP bit (Ethernet MAC I/O remapping) */</div><div class="line"></div><div class="line">/*!&lt; CAN2_REMAP configuration */</div><div class="line"> #define AFIO_MAPR_CAN2_REMAP                 ((uint32_t)0x00400000)        /*!&lt; CAN2_REMAP bit (CAN2 I/O remapping) */</div><div class="line"></div><div class="line">/*!&lt; MII_RMII_SEL configuration */</div><div class="line"> #define AFIO_MAPR_MII_RMII_SEL               ((uint32_t)0x00800000)        /*!&lt; MII_RMII_SEL bit (Ethernet MII or RMII selection) */</div><div class="line"></div><div class="line">/*!&lt; SPI3_REMAP configuration */</div><div class="line"> #define AFIO_MAPR_SPI3_REMAP                 ((uint32_t)0x10000000)        /*!&lt; SPI3_REMAP bit (SPI3 remapping) */</div><div class="line"></div><div class="line">/*!&lt; TIM2ITR1_IREMAP configuration */</div><div class="line"> #define AFIO_MAPR_TIM2ITR1_IREMAP            ((uint32_t)0x20000000)        /*!&lt; TIM2ITR1_IREMAP bit (TIM2 internal trigger 1 remapping) */</div><div class="line"></div><div class="line">/*!&lt; PTP_PPS_REMAP configuration */</div><div class="line"> #define AFIO_MAPR_PTP_PPS_REMAP              ((uint32_t)0x40000000)        /*!&lt; PTP_PPS_REMAP bit (Ethernet PTP PPS remapping) */</div><div class="line">#endif</div><div class="line"></div><div class="line">/*****************  Bit definition for AFIO_EXTICR1 register  *****************/</div><div class="line">#define AFIO_EXTICR1_EXTI0                   ((uint16_t)0x000F)            /*!&lt; EXTI 0 configuration */</div><div class="line">#define AFIO_EXTICR1_EXTI1                   ((uint16_t)0x00F0)            /*!&lt; EXTI 1 configuration */</div><div class="line">#define AFIO_EXTICR1_EXTI2                   ((uint16_t)0x0F00)            /*!&lt; EXTI 2 configuration */</div><div class="line">#define AFIO_EXTICR1_EXTI3                   ((uint16_t)0xF000)            /*!&lt; EXTI 3 configuration */</div><div class="line"></div><div class="line">/*!&lt; EXTI0 configuration */</div><div class="line">#define AFIO_EXTICR1_EXTI0_PA                ((uint16_t)0x0000)            /*!&lt; PA[0] pin */</div><div class="line">#define AFIO_EXTICR1_EXTI0_PB                ((uint16_t)0x0001)            /*!&lt; PB[0] pin */</div><div class="line">#define AFIO_EXTICR1_EXTI0_PC                ((uint16_t)0x0002)            /*!&lt; PC[0] pin */</div><div class="line">#define AFIO_EXTICR1_EXTI0_PD                ((uint16_t)0x0003)            /*!&lt; PD[0] pin */</div><div class="line">#define AFIO_EXTICR1_EXTI0_PE                ((uint16_t)0x0004)            /*!&lt; PE[0] pin */</div><div class="line">#define AFIO_EXTICR1_EXTI0_PF                ((uint16_t)0x0005)            /*!&lt; PF[0] pin */</div><div class="line">#define AFIO_EXTICR1_EXTI0_PG                ((uint16_t)0x0006)            /*!&lt; PG[0] pin */</div><div class="line"></div><div class="line">/*!&lt; EXTI1 configuration */</div><div class="line">#define AFIO_EXTICR1_EXTI1_PA                ((uint16_t)0x0000)            /*!&lt; PA[1] pin */</div><div class="line">#define AFIO_EXTICR1_EXTI1_PB                ((uint16_t)0x0010)            /*!&lt; PB[1] pin */</div><div class="line">#define AFIO_EXTICR1_EXTI1_PC                ((uint16_t)0x0020)            /*!&lt; PC[1] pin */</div><div class="line">#define AFIO_EXTICR1_EXTI1_PD                ((uint16_t)0x0030)            /*!&lt; PD[1] pin */</div><div class="line">#define AFIO_EXTICR1_EXTI1_PE                ((uint16_t)0x0040)            /*!&lt; PE[1] pin */</div><div class="line">#define AFIO_EXTICR1_EXTI1_PF                ((uint16_t)0x0050)            /*!&lt; PF[1] pin */</div><div class="line">#define AFIO_EXTICR1_EXTI1_PG                ((uint16_t)0x0060)            /*!&lt; PG[1] pin */</div><div class="line"></div><div class="line">/*!&lt; EXTI2 configuration */  </div><div class="line">#define AFIO_EXTICR1_EXTI2_PA                ((uint16_t)0x0000)            /*!&lt; PA[2] pin */</div><div class="line">#define AFIO_EXTICR1_EXTI2_PB                ((uint16_t)0x0100)            /*!&lt; PB[2] pin */</div><div class="line">#define AFIO_EXTICR1_EXTI2_PC                ((uint16_t)0x0200)            /*!&lt; PC[2] pin */</div><div class="line">#define AFIO_EXTICR1_EXTI2_PD                ((uint16_t)0x0300)            /*!&lt; PD[2] pin */</div><div class="line">#define AFIO_EXTICR1_EXTI2_PE                ((uint16_t)0x0400)            /*!&lt; PE[2] pin */</div><div class="line">#define AFIO_EXTICR1_EXTI2_PF                ((uint16_t)0x0500)            /*!&lt; PF[2] pin */</div><div class="line">#define AFIO_EXTICR1_EXTI2_PG                ((uint16_t)0x0600)            /*!&lt; PG[2] pin */</div><div class="line"></div><div class="line">/*!&lt; EXTI3 configuration */</div><div class="line">#define AFIO_EXTICR1_EXTI3_PA                ((uint16_t)0x0000)            /*!&lt; PA[3] pin */</div><div class="line">#define AFIO_EXTICR1_EXTI3_PB                ((uint16_t)0x1000)            /*!&lt; PB[3] pin */</div><div class="line">#define AFIO_EXTICR1_EXTI3_PC                ((uint16_t)0x2000)            /*!&lt; PC[3] pin */</div><div class="line">#define AFIO_EXTICR1_EXTI3_PD                ((uint16_t)0x3000)            /*!&lt; PD[3] pin */</div><div class="line">#define AFIO_EXTICR1_EXTI3_PE                ((uint16_t)0x4000)            /*!&lt; PE[3] pin */</div><div class="line">#define AFIO_EXTICR1_EXTI3_PF                ((uint16_t)0x5000)            /*!&lt; PF[3] pin */</div><div class="line">#define AFIO_EXTICR1_EXTI3_PG                ((uint16_t)0x6000)            /*!&lt; PG[3] pin */</div><div class="line"></div><div class="line">/*****************  Bit definition for AFIO_EXTICR2 register  *****************/</div><div class="line">#define AFIO_EXTICR2_EXTI4                   ((uint16_t)0x000F)            /*!&lt; EXTI 4 configuration */</div><div class="line">#define AFIO_EXTICR2_EXTI5                   ((uint16_t)0x00F0)            /*!&lt; EXTI 5 configuration */</div><div class="line">#define AFIO_EXTICR2_EXTI6                   ((uint16_t)0x0F00)            /*!&lt; EXTI 6 configuration */</div><div class="line">#define AFIO_EXTICR2_EXTI7                   ((uint16_t)0xF000)            /*!&lt; EXTI 7 configuration */</div><div class="line"></div><div class="line">/*!&lt; EXTI4 configuration */</div><div class="line">#define AFIO_EXTICR2_EXTI4_PA                ((uint16_t)0x0000)            /*!&lt; PA[4] pin */</div><div class="line">#define AFIO_EXTICR2_EXTI4_PB                ((uint16_t)0x0001)            /*!&lt; PB[4] pin */</div><div class="line">#define AFIO_EXTICR2_EXTI4_PC                ((uint16_t)0x0002)            /*!&lt; PC[4] pin */</div><div class="line">#define AFIO_EXTICR2_EXTI4_PD                ((uint16_t)0x0003)            /*!&lt; PD[4] pin */</div><div class="line">#define AFIO_EXTICR2_EXTI4_PE                ((uint16_t)0x0004)            /*!&lt; PE[4] pin */</div><div class="line">#define AFIO_EXTICR2_EXTI4_PF                ((uint16_t)0x0005)            /*!&lt; PF[4] pin */</div><div class="line">#define AFIO_EXTICR2_EXTI4_PG                ((uint16_t)0x0006)            /*!&lt; PG[4] pin */</div><div class="line"></div><div class="line">/* EXTI5 configuration */</div><div class="line">#define AFIO_EXTICR2_EXTI5_PA                ((uint16_t)0x0000)            /*!&lt; PA[5] pin */</div><div class="line">#define AFIO_EXTICR2_EXTI5_PB                ((uint16_t)0x0010)            /*!&lt; PB[5] pin */</div><div class="line">#define AFIO_EXTICR2_EXTI5_PC                ((uint16_t)0x0020)            /*!&lt; PC[5] pin */</div><div class="line">#define AFIO_EXTICR2_EXTI5_PD                ((uint16_t)0x0030)            /*!&lt; PD[5] pin */</div><div class="line">#define AFIO_EXTICR2_EXTI5_PE                ((uint16_t)0x0040)            /*!&lt; PE[5] pin */</div><div class="line">#define AFIO_EXTICR2_EXTI5_PF                ((uint16_t)0x0050)            /*!&lt; PF[5] pin */</div><div class="line">#define AFIO_EXTICR2_EXTI5_PG                ((uint16_t)0x0060)            /*!&lt; PG[5] pin */</div><div class="line"></div><div class="line">/*!&lt; EXTI6 configuration */  </div><div class="line">#define AFIO_EXTICR2_EXTI6_PA                ((uint16_t)0x0000)            /*!&lt; PA[6] pin */</div><div class="line">#define AFIO_EXTICR2_EXTI6_PB                ((uint16_t)0x0100)            /*!&lt; PB[6] pin */</div><div class="line">#define AFIO_EXTICR2_EXTI6_PC                ((uint16_t)0x0200)            /*!&lt; PC[6] pin */</div><div class="line">#define AFIO_EXTICR2_EXTI6_PD                ((uint16_t)0x0300)            /*!&lt; PD[6] pin */</div><div class="line">#define AFIO_EXTICR2_EXTI6_PE                ((uint16_t)0x0400)            /*!&lt; PE[6] pin */</div><div class="line">#define AFIO_EXTICR2_EXTI6_PF                ((uint16_t)0x0500)            /*!&lt; PF[6] pin */</div><div class="line">#define AFIO_EXTICR2_EXTI6_PG                ((uint16_t)0x0600)            /*!&lt; PG[6] pin */</div><div class="line"></div><div class="line">/*!&lt; EXTI7 configuration */</div><div class="line">#define AFIO_EXTICR2_EXTI7_PA                ((uint16_t)0x0000)            /*!&lt; PA[7] pin */</div><div class="line">#define AFIO_EXTICR2_EXTI7_PB                ((uint16_t)0x1000)            /*!&lt; PB[7] pin */</div><div class="line">#define AFIO_EXTICR2_EXTI7_PC                ((uint16_t)0x2000)            /*!&lt; PC[7] pin */</div><div class="line">#define AFIO_EXTICR2_EXTI7_PD                ((uint16_t)0x3000)            /*!&lt; PD[7] pin */</div><div class="line">#define AFIO_EXTICR2_EXTI7_PE                ((uint16_t)0x4000)            /*!&lt; PE[7] pin */</div><div class="line">#define AFIO_EXTICR2_EXTI7_PF                ((uint16_t)0x5000)            /*!&lt; PF[7] pin */</div><div class="line">#define AFIO_EXTICR2_EXTI7_PG                ((uint16_t)0x6000)            /*!&lt; PG[7] pin */</div><div class="line"></div><div class="line">/*****************  Bit definition for AFIO_EXTICR3 register  *****************/</div><div class="line">#define AFIO_EXTICR3_EXTI8                   ((uint16_t)0x000F)            /*!&lt; EXTI 8 configuration */</div><div class="line">#define AFIO_EXTICR3_EXTI9                   ((uint16_t)0x00F0)            /*!&lt; EXTI 9 configuration */</div><div class="line">#define AFIO_EXTICR3_EXTI10                  ((uint16_t)0x0F00)            /*!&lt; EXTI 10 configuration */</div><div class="line">#define AFIO_EXTICR3_EXTI11                  ((uint16_t)0xF000)            /*!&lt; EXTI 11 configuration */</div><div class="line"></div><div class="line">/*!&lt; EXTI8 configuration */</div><div class="line">#define AFIO_EXTICR3_EXTI8_PA                ((uint16_t)0x0000)            /*!&lt; PA[8] pin */</div><div class="line">#define AFIO_EXTICR3_EXTI8_PB                ((uint16_t)0x0001)            /*!&lt; PB[8] pin */</div><div class="line">#define AFIO_EXTICR3_EXTI8_PC                ((uint16_t)0x0002)            /*!&lt; PC[8] pin */</div><div class="line">#define AFIO_EXTICR3_EXTI8_PD                ((uint16_t)0x0003)            /*!&lt; PD[8] pin */</div><div class="line">#define AFIO_EXTICR3_EXTI8_PE                ((uint16_t)0x0004)            /*!&lt; PE[8] pin */</div><div class="line">#define AFIO_EXTICR3_EXTI8_PF                ((uint16_t)0x0005)            /*!&lt; PF[8] pin */</div><div class="line">#define AFIO_EXTICR3_EXTI8_PG                ((uint16_t)0x0006)            /*!&lt; PG[8] pin */</div><div class="line"></div><div class="line">/*!&lt; EXTI9 configuration */</div><div class="line">#define AFIO_EXTICR3_EXTI9_PA                ((uint16_t)0x0000)            /*!&lt; PA[9] pin */</div><div class="line">#define AFIO_EXTICR3_EXTI9_PB                ((uint16_t)0x0010)            /*!&lt; PB[9] pin */</div><div class="line">#define AFIO_EXTICR3_EXTI9_PC                ((uint16_t)0x0020)            /*!&lt; PC[9] pin */</div><div class="line">#define AFIO_EXTICR3_EXTI9_PD                ((uint16_t)0x0030)            /*!&lt; PD[9] pin */</div><div class="line">#define AFIO_EXTICR3_EXTI9_PE                ((uint16_t)0x0040)            /*!&lt; PE[9] pin */</div><div class="line">#define AFIO_EXTICR3_EXTI9_PF                ((uint16_t)0x0050)            /*!&lt; PF[9] pin */</div><div class="line">#define AFIO_EXTICR3_EXTI9_PG                ((uint16_t)0x0060)            /*!&lt; PG[9] pin */</div><div class="line"></div><div class="line">/*!&lt; EXTI10 configuration */  </div><div class="line">#define AFIO_EXTICR3_EXTI10_PA               ((uint16_t)0x0000)            /*!&lt; PA[10] pin */</div><div class="line">#define AFIO_EXTICR3_EXTI10_PB               ((uint16_t)0x0100)            /*!&lt; PB[10] pin */</div><div class="line">#define AFIO_EXTICR3_EXTI10_PC               ((uint16_t)0x0200)            /*!&lt; PC[10] pin */</div><div class="line">#define AFIO_EXTICR3_EXTI10_PD               ((uint16_t)0x0300)            /*!&lt; PD[10] pin */</div><div class="line">#define AFIO_EXTICR3_EXTI10_PE               ((uint16_t)0x0400)            /*!&lt; PE[10] pin */</div><div class="line">#define AFIO_EXTICR3_EXTI10_PF               ((uint16_t)0x0500)            /*!&lt; PF[10] pin */</div><div class="line">#define AFIO_EXTICR3_EXTI10_PG               ((uint16_t)0x0600)            /*!&lt; PG[10] pin */</div><div class="line"></div><div class="line">/*!&lt; EXTI11 configuration */</div><div class="line">#define AFIO_EXTICR3_EXTI11_PA               ((uint16_t)0x0000)            /*!&lt; PA[11] pin */</div><div class="line">#define AFIO_EXTICR3_EXTI11_PB               ((uint16_t)0x1000)            /*!&lt; PB[11] pin */</div><div class="line">#define AFIO_EXTICR3_EXTI11_PC               ((uint16_t)0x2000)            /*!&lt; PC[11] pin */</div><div class="line">#define AFIO_EXTICR3_EXTI11_PD               ((uint16_t)0x3000)            /*!&lt; PD[11] pin */</div><div class="line">#define AFIO_EXTICR3_EXTI11_PE               ((uint16_t)0x4000)            /*!&lt; PE[11] pin */</div><div class="line">#define AFIO_EXTICR3_EXTI11_PF               ((uint16_t)0x5000)            /*!&lt; PF[11] pin */</div><div class="line">#define AFIO_EXTICR3_EXTI11_PG               ((uint16_t)0x6000)            /*!&lt; PG[11] pin */</div><div class="line"></div><div class="line">/*****************  Bit definition for AFIO_EXTICR4 register  *****************/</div><div class="line">#define AFIO_EXTICR4_EXTI12                  ((uint16_t)0x000F)            /*!&lt; EXTI 12 configuration */</div><div class="line">#define AFIO_EXTICR4_EXTI13                  ((uint16_t)0x00F0)            /*!&lt; EXTI 13 configuration */</div><div class="line">#define AFIO_EXTICR4_EXTI14                  ((uint16_t)0x0F00)            /*!&lt; EXTI 14 configuration */</div><div class="line">#define AFIO_EXTICR4_EXTI15                  ((uint16_t)0xF000)            /*!&lt; EXTI 15 configuration */</div><div class="line"></div><div class="line">/* EXTI12 configuration */</div><div class="line">#define AFIO_EXTICR4_EXTI12_PA               ((uint16_t)0x0000)            /*!&lt; PA[12] pin */</div><div class="line">#define AFIO_EXTICR4_EXTI12_PB               ((uint16_t)0x0001)            /*!&lt; PB[12] pin */</div><div class="line">#define AFIO_EXTICR4_EXTI12_PC               ((uint16_t)0x0002)            /*!&lt; PC[12] pin */</div><div class="line">#define AFIO_EXTICR4_EXTI12_PD               ((uint16_t)0x0003)            /*!&lt; PD[12] pin */</div><div class="line">#define AFIO_EXTICR4_EXTI12_PE               ((uint16_t)0x0004)            /*!&lt; PE[12] pin */</div><div class="line">#define AFIO_EXTICR4_EXTI12_PF               ((uint16_t)0x0005)            /*!&lt; PF[12] pin */</div><div class="line">#define AFIO_EXTICR4_EXTI12_PG               ((uint16_t)0x0006)            /*!&lt; PG[12] pin */</div><div class="line"></div><div class="line">/* EXTI13 configuration */</div><div class="line">#define AFIO_EXTICR4_EXTI13_PA               ((uint16_t)0x0000)            /*!&lt; PA[13] pin */</div><div class="line">#define AFIO_EXTICR4_EXTI13_PB               ((uint16_t)0x0010)            /*!&lt; PB[13] pin */</div><div class="line">#define AFIO_EXTICR4_EXTI13_PC               ((uint16_t)0x0020)            /*!&lt; PC[13] pin */</div><div class="line">#define AFIO_EXTICR4_EXTI13_PD               ((uint16_t)0x0030)            /*!&lt; PD[13] pin */</div><div class="line">#define AFIO_EXTICR4_EXTI13_PE               ((uint16_t)0x0040)            /*!&lt; PE[13] pin */</div><div class="line">#define AFIO_EXTICR4_EXTI13_PF               ((uint16_t)0x0050)            /*!&lt; PF[13] pin */</div><div class="line">#define AFIO_EXTICR4_EXTI13_PG               ((uint16_t)0x0060)            /*!&lt; PG[13] pin */</div><div class="line"></div><div class="line">/*!&lt; EXTI14 configuration */  </div><div class="line">#define AFIO_EXTICR4_EXTI14_PA               ((uint16_t)0x0000)            /*!&lt; PA[14] pin */</div><div class="line">#define AFIO_EXTICR4_EXTI14_PB               ((uint16_t)0x0100)            /*!&lt; PB[14] pin */</div><div class="line">#define AFIO_EXTICR4_EXTI14_PC               ((uint16_t)0x0200)            /*!&lt; PC[14] pin */</div><div class="line">#define AFIO_EXTICR4_EXTI14_PD               ((uint16_t)0x0300)            /*!&lt; PD[14] pin */</div><div class="line">#define AFIO_EXTICR4_EXTI14_PE               ((uint16_t)0x0400)            /*!&lt; PE[14] pin */</div><div class="line">#define AFIO_EXTICR4_EXTI14_PF               ((uint16_t)0x0500)            /*!&lt; PF[14] pin */</div><div class="line">#define AFIO_EXTICR4_EXTI14_PG               ((uint16_t)0x0600)            /*!&lt; PG[14] pin */</div><div class="line"></div><div class="line">/*!&lt; EXTI15 configuration */</div><div class="line">#define AFIO_EXTICR4_EXTI15_PA               ((uint16_t)0x0000)            /*!&lt; PA[15] pin */</div><div class="line">#define AFIO_EXTICR4_EXTI15_PB               ((uint16_t)0x1000)            /*!&lt; PB[15] pin */</div><div class="line">#define AFIO_EXTICR4_EXTI15_PC               ((uint16_t)0x2000)            /*!&lt; PC[15] pin */</div><div class="line">#define AFIO_EXTICR4_EXTI15_PD               ((uint16_t)0x3000)            /*!&lt; PD[15] pin */</div><div class="line">#define AFIO_EXTICR4_EXTI15_PE               ((uint16_t)0x4000)            /*!&lt; PE[15] pin */</div><div class="line">#define AFIO_EXTICR4_EXTI15_PF               ((uint16_t)0x5000)            /*!&lt; PF[15] pin */</div><div class="line">#define AFIO_EXTICR4_EXTI15_PG               ((uint16_t)0x6000)            /*!&lt; PG[15] pin */</div><div class="line"></div><div class="line">#if defined (STM32F10X_LD_VL) || defined (STM32F10X_MD_VL) || defined (STM32F10X_HD_VL)</div><div class="line">/******************  Bit definition for AFIO_MAPR2 register  ******************/</div><div class="line">#define AFIO_MAPR2_TIM15_REMAP               ((uint32_t)0x00000001)        /*!&lt; TIM15 remapping */</div><div class="line">#define AFIO_MAPR2_TIM16_REMAP               ((uint32_t)0x00000002)        /*!&lt; TIM16 remapping */</div><div class="line">#define AFIO_MAPR2_TIM17_REMAP               ((uint32_t)0x00000004)        /*!&lt; TIM17 remapping */</div><div class="line">#define AFIO_MAPR2_CEC_REMAP                 ((uint32_t)0x00000008)        /*!&lt; CEC remapping */</div><div class="line">#define AFIO_MAPR2_TIM1_DMA_REMAP            ((uint32_t)0x00000010)        /*!&lt; TIM1_DMA remapping */</div><div class="line">#endif</div><div class="line"></div><div class="line">#ifdef STM32F10X_HD_VL</div><div class="line">#define AFIO_MAPR2_TIM13_REMAP               ((uint32_t)0x00000100)        /*!&lt; TIM13 remapping */</div><div class="line">#define AFIO_MAPR2_TIM14_REMAP               ((uint32_t)0x00000200)        /*!&lt; TIM14 remapping */</div><div class="line">#define AFIO_MAPR2_FSMC_NADV_REMAP           ((uint32_t)0x00000400)        /*!&lt; FSMC NADV remapping */</div><div class="line">#define AFIO_MAPR2_TIM67_DAC_DMA_REMAP       ((uint32_t)0x00000800)        /*!&lt; TIM6/TIM7 and DAC DMA remapping */</div><div class="line">#define AFIO_MAPR2_TIM12_REMAP               ((uint32_t)0x00001000)        /*!&lt; TIM12 remapping */</div><div class="line">#define AFIO_MAPR2_MISC_REMAP                ((uint32_t)0x00002000)        /*!&lt; Miscellaneous remapping */</div><div class="line">#endif</div><div class="line"></div><div class="line">#ifdef STM32F10X_XL </div><div class="line">/******************  Bit definition for AFIO_MAPR2 register  ******************/</div><div class="line">#define AFIO_MAPR2_TIM9_REMAP                ((uint32_t)0x00000020)        /*!&lt; TIM9 remapping */</div><div class="line">#define AFIO_MAPR2_TIM10_REMAP               ((uint32_t)0x00000040)        /*!&lt; TIM10 remapping */</div><div class="line">#define AFIO_MAPR2_TIM11_REMAP               ((uint32_t)0x00000080)        /*!&lt; TIM11 remapping */</div><div class="line">#define AFIO_MAPR2_TIM13_REMAP               ((uint32_t)0x00000100)        /*!&lt; TIM13 remapping */</div><div class="line">#define AFIO_MAPR2_TIM14_REMAP               ((uint32_t)0x00000200)        /*!&lt; TIM14 remapping */</div><div class="line">#define AFIO_MAPR2_FSMC_NADV_REMAP           ((uint32_t)0x00000400)        /*!&lt; FSMC NADV remapping */</div><div class="line">#endif</div><div class="line"></div><div class="line">/******************************************************************************/</div><div class="line">/*                                                                            */</div><div class="line">/*                               SystemTick                                   */</div><div class="line">/*                                                                            */</div><div class="line">/******************************************************************************/</div><div class="line"></div><div class="line">/*****************  Bit definition for SysTick_CTRL register  *****************/</div><div class="line">#define  SysTick_CTRL_ENABLE                 ((uint32_t)0x00000001)        /*!&lt; Counter enable */</div><div class="line">#define  SysTick_CTRL_TICKINT                ((uint32_t)0x00000002)        /*!&lt; Counting down to 0 pends the SysTick handler */</div><div class="line">#define  SysTick_CTRL_CLKSOURCE              ((uint32_t)0x00000004)        /*!&lt; Clock source */</div><div class="line">#define  SysTick_CTRL_COUNTFLAG              ((uint32_t)0x00010000)        /*!&lt; Count Flag */</div><div class="line"></div><div class="line">/*****************  Bit definition for SysTick_LOAD register  *****************/</div><div class="line">#define  SysTick_LOAD_RELOAD                 ((uint32_t)0x00FFFFFF)        /*!&lt; Value to load into the SysTick Current Value Register when the counter reaches 0 */</div><div class="line"></div><div class="line">/*****************  Bit definition for SysTick_VAL register  ******************/</div><div class="line">#define  SysTick_VAL_CURRENT                 ((uint32_t)0x00FFFFFF)        /*!&lt; Current value at the time the register is accessed */</div><div class="line"></div><div class="line">/*****************  Bit definition for SysTick_CALIB register  ****************/</div><div class="line">#define  SysTick_CALIB_TENMS                 ((uint32_t)0x00FFFFFF)        /*!&lt; Reload value to use for 10ms timing */</div><div class="line">#define  SysTick_CALIB_SKEW                  ((uint32_t)0x40000000)        /*!&lt; Calibration value is not exactly 10 ms */</div><div class="line">#define  SysTick_CALIB_NOREF                 ((uint32_t)0x80000000)        /*!&lt; The reference clock is not provided */</div><div class="line"></div><div class="line">/******************************************************************************/</div><div class="line">/*                                                                            */</div><div class="line">/*                  Nested Vectored Interrupt Controller                      */</div><div class="line">/*                                                                            */</div><div class="line">/******************************************************************************/</div><div class="line"></div><div class="line">/******************  Bit definition for NVIC_ISER register  *******************/</div><div class="line">#define  NVIC_ISER_SETENA                    ((uint32_t)0xFFFFFFFF)        /*!&lt; Interrupt set enable bits */</div><div class="line">#define  NVIC_ISER_SETENA_0                  ((uint32_t)0x00000001)        /*!&lt; bit 0 */</div><div class="line">#define  NVIC_ISER_SETENA_1                  ((uint32_t)0x00000002)        /*!&lt; bit 1 */</div><div class="line">#define  NVIC_ISER_SETENA_2                  ((uint32_t)0x00000004)        /*!&lt; bit 2 */</div><div class="line">#define  NVIC_ISER_SETENA_3                  ((uint32_t)0x00000008)        /*!&lt; bit 3 */</div><div class="line">#define  NVIC_ISER_SETENA_4                  ((uint32_t)0x00000010)        /*!&lt; bit 4 */</div><div class="line">#define  NVIC_ISER_SETENA_5                  ((uint32_t)0x00000020)        /*!&lt; bit 5 */</div><div class="line">#define  NVIC_ISER_SETENA_6                  ((uint32_t)0x00000040)        /*!&lt; bit 6 */</div><div class="line">#define  NVIC_ISER_SETENA_7                  ((uint32_t)0x00000080)        /*!&lt; bit 7 */</div><div class="line">#define  NVIC_ISER_SETENA_8                  ((uint32_t)0x00000100)        /*!&lt; bit 8 */</div><div class="line">#define  NVIC_ISER_SETENA_9                  ((uint32_t)0x00000200)        /*!&lt; bit 9 */</div><div class="line">#define  NVIC_ISER_SETENA_10                 ((uint32_t)0x00000400)        /*!&lt; bit 10 */</div><div class="line">#define  NVIC_ISER_SETENA_11                 ((uint32_t)0x00000800)        /*!&lt; bit 11 */</div><div class="line">#define  NVIC_ISER_SETENA_12                 ((uint32_t)0x00001000)        /*!&lt; bit 12 */</div><div class="line">#define  NVIC_ISER_SETENA_13                 ((uint32_t)0x00002000)        /*!&lt; bit 13 */</div><div class="line">#define  NVIC_ISER_SETENA_14                 ((uint32_t)0x00004000)        /*!&lt; bit 14 */</div><div class="line">#define  NVIC_ISER_SETENA_15                 ((uint32_t)0x00008000)        /*!&lt; bit 15 */</div><div class="line">#define  NVIC_ISER_SETENA_16                 ((uint32_t)0x00010000)        /*!&lt; bit 16 */</div><div class="line">#define  NVIC_ISER_SETENA_17                 ((uint32_t)0x00020000)        /*!&lt; bit 17 */</div><div class="line">#define  NVIC_ISER_SETENA_18                 ((uint32_t)0x00040000)        /*!&lt; bit 18 */</div><div class="line">#define  NVIC_ISER_SETENA_19                 ((uint32_t)0x00080000)        /*!&lt; bit 19 */</div><div class="line">#define  NVIC_ISER_SETENA_20                 ((uint32_t)0x00100000)        /*!&lt; bit 20 */</div><div class="line">#define  NVIC_ISER_SETENA_21                 ((uint32_t)0x00200000)        /*!&lt; bit 21 */</div><div class="line">#define  NVIC_ISER_SETENA_22                 ((uint32_t)0x00400000)        /*!&lt; bit 22 */</div><div class="line">#define  NVIC_ISER_SETENA_23                 ((uint32_t)0x00800000)        /*!&lt; bit 23 */</div><div class="line">#define  NVIC_ISER_SETENA_24                 ((uint32_t)0x01000000)        /*!&lt; bit 24 */</div><div class="line">#define  NVIC_ISER_SETENA_25                 ((uint32_t)0x02000000)        /*!&lt; bit 25 */</div><div class="line">#define  NVIC_ISER_SETENA_26                 ((uint32_t)0x04000000)        /*!&lt; bit 26 */</div><div class="line">#define  NVIC_ISER_SETENA_27                 ((uint32_t)0x08000000)        /*!&lt; bit 27 */</div><div class="line">#define  NVIC_ISER_SETENA_28                 ((uint32_t)0x10000000)        /*!&lt; bit 28 */</div><div class="line">#define  NVIC_ISER_SETENA_29                 ((uint32_t)0x20000000)        /*!&lt; bit 29 */</div><div class="line">#define  NVIC_ISER_SETENA_30                 ((uint32_t)0x40000000)        /*!&lt; bit 30 */</div><div class="line">#define  NVIC_ISER_SETENA_31                 ((uint32_t)0x80000000)        /*!&lt; bit 31 */</div><div class="line"></div><div class="line">/******************  Bit definition for NVIC_ICER register  *******************/</div><div class="line">#define  NVIC_ICER_CLRENA                   ((uint32_t)0xFFFFFFFF)        /*!&lt; Interrupt clear-enable bits */</div><div class="line">#define  NVIC_ICER_CLRENA_0                  ((uint32_t)0x00000001)        /*!&lt; bit 0 */</div><div class="line">#define  NVIC_ICER_CLRENA_1                  ((uint32_t)0x00000002)        /*!&lt; bit 1 */</div><div class="line">#define  NVIC_ICER_CLRENA_2                  ((uint32_t)0x00000004)        /*!&lt; bit 2 */</div><div class="line">#define  NVIC_ICER_CLRENA_3                  ((uint32_t)0x00000008)        /*!&lt; bit 3 */</div><div class="line">#define  NVIC_ICER_CLRENA_4                  ((uint32_t)0x00000010)        /*!&lt; bit 4 */</div><div class="line">#define  NVIC_ICER_CLRENA_5                  ((uint32_t)0x00000020)        /*!&lt; bit 5 */</div><div class="line">#define  NVIC_ICER_CLRENA_6                  ((uint32_t)0x00000040)        /*!&lt; bit 6 */</div><div class="line">#define  NVIC_ICER_CLRENA_7                  ((uint32_t)0x00000080)        /*!&lt; bit 7 */</div><div class="line">#define  NVIC_ICER_CLRENA_8                  ((uint32_t)0x00000100)        /*!&lt; bit 8 */</div><div class="line">#define  NVIC_ICER_CLRENA_9                  ((uint32_t)0x00000200)        /*!&lt; bit 9 */</div><div class="line">#define  NVIC_ICER_CLRENA_10                 ((uint32_t)0x00000400)        /*!&lt; bit 10 */</div><div class="line">#define  NVIC_ICER_CLRENA_11                 ((uint32_t)0x00000800)        /*!&lt; bit 11 */</div><div class="line">#define  NVIC_ICER_CLRENA_12                 ((uint32_t)0x00001000)        /*!&lt; bit 12 */</div><div class="line">#define  NVIC_ICER_CLRENA_13                 ((uint32_t)0x00002000)        /*!&lt; bit 13 */</div><div class="line">#define  NVIC_ICER_CLRENA_14                 ((uint32_t)0x00004000)        /*!&lt; bit 14 */</div><div class="line">#define  NVIC_ICER_CLRENA_15                 ((uint32_t)0x00008000)        /*!&lt; bit 15 */</div><div class="line">#define  NVIC_ICER_CLRENA_16                 ((uint32_t)0x00010000)        /*!&lt; bit 16 */</div><div class="line">#define  NVIC_ICER_CLRENA_17                 ((uint32_t)0x00020000)        /*!&lt; bit 17 */</div><div class="line">#define  NVIC_ICER_CLRENA_18                 ((uint32_t)0x00040000)        /*!&lt; bit 18 */</div><div class="line">#define  NVIC_ICER_CLRENA_19                 ((uint32_t)0x00080000)        /*!&lt; bit 19 */</div><div class="line">#define  NVIC_ICER_CLRENA_20                 ((uint32_t)0x00100000)        /*!&lt; bit 20 */</div><div class="line">#define  NVIC_ICER_CLRENA_21                 ((uint32_t)0x00200000)        /*!&lt; bit 21 */</div><div class="line">#define  NVIC_ICER_CLRENA_22                 ((uint32_t)0x00400000)        /*!&lt; bit 22 */</div><div class="line">#define  NVIC_ICER_CLRENA_23                 ((uint32_t)0x00800000)        /*!&lt; bit 23 */</div><div class="line">#define  NVIC_ICER_CLRENA_24                 ((uint32_t)0x01000000)        /*!&lt; bit 24 */</div><div class="line">#define  NVIC_ICER_CLRENA_25                 ((uint32_t)0x02000000)        /*!&lt; bit 25 */</div><div class="line">#define  NVIC_ICER_CLRENA_26                 ((uint32_t)0x04000000)        /*!&lt; bit 26 */</div><div class="line">#define  NVIC_ICER_CLRENA_27                 ((uint32_t)0x08000000)        /*!&lt; bit 27 */</div><div class="line">#define  NVIC_ICER_CLRENA_28                 ((uint32_t)0x10000000)        /*!&lt; bit 28 */</div><div class="line">#define  NVIC_ICER_CLRENA_29                 ((uint32_t)0x20000000)        /*!&lt; bit 29 */</div><div class="line">#define  NVIC_ICER_CLRENA_30                 ((uint32_t)0x40000000)        /*!&lt; bit 30 */</div><div class="line">#define  NVIC_ICER_CLRENA_31                 ((uint32_t)0x80000000)        /*!&lt; bit 31 */</div><div class="line"></div><div class="line">/******************  Bit definition for NVIC_ISPR register  *******************/</div><div class="line">#define  NVIC_ISPR_SETPEND                   ((uint32_t)0xFFFFFFFF)        /*!&lt; Interrupt set-pending bits */</div><div class="line">#define  NVIC_ISPR_SETPEND_0                 ((uint32_t)0x00000001)        /*!&lt; bit 0 */</div><div class="line">#define  NVIC_ISPR_SETPEND_1                 ((uint32_t)0x00000002)        /*!&lt; bit 1 */</div><div class="line">#define  NVIC_ISPR_SETPEND_2                 ((uint32_t)0x00000004)        /*!&lt; bit 2 */</div><div class="line">#define  NVIC_ISPR_SETPEND_3                 ((uint32_t)0x00000008)        /*!&lt; bit 3 */</div><div class="line">#define  NVIC_ISPR_SETPEND_4                 ((uint32_t)0x00000010)        /*!&lt; bit 4 */</div><div class="line">#define  NVIC_ISPR_SETPEND_5                 ((uint32_t)0x00000020)        /*!&lt; bit 5 */</div><div class="line">#define  NVIC_ISPR_SETPEND_6                 ((uint32_t)0x00000040)        /*!&lt; bit 6 */</div><div class="line">#define  NVIC_ISPR_SETPEND_7                 ((uint32_t)0x00000080)        /*!&lt; bit 7 */</div><div class="line">#define  NVIC_ISPR_SETPEND_8                 ((uint32_t)0x00000100)        /*!&lt; bit 8 */</div><div class="line">#define  NVIC_ISPR_SETPEND_9                 ((uint32_t)0x00000200)        /*!&lt; bit 9 */</div><div class="line">#define  NVIC_ISPR_SETPEND_10                ((uint32_t)0x00000400)        /*!&lt; bit 10 */</div><div class="line">#define  NVIC_ISPR_SETPEND_11                ((uint32_t)0x00000800)        /*!&lt; bit 11 */</div><div class="line">#define  NVIC_ISPR_SETPEND_12                ((uint32_t)0x00001000)        /*!&lt; bit 12 */</div><div class="line">#define  NVIC_ISPR_SETPEND_13                ((uint32_t)0x00002000)        /*!&lt; bit 13 */</div><div class="line">#define  NVIC_ISPR_SETPEND_14                ((uint32_t)0x00004000)        /*!&lt; bit 14 */</div><div class="line">#define  NVIC_ISPR_SETPEND_15                ((uint32_t)0x00008000)        /*!&lt; bit 15 */</div><div class="line">#define  NVIC_ISPR_SETPEND_16                ((uint32_t)0x00010000)        /*!&lt; bit 16 */</div><div class="line">#define  NVIC_ISPR_SETPEND_17                ((uint32_t)0x00020000)        /*!&lt; bit 17 */</div><div class="line">#define  NVIC_ISPR_SETPEND_18                ((uint32_t)0x00040000)        /*!&lt; bit 18 */</div><div class="line">#define  NVIC_ISPR_SETPEND_19                ((uint32_t)0x00080000)        /*!&lt; bit 19 */</div><div class="line">#define  NVIC_ISPR_SETPEND_20                ((uint32_t)0x00100000)        /*!&lt; bit 20 */</div><div class="line">#define  NVIC_ISPR_SETPEND_21                ((uint32_t)0x00200000)        /*!&lt; bit 21 */</div><div class="line">#define  NVIC_ISPR_SETPEND_22                ((uint32_t)0x00400000)        /*!&lt; bit 22 */</div><div class="line">#define  NVIC_ISPR_SETPEND_23                ((uint32_t)0x00800000)        /*!&lt; bit 23 */</div><div class="line">#define  NVIC_ISPR_SETPEND_24                ((uint32_t)0x01000000)        /*!&lt; bit 24 */</div><div class="line">#define  NVIC_ISPR_SETPEND_25                ((uint32_t)0x02000000)        /*!&lt; bit 25 */</div><div class="line">#define  NVIC_ISPR_SETPEND_26                ((uint32_t)0x04000000)        /*!&lt; bit 26 */</div><div class="line">#define  NVIC_ISPR_SETPEND_27                ((uint32_t)0x08000000)        /*!&lt; bit 27 */</div><div class="line">#define  NVIC_ISPR_SETPEND_28                ((uint32_t)0x10000000)        /*!&lt; bit 28 */</div><div class="line">#define  NVIC_ISPR_SETPEND_29                ((uint32_t)0x20000000)        /*!&lt; bit 29 */</div><div class="line">#define  NVIC_ISPR_SETPEND_30                ((uint32_t)0x40000000)        /*!&lt; bit 30 */</div><div class="line">#define  NVIC_ISPR_SETPEND_31                ((uint32_t)0x80000000)        /*!&lt; bit 31 */</div><div class="line"></div><div class="line">/******************  Bit definition for NVIC_ICPR register  *******************/</div><div class="line">#define  NVIC_ICPR_CLRPEND                   ((uint32_t)0xFFFFFFFF)        /*!&lt; Interrupt clear-pending bits */</div><div class="line">#define  NVIC_ICPR_CLRPEND_0                 ((uint32_t)0x00000001)        /*!&lt; bit 0 */</div><div class="line">#define  NVIC_ICPR_CLRPEND_1                 ((uint32_t)0x00000002)        /*!&lt; bit 1 */</div><div class="line">#define  NVIC_ICPR_CLRPEND_2                 ((uint32_t)0x00000004)        /*!&lt; bit 2 */</div><div class="line">#define  NVIC_ICPR_CLRPEND_3                 ((uint32_t)0x00000008)        /*!&lt; bit 3 */</div><div class="line">#define  NVIC_ICPR_CLRPEND_4                 ((uint32_t)0x00000010)        /*!&lt; bit 4 */</div><div class="line">#define  NVIC_ICPR_CLRPEND_5                 ((uint32_t)0x00000020)        /*!&lt; bit 5 */</div><div class="line">#define  NVIC_ICPR_CLRPEND_6                 ((uint32_t)0x00000040)        /*!&lt; bit 6 */</div><div class="line">#define  NVIC_ICPR_CLRPEND_7                 ((uint32_t)0x00000080)        /*!&lt; bit 7 */</div><div class="line">#define  NVIC_ICPR_CLRPEND_8                 ((uint32_t)0x00000100)        /*!&lt; bit 8 */</div><div class="line">#define  NVIC_ICPR_CLRPEND_9                 ((uint32_t)0x00000200)        /*!&lt; bit 9 */</div><div class="line">#define  NVIC_ICPR_CLRPEND_10                ((uint32_t)0x00000400)        /*!&lt; bit 10 */</div><div class="line">#define  NVIC_ICPR_CLRPEND_11                ((uint32_t)0x00000800)        /*!&lt; bit 11 */</div><div class="line">#define  NVIC_ICPR_CLRPEND_12                ((uint32_t)0x00001000)        /*!&lt; bit 12 */</div><div class="line">#define  NVIC_ICPR_CLRPEND_13                ((uint32_t)0x00002000)        /*!&lt; bit 13 */</div><div class="line">#define  NVIC_ICPR_CLRPEND_14                ((uint32_t)0x00004000)        /*!&lt; bit 14 */</div><div class="line">#define  NVIC_ICPR_CLRPEND_15                ((uint32_t)0x00008000)        /*!&lt; bit 15 */</div><div class="line">#define  NVIC_ICPR_CLRPEND_16                ((uint32_t)0x00010000)        /*!&lt; bit 16 */</div><div class="line">#define  NVIC_ICPR_CLRPEND_17                ((uint32_t)0x00020000)        /*!&lt; bit 17 */</div><div class="line">#define  NVIC_ICPR_CLRPEND_18                ((uint32_t)0x00040000)        /*!&lt; bit 18 */</div><div class="line">#define  NVIC_ICPR_CLRPEND_19                ((uint32_t)0x00080000)        /*!&lt; bit 19 */</div><div class="line">#define  NVIC_ICPR_CLRPEND_20                ((uint32_t)0x00100000)        /*!&lt; bit 20 */</div><div class="line">#define  NVIC_ICPR_CLRPEND_21                ((uint32_t)0x00200000)        /*!&lt; bit 21 */</div><div class="line">#define  NVIC_ICPR_CLRPEND_22                ((uint32_t)0x00400000)        /*!&lt; bit 22 */</div><div class="line">#define  NVIC_ICPR_CLRPEND_23                ((uint32_t)0x00800000)        /*!&lt; bit 23 */</div><div class="line">#define  NVIC_ICPR_CLRPEND_24                ((uint32_t)0x01000000)        /*!&lt; bit 24 */</div><div class="line">#define  NVIC_ICPR_CLRPEND_25                ((uint32_t)0x02000000)        /*!&lt; bit 25 */</div><div class="line">#define  NVIC_ICPR_CLRPEND_26                ((uint32_t)0x04000000)        /*!&lt; bit 26 */</div><div class="line">#define  NVIC_ICPR_CLRPEND_27                ((uint32_t)0x08000000)        /*!&lt; bit 27 */</div><div class="line">#define  NVIC_ICPR_CLRPEND_28                ((uint32_t)0x10000000)        /*!&lt; bit 28 */</div><div class="line">#define  NVIC_ICPR_CLRPEND_29                ((uint32_t)0x20000000)        /*!&lt; bit 29 */</div><div class="line">#define  NVIC_ICPR_CLRPEND_30                ((uint32_t)0x40000000)        /*!&lt; bit 30 */</div><div class="line">#define  NVIC_ICPR_CLRPEND_31                ((uint32_t)0x80000000)        /*!&lt; bit 31 */</div><div class="line"></div><div class="line">/******************  Bit definition for NVIC_IABR register  *******************/</div><div class="line">#define  NVIC_IABR_ACTIVE                    ((uint32_t)0xFFFFFFFF)        /*!&lt; Interrupt active flags */</div><div class="line">#define  NVIC_IABR_ACTIVE_0                  ((uint32_t)0x00000001)        /*!&lt; bit 0 */</div><div class="line">#define  NVIC_IABR_ACTIVE_1                  ((uint32_t)0x00000002)        /*!&lt; bit 1 */</div><div class="line">#define  NVIC_IABR_ACTIVE_2                  ((uint32_t)0x00000004)        /*!&lt; bit 2 */</div><div class="line">#define  NVIC_IABR_ACTIVE_3                  ((uint32_t)0x00000008)        /*!&lt; bit 3 */</div><div class="line">#define  NVIC_IABR_ACTIVE_4                  ((uint32_t)0x00000010)        /*!&lt; bit 4 */</div><div class="line">#define  NVIC_IABR_ACTIVE_5                  ((uint32_t)0x00000020)        /*!&lt; bit 5 */</div><div class="line">#define  NVIC_IABR_ACTIVE_6                  ((uint32_t)0x00000040)        /*!&lt; bit 6 */</div><div class="line">#define  NVIC_IABR_ACTIVE_7                  ((uint32_t)0x00000080)        /*!&lt; bit 7 */</div><div class="line">#define  NVIC_IABR_ACTIVE_8                  ((uint32_t)0x00000100)        /*!&lt; bit 8 */</div><div class="line">#define  NVIC_IABR_ACTIVE_9                  ((uint32_t)0x00000200)        /*!&lt; bit 9 */</div><div class="line">#define  NVIC_IABR_ACTIVE_10                 ((uint32_t)0x00000400)        /*!&lt; bit 10 */</div><div class="line">#define  NVIC_IABR_ACTIVE_11                 ((uint32_t)0x00000800)        /*!&lt; bit 11 */</div><div class="line">#define  NVIC_IABR_ACTIVE_12                 ((uint32_t)0x00001000)        /*!&lt; bit 12 */</div><div class="line">#define  NVIC_IABR_ACTIVE_13                 ((uint32_t)0x00002000)        /*!&lt; bit 13 */</div><div class="line">#define  NVIC_IABR_ACTIVE_14                 ((uint32_t)0x00004000)        /*!&lt; bit 14 */</div><div class="line">#define  NVIC_IABR_ACTIVE_15                 ((uint32_t)0x00008000)        /*!&lt; bit 15 */</div><div class="line">#define  NVIC_IABR_ACTIVE_16                 ((uint32_t)0x00010000)        /*!&lt; bit 16 */</div><div class="line">#define  NVIC_IABR_ACTIVE_17                 ((uint32_t)0x00020000)        /*!&lt; bit 17 */</div><div class="line">#define  NVIC_IABR_ACTIVE_18                 ((uint32_t)0x00040000)        /*!&lt; bit 18 */</div><div class="line">#define  NVIC_IABR_ACTIVE_19                 ((uint32_t)0x00080000)        /*!&lt; bit 19 */</div><div class="line">#define  NVIC_IABR_ACTIVE_20                 ((uint32_t)0x00100000)        /*!&lt; bit 20 */</div><div class="line">#define  NVIC_IABR_ACTIVE_21                 ((uint32_t)0x00200000)        /*!&lt; bit 21 */</div><div class="line">#define  NVIC_IABR_ACTIVE_22                 ((uint32_t)0x00400000)        /*!&lt; bit 22 */</div><div class="line">#define  NVIC_IABR_ACTIVE_23                 ((uint32_t)0x00800000)        /*!&lt; bit 23 */</div><div class="line">#define  NVIC_IABR_ACTIVE_24                 ((uint32_t)0x01000000)        /*!&lt; bit 24 */</div><div class="line">#define  NVIC_IABR_ACTIVE_25                 ((uint32_t)0x02000000)        /*!&lt; bit 25 */</div><div class="line">#define  NVIC_IABR_ACTIVE_26                 ((uint32_t)0x04000000)        /*!&lt; bit 26 */</div><div class="line">#define  NVIC_IABR_ACTIVE_27                 ((uint32_t)0x08000000)        /*!&lt; bit 27 */</div><div class="line">#define  NVIC_IABR_ACTIVE_28                 ((uint32_t)0x10000000)        /*!&lt; bit 28 */</div><div class="line">#define  NVIC_IABR_ACTIVE_29                 ((uint32_t)0x20000000)        /*!&lt; bit 29 */</div><div class="line">#define  NVIC_IABR_ACTIVE_30                 ((uint32_t)0x40000000)        /*!&lt; bit 30 */</div><div class="line">#define  NVIC_IABR_ACTIVE_31                 ((uint32_t)0x80000000)        /*!&lt; bit 31 */</div><div class="line"></div><div class="line">/******************  Bit definition for NVIC_PRI0 register  *******************/</div><div class="line">#define  NVIC_IPR0_PRI_0                     ((uint32_t)0x000000FF)        /*!&lt; Priority of interrupt 0 */</div><div class="line">#define  NVIC_IPR0_PRI_1                     ((uint32_t)0x0000FF00)        /*!&lt; Priority of interrupt 1 */</div><div class="line">#define  NVIC_IPR0_PRI_2                     ((uint32_t)0x00FF0000)        /*!&lt; Priority of interrupt 2 */</div><div class="line">#define  NVIC_IPR0_PRI_3                     ((uint32_t)0xFF000000)        /*!&lt; Priority of interrupt 3 */</div><div class="line"></div><div class="line">/******************  Bit definition for NVIC_PRI1 register  *******************/</div><div class="line">#define  NVIC_IPR1_PRI_4                     ((uint32_t)0x000000FF)        /*!&lt; Priority of interrupt 4 */</div><div class="line">#define  NVIC_IPR1_PRI_5                     ((uint32_t)0x0000FF00)        /*!&lt; Priority of interrupt 5 */</div><div class="line">#define  NVIC_IPR1_PRI_6                     ((uint32_t)0x00FF0000)        /*!&lt; Priority of interrupt 6 */</div><div class="line">#define  NVIC_IPR1_PRI_7                     ((uint32_t)0xFF000000)        /*!&lt; Priority of interrupt 7 */</div><div class="line"></div><div class="line">/******************  Bit definition for NVIC_PRI2 register  *******************/</div><div class="line">#define  NVIC_IPR2_PRI_8                     ((uint32_t)0x000000FF)        /*!&lt; Priority of interrupt 8 */</div><div class="line">#define  NVIC_IPR2_PRI_9                     ((uint32_t)0x0000FF00)        /*!&lt; Priority of interrupt 9 */</div><div class="line">#define  NVIC_IPR2_PRI_10                    ((uint32_t)0x00FF0000)        /*!&lt; Priority of interrupt 10 */</div><div class="line">#define  NVIC_IPR2_PRI_11                    ((uint32_t)0xFF000000)        /*!&lt; Priority of interrupt 11 */</div><div class="line"></div><div class="line">/******************  Bit definition for NVIC_PRI3 register  *******************/</div><div class="line">#define  NVIC_IPR3_PRI_12                    ((uint32_t)0x000000FF)        /*!&lt; Priority of interrupt 12 */</div><div class="line">#define  NVIC_IPR3_PRI_13                    ((uint32_t)0x0000FF00)        /*!&lt; Priority of interrupt 13 */</div><div class="line">#define  NVIC_IPR3_PRI_14                    ((uint32_t)0x00FF0000)        /*!&lt; Priority of interrupt 14 */</div><div class="line">#define  NVIC_IPR3_PRI_15                    ((uint32_t)0xFF000000)        /*!&lt; Priority of interrupt 15 */</div><div class="line"></div><div class="line">/******************  Bit definition for NVIC_PRI4 register  *******************/</div><div class="line">#define  NVIC_IPR4_PRI_16                    ((uint32_t)0x000000FF)        /*!&lt; Priority of interrupt 16 */</div><div class="line">#define  NVIC_IPR4_PRI_17                    ((uint32_t)0x0000FF00)        /*!&lt; Priority of interrupt 17 */</div><div class="line">#define  NVIC_IPR4_PRI_18                    ((uint32_t)0x00FF0000)        /*!&lt; Priority of interrupt 18 */</div><div class="line">#define  NVIC_IPR4_PRI_19                    ((uint32_t)0xFF000000)        /*!&lt; Priority of interrupt 19 */</div><div class="line"></div><div class="line">/******************  Bit definition for NVIC_PRI5 register  *******************/</div><div class="line">#define  NVIC_IPR5_PRI_20                    ((uint32_t)0x000000FF)        /*!&lt; Priority of interrupt 20 */</div><div class="line">#define  NVIC_IPR5_PRI_21                    ((uint32_t)0x0000FF00)        /*!&lt; Priority of interrupt 21 */</div><div class="line">#define  NVIC_IPR5_PRI_22                    ((uint32_t)0x00FF0000)        /*!&lt; Priority of interrupt 22 */</div><div class="line">#define  NVIC_IPR5_PRI_23                    ((uint32_t)0xFF000000)        /*!&lt; Priority of interrupt 23 */</div><div class="line"></div><div class="line">/******************  Bit definition for NVIC_PRI6 register  *******************/</div><div class="line">#define  NVIC_IPR6_PRI_24                    ((uint32_t)0x000000FF)        /*!&lt; Priority of interrupt 24 */</div><div class="line">#define  NVIC_IPR6_PRI_25                    ((uint32_t)0x0000FF00)        /*!&lt; Priority of interrupt 25 */</div><div class="line">#define  NVIC_IPR6_PRI_26                    ((uint32_t)0x00FF0000)        /*!&lt; Priority of interrupt 26 */</div><div class="line">#define  NVIC_IPR6_PRI_27                    ((uint32_t)0xFF000000)        /*!&lt; Priority of interrupt 27 */</div><div class="line"></div><div class="line">/******************  Bit definition for NVIC_PRI7 register  *******************/</div><div class="line">#define  NVIC_IPR7_PRI_28                    ((uint32_t)0x000000FF)        /*!&lt; Priority of interrupt 28 */</div><div class="line">#define  NVIC_IPR7_PRI_29                    ((uint32_t)0x0000FF00)        /*!&lt; Priority of interrupt 29 */</div><div class="line">#define  NVIC_IPR7_PRI_30                    ((uint32_t)0x00FF0000)        /*!&lt; Priority of interrupt 30 */</div><div class="line">#define  NVIC_IPR7_PRI_31                    ((uint32_t)0xFF000000)        /*!&lt; Priority of interrupt 31 */</div><div class="line"></div><div class="line">/******************  Bit definition for SCB_CPUID register  *******************/</div><div class="line">#define  SCB_CPUID_REVISION                  ((uint32_t)0x0000000F)        /*!&lt; Implementation defined revision number */</div><div class="line">#define  SCB_CPUID_PARTNO                    ((uint32_t)0x0000FFF0)        /*!&lt; Number of processor within family */</div><div class="line">#define  SCB_CPUID_Constant                  ((uint32_t)0x000F0000)        /*!&lt; Reads as 0x0F */</div><div class="line">#define  SCB_CPUID_VARIANT                   ((uint32_t)0x00F00000)        /*!&lt; Implementation defined variant number */</div><div class="line">#define  SCB_CPUID_IMPLEMENTER               ((uint32_t)0xFF000000)        /*!&lt; Implementer code. ARM is 0x41 */</div><div class="line"></div><div class="line">/*******************  Bit definition for SCB_ICSR register  *******************/</div><div class="line">#define  SCB_ICSR_VECTACTIVE                 ((uint32_t)0x000001FF)        /*!&lt; Active ISR number field */</div><div class="line">#define  SCB_ICSR_RETTOBASE                  ((uint32_t)0x00000800)        /*!&lt; All active exceptions minus the IPSR_current_exception yields the empty set */</div><div class="line">#define  SCB_ICSR_VECTPENDING                ((uint32_t)0x003FF000)        /*!&lt; Pending ISR number field */</div><div class="line">#define  SCB_ICSR_ISRPENDING                 ((uint32_t)0x00400000)        /*!&lt; Interrupt pending flag */</div><div class="line">#define  SCB_ICSR_ISRPREEMPT                 ((uint32_t)0x00800000)        /*!&lt; It indicates that a pending interrupt becomes active in the next running cycle */</div><div class="line">#define  SCB_ICSR_PENDSTCLR                  ((uint32_t)0x02000000)        /*!&lt; Clear pending SysTick bit */</div><div class="line">#define  SCB_ICSR_PENDSTSET                  ((uint32_t)0x04000000)        /*!&lt; Set pending SysTick bit */</div><div class="line">#define  SCB_ICSR_PENDSVCLR                  ((uint32_t)0x08000000)        /*!&lt; Clear pending pendSV bit */</div><div class="line">#define  SCB_ICSR_PENDSVSET                  ((uint32_t)0x10000000)        /*!&lt; Set pending pendSV bit */</div><div class="line">#define  SCB_ICSR_NMIPENDSET                 ((uint32_t)0x80000000)        /*!&lt; Set pending NMI bit */</div><div class="line"></div><div class="line">/*******************  Bit definition for SCB_VTOR register  *******************/</div><div class="line">#define  SCB_VTOR_TBLOFF                     ((uint32_t)0x1FFFFF80)        /*!&lt; Vector table base offset field */</div><div class="line">#define  SCB_VTOR_TBLBASE                    ((uint32_t)0x20000000)        /*!&lt; Table base in code(0) or RAM(1) */</div><div class="line"></div><div class="line">/*!&lt;*****************  Bit definition for SCB_AIRCR register  *******************/</div><div class="line">#define  SCB_AIRCR_VECTRESET                 ((uint32_t)0x00000001)        /*!&lt; System Reset bit */</div><div class="line">#define  SCB_AIRCR_VECTCLRACTIVE             ((uint32_t)0x00000002)        /*!&lt; Clear active vector bit */</div><div class="line">#define  SCB_AIRCR_SYSRESETREQ               ((uint32_t)0x00000004)        /*!&lt; Requests chip control logic to generate a reset */</div><div class="line"></div><div class="line">#define  SCB_AIRCR_PRIGROUP                  ((uint32_t)0x00000700)        /*!&lt; PRIGROUP[2:0] bits (Priority group) */</div><div class="line">#define  SCB_AIRCR_PRIGROUP_0                ((uint32_t)0x00000100)        /*!&lt; Bit 0 */</div><div class="line">#define  SCB_AIRCR_PRIGROUP_1                ((uint32_t)0x00000200)        /*!&lt; Bit 1 */</div><div class="line">#define  SCB_AIRCR_PRIGROUP_2                ((uint32_t)0x00000400)        /*!&lt; Bit 2  */</div><div class="line"></div><div class="line">/* prority group configuration */</div><div class="line">#define  SCB_AIRCR_PRIGROUP0                 ((uint32_t)0x00000000)        /*!&lt; Priority group=0 (7 bits of pre-emption priority, 1 bit of subpriority) */</div><div class="line">#define  SCB_AIRCR_PRIGROUP1                 ((uint32_t)0x00000100)        /*!&lt; Priority group=1 (6 bits of pre-emption priority, 2 bits of subpriority) */</div><div class="line">#define  SCB_AIRCR_PRIGROUP2                 ((uint32_t)0x00000200)        /*!&lt; Priority group=2 (5 bits of pre-emption priority, 3 bits of subpriority) */</div><div class="line">#define  SCB_AIRCR_PRIGROUP3                 ((uint32_t)0x00000300)        /*!&lt; Priority group=3 (4 bits of pre-emption priority, 4 bits of subpriority) */</div><div class="line">#define  SCB_AIRCR_PRIGROUP4                 ((uint32_t)0x00000400)        /*!&lt; Priority group=4 (3 bits of pre-emption priority, 5 bits of subpriority) */</div><div class="line">#define  SCB_AIRCR_PRIGROUP5                 ((uint32_t)0x00000500)        /*!&lt; Priority group=5 (2 bits of pre-emption priority, 6 bits of subpriority) */</div><div class="line">#define  SCB_AIRCR_PRIGROUP6                 ((uint32_t)0x00000600)        /*!&lt; Priority group=6 (1 bit of pre-emption priority, 7 bits of subpriority) */</div><div class="line">#define  SCB_AIRCR_PRIGROUP7                 ((uint32_t)0x00000700)        /*!&lt; Priority group=7 (no pre-emption priority, 8 bits of subpriority) */</div><div class="line"></div><div class="line">#define  SCB_AIRCR_ENDIANESS                 ((uint32_t)0x00008000)        /*!&lt; Data endianness bit */</div><div class="line">#define  SCB_AIRCR_VECTKEY                   ((uint32_t)0xFFFF0000)        /*!&lt; Register key (VECTKEY) - Reads as 0xFA05 (VECTKEYSTAT) */</div><div class="line"></div><div class="line">/*******************  Bit definition for SCB_SCR register  ********************/</div><div class="line">#define  SCB_SCR_SLEEPONEXIT                 ((uint8_t)0x02)               /*!&lt; Sleep on exit bit */</div><div class="line">#define  SCB_SCR_SLEEPDEEP                   ((uint8_t)0x04)               /*!&lt; Sleep deep bit */</div><div class="line">#define  SCB_SCR_SEVONPEND                   ((uint8_t)0x10)               /*!&lt; Wake up from WFE */</div><div class="line"></div><div class="line">/********************  Bit definition for SCB_CCR register  *******************/</div><div class="line">#define  SCB_CCR_NONBASETHRDENA              ((uint16_t)0x0001)            /*!&lt; Thread mode can be entered from any level in Handler mode by controlled return value */</div><div class="line">#define  SCB_CCR_USERSETMPEND                ((uint16_t)0x0002)            /*!&lt; Enables user code to write the Software Trigger Interrupt register to trigger (pend) a Main exception */</div><div class="line">#define  SCB_CCR_UNALIGN_TRP                 ((uint16_t)0x0008)            /*!&lt; Trap for unaligned access */</div><div class="line">#define  SCB_CCR_DIV_0_TRP                   ((uint16_t)0x0010)            /*!&lt; Trap on Divide by 0 */</div><div class="line">#define  SCB_CCR_BFHFNMIGN                   ((uint16_t)0x0100)            /*!&lt; Handlers running at priority -1 and -2 */</div><div class="line">#define  SCB_CCR_STKALIGN                    ((uint16_t)0x0200)            /*!&lt; On exception entry, the SP used prior to the exception is adjusted to be 8-byte aligned */</div><div class="line"></div><div class="line">/*******************  Bit definition for SCB_SHPR register ********************/</div><div class="line">#define  SCB_SHPR_PRI_N                      ((uint32_t)0x000000FF)        /*!&lt; Priority of system handler 4,8, and 12. Mem Manage, reserved and Debug Monitor */</div><div class="line">#define  SCB_SHPR_PRI_N1                     ((uint32_t)0x0000FF00)        /*!&lt; Priority of system handler 5,9, and 13. Bus Fault, reserved and reserved */</div><div class="line">#define  SCB_SHPR_PRI_N2                     ((uint32_t)0x00FF0000)        /*!&lt; Priority of system handler 6,10, and 14. Usage Fault, reserved and PendSV */</div><div class="line">#define  SCB_SHPR_PRI_N3                     ((uint32_t)0xFF000000)        /*!&lt; Priority of system handler 7,11, and 15. Reserved, SVCall and SysTick */</div><div class="line"></div><div class="line">/******************  Bit definition for SCB_SHCSR register  *******************/</div><div class="line">#define  SCB_SHCSR_MEMFAULTACT               ((uint32_t)0x00000001)        /*!&lt; MemManage is active */</div><div class="line">#define  SCB_SHCSR_BUSFAULTACT               ((uint32_t)0x00000002)        /*!&lt; BusFault is active */</div><div class="line">#define  SCB_SHCSR_USGFAULTACT               ((uint32_t)0x00000008)        /*!&lt; UsageFault is active */</div><div class="line">#define  SCB_SHCSR_SVCALLACT                 ((uint32_t)0x00000080)        /*!&lt; SVCall is active */</div><div class="line">#define  SCB_SHCSR_MONITORACT                ((uint32_t)0x00000100)        /*!&lt; Monitor is active */</div><div class="line">#define  SCB_SHCSR_PENDSVACT                 ((uint32_t)0x00000400)        /*!&lt; PendSV is active */</div><div class="line">#define  SCB_SHCSR_SYSTICKACT                ((uint32_t)0x00000800)        /*!&lt; SysTick is active */</div><div class="line">#define  SCB_SHCSR_USGFAULTPENDED            ((uint32_t)0x00001000)        /*!&lt; Usage Fault is pended */</div><div class="line">#define  SCB_SHCSR_MEMFAULTPENDED            ((uint32_t)0x00002000)        /*!&lt; MemManage is pended */</div><div class="line">#define  SCB_SHCSR_BUSFAULTPENDED            ((uint32_t)0x00004000)        /*!&lt; Bus Fault is pended */</div><div class="line">#define  SCB_SHCSR_SVCALLPENDED              ((uint32_t)0x00008000)        /*!&lt; SVCall is pended */</div><div class="line">#define  SCB_SHCSR_MEMFAULTENA               ((uint32_t)0x00010000)        /*!&lt; MemManage enable */</div><div class="line">#define  SCB_SHCSR_BUSFAULTENA               ((uint32_t)0x00020000)        /*!&lt; Bus Fault enable */</div><div class="line">#define  SCB_SHCSR_USGFAULTENA               ((uint32_t)0x00040000)        /*!&lt; UsageFault enable */</div><div class="line"></div><div class="line">/*******************  Bit definition for SCB_CFSR register  *******************/</div><div class="line">/*!&lt; MFSR */</div><div class="line">#define  SCB_CFSR_IACCVIOL                   ((uint32_t)0x00000001)        /*!&lt; Instruction access violation */</div><div class="line">#define  SCB_CFSR_DACCVIOL                   ((uint32_t)0x00000002)        /*!&lt; Data access violation */</div><div class="line">#define  SCB_CFSR_MUNSTKERR                  ((uint32_t)0x00000008)        /*!&lt; Unstacking error */</div><div class="line">#define  SCB_CFSR_MSTKERR                    ((uint32_t)0x00000010)        /*!&lt; Stacking error */</div><div class="line">#define  SCB_CFSR_MMARVALID                  ((uint32_t)0x00000080)        /*!&lt; Memory Manage Address Register address valid flag */</div><div class="line">/*!&lt; BFSR */</div><div class="line">#define  SCB_CFSR_IBUSERR                    ((uint32_t)0x00000100)        /*!&lt; Instruction bus error flag */</div><div class="line">#define  SCB_CFSR_PRECISERR                  ((uint32_t)0x00000200)        /*!&lt; Precise data bus error */</div><div class="line">#define  SCB_CFSR_IMPRECISERR                ((uint32_t)0x00000400)        /*!&lt; Imprecise data bus error */</div><div class="line">#define  SCB_CFSR_UNSTKERR                   ((uint32_t)0x00000800)        /*!&lt; Unstacking error */</div><div class="line">#define  SCB_CFSR_STKERR                     ((uint32_t)0x00001000)        /*!&lt; Stacking error */</div><div class="line">#define  SCB_CFSR_BFARVALID                  ((uint32_t)0x00008000)        /*!&lt; Bus Fault Address Register address valid flag */</div><div class="line">/*!&lt; UFSR */</div><div class="line">#define  SCB_CFSR_UNDEFINSTR                 ((uint32_t)0x00010000)        /*!&lt; The processor attempt to execute an undefined instruction */</div><div class="line">#define  SCB_CFSR_INVSTATE                   ((uint32_t)0x00020000)        /*!&lt; Invalid combination of EPSR and instruction */</div><div class="line">#define  SCB_CFSR_INVPC                      ((uint32_t)0x00040000)        /*!&lt; Attempt to load EXC_RETURN into pc illegally */</div><div class="line">#define  SCB_CFSR_NOCP                       ((uint32_t)0x00080000)        /*!&lt; Attempt to use a coprocessor instruction */</div><div class="line">#define  SCB_CFSR_UNALIGNED                  ((uint32_t)0x01000000)        /*!&lt; Fault occurs when there is an attempt to make an unaligned memory access */</div><div class="line">#define  SCB_CFSR_DIVBYZERO                  ((uint32_t)0x02000000)        /*!&lt; Fault occurs when SDIV or DIV instruction is used with a divisor of 0 */</div><div class="line"></div><div class="line">/*******************  Bit definition for SCB_HFSR register  *******************/</div><div class="line">#define  SCB_HFSR_VECTTBL                    ((uint32_t)0x00000002)        /*!&lt; Fault occurs because of vector table read on exception processing */</div><div class="line">#define  SCB_HFSR_FORCED                     ((uint32_t)0x40000000)        /*!&lt; Hard Fault activated when a configurable Fault was received and cannot activate */</div><div class="line">#define  SCB_HFSR_DEBUGEVT                   ((uint32_t)0x80000000)        /*!&lt; Fault related to debug */</div><div class="line"></div><div class="line">/*******************  Bit definition for SCB_DFSR register  *******************/</div><div class="line">#define  SCB_DFSR_HALTED                     ((uint8_t)0x01)               /*!&lt; Halt request flag */</div><div class="line">#define  SCB_DFSR_BKPT                       ((uint8_t)0x02)               /*!&lt; BKPT flag */</div><div class="line">#define  SCB_DFSR_DWTTRAP                    ((uint8_t)0x04)               /*!&lt; Data Watchpoint and Trace (DWT) flag */</div><div class="line">#define  SCB_DFSR_VCATCH                     ((uint8_t)0x08)               /*!&lt; Vector catch flag */</div><div class="line">#define  SCB_DFSR_EXTERNAL                   ((uint8_t)0x10)               /*!&lt; External debug request flag */</div><div class="line"></div><div class="line">/*******************  Bit definition for SCB_MMFAR register  ******************/</div><div class="line">#define  SCB_MMFAR_ADDRESS                   ((uint32_t)0xFFFFFFFF)        /*!&lt; Mem Manage fault address field */</div><div class="line"></div><div class="line">/*******************  Bit definition for SCB_BFAR register  *******************/</div><div class="line">#define  SCB_BFAR_ADDRESS                    ((uint32_t)0xFFFFFFFF)        /*!&lt; Bus fault address field */</div><div class="line"></div><div class="line">/*******************  Bit definition for SCB_afsr register  *******************/</div><div class="line">#define  SCB_AFSR_IMPDEF                     ((uint32_t)0xFFFFFFFF)        /*!&lt; Implementation defined */</div><div class="line"></div><div class="line">/******************************************************************************/</div><div class="line">/*                                                                            */</div><div class="line">/*                    External Interrupt/Event Controller                     */</div><div class="line">/*                                                                            */</div><div class="line">/******************************************************************************/</div><div class="line"></div><div class="line">/*******************  Bit definition for EXTI_IMR register  *******************/</div><div class="line">#define  EXTI_IMR_MR0                        ((uint32_t)0x00000001)        /*!&lt; Interrupt Mask on line 0 */</div><div class="line">#define  EXTI_IMR_MR1                        ((uint32_t)0x00000002)        /*!&lt; Interrupt Mask on line 1 */</div><div class="line">#define  EXTI_IMR_MR2                        ((uint32_t)0x00000004)        /*!&lt; Interrupt Mask on line 2 */</div><div class="line">#define  EXTI_IMR_MR3                        ((uint32_t)0x00000008)        /*!&lt; Interrupt Mask on line 3 */</div><div class="line">#define  EXTI_IMR_MR4                        ((uint32_t)0x00000010)        /*!&lt; Interrupt Mask on line 4 */</div><div class="line">#define  EXTI_IMR_MR5                        ((uint32_t)0x00000020)        /*!&lt; Interrupt Mask on line 5 */</div><div class="line">#define  EXTI_IMR_MR6                        ((uint32_t)0x00000040)        /*!&lt; Interrupt Mask on line 6 */</div><div class="line">#define  EXTI_IMR_MR7                        ((uint32_t)0x00000080)        /*!&lt; Interrupt Mask on line 7 */</div><div class="line">#define  EXTI_IMR_MR8                        ((uint32_t)0x00000100)        /*!&lt; Interrupt Mask on line 8 */</div><div class="line">#define  EXTI_IMR_MR9                        ((uint32_t)0x00000200)        /*!&lt; Interrupt Mask on line 9 */</div><div class="line">#define  EXTI_IMR_MR10                       ((uint32_t)0x00000400)        /*!&lt; Interrupt Mask on line 10 */</div><div class="line">#define  EXTI_IMR_MR11                       ((uint32_t)0x00000800)        /*!&lt; Interrupt Mask on line 11 */</div><div class="line">#define  EXTI_IMR_MR12                       ((uint32_t)0x00001000)        /*!&lt; Interrupt Mask on line 12 */</div><div class="line">#define  EXTI_IMR_MR13                       ((uint32_t)0x00002000)        /*!&lt; Interrupt Mask on line 13 */</div><div class="line">#define  EXTI_IMR_MR14                       ((uint32_t)0x00004000)        /*!&lt; Interrupt Mask on line 14 */</div><div class="line">#define  EXTI_IMR_MR15                       ((uint32_t)0x00008000)        /*!&lt; Interrupt Mask on line 15 */</div><div class="line">#define  EXTI_IMR_MR16                       ((uint32_t)0x00010000)        /*!&lt; Interrupt Mask on line 16 */</div><div class="line">#define  EXTI_IMR_MR17                       ((uint32_t)0x00020000)        /*!&lt; Interrupt Mask on line 17 */</div><div class="line">#define  EXTI_IMR_MR18                       ((uint32_t)0x00040000)        /*!&lt; Interrupt Mask on line 18 */</div><div class="line">#define  EXTI_IMR_MR19                       ((uint32_t)0x00080000)        /*!&lt; Interrupt Mask on line 19 */</div><div class="line"></div><div class="line">/*******************  Bit definition for EXTI_EMR register  *******************/</div><div class="line">#define  EXTI_EMR_MR0                        ((uint32_t)0x00000001)        /*!&lt; Event Mask on line 0 */</div><div class="line">#define  EXTI_EMR_MR1                        ((uint32_t)0x00000002)        /*!&lt; Event Mask on line 1 */</div><div class="line">#define  EXTI_EMR_MR2                        ((uint32_t)0x00000004)        /*!&lt; Event Mask on line 2 */</div><div class="line">#define  EXTI_EMR_MR3                        ((uint32_t)0x00000008)        /*!&lt; Event Mask on line 3 */</div><div class="line">#define  EXTI_EMR_MR4                        ((uint32_t)0x00000010)        /*!&lt; Event Mask on line 4 */</div><div class="line">#define  EXTI_EMR_MR5                        ((uint32_t)0x00000020)        /*!&lt; Event Mask on line 5 */</div><div class="line">#define  EXTI_EMR_MR6                        ((uint32_t)0x00000040)        /*!&lt; Event Mask on line 6 */</div><div class="line">#define  EXTI_EMR_MR7                        ((uint32_t)0x00000080)        /*!&lt; Event Mask on line 7 */</div><div class="line">#define  EXTI_EMR_MR8                        ((uint32_t)0x00000100)        /*!&lt; Event Mask on line 8 */</div><div class="line">#define  EXTI_EMR_MR9                        ((uint32_t)0x00000200)        /*!&lt; Event Mask on line 9 */</div><div class="line">#define  EXTI_EMR_MR10                       ((uint32_t)0x00000400)        /*!&lt; Event Mask on line 10 */</div><div class="line">#define  EXTI_EMR_MR11                       ((uint32_t)0x00000800)        /*!&lt; Event Mask on line 11 */</div><div class="line">#define  EXTI_EMR_MR12                       ((uint32_t)0x00001000)        /*!&lt; Event Mask on line 12 */</div><div class="line">#define  EXTI_EMR_MR13                       ((uint32_t)0x00002000)        /*!&lt; Event Mask on line 13 */</div><div class="line">#define  EXTI_EMR_MR14                       ((uint32_t)0x00004000)        /*!&lt; Event Mask on line 14 */</div><div class="line">#define  EXTI_EMR_MR15                       ((uint32_t)0x00008000)        /*!&lt; Event Mask on line 15 */</div><div class="line">#define  EXTI_EMR_MR16                       ((uint32_t)0x00010000)        /*!&lt; Event Mask on line 16 */</div><div class="line">#define  EXTI_EMR_MR17                       ((uint32_t)0x00020000)        /*!&lt; Event Mask on line 17 */</div><div class="line">#define  EXTI_EMR_MR18                       ((uint32_t)0x00040000)        /*!&lt; Event Mask on line 18 */</div><div class="line">#define  EXTI_EMR_MR19                       ((uint32_t)0x00080000)        /*!&lt; Event Mask on line 19 */</div><div class="line"></div><div class="line">/******************  Bit definition for EXTI_RTSR register  *******************/</div><div class="line">#define  EXTI_RTSR_TR0                       ((uint32_t)0x00000001)        /*!&lt; Rising trigger event configuration bit of line 0 */</div><div class="line">#define  EXTI_RTSR_TR1                       ((uint32_t)0x00000002)        /*!&lt; Rising trigger event configuration bit of line 1 */</div><div class="line">#define  EXTI_RTSR_TR2                       ((uint32_t)0x00000004)        /*!&lt; Rising trigger event configuration bit of line 2 */</div><div class="line">#define  EXTI_RTSR_TR3                       ((uint32_t)0x00000008)        /*!&lt; Rising trigger event configuration bit of line 3 */</div><div class="line">#define  EXTI_RTSR_TR4                       ((uint32_t)0x00000010)        /*!&lt; Rising trigger event configuration bit of line 4 */</div><div class="line">#define  EXTI_RTSR_TR5                       ((uint32_t)0x00000020)        /*!&lt; Rising trigger event configuration bit of line 5 */</div><div class="line">#define  EXTI_RTSR_TR6                       ((uint32_t)0x00000040)        /*!&lt; Rising trigger event configuration bit of line 6 */</div><div class="line">#define  EXTI_RTSR_TR7                       ((uint32_t)0x00000080)        /*!&lt; Rising trigger event configuration bit of line 7 */</div><div class="line">#define  EXTI_RTSR_TR8                       ((uint32_t)0x00000100)        /*!&lt; Rising trigger event configuration bit of line 8 */</div><div class="line">#define  EXTI_RTSR_TR9                       ((uint32_t)0x00000200)        /*!&lt; Rising trigger event configuration bit of line 9 */</div><div class="line">#define  EXTI_RTSR_TR10                      ((uint32_t)0x00000400)        /*!&lt; Rising trigger event configuration bit of line 10 */</div><div class="line">#define  EXTI_RTSR_TR11                      ((uint32_t)0x00000800)        /*!&lt; Rising trigger event configuration bit of line 11 */</div><div class="line">#define  EXTI_RTSR_TR12                      ((uint32_t)0x00001000)        /*!&lt; Rising trigger event configuration bit of line 12 */</div><div class="line">#define  EXTI_RTSR_TR13                      ((uint32_t)0x00002000)        /*!&lt; Rising trigger event configuration bit of line 13 */</div><div class="line">#define  EXTI_RTSR_TR14                      ((uint32_t)0x00004000)        /*!&lt; Rising trigger event configuration bit of line 14 */</div><div class="line">#define  EXTI_RTSR_TR15                      ((uint32_t)0x00008000)        /*!&lt; Rising trigger event configuration bit of line 15 */</div><div class="line">#define  EXTI_RTSR_TR16                      ((uint32_t)0x00010000)        /*!&lt; Rising trigger event configuration bit of line 16 */</div><div class="line">#define  EXTI_RTSR_TR17                      ((uint32_t)0x00020000)        /*!&lt; Rising trigger event configuration bit of line 17 */</div><div class="line">#define  EXTI_RTSR_TR18                      ((uint32_t)0x00040000)        /*!&lt; Rising trigger event configuration bit of line 18 */</div><div class="line">#define  EXTI_RTSR_TR19                      ((uint32_t)0x00080000)        /*!&lt; Rising trigger event configuration bit of line 19 */</div><div class="line"></div><div class="line">/******************  Bit definition for EXTI_FTSR register  *******************/</div><div class="line">#define  EXTI_FTSR_TR0                       ((uint32_t)0x00000001)        /*!&lt; Falling trigger event configuration bit of line 0 */</div><div class="line">#define  EXTI_FTSR_TR1                       ((uint32_t)0x00000002)        /*!&lt; Falling trigger event configuration bit of line 1 */</div><div class="line">#define  EXTI_FTSR_TR2                       ((uint32_t)0x00000004)        /*!&lt; Falling trigger event configuration bit of line 2 */</div><div class="line">#define  EXTI_FTSR_TR3                       ((uint32_t)0x00000008)        /*!&lt; Falling trigger event configuration bit of line 3 */</div><div class="line">#define  EXTI_FTSR_TR4                       ((uint32_t)0x00000010)        /*!&lt; Falling trigger event configuration bit of line 4 */</div><div class="line">#define  EXTI_FTSR_TR5                       ((uint32_t)0x00000020)        /*!&lt; Falling trigger event configuration bit of line 5 */</div><div class="line">#define  EXTI_FTSR_TR6                       ((uint32_t)0x00000040)        /*!&lt; Falling trigger event configuration bit of line 6 */</div><div class="line">#define  EXTI_FTSR_TR7                       ((uint32_t)0x00000080)        /*!&lt; Falling trigger event configuration bit of line 7 */</div><div class="line">#define  EXTI_FTSR_TR8                       ((uint32_t)0x00000100)        /*!&lt; Falling trigger event configuration bit of line 8 */</div><div class="line">#define  EXTI_FTSR_TR9                       ((uint32_t)0x00000200)        /*!&lt; Falling trigger event configuration bit of line 9 */</div><div class="line">#define  EXTI_FTSR_TR10                      ((uint32_t)0x00000400)        /*!&lt; Falling trigger event configuration bit of line 10 */</div><div class="line">#define  EXTI_FTSR_TR11                      ((uint32_t)0x00000800)        /*!&lt; Falling trigger event configuration bit of line 11 */</div><div class="line">#define  EXTI_FTSR_TR12                      ((uint32_t)0x00001000)        /*!&lt; Falling trigger event configuration bit of line 12 */</div><div class="line">#define  EXTI_FTSR_TR13                      ((uint32_t)0x00002000)        /*!&lt; Falling trigger event configuration bit of line 13 */</div><div class="line">#define  EXTI_FTSR_TR14                      ((uint32_t)0x00004000)        /*!&lt; Falling trigger event configuration bit of line 14 */</div><div class="line">#define  EXTI_FTSR_TR15                      ((uint32_t)0x00008000)        /*!&lt; Falling trigger event configuration bit of line 15 */</div><div class="line">#define  EXTI_FTSR_TR16                      ((uint32_t)0x00010000)        /*!&lt; Falling trigger event configuration bit of line 16 */</div><div class="line">#define  EXTI_FTSR_TR17                      ((uint32_t)0x00020000)        /*!&lt; Falling trigger event configuration bit of line 17 */</div><div class="line">#define  EXTI_FTSR_TR18                      ((uint32_t)0x00040000)        /*!&lt; Falling trigger event configuration bit of line 18 */</div><div class="line">#define  EXTI_FTSR_TR19                      ((uint32_t)0x00080000)        /*!&lt; Falling trigger event configuration bit of line 19 */</div><div class="line"></div><div class="line">/******************  Bit definition for EXTI_SWIER register  ******************/</div><div class="line">#define  EXTI_SWIER_SWIER0                   ((uint32_t)0x00000001)        /*!&lt; Software Interrupt on line 0 */</div><div class="line">#define  EXTI_SWIER_SWIER1                   ((uint32_t)0x00000002)        /*!&lt; Software Interrupt on line 1 */</div><div class="line">#define  EXTI_SWIER_SWIER2                   ((uint32_t)0x00000004)        /*!&lt; Software Interrupt on line 2 */</div><div class="line">#define  EXTI_SWIER_SWIER3                   ((uint32_t)0x00000008)        /*!&lt; Software Interrupt on line 3 */</div><div class="line">#define  EXTI_SWIER_SWIER4                   ((uint32_t)0x00000010)        /*!&lt; Software Interrupt on line 4 */</div><div class="line">#define  EXTI_SWIER_SWIER5                   ((uint32_t)0x00000020)        /*!&lt; Software Interrupt on line 5 */</div><div class="line">#define  EXTI_SWIER_SWIER6                   ((uint32_t)0x00000040)        /*!&lt; Software Interrupt on line 6 */</div><div class="line">#define  EXTI_SWIER_SWIER7                   ((uint32_t)0x00000080)        /*!&lt; Software Interrupt on line 7 */</div><div class="line">#define  EXTI_SWIER_SWIER8                   ((uint32_t)0x00000100)        /*!&lt; Software Interrupt on line 8 */</div><div class="line">#define  EXTI_SWIER_SWIER9                   ((uint32_t)0x00000200)        /*!&lt; Software Interrupt on line 9 */</div><div class="line">#define  EXTI_SWIER_SWIER10                  ((uint32_t)0x00000400)        /*!&lt; Software Interrupt on line 10 */</div><div class="line">#define  EXTI_SWIER_SWIER11                  ((uint32_t)0x00000800)        /*!&lt; Software Interrupt on line 11 */</div><div class="line">#define  EXTI_SWIER_SWIER12                  ((uint32_t)0x00001000)        /*!&lt; Software Interrupt on line 12 */</div><div class="line">#define  EXTI_SWIER_SWIER13                  ((uint32_t)0x00002000)        /*!&lt; Software Interrupt on line 13 */</div><div class="line">#define  EXTI_SWIER_SWIER14                  ((uint32_t)0x00004000)        /*!&lt; Software Interrupt on line 14 */</div><div class="line">#define  EXTI_SWIER_SWIER15                  ((uint32_t)0x00008000)        /*!&lt; Software Interrupt on line 15 */</div><div class="line">#define  EXTI_SWIER_SWIER16                  ((uint32_t)0x00010000)        /*!&lt; Software Interrupt on line 16 */</div><div class="line">#define  EXTI_SWIER_SWIER17                  ((uint32_t)0x00020000)        /*!&lt; Software Interrupt on line 17 */</div><div class="line">#define  EXTI_SWIER_SWIER18                  ((uint32_t)0x00040000)        /*!&lt; Software Interrupt on line 18 */</div><div class="line">#define  EXTI_SWIER_SWIER19                  ((uint32_t)0x00080000)        /*!&lt; Software Interrupt on line 19 */</div><div class="line"></div><div class="line">/*******************  Bit definition for EXTI_PR register  ********************/</div><div class="line">#define  EXTI_PR_PR0                         ((uint32_t)0x00000001)        /*!&lt; Pending bit for line 0 */</div><div class="line">#define  EXTI_PR_PR1                         ((uint32_t)0x00000002)        /*!&lt; Pending bit for line 1 */</div><div class="line">#define  EXTI_PR_PR2                         ((uint32_t)0x00000004)        /*!&lt; Pending bit for line 2 */</div><div class="line">#define  EXTI_PR_PR3                         ((uint32_t)0x00000008)        /*!&lt; Pending bit for line 3 */</div><div class="line">#define  EXTI_PR_PR4                         ((uint32_t)0x00000010)        /*!&lt; Pending bit for line 4 */</div><div class="line">#define  EXTI_PR_PR5                         ((uint32_t)0x00000020)        /*!&lt; Pending bit for line 5 */</div><div class="line">#define  EXTI_PR_PR6                         ((uint32_t)0x00000040)        /*!&lt; Pending bit for line 6 */</div><div class="line">#define  EXTI_PR_PR7                         ((uint32_t)0x00000080)        /*!&lt; Pending bit for line 7 */</div><div class="line">#define  EXTI_PR_PR8                         ((uint32_t)0x00000100)        /*!&lt; Pending bit for line 8 */</div><div class="line">#define  EXTI_PR_PR9                         ((uint32_t)0x00000200)        /*!&lt; Pending bit for line 9 */</div><div class="line">#define  EXTI_PR_PR10                        ((uint32_t)0x00000400)        /*!&lt; Pending bit for line 10 */</div><div class="line">#define  EXTI_PR_PR11                        ((uint32_t)0x00000800)        /*!&lt; Pending bit for line 11 */</div><div class="line">#define  EXTI_PR_PR12                        ((uint32_t)0x00001000)        /*!&lt; Pending bit for line 12 */</div><div class="line">#define  EXTI_PR_PR13                        ((uint32_t)0x00002000)        /*!&lt; Pending bit for line 13 */</div><div class="line">#define  EXTI_PR_PR14                        ((uint32_t)0x00004000)        /*!&lt; Pending bit for line 14 */</div><div class="line">#define  EXTI_PR_PR15                        ((uint32_t)0x00008000)        /*!&lt; Pending bit for line 15 */</div><div class="line">#define  EXTI_PR_PR16                        ((uint32_t)0x00010000)        /*!&lt; Pending bit for line 16 */</div><div class="line">#define  EXTI_PR_PR17                        ((uint32_t)0x00020000)        /*!&lt; Pending bit for line 17 */</div><div class="line">#define  EXTI_PR_PR18                        ((uint32_t)0x00040000)        /*!&lt; Pending bit for line 18 */</div><div class="line">#define  EXTI_PR_PR19                        ((uint32_t)0x00080000)        /*!&lt; Pending bit for line 19 */</div><div class="line"></div><div class="line">/******************************************************************************/</div><div class="line">/*                                                                            */</div><div class="line">/*                             DMA Controller                                 */</div><div class="line">/*                                                                            */</div><div class="line">/******************************************************************************/</div><div class="line"></div><div class="line">/*******************  Bit definition for DMA_ISR register  ********************/</div><div class="line">#define  DMA_ISR_GIF1                        ((uint32_t)0x00000001)        /*!&lt; Channel 1 Global interrupt flag */</div><div class="line">#define  DMA_ISR_TCIF1                       ((uint32_t)0x00000002)        /*!&lt; Channel 1 Transfer Complete flag */</div><div class="line">#define  DMA_ISR_HTIF1                       ((uint32_t)0x00000004)        /*!&lt; Channel 1 Half Transfer flag */</div><div class="line">#define  DMA_ISR_TEIF1                       ((uint32_t)0x00000008)        /*!&lt; Channel 1 Transfer Error flag */</div><div class="line">#define  DMA_ISR_GIF2                        ((uint32_t)0x00000010)        /*!&lt; Channel 2 Global interrupt flag */</div><div class="line">#define  DMA_ISR_TCIF2                       ((uint32_t)0x00000020)        /*!&lt; Channel 2 Transfer Complete flag */</div><div class="line">#define  DMA_ISR_HTIF2                       ((uint32_t)0x00000040)        /*!&lt; Channel 2 Half Transfer flag */</div><div class="line">#define  DMA_ISR_TEIF2                       ((uint32_t)0x00000080)        /*!&lt; Channel 2 Transfer Error flag */</div><div class="line">#define  DMA_ISR_GIF3                        ((uint32_t)0x00000100)        /*!&lt; Channel 3 Global interrupt flag */</div><div class="line">#define  DMA_ISR_TCIF3                       ((uint32_t)0x00000200)        /*!&lt; Channel 3 Transfer Complete flag */</div><div class="line">#define  DMA_ISR_HTIF3                       ((uint32_t)0x00000400)        /*!&lt; Channel 3 Half Transfer flag */</div><div class="line">#define  DMA_ISR_TEIF3                       ((uint32_t)0x00000800)        /*!&lt; Channel 3 Transfer Error flag */</div><div class="line">#define  DMA_ISR_GIF4                        ((uint32_t)0x00001000)        /*!&lt; Channel 4 Global interrupt flag */</div><div class="line">#define  DMA_ISR_TCIF4                       ((uint32_t)0x00002000)        /*!&lt; Channel 4 Transfer Complete flag */</div><div class="line">#define  DMA_ISR_HTIF4                       ((uint32_t)0x00004000)        /*!&lt; Channel 4 Half Transfer flag */</div><div class="line">#define  DMA_ISR_TEIF4                       ((uint32_t)0x00008000)        /*!&lt; Channel 4 Transfer Error flag */</div><div class="line">#define  DMA_ISR_GIF5                        ((uint32_t)0x00010000)        /*!&lt; Channel 5 Global interrupt flag */</div><div class="line">#define  DMA_ISR_TCIF5                       ((uint32_t)0x00020000)        /*!&lt; Channel 5 Transfer Complete flag */</div><div class="line">#define  DMA_ISR_HTIF5                       ((uint32_t)0x00040000)        /*!&lt; Channel 5 Half Transfer flag */</div><div class="line">#define  DMA_ISR_TEIF5                       ((uint32_t)0x00080000)        /*!&lt; Channel 5 Transfer Error flag */</div><div class="line">#define  DMA_ISR_GIF6                        ((uint32_t)0x00100000)        /*!&lt; Channel 6 Global interrupt flag */</div><div class="line">#define  DMA_ISR_TCIF6                       ((uint32_t)0x00200000)        /*!&lt; Channel 6 Transfer Complete flag */</div><div class="line">#define  DMA_ISR_HTIF6                       ((uint32_t)0x00400000)        /*!&lt; Channel 6 Half Transfer flag */</div><div class="line">#define  DMA_ISR_TEIF6                       ((uint32_t)0x00800000)        /*!&lt; Channel 6 Transfer Error flag */</div><div class="line">#define  DMA_ISR_GIF7                        ((uint32_t)0x01000000)        /*!&lt; Channel 7 Global interrupt flag */</div><div class="line">#define  DMA_ISR_TCIF7                       ((uint32_t)0x02000000)        /*!&lt; Channel 7 Transfer Complete flag */</div><div class="line">#define  DMA_ISR_HTIF7                       ((uint32_t)0x04000000)        /*!&lt; Channel 7 Half Transfer flag */</div><div class="line">#define  DMA_ISR_TEIF7                       ((uint32_t)0x08000000)        /*!&lt; Channel 7 Transfer Error flag */</div><div class="line"></div><div class="line">/*******************  Bit definition for DMA_IFCR register  *******************/</div><div class="line">#define  DMA_IFCR_CGIF1                      ((uint32_t)0x00000001)        /*!&lt; Channel 1 Global interrupt clear */</div><div class="line">#define  DMA_IFCR_CTCIF1                     ((uint32_t)0x00000002)        /*!&lt; Channel 1 Transfer Complete clear */</div><div class="line">#define  DMA_IFCR_CHTIF1                     ((uint32_t)0x00000004)        /*!&lt; Channel 1 Half Transfer clear */</div><div class="line">#define  DMA_IFCR_CTEIF1                     ((uint32_t)0x00000008)        /*!&lt; Channel 1 Transfer Error clear */</div><div class="line">#define  DMA_IFCR_CGIF2                      ((uint32_t)0x00000010)        /*!&lt; Channel 2 Global interrupt clear */</div><div class="line">#define  DMA_IFCR_CTCIF2                     ((uint32_t)0x00000020)        /*!&lt; Channel 2 Transfer Complete clear */</div><div class="line">#define  DMA_IFCR_CHTIF2                     ((uint32_t)0x00000040)        /*!&lt; Channel 2 Half Transfer clear */</div><div class="line">#define  DMA_IFCR_CTEIF2                     ((uint32_t)0x00000080)        /*!&lt; Channel 2 Transfer Error clear */</div><div class="line">#define  DMA_IFCR_CGIF3                      ((uint32_t)0x00000100)        /*!&lt; Channel 3 Global interrupt clear */</div><div class="line">#define  DMA_IFCR_CTCIF3                     ((uint32_t)0x00000200)        /*!&lt; Channel 3 Transfer Complete clear */</div><div class="line">#define  DMA_IFCR_CHTIF3                     ((uint32_t)0x00000400)        /*!&lt; Channel 3 Half Transfer clear */</div><div class="line">#define  DMA_IFCR_CTEIF3                     ((uint32_t)0x00000800)        /*!&lt; Channel 3 Transfer Error clear */</div><div class="line">#define  DMA_IFCR_CGIF4                      ((uint32_t)0x00001000)        /*!&lt; Channel 4 Global interrupt clear */</div><div class="line">#define  DMA_IFCR_CTCIF4                     ((uint32_t)0x00002000)        /*!&lt; Channel 4 Transfer Complete clear */</div><div class="line">#define  DMA_IFCR_CHTIF4                     ((uint32_t)0x00004000)        /*!&lt; Channel 4 Half Transfer clear */</div><div class="line">#define  DMA_IFCR_CTEIF4                     ((uint32_t)0x00008000)        /*!&lt; Channel 4 Transfer Error clear */</div><div class="line">#define  DMA_IFCR_CGIF5                      ((uint32_t)0x00010000)        /*!&lt; Channel 5 Global interrupt clear */</div><div class="line">#define  DMA_IFCR_CTCIF5                     ((uint32_t)0x00020000)        /*!&lt; Channel 5 Transfer Complete clear */</div><div class="line">#define  DMA_IFCR_CHTIF5                     ((uint32_t)0x00040000)        /*!&lt; Channel 5 Half Transfer clear */</div><div class="line">#define  DMA_IFCR_CTEIF5                     ((uint32_t)0x00080000)        /*!&lt; Channel 5 Transfer Error clear */</div><div class="line">#define  DMA_IFCR_CGIF6                      ((uint32_t)0x00100000)        /*!&lt; Channel 6 Global interrupt clear */</div><div class="line">#define  DMA_IFCR_CTCIF6                     ((uint32_t)0x00200000)        /*!&lt; Channel 6 Transfer Complete clear */</div><div class="line">#define  DMA_IFCR_CHTIF6                     ((uint32_t)0x00400000)        /*!&lt; Channel 6 Half Transfer clear */</div><div class="line">#define  DMA_IFCR_CTEIF6                     ((uint32_t)0x00800000)        /*!&lt; Channel 6 Transfer Error clear */</div><div class="line">#define  DMA_IFCR_CGIF7                      ((uint32_t)0x01000000)        /*!&lt; Channel 7 Global interrupt clear */</div><div class="line">#define  DMA_IFCR_CTCIF7                     ((uint32_t)0x02000000)        /*!&lt; Channel 7 Transfer Complete clear */</div><div class="line">#define  DMA_IFCR_CHTIF7                     ((uint32_t)0x04000000)        /*!&lt; Channel 7 Half Transfer clear */</div><div class="line">#define  DMA_IFCR_CTEIF7                     ((uint32_t)0x08000000)        /*!&lt; Channel 7 Transfer Error clear */</div><div class="line"></div><div class="line">/*******************  Bit definition for DMA_CCR1 register  *******************/</div><div class="line">#define  DMA_CCR1_EN                         ((uint16_t)0x0001)            /*!&lt; Channel enable*/</div><div class="line">#define  DMA_CCR1_TCIE                       ((uint16_t)0x0002)            /*!&lt; Transfer complete interrupt enable */</div><div class="line">#define  DMA_CCR1_HTIE                       ((uint16_t)0x0004)            /*!&lt; Half Transfer interrupt enable */</div><div class="line">#define  DMA_CCR1_TEIE                       ((uint16_t)0x0008)            /*!&lt; Transfer error interrupt enable */</div><div class="line">#define  DMA_CCR1_DIR                        ((uint16_t)0x0010)            /*!&lt; Data transfer direction */</div><div class="line">#define  DMA_CCR1_CIRC                       ((uint16_t)0x0020)            /*!&lt; Circular mode */</div><div class="line">#define  DMA_CCR1_PINC                       ((uint16_t)0x0040)            /*!&lt; Peripheral increment mode */</div><div class="line">#define  DMA_CCR1_MINC                       ((uint16_t)0x0080)            /*!&lt; Memory increment mode */</div><div class="line"></div><div class="line">#define  DMA_CCR1_PSIZE                      ((uint16_t)0x0300)            /*!&lt; PSIZE[1:0] bits (Peripheral size) */</div><div class="line">#define  DMA_CCR1_PSIZE_0                    ((uint16_t)0x0100)            /*!&lt; Bit 0 */</div><div class="line">#define  DMA_CCR1_PSIZE_1                    ((uint16_t)0x0200)            /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  DMA_CCR1_MSIZE                      ((uint16_t)0x0C00)            /*!&lt; MSIZE[1:0] bits (Memory size) */</div><div class="line">#define  DMA_CCR1_MSIZE_0                    ((uint16_t)0x0400)            /*!&lt; Bit 0 */</div><div class="line">#define  DMA_CCR1_MSIZE_1                    ((uint16_t)0x0800)            /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  DMA_CCR1_PL                         ((uint16_t)0x3000)            /*!&lt; PL[1:0] bits(Channel Priority level) */</div><div class="line">#define  DMA_CCR1_PL_0                       ((uint16_t)0x1000)            /*!&lt; Bit 0 */</div><div class="line">#define  DMA_CCR1_PL_1                       ((uint16_t)0x2000)            /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  DMA_CCR1_MEM2MEM                    ((uint16_t)0x4000)            /*!&lt; Memory to memory mode */</div><div class="line"></div><div class="line">/*******************  Bit definition for DMA_CCR2 register  *******************/</div><div class="line">#define  DMA_CCR2_EN                         ((uint16_t)0x0001)            /*!&lt; Channel enable */</div><div class="line">#define  DMA_CCR2_TCIE                       ((uint16_t)0x0002)            /*!&lt; Transfer complete interrupt enable */</div><div class="line">#define  DMA_CCR2_HTIE                       ((uint16_t)0x0004)            /*!&lt; Half Transfer interrupt enable */</div><div class="line">#define  DMA_CCR2_TEIE                       ((uint16_t)0x0008)            /*!&lt; Transfer error interrupt enable */</div><div class="line">#define  DMA_CCR2_DIR                        ((uint16_t)0x0010)            /*!&lt; Data transfer direction */</div><div class="line">#define  DMA_CCR2_CIRC                       ((uint16_t)0x0020)            /*!&lt; Circular mode */</div><div class="line">#define  DMA_CCR2_PINC                       ((uint16_t)0x0040)            /*!&lt; Peripheral increment mode */</div><div class="line">#define  DMA_CCR2_MINC                       ((uint16_t)0x0080)            /*!&lt; Memory increment mode */</div><div class="line"></div><div class="line">#define  DMA_CCR2_PSIZE                      ((uint16_t)0x0300)            /*!&lt; PSIZE[1:0] bits (Peripheral size) */</div><div class="line">#define  DMA_CCR2_PSIZE_0                    ((uint16_t)0x0100)            /*!&lt; Bit 0 */</div><div class="line">#define  DMA_CCR2_PSIZE_1                    ((uint16_t)0x0200)            /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  DMA_CCR2_MSIZE                      ((uint16_t)0x0C00)            /*!&lt; MSIZE[1:0] bits (Memory size) */</div><div class="line">#define  DMA_CCR2_MSIZE_0                    ((uint16_t)0x0400)            /*!&lt; Bit 0 */</div><div class="line">#define  DMA_CCR2_MSIZE_1                    ((uint16_t)0x0800)            /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  DMA_CCR2_PL                         ((uint16_t)0x3000)            /*!&lt; PL[1:0] bits (Channel Priority level) */</div><div class="line">#define  DMA_CCR2_PL_0                       ((uint16_t)0x1000)            /*!&lt; Bit 0 */</div><div class="line">#define  DMA_CCR2_PL_1                       ((uint16_t)0x2000)            /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  DMA_CCR2_MEM2MEM                    ((uint16_t)0x4000)            /*!&lt; Memory to memory mode */</div><div class="line"></div><div class="line">/*******************  Bit definition for DMA_CCR3 register  *******************/</div><div class="line">#define  DMA_CCR3_EN                         ((uint16_t)0x0001)            /*!&lt; Channel enable */</div><div class="line">#define  DMA_CCR3_TCIE                       ((uint16_t)0x0002)            /*!&lt; Transfer complete interrupt enable */</div><div class="line">#define  DMA_CCR3_HTIE                       ((uint16_t)0x0004)            /*!&lt; Half Transfer interrupt enable */</div><div class="line">#define  DMA_CCR3_TEIE                       ((uint16_t)0x0008)            /*!&lt; Transfer error interrupt enable */</div><div class="line">#define  DMA_CCR3_DIR                        ((uint16_t)0x0010)            /*!&lt; Data transfer direction */</div><div class="line">#define  DMA_CCR3_CIRC                       ((uint16_t)0x0020)            /*!&lt; Circular mode */</div><div class="line">#define  DMA_CCR3_PINC                       ((uint16_t)0x0040)            /*!&lt; Peripheral increment mode */</div><div class="line">#define  DMA_CCR3_MINC                       ((uint16_t)0x0080)            /*!&lt; Memory increment mode */</div><div class="line"></div><div class="line">#define  DMA_CCR3_PSIZE                      ((uint16_t)0x0300)            /*!&lt; PSIZE[1:0] bits (Peripheral size) */</div><div class="line">#define  DMA_CCR3_PSIZE_0                    ((uint16_t)0x0100)            /*!&lt; Bit 0 */</div><div class="line">#define  DMA_CCR3_PSIZE_1                    ((uint16_t)0x0200)            /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  DMA_CCR3_MSIZE                      ((uint16_t)0x0C00)            /*!&lt; MSIZE[1:0] bits (Memory size) */</div><div class="line">#define  DMA_CCR3_MSIZE_0                    ((uint16_t)0x0400)            /*!&lt; Bit 0 */</div><div class="line">#define  DMA_CCR3_MSIZE_1                    ((uint16_t)0x0800)            /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  DMA_CCR3_PL                         ((uint16_t)0x3000)            /*!&lt; PL[1:0] bits (Channel Priority level) */</div><div class="line">#define  DMA_CCR3_PL_0                       ((uint16_t)0x1000)            /*!&lt; Bit 0 */</div><div class="line">#define  DMA_CCR3_PL_1                       ((uint16_t)0x2000)            /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  DMA_CCR3_MEM2MEM                    ((uint16_t)0x4000)            /*!&lt; Memory to memory mode */</div><div class="line"></div><div class="line">/*!&lt;******************  Bit definition for DMA_CCR4 register  *******************/</div><div class="line">#define  DMA_CCR4_EN                         ((uint16_t)0x0001)            /*!&lt; Channel enable */</div><div class="line">#define  DMA_CCR4_TCIE                       ((uint16_t)0x0002)            /*!&lt; Transfer complete interrupt enable */</div><div class="line">#define  DMA_CCR4_HTIE                       ((uint16_t)0x0004)            /*!&lt; Half Transfer interrupt enable */</div><div class="line">#define  DMA_CCR4_TEIE                       ((uint16_t)0x0008)            /*!&lt; Transfer error interrupt enable */</div><div class="line">#define  DMA_CCR4_DIR                        ((uint16_t)0x0010)            /*!&lt; Data transfer direction */</div><div class="line">#define  DMA_CCR4_CIRC                       ((uint16_t)0x0020)            /*!&lt; Circular mode */</div><div class="line">#define  DMA_CCR4_PINC                       ((uint16_t)0x0040)            /*!&lt; Peripheral increment mode */</div><div class="line">#define  DMA_CCR4_MINC                       ((uint16_t)0x0080)            /*!&lt; Memory increment mode */</div><div class="line"></div><div class="line">#define  DMA_CCR4_PSIZE                      ((uint16_t)0x0300)            /*!&lt; PSIZE[1:0] bits (Peripheral size) */</div><div class="line">#define  DMA_CCR4_PSIZE_0                    ((uint16_t)0x0100)            /*!&lt; Bit 0 */</div><div class="line">#define  DMA_CCR4_PSIZE_1                    ((uint16_t)0x0200)            /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  DMA_CCR4_MSIZE                      ((uint16_t)0x0C00)            /*!&lt; MSIZE[1:0] bits (Memory size) */</div><div class="line">#define  DMA_CCR4_MSIZE_0                    ((uint16_t)0x0400)            /*!&lt; Bit 0 */</div><div class="line">#define  DMA_CCR4_MSIZE_1                    ((uint16_t)0x0800)            /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  DMA_CCR4_PL                         ((uint16_t)0x3000)            /*!&lt; PL[1:0] bits (Channel Priority level) */</div><div class="line">#define  DMA_CCR4_PL_0                       ((uint16_t)0x1000)            /*!&lt; Bit 0 */</div><div class="line">#define  DMA_CCR4_PL_1                       ((uint16_t)0x2000)            /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  DMA_CCR4_MEM2MEM                    ((uint16_t)0x4000)            /*!&lt; Memory to memory mode */</div><div class="line"></div><div class="line">/******************  Bit definition for DMA_CCR5 register  *******************/</div><div class="line">#define  DMA_CCR5_EN                         ((uint16_t)0x0001)            /*!&lt; Channel enable */</div><div class="line">#define  DMA_CCR5_TCIE                       ((uint16_t)0x0002)            /*!&lt; Transfer complete interrupt enable */</div><div class="line">#define  DMA_CCR5_HTIE                       ((uint16_t)0x0004)            /*!&lt; Half Transfer interrupt enable */</div><div class="line">#define  DMA_CCR5_TEIE                       ((uint16_t)0x0008)            /*!&lt; Transfer error interrupt enable */</div><div class="line">#define  DMA_CCR5_DIR                        ((uint16_t)0x0010)            /*!&lt; Data transfer direction */</div><div class="line">#define  DMA_CCR5_CIRC                       ((uint16_t)0x0020)            /*!&lt; Circular mode */</div><div class="line">#define  DMA_CCR5_PINC                       ((uint16_t)0x0040)            /*!&lt; Peripheral increment mode */</div><div class="line">#define  DMA_CCR5_MINC                       ((uint16_t)0x0080)            /*!&lt; Memory increment mode */</div><div class="line"></div><div class="line">#define  DMA_CCR5_PSIZE                      ((uint16_t)0x0300)            /*!&lt; PSIZE[1:0] bits (Peripheral size) */</div><div class="line">#define  DMA_CCR5_PSIZE_0                    ((uint16_t)0x0100)            /*!&lt; Bit 0 */</div><div class="line">#define  DMA_CCR5_PSIZE_1                    ((uint16_t)0x0200)            /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  DMA_CCR5_MSIZE                      ((uint16_t)0x0C00)            /*!&lt; MSIZE[1:0] bits (Memory size) */</div><div class="line">#define  DMA_CCR5_MSIZE_0                    ((uint16_t)0x0400)            /*!&lt; Bit 0 */</div><div class="line">#define  DMA_CCR5_MSIZE_1                    ((uint16_t)0x0800)            /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  DMA_CCR5_PL                         ((uint16_t)0x3000)            /*!&lt; PL[1:0] bits (Channel Priority level) */</div><div class="line">#define  DMA_CCR5_PL_0                       ((uint16_t)0x1000)            /*!&lt; Bit 0 */</div><div class="line">#define  DMA_CCR5_PL_1                       ((uint16_t)0x2000)            /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  DMA_CCR5_MEM2MEM                    ((uint16_t)0x4000)            /*!&lt; Memory to memory mode enable */</div><div class="line"></div><div class="line">/*******************  Bit definition for DMA_CCR6 register  *******************/</div><div class="line">#define  DMA_CCR6_EN                         ((uint16_t)0x0001)            /*!&lt; Channel enable */</div><div class="line">#define  DMA_CCR6_TCIE                       ((uint16_t)0x0002)            /*!&lt; Transfer complete interrupt enable */</div><div class="line">#define  DMA_CCR6_HTIE                       ((uint16_t)0x0004)            /*!&lt; Half Transfer interrupt enable */</div><div class="line">#define  DMA_CCR6_TEIE                       ((uint16_t)0x0008)            /*!&lt; Transfer error interrupt enable */</div><div class="line">#define  DMA_CCR6_DIR                        ((uint16_t)0x0010)            /*!&lt; Data transfer direction */</div><div class="line">#define  DMA_CCR6_CIRC                       ((uint16_t)0x0020)            /*!&lt; Circular mode */</div><div class="line">#define  DMA_CCR6_PINC                       ((uint16_t)0x0040)            /*!&lt; Peripheral increment mode */</div><div class="line">#define  DMA_CCR6_MINC                       ((uint16_t)0x0080)            /*!&lt; Memory increment mode */</div><div class="line"></div><div class="line">#define  DMA_CCR6_PSIZE                      ((uint16_t)0x0300)            /*!&lt; PSIZE[1:0] bits (Peripheral size) */</div><div class="line">#define  DMA_CCR6_PSIZE_0                    ((uint16_t)0x0100)            /*!&lt; Bit 0 */</div><div class="line">#define  DMA_CCR6_PSIZE_1                    ((uint16_t)0x0200)            /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  DMA_CCR6_MSIZE                      ((uint16_t)0x0C00)            /*!&lt; MSIZE[1:0] bits (Memory size) */</div><div class="line">#define  DMA_CCR6_MSIZE_0                    ((uint16_t)0x0400)            /*!&lt; Bit 0 */</div><div class="line">#define  DMA_CCR6_MSIZE_1                    ((uint16_t)0x0800)            /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  DMA_CCR6_PL                         ((uint16_t)0x3000)            /*!&lt; PL[1:0] bits (Channel Priority level) */</div><div class="line">#define  DMA_CCR6_PL_0                       ((uint16_t)0x1000)            /*!&lt; Bit 0 */</div><div class="line">#define  DMA_CCR6_PL_1                       ((uint16_t)0x2000)            /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  DMA_CCR6_MEM2MEM                    ((uint16_t)0x4000)            /*!&lt; Memory to memory mode */</div><div class="line"></div><div class="line">/*******************  Bit definition for DMA_CCR7 register  *******************/</div><div class="line">#define  DMA_CCR7_EN                         ((uint16_t)0x0001)            /*!&lt; Channel enable */</div><div class="line">#define  DMA_CCR7_TCIE                       ((uint16_t)0x0002)            /*!&lt; Transfer complete interrupt enable */</div><div class="line">#define  DMA_CCR7_HTIE                       ((uint16_t)0x0004)            /*!&lt; Half Transfer interrupt enable */</div><div class="line">#define  DMA_CCR7_TEIE                       ((uint16_t)0x0008)            /*!&lt; Transfer error interrupt enable */</div><div class="line">#define  DMA_CCR7_DIR                        ((uint16_t)0x0010)            /*!&lt; Data transfer direction */</div><div class="line">#define  DMA_CCR7_CIRC                       ((uint16_t)0x0020)            /*!&lt; Circular mode */</div><div class="line">#define  DMA_CCR7_PINC                       ((uint16_t)0x0040)            /*!&lt; Peripheral increment mode */</div><div class="line">#define  DMA_CCR7_MINC                       ((uint16_t)0x0080)            /*!&lt; Memory increment mode */</div><div class="line"></div><div class="line">#define  DMA_CCR7_PSIZE            ,         ((uint16_t)0x0300)            /*!&lt; PSIZE[1:0] bits (Peripheral size) */</div><div class="line">#define  DMA_CCR7_PSIZE_0                    ((uint16_t)0x0100)            /*!&lt; Bit 0 */</div><div class="line">#define  DMA_CCR7_PSIZE_1                    ((uint16_t)0x0200)            /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  DMA_CCR7_MSIZE                      ((uint16_t)0x0C00)            /*!&lt; MSIZE[1:0] bits (Memory size) */</div><div class="line">#define  DMA_CCR7_MSIZE_0                    ((uint16_t)0x0400)            /*!&lt; Bit 0 */</div><div class="line">#define  DMA_CCR7_MSIZE_1                    ((uint16_t)0x0800)            /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  DMA_CCR7_PL                         ((uint16_t)0x3000)            /*!&lt; PL[1:0] bits (Channel Priority level) */</div><div class="line">#define  DMA_CCR7_PL_0                       ((uint16_t)0x1000)            /*!&lt; Bit 0 */</div><div class="line">#define  DMA_CCR7_PL_1                       ((uint16_t)0x2000)            /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  DMA_CCR7_MEM2MEM                    ((uint16_t)0x4000)            /*!&lt; Memory to memory mode enable */</div><div class="line"></div><div class="line">/******************  Bit definition for DMA_CNDTR1 register  ******************/</div><div class="line">#define  DMA_CNDTR1_NDT                      ((uint16_t)0xFFFF)            /*!&lt; Number of data to Transfer */</div><div class="line"></div><div class="line">/******************  Bit definition for DMA_CNDTR2 register  ******************/</div><div class="line">#define  DMA_CNDTR2_NDT                      ((uint16_t)0xFFFF)            /*!&lt; Number of data to Transfer */</div><div class="line"></div><div class="line">/******************  Bit definition for DMA_CNDTR3 register  ******************/</div><div class="line">#define  DMA_CNDTR3_NDT                      ((uint16_t)0xFFFF)            /*!&lt; Number of data to Transfer */</div><div class="line"></div><div class="line">/******************  Bit definition for DMA_CNDTR4 register  ******************/</div><div class="line">#define  DMA_CNDTR4_NDT                      ((uint16_t)0xFFFF)            /*!&lt; Number of data to Transfer */</div><div class="line"></div><div class="line">/******************  Bit definition for DMA_CNDTR5 register  ******************/</div><div class="line">#define  DMA_CNDTR5_NDT                      ((uint16_t)0xFFFF)            /*!&lt; Number of data to Transfer */</div><div class="line"></div><div class="line">/******************  Bit definition for DMA_CNDTR6 register  ******************/</div><div class="line">#define  DMA_CNDTR6_NDT                      ((uint16_t)0xFFFF)            /*!&lt; Number of data to Transfer */</div><div class="line"></div><div class="line">/******************  Bit definition for DMA_CNDTR7 register  ******************/</div><div class="line">#define  DMA_CNDTR7_NDT                      ((uint16_t)0xFFFF)            /*!&lt; Number of data to Transfer */</div><div class="line"></div><div class="line">/******************  Bit definition for DMA_CPAR1 register  *******************/</div><div class="line">#define  DMA_CPAR1_PA                        ((uint32_t)0xFFFFFFFF)        /*!&lt; Peripheral Address */</div><div class="line"></div><div class="line">/******************  Bit definition for DMA_CPAR2 register  *******************/</div><div class="line">#define  DMA_CPAR2_PA                        ((uint32_t)0xFFFFFFFF)        /*!&lt; Peripheral Address */</div><div class="line"></div><div class="line">/******************  Bit definition for DMA_CPAR3 register  *******************/</div><div class="line">#define  DMA_CPAR3_PA                        ((uint32_t)0xFFFFFFFF)        /*!&lt; Peripheral Address */</div><div class="line"></div><div class="line"></div><div class="line">/******************  Bit definition for DMA_CPAR4 register  *******************/</div><div class="line">#define  DMA_CPAR4_PA                        ((uint32_t)0xFFFFFFFF)        /*!&lt; Peripheral Address */</div><div class="line"></div><div class="line">/******************  Bit definition for DMA_CPAR5 register  *******************/</div><div class="line">#define  DMA_CPAR5_PA                        ((uint32_t)0xFFFFFFFF)        /*!&lt; Peripheral Address */</div><div class="line"></div><div class="line">/******************  Bit definition for DMA_CPAR6 register  *******************/</div><div class="line">#define  DMA_CPAR6_PA                        ((uint32_t)0xFFFFFFFF)        /*!&lt; Peripheral Address */</div><div class="line"></div><div class="line"></div><div class="line">/******************  Bit definition for DMA_CPAR7 register  *******************/</div><div class="line">#define  DMA_CPAR7_PA                        ((uint32_t)0xFFFFFFFF)        /*!&lt; Peripheral Address */</div><div class="line"></div><div class="line">/******************  Bit definition for DMA_CMAR1 register  *******************/</div><div class="line">#define  DMA_CMAR1_MA                        ((uint32_t)0xFFFFFFFF)        /*!&lt; Memory Address */</div><div class="line"></div><div class="line">/******************  Bit definition for DMA_CMAR2 register  *******************/</div><div class="line">#define  DMA_CMAR2_MA                        ((uint32_t)0xFFFFFFFF)        /*!&lt; Memory Address */</div><div class="line"></div><div class="line">/******************  Bit definition for DMA_CMAR3 register  *******************/</div><div class="line">#define  DMA_CMAR3_MA                        ((uint32_t)0xFFFFFFFF)        /*!&lt; Memory Address */</div><div class="line"></div><div class="line"></div><div class="line">/******************  Bit definition for DMA_CMAR4 register  *******************/</div><div class="line">#define  DMA_CMAR4_MA                        ((uint32_t)0xFFFFFFFF)        /*!&lt; Memory Address */</div><div class="line"></div><div class="line">/******************  Bit definition for DMA_CMAR5 register  *******************/</div><div class="line">#define  DMA_CMAR5_MA                        ((uint32_t)0xFFFFFFFF)        /*!&lt; Memory Address */</div><div class="line"></div><div class="line">/******************  Bit definition for DMA_CMAR6 register  *******************/</div><div class="line">#define  DMA_CMAR6_MA                        ((uint32_t)0xFFFFFFFF)        /*!&lt; Memory Address */</div><div class="line"></div><div class="line">/******************  Bit definition for DMA_CMAR7 register  *******************/</div><div class="line">#define  DMA_CMAR7_MA                        ((uint32_t)0xFFFFFFFF)        /*!&lt; Memory Address */</div><div class="line"></div><div class="line">/******************************************************************************/</div><div class="line">/*                                                                            */</div><div class="line">/*                        Analog to Digital Converter                         */</div><div class="line">/*                                                                            */</div><div class="line">/******************************************************************************/</div><div class="line"></div><div class="line">/********************  Bit definition for ADC_SR register  ********************/</div><div class="line">#define  ADC_SR_AWD                          ((uint8_t)0x01)               /*!&lt; Analog watchdog flag */</div><div class="line">#define  ADC_SR_EOC                          ((uint8_t)0x02)               /*!&lt; End of conversion */</div><div class="line">#define  ADC_SR_JEOC                         ((uint8_t)0x04)               /*!&lt; Injected channel end of conversion */</div><div class="line">#define  ADC_SR_JSTRT                        ((uint8_t)0x08)               /*!&lt; Injected channel Start flag */</div><div class="line">#define  ADC_SR_STRT                         ((uint8_t)0x10)               /*!&lt; Regular channel Start flag */</div><div class="line"></div><div class="line">/*******************  Bit definition for ADC_CR1 register  ********************/</div><div class="line">#define  ADC_CR1_AWDCH                       ((uint32_t)0x0000001F)        /*!&lt; AWDCH[4:0] bits (Analog watchdog channel select bits) */</div><div class="line">#define  ADC_CR1_AWDCH_0                     ((uint32_t)0x00000001)        /*!&lt; Bit 0 */</div><div class="line">#define  ADC_CR1_AWDCH_1                     ((uint32_t)0x00000002)        /*!&lt; Bit 1 */</div><div class="line">#define  ADC_CR1_AWDCH_2                     ((uint32_t)0x00000004)        /*!&lt; Bit 2 */</div><div class="line">#define  ADC_CR1_AWDCH_3                     ((uint32_t)0x00000008)        /*!&lt; Bit 3 */</div><div class="line">#define  ADC_CR1_AWDCH_4                     ((uint32_t)0x00000010)        /*!&lt; Bit 4 */</div><div class="line"></div><div class="line">#define  ADC_CR1_EOCIE                       ((uint32_t)0x00000020)        /*!&lt; Interrupt enable for EOC */</div><div class="line">#define  ADC_CR1_AWDIE                       ((uint32_t)0x00000040)        /*!&lt; Analog Watchdog interrupt enable */</div><div class="line">#define  ADC_CR1_JEOCIE                      ((uint32_t)0x00000080)        /*!&lt; Interrupt enable for injected channels */</div><div class="line">#define  ADC_CR1_SCAN                        ((uint32_t)0x00000100)        /*!&lt; Scan mode */</div><div class="line">#define  ADC_CR1_AWDSGL                      ((uint32_t)0x00000200)        /*!&lt; Enable the watchdog on a single channel in scan mode */</div><div class="line">#define  ADC_CR1_JAUTO                       ((uint32_t)0x00000400)        /*!&lt; Automatic injected group conversion */</div><div class="line">#define  ADC_CR1_DISCEN                      ((uint32_t)0x00000800)        /*!&lt; Discontinuous mode on regular channels */</div><div class="line">#define  ADC_CR1_JDISCEN                     ((uint32_t)0x00001000)        /*!&lt; Discontinuous mode on injected channels */</div><div class="line"></div><div class="line">#define  ADC_CR1_DISCNUM                     ((uint32_t)0x0000E000)        /*!&lt; DISCNUM[2:0] bits (Discontinuous mode channel count) */</div><div class="line">#define  ADC_CR1_DISCNUM_0                   ((uint32_t)0x00002000)        /*!&lt; Bit 0 */</div><div class="line">#define  ADC_CR1_DISCNUM_1                   ((uint32_t)0x00004000)        /*!&lt; Bit 1 */</div><div class="line">#define  ADC_CR1_DISCNUM_2                   ((uint32_t)0x00008000)        /*!&lt; Bit 2 */</div><div class="line"></div><div class="line">#define  ADC_CR1_DUALMOD                     ((uint32_t)0x000F0000)        /*!&lt; DUALMOD[3:0] bits (Dual mode selection) */</div><div class="line">#define  ADC_CR1_DUALMOD_0                   ((uint32_t)0x00010000)        /*!&lt; Bit 0 */</div><div class="line">#define  ADC_CR1_DUALMOD_1                   ((uint32_t)0x00020000)        /*!&lt; Bit 1 */</div><div class="line">#define  ADC_CR1_DUALMOD_2                   ((uint32_t)0x00040000)        /*!&lt; Bit 2 */</div><div class="line">#define  ADC_CR1_DUALMOD_3                   ((uint32_t)0x00080000)        /*!&lt; Bit 3 */</div><div class="line"></div><div class="line">#define  ADC_CR1_JAWDEN                      ((uint32_t)0x00400000)        /*!&lt; Analog watchdog enable on injected channels */</div><div class="line">#define  ADC_CR1_AWDEN                       ((uint32_t)0x00800000)        /*!&lt; Analog watchdog enable on regular channels */</div><div class="line"></div><div class="line">  </div><div class="line">/*******************  Bit definition for ADC_CR2 register  ********************/</div><div class="line">#define  ADC_CR2_ADON                        ((uint32_t)0x00000001)        /*!&lt; A/D Converter ON / OFF */</div><div class="line">#define  ADC_CR2_CONT                        ((uint32_t)0x00000002)        /*!&lt; Continuous Conversion */</div><div class="line">#define  ADC_CR2_CAL                         ((uint32_t)0x00000004)        /*!&lt; A/D Calibration */</div><div class="line">#define  ADC_CR2_RSTCAL                      ((uint32_t)0x00000008)        /*!&lt; Reset Calibration */</div><div class="line">#define  ADC_CR2_DMA                         ((uint32_t)0x00000100)        /*!&lt; Direct Memory access mode */</div><div class="line">#define  ADC_CR2_ALIGN                       ((uint32_t)0x00000800)        /*!&lt; Data Alignment */</div><div class="line"></div><div class="line">#define  ADC_CR2_JEXTSEL                     ((uint32_t)0x00007000)        /*!&lt; JEXTSEL[2:0] bits (External event select for injected group) */</div><div class="line">#define  ADC_CR2_JEXTSEL_0                   ((uint32_t)0x00001000)        /*!&lt; Bit 0 */</div><div class="line">#define  ADC_CR2_JEXTSEL_1                   ((uint32_t)0x00002000)        /*!&lt; Bit 1 */</div><div class="line">#define  ADC_CR2_JEXTSEL_2                   ((uint32_t)0x00004000)        /*!&lt; Bit 2 */</div><div class="line"></div><div class="line">#define  ADC_CR2_JEXTTRIG                    ((uint32_t)0x00008000)        /*!&lt; External Trigger Conversion mode for injected channels */</div><div class="line"></div><div class="line">#define  ADC_CR2_EXTSEL                      ((uint32_t)0x000E0000)        /*!&lt; EXTSEL[2:0] bits (External Event Select for regular group) */</div><div class="line">#define  ADC_CR2_EXTSEL_0                    ((uint32_t)0x00020000)        /*!&lt; Bit 0 */</div><div class="line">#define  ADC_CR2_EXTSEL_1                    ((uint32_t)0x00040000)        /*!&lt; Bit 1 */</div><div class="line">#define  ADC_CR2_EXTSEL_2                    ((uint32_t)0x00080000)        /*!&lt; Bit 2 */</div><div class="line"></div><div class="line">#define  ADC_CR2_EXTTRIG                     ((uint32_t)0x00100000)        /*!&lt; External Trigger Conversion mode for regular channels */</div><div class="line">#define  ADC_CR2_JSWSTART                    ((uint32_t)0x00200000)        /*!&lt; Start Conversion of injected channels */</div><div class="line">#define  ADC_CR2_SWSTART                     ((uint32_t)0x00400000)        /*!&lt; Start Conversion of regular channels */</div><div class="line">#define  ADC_CR2_TSVREFE                     ((uint32_t)0x00800000)        /*!&lt; Temperature Sensor and VREFINT Enable */</div><div class="line"></div><div class="line">/******************  Bit definition for ADC_SMPR1 register  *******************/</div><div class="line">#define  ADC_SMPR1_SMP10                     ((uint32_t)0x00000007)        /*!&lt; SMP10[2:0] bits (Channel 10 Sample time selection) */</div><div class="line">#define  ADC_SMPR1_SMP10_0                   ((uint32_t)0x00000001)        /*!&lt; Bit 0 */</div><div class="line">#define  ADC_SMPR1_SMP10_1                   ((uint32_t)0x00000002)        /*!&lt; Bit 1 */</div><div class="line">#define  ADC_SMPR1_SMP10_2                   ((uint32_t)0x00000004)        /*!&lt; Bit 2 */</div><div class="line"></div><div class="line">#define  ADC_SMPR1_SMP11                     ((uint32_t)0x00000038)        /*!&lt; SMP11[2:0] bits (Channel 11 Sample time selection) */</div><div class="line">#define  ADC_SMPR1_SMP11_0                   ((uint32_t)0x00000008)        /*!&lt; Bit 0 */</div><div class="line">#define  ADC_SMPR1_SMP11_1                   ((uint32_t)0x00000010)        /*!&lt; Bit 1 */</div><div class="line">#define  ADC_SMPR1_SMP11_2                   ((uint32_t)0x00000020)        /*!&lt; Bit 2 */</div><div class="line"></div><div class="line">#define  ADC_SMPR1_SMP12                     ((uint32_t)0x000001C0)        /*!&lt; SMP12[2:0] bits (Channel 12 Sample time selection) */</div><div class="line">#define  ADC_SMPR1_SMP12_0                   ((uint32_t)0x00000040)        /*!&lt; Bit 0 */</div><div class="line">#define  ADC_SMPR1_SMP12_1                   ((uint32_t)0x00000080)        /*!&lt; Bit 1 */</div><div class="line">#define  ADC_SMPR1_SMP12_2                   ((uint32_t)0x00000100)        /*!&lt; Bit 2 */</div><div class="line"></div><div class="line">#define  ADC_SMPR1_SMP13                     ((uint32_t)0x00000E00)        /*!&lt; SMP13[2:0] bits (Channel 13 Sample time selection) */</div><div class="line">#define  ADC_SMPR1_SMP13_0                   ((uint32_t)0x00000200)        /*!&lt; Bit 0 */</div><div class="line">#define  ADC_SMPR1_SMP13_1                   ((uint32_t)0x00000400)        /*!&lt; Bit 1 */</div><div class="line">#define  ADC_SMPR1_SMP13_2                   ((uint32_t)0x00000800)        /*!&lt; Bit 2 */</div><div class="line"></div><div class="line">#define  ADC_SMPR1_SMP14                     ((uint32_t)0x00007000)        /*!&lt; SMP14[2:0] bits (Channel 14 Sample time selection) */</div><div class="line">#define  ADC_SMPR1_SMP14_0                   ((uint32_t)0x00001000)        /*!&lt; Bit 0 */</div><div class="line">#define  ADC_SMPR1_SMP14_1                   ((uint32_t)0x00002000)        /*!&lt; Bit 1 */</div><div class="line">#define  ADC_SMPR1_SMP14_2                   ((uint32_t)0x00004000)        /*!&lt; Bit 2 */</div><div class="line"></div><div class="line">#define  ADC_SMPR1_SMP15                     ((uint32_t)0x00038000)        /*!&lt; SMP15[2:0] bits (Channel 15 Sample time selection) */</div><div class="line">#define  ADC_SMPR1_SMP15_0                   ((uint32_t)0x00008000)        /*!&lt; Bit 0 */</div><div class="line">#define  ADC_SMPR1_SMP15_1                   ((uint32_t)0x00010000)        /*!&lt; Bit 1 */</div><div class="line">#define  ADC_SMPR1_SMP15_2                   ((uint32_t)0x00020000)        /*!&lt; Bit 2 */</div><div class="line"></div><div class="line">#define  ADC_SMPR1_SMP16                     ((uint32_t)0x001C0000)        /*!&lt; SMP16[2:0] bits (Channel 16 Sample time selection) */</div><div class="line">#define  ADC_SMPR1_SMP16_0                   ((uint32_t)0x00040000)        /*!&lt; Bit 0 */</div><div class="line">#define  ADC_SMPR1_SMP16_1                   ((uint32_t)0x00080000)        /*!&lt; Bit 1 */</div><div class="line">#define  ADC_SMPR1_SMP16_2                   ((uint32_t)0x00100000)        /*!&lt; Bit 2 */</div><div class="line"></div><div class="line">#define  ADC_SMPR1_SMP17                     ((uint32_t)0x00E00000)        /*!&lt; SMP17[2:0] bits (Channel 17 Sample time selection) */</div><div class="line">#define  ADC_SMPR1_SMP17_0                   ((uint32_t)0x00200000)        /*!&lt; Bit 0 */</div><div class="line">#define  ADC_SMPR1_SMP17_1                   ((uint32_t)0x00400000)        /*!&lt; Bit 1 */</div><div class="line">#define  ADC_SMPR1_SMP17_2                   ((uint32_t)0x00800000)        /*!&lt; Bit 2 */</div><div class="line"></div><div class="line">/******************  Bit definition for ADC_SMPR2 register  *******************/</div><div class="line">#define  ADC_SMPR2_SMP0                      ((uint32_t)0x00000007)        /*!&lt; SMP0[2:0] bits (Channel 0 Sample time selection) */</div><div class="line">#define  ADC_SMPR2_SMP0_0                    ((uint32_t)0x00000001)        /*!&lt; Bit 0 */</div><div class="line">#define  ADC_SMPR2_SMP0_1                    ((uint32_t)0x00000002)        /*!&lt; Bit 1 */</div><div class="line">#define  ADC_SMPR2_SMP0_2                    ((uint32_t)0x00000004)        /*!&lt; Bit 2 */</div><div class="line"></div><div class="line">#define  ADC_SMPR2_SMP1                      ((uint32_t)0x00000038)        /*!&lt; SMP1[2:0] bits (Channel 1 Sample time selection) */</div><div class="line">#define  ADC_SMPR2_SMP1_0                    ((uint32_t)0x00000008)        /*!&lt; Bit 0 */</div><div class="line">#define  ADC_SMPR2_SMP1_1                    ((uint32_t)0x00000010)        /*!&lt; Bit 1 */</div><div class="line">#define  ADC_SMPR2_SMP1_2                    ((uint32_t)0x00000020)        /*!&lt; Bit 2 */</div><div class="line"></div><div class="line">#define  ADC_SMPR2_SMP2                      ((uint32_t)0x000001C0)        /*!&lt; SMP2[2:0] bits (Channel 2 Sample time selection) */</div><div class="line">#define  ADC_SMPR2_SMP2_0                    ((uint32_t)0x00000040)        /*!&lt; Bit 0 */</div><div class="line">#define  ADC_SMPR2_SMP2_1                    ((uint32_t)0x00000080)        /*!&lt; Bit 1 */</div><div class="line">#define  ADC_SMPR2_SMP2_2                    ((uint32_t)0x00000100)        /*!&lt; Bit 2 */</div><div class="line"></div><div class="line">#define  ADC_SMPR2_SMP3                      ((uint32_t)0x00000E00)        /*!&lt; SMP3[2:0] bits (Channel 3 Sample time selection) */</div><div class="line">#define  ADC_SMPR2_SMP3_0                    ((uint32_t)0x00000200)        /*!&lt; Bit 0 */</div><div class="line">#define  ADC_SMPR2_SMP3_1                    ((uint32_t)0x00000400)        /*!&lt; Bit 1 */</div><div class="line">#define  ADC_SMPR2_SMP3_2                    ((uint32_t)0x00000800)        /*!&lt; Bit 2 */</div><div class="line"></div><div class="line">#define  ADC_SMPR2_SMP4                      ((uint32_t)0x00007000)        /*!&lt; SMP4[2:0] bits (Channel 4 Sample time selection) */</div><div class="line">#define  ADC_SMPR2_SMP4_0                    ((uint32_t)0x00001000)        /*!&lt; Bit 0 */</div><div class="line">#define  ADC_SMPR2_SMP4_1                    ((uint32_t)0x00002000)        /*!&lt; Bit 1 */</div><div class="line">#define  ADC_SMPR2_SMP4_2                    ((uint32_t)0x00004000)        /*!&lt; Bit 2 */</div><div class="line"></div><div class="line">#define  ADC_SMPR2_SMP5                      ((uint32_t)0x00038000)        /*!&lt; SMP5[2:0] bits (Channel 5 Sample time selection) */</div><div class="line">#define  ADC_SMPR2_SMP5_0                    ((uint32_t)0x00008000)        /*!&lt; Bit 0 */</div><div class="line">#define  ADC_SMPR2_SMP5_1                    ((uint32_t)0x00010000)        /*!&lt; Bit 1 */</div><div class="line">#define  ADC_SMPR2_SMP5_2                    ((uint32_t)0x00020000)        /*!&lt; Bit 2 */</div><div class="line"></div><div class="line">#define  ADC_SMPR2_SMP6                      ((uint32_t)0x001C0000)        /*!&lt; SMP6[2:0] bits (Channel 6 Sample time selection) */</div><div class="line">#define  ADC_SMPR2_SMP6_0                    ((uint32_t)0x00040000)        /*!&lt; Bit 0 */</div><div class="line">#define  ADC_SMPR2_SMP6_1                    ((uint32_t)0x00080000)        /*!&lt; Bit 1 */</div><div class="line">#define  ADC_SMPR2_SMP6_2                    ((uint32_t)0x00100000)        /*!&lt; Bit 2 */</div><div class="line"></div><div class="line">#define  ADC_SMPR2_SMP7                      ((uint32_t)0x00E00000)        /*!&lt; SMP7[2:0] bits (Channel 7 Sample time selection) */</div><div class="line">#define  ADC_SMPR2_SMP7_0                    ((uint32_t)0x00200000)        /*!&lt; Bit 0 */</div><div class="line">#define  ADC_SMPR2_SMP7_1                    ((uint32_t)0x00400000)        /*!&lt; Bit 1 */</div><div class="line">#define  ADC_SMPR2_SMP7_2                    ((uint32_t)0x00800000)        /*!&lt; Bit 2 */</div><div class="line"></div><div class="line">#define  ADC_SMPR2_SMP8                      ((uint32_t)0x07000000)        /*!&lt; SMP8[2:0] bits (Channel 8 Sample time selection) */</div><div class="line">#define  ADC_SMPR2_SMP8_0                    ((uint32_t)0x01000000)        /*!&lt; Bit 0 */</div><div class="line">#define  ADC_SMPR2_SMP8_1                    ((uint32_t)0x02000000)        /*!&lt; Bit 1 */</div><div class="line">#define  ADC_SMPR2_SMP8_2                    ((uint32_t)0x04000000)        /*!&lt; Bit 2 */</div><div class="line"></div><div class="line">#define  ADC_SMPR2_SMP9                      ((uint32_t)0x38000000)        /*!&lt; SMP9[2:0] bits (Channel 9 Sample time selection) */</div><div class="line">#define  ADC_SMPR2_SMP9_0                    ((uint32_t)0x08000000)        /*!&lt; Bit 0 */</div><div class="line">#define  ADC_SMPR2_SMP9_1                    ((uint32_t)0x10000000)        /*!&lt; Bit 1 */</div><div class="line">#define  ADC_SMPR2_SMP9_2                    ((uint32_t)0x20000000)        /*!&lt; Bit 2 */</div><div class="line"></div><div class="line">/******************  Bit definition for ADC_JOFR1 register  *******************/</div><div class="line">#define  ADC_JOFR1_JOFFSET1                  ((uint16_t)0x0FFF)            /*!&lt; Data offset for injected channel 1 */</div><div class="line"></div><div class="line">/******************  Bit definition for ADC_JOFR2 register  *******************/</div><div class="line">#define  ADC_JOFR2_JOFFSET2                  ((uint16_t)0x0FFF)            /*!&lt; Data offset for injected channel 2 */</div><div class="line"></div><div class="line">/******************  Bit definition for ADC_JOFR3 register  *******************/</div><div class="line">#define  ADC_JOFR3_JOFFSET3                  ((uint16_t)0x0FFF)            /*!&lt; Data offset for injected channel 3 */</div><div class="line"></div><div class="line">/******************  Bit definition for ADC_JOFR4 register  *******************/</div><div class="line">#define  ADC_JOFR4_JOFFSET4                  ((uint16_t)0x0FFF)            /*!&lt; Data offset for injected channel 4 */</div><div class="line"></div><div class="line">/*******************  Bit definition for ADC_HTR register  ********************/</div><div class="line">#define  ADC_HTR_HT                          ((uint16_t)0x0FFF)            /*!&lt; Analog watchdog high threshold */</div><div class="line"></div><div class="line">/*******************  Bit definition for ADC_LTR register  ********************/</div><div class="line">#define  ADC_LTR_LT                          ((uint16_t)0x0FFF)            /*!&lt; Analog watchdog low threshold */</div><div class="line"></div><div class="line">/*******************  Bit definition for ADC_SQR1 register  *******************/</div><div class="line">#define  ADC_SQR1_SQ13                       ((uint32_t)0x0000001F)        /*!&lt; SQ13[4:0] bits (13th conversion in regular sequence) */</div><div class="line">#define  ADC_SQR1_SQ13_0                     ((uint32_t)0x00000001)        /*!&lt; Bit 0 */</div><div class="line">#define  ADC_SQR1_SQ13_1                     ((uint32_t)0x00000002)        /*!&lt; Bit 1 */</div><div class="line">#define  ADC_SQR1_SQ13_2                     ((uint32_t)0x00000004)        /*!&lt; Bit 2 */</div><div class="line">#define  ADC_SQR1_SQ13_3                     ((uint32_t)0x00000008)        /*!&lt; Bit 3 */</div><div class="line">#define  ADC_SQR1_SQ13_4                     ((uint32_t)0x00000010)        /*!&lt; Bit 4 */</div><div class="line"></div><div class="line">#define  ADC_SQR1_SQ14                       ((uint32_t)0x000003E0)        /*!&lt; SQ14[4:0] bits (14th conversion in regular sequence) */</div><div class="line">#define  ADC_SQR1_SQ14_0                     ((uint32_t)0x00000020)        /*!&lt; Bit 0 */</div><div class="line">#define  ADC_SQR1_SQ14_1                     ((uint32_t)0x00000040)        /*!&lt; Bit 1 */</div><div class="line">#define  ADC_SQR1_SQ14_2                     ((uint32_t)0x00000080)        /*!&lt; Bit 2 */</div><div class="line">#define  ADC_SQR1_SQ14_3                     ((uint32_t)0x00000100)        /*!&lt; Bit 3 */</div><div class="line">#define  ADC_SQR1_SQ14_4                     ((uint32_t)0x00000200)        /*!&lt; Bit 4 */</div><div class="line"></div><div class="line">#define  ADC_SQR1_SQ15                       ((uint32_t)0x00007C00)        /*!&lt; SQ15[4:0] bits (15th conversion in regular sequence) */</div><div class="line">#define  ADC_SQR1_SQ15_0                     ((uint32_t)0x00000400)        /*!&lt; Bit 0 */</div><div class="line">#define  ADC_SQR1_SQ15_1                     ((uint32_t)0x00000800)        /*!&lt; Bit 1 */</div><div class="line">#define  ADC_SQR1_SQ15_2                     ((uint32_t)0x00001000)        /*!&lt; Bit 2 */</div><div class="line">#define  ADC_SQR1_SQ15_3                     ((uint32_t)0x00002000)        /*!&lt; Bit 3 */</div><div class="line">#define  ADC_SQR1_SQ15_4                     ((uint32_t)0x00004000)        /*!&lt; Bit 4 */</div><div class="line"></div><div class="line">#define  ADC_SQR1_SQ16                       ((uint32_t)0x000F8000)        /*!&lt; SQ16[4:0] bits (16th conversion in regular sequence) */</div><div class="line">#define  ADC_SQR1_SQ16_0                     ((uint32_t)0x00008000)        /*!&lt; Bit 0 */</div><div class="line">#define  ADC_SQR1_SQ16_1                     ((uint32_t)0x00010000)        /*!&lt; Bit 1 */</div><div class="line">#define  ADC_SQR1_SQ16_2                     ((uint32_t)0x00020000)        /*!&lt; Bit 2 */</div><div class="line">#define  ADC_SQR1_SQ16_3                     ((uint32_t)0x00040000)        /*!&lt; Bit 3 */</div><div class="line">#define  ADC_SQR1_SQ16_4                     ((uint32_t)0x00080000)        /*!&lt; Bit 4 */</div><div class="line"></div><div class="line">#define  ADC_SQR1_L                          ((uint32_t)0x00F00000)        /*!&lt; L[3:0] bits (Regular channel sequence length) */</div><div class="line">#define  ADC_SQR1_L_0                        ((uint32_t)0x00100000)        /*!&lt; Bit 0 */</div><div class="line">#define  ADC_SQR1_L_1                        ((uint32_t)0x00200000)        /*!&lt; Bit 1 */</div><div class="line">#define  ADC_SQR1_L_2                        ((uint32_t)0x00400000)        /*!&lt; Bit 2 */</div><div class="line">#define  ADC_SQR1_L_3                        ((uint32_t)0x00800000)        /*!&lt; Bit 3 */</div><div class="line"></div><div class="line">/*******************  Bit definition for ADC_SQR2 register  *******************/</div><div class="line">#define  ADC_SQR2_SQ7                        ((uint32_t)0x0000001F)        /*!&lt; SQ7[4:0] bits (7th conversion in regular sequence) */</div><div class="line">#define  ADC_SQR2_SQ7_0                      ((uint32_t)0x00000001)        /*!&lt; Bit 0 */</div><div class="line">#define  ADC_SQR2_SQ7_1                      ((uint32_t)0x00000002)        /*!&lt; Bit 1 */</div><div class="line">#define  ADC_SQR2_SQ7_2                      ((uint32_t)0x00000004)        /*!&lt; Bit 2 */</div><div class="line">#define  ADC_SQR2_SQ7_3                      ((uint32_t)0x00000008)        /*!&lt; Bit 3 */</div><div class="line">#define  ADC_SQR2_SQ7_4                      ((uint32_t)0x00000010)        /*!&lt; Bit 4 */</div><div class="line"></div><div class="line">#define  ADC_SQR2_SQ8                        ((uint32_t)0x000003E0)        /*!&lt; SQ8[4:0] bits (8th conversion in regular sequence) */</div><div class="line">#define  ADC_SQR2_SQ8_0                      ((uint32_t)0x00000020)        /*!&lt; Bit 0 */</div><div class="line">#define  ADC_SQR2_SQ8_1                      ((uint32_t)0x00000040)        /*!&lt; Bit 1 */</div><div class="line">#define  ADC_SQR2_SQ8_2                      ((uint32_t)0x00000080)        /*!&lt; Bit 2 */</div><div class="line">#define  ADC_SQR2_SQ8_3                      ((uint32_t)0x00000100)        /*!&lt; Bit 3 */</div><div class="line">#define  ADC_SQR2_SQ8_4                      ((uint32_t)0x00000200)        /*!&lt; Bit 4 */</div><div class="line"></div><div class="line">#define  ADC_SQR2_SQ9                        ((uint32_t)0x00007C00)        /*!&lt; SQ9[4:0] bits (9th conversion in regular sequence) */</div><div class="line">#define  ADC_SQR2_SQ9_0                      ((uint32_t)0x00000400)        /*!&lt; Bit 0 */</div><div class="line">#define  ADC_SQR2_SQ9_1                      ((uint32_t)0x00000800)        /*!&lt; Bit 1 */</div><div class="line">#define  ADC_SQR2_SQ9_2                      ((uint32_t)0x00001000)        /*!&lt; Bit 2 */</div><div class="line">#define  ADC_SQR2_SQ9_3                      ((uint32_t)0x00002000)        /*!&lt; Bit 3 */</div><div class="line">#define  ADC_SQR2_SQ9_4                      ((uint32_t)0x00004000)        /*!&lt; Bit 4 */</div><div class="line"></div><div class="line">#define  ADC_SQR2_SQ10                       ((uint32_t)0x000F8000)        /*!&lt; SQ10[4:0] bits (10th conversion in regular sequence) */</div><div class="line">#define  ADC_SQR2_SQ10_0                     ((uint32_t)0x00008000)        /*!&lt; Bit 0 */</div><div class="line">#define  ADC_SQR2_SQ10_1                     ((uint32_t)0x00010000)        /*!&lt; Bit 1 */</div><div class="line">#define  ADC_SQR2_SQ10_2                     ((uint32_t)0x00020000)        /*!&lt; Bit 2 */</div><div class="line">#define  ADC_SQR2_SQ10_3                     ((uint32_t)0x00040000)        /*!&lt; Bit 3 */</div><div class="line">#define  ADC_SQR2_SQ10_4                     ((uint32_t)0x00080000)        /*!&lt; Bit 4 */</div><div class="line"></div><div class="line">#define  ADC_SQR2_SQ11                       ((uint32_t)0x01F00000)        /*!&lt; SQ11[4:0] bits (11th conversion in regular sequence) */</div><div class="line">#define  ADC_SQR2_SQ11_0                     ((uint32_t)0x00100000)        /*!&lt; Bit 0 */</div><div class="line">#define  ADC_SQR2_SQ11_1                     ((uint32_t)0x00200000)        /*!&lt; Bit 1 */</div><div class="line">#define  ADC_SQR2_SQ11_2                     ((uint32_t)0x00400000)        /*!&lt; Bit 2 */</div><div class="line">#define  ADC_SQR2_SQ11_3                     ((uint32_t)0x00800000)        /*!&lt; Bit 3 */</div><div class="line">#define  ADC_SQR2_SQ11_4                     ((uint32_t)0x01000000)        /*!&lt; Bit 4 */</div><div class="line"></div><div class="line">#define  ADC_SQR2_SQ12                       ((uint32_t)0x3E000000)        /*!&lt; SQ12[4:0] bits (12th conversion in regular sequence) */</div><div class="line">#define  ADC_SQR2_SQ12_0                     ((uint32_t)0x02000000)        /*!&lt; Bit 0 */</div><div class="line">#define  ADC_SQR2_SQ12_1                     ((uint32_t)0x04000000)        /*!&lt; Bit 1 */</div><div class="line">#define  ADC_SQR2_SQ12_2                     ((uint32_t)0x08000000)        /*!&lt; Bit 2 */</div><div class="line">#define  ADC_SQR2_SQ12_3                     ((uint32_t)0x10000000)        /*!&lt; Bit 3 */</div><div class="line">#define  ADC_SQR2_SQ12_4                     ((uint32_t)0x20000000)        /*!&lt; Bit 4 */</div><div class="line"></div><div class="line">/*******************  Bit definition for ADC_SQR3 register  *******************/</div><div class="line">#define  ADC_SQR3_SQ1                        ((uint32_t)0x0000001F)        /*!&lt; SQ1[4:0] bits (1st conversion in regular sequence) */</div><div class="line">#define  ADC_SQR3_SQ1_0                      ((uint32_t)0x00000001)        /*!&lt; Bit 0 */</div><div class="line">#define  ADC_SQR3_SQ1_1                      ((uint32_t)0x00000002)        /*!&lt; Bit 1 */</div><div class="line">#define  ADC_SQR3_SQ1_2                      ((uint32_t)0x00000004)        /*!&lt; Bit 2 */</div><div class="line">#define  ADC_SQR3_SQ1_3                      ((uint32_t)0x00000008)        /*!&lt; Bit 3 */</div><div class="line">#define  ADC_SQR3_SQ1_4                      ((uint32_t)0x00000010)        /*!&lt; Bit 4 */</div><div class="line"></div><div class="line">#define  ADC_SQR3_SQ2                        ((uint32_t)0x000003E0)        /*!&lt; SQ2[4:0] bits (2nd conversion in regular sequence) */</div><div class="line">#define  ADC_SQR3_SQ2_0                      ((uint32_t)0x00000020)        /*!&lt; Bit 0 */</div><div class="line">#define  ADC_SQR3_SQ2_1                      ((uint32_t)0x00000040)        /*!&lt; Bit 1 */</div><div class="line">#define  ADC_SQR3_SQ2_2                      ((uint32_t)0x00000080)        /*!&lt; Bit 2 */</div><div class="line">#define  ADC_SQR3_SQ2_3                      ((uint32_t)0x00000100)        /*!&lt; Bit 3 */</div><div class="line">#define  ADC_SQR3_SQ2_4                      ((uint32_t)0x00000200)        /*!&lt; Bit 4 */</div><div class="line"></div><div class="line">#define  ADC_SQR3_SQ3                        ((uint32_t)0x00007C00)        /*!&lt; SQ3[4:0] bits (3rd conversion in regular sequence) */</div><div class="line">#define  ADC_SQR3_SQ3_0                      ((uint32_t)0x00000400)        /*!&lt; Bit 0 */</div><div class="line">#define  ADC_SQR3_SQ3_1                      ((uint32_t)0x00000800)        /*!&lt; Bit 1 */</div><div class="line">#define  ADC_SQR3_SQ3_2                      ((uint32_t)0x00001000)        /*!&lt; Bit 2 */</div><div class="line">#define  ADC_SQR3_SQ3_3                      ((uint32_t)0x00002000)        /*!&lt; Bit 3 */</div><div class="line">#define  ADC_SQR3_SQ3_4                      ((uint32_t)0x00004000)        /*!&lt; Bit 4 */</div><div class="line"></div><div class="line">#define  ADC_SQR3_SQ4                        ((uint32_t)0x000F8000)        /*!&lt; SQ4[4:0] bits (4th conversion in regular sequence) */</div><div class="line">#define  ADC_SQR3_SQ4_0                      ((uint32_t)0x00008000)        /*!&lt; Bit 0 */</div><div class="line">#define  ADC_SQR3_SQ4_1                      ((uint32_t)0x00010000)        /*!&lt; Bit 1 */</div><div class="line">#define  ADC_SQR3_SQ4_2                      ((uint32_t)0x00020000)        /*!&lt; Bit 2 */</div><div class="line">#define  ADC_SQR3_SQ4_3                      ((uint32_t)0x00040000)        /*!&lt; Bit 3 */</div><div class="line">#define  ADC_SQR3_SQ4_4                      ((uint32_t)0x00080000)        /*!&lt; Bit 4 */</div><div class="line"></div><div class="line">#define  ADC_SQR3_SQ5                        ((uint32_t)0x01F00000)        /*!&lt; SQ5[4:0] bits (5th conversion in regular sequence) */</div><div class="line">#define  ADC_SQR3_SQ5_0                      ((uint32_t)0x00100000)        /*!&lt; Bit 0 */</div><div class="line">#define  ADC_SQR3_SQ5_1                      ((uint32_t)0x00200000)        /*!&lt; Bit 1 */</div><div class="line">#define  ADC_SQR3_SQ5_2                      ((uint32_t)0x00400000)        /*!&lt; Bit 2 */</div><div class="line">#define  ADC_SQR3_SQ5_3                      ((uint32_t)0x00800000)        /*!&lt; Bit 3 */</div><div class="line">#define  ADC_SQR3_SQ5_4                      ((uint32_t)0x01000000)        /*!&lt; Bit 4 */</div><div class="line"></div><div class="line">#define  ADC_SQR3_SQ6                        ((uint32_t)0x3E000000)        /*!&lt; SQ6[4:0] bits (6th conversion in regular sequence) */</div><div class="line">#define  ADC_SQR3_SQ6_0                      ((uint32_t)0x02000000)        /*!&lt; Bit 0 */</div><div class="line">#define  ADC_SQR3_SQ6_1                      ((uint32_t)0x04000000)        /*!&lt; Bit 1 */</div><div class="line">#define  ADC_SQR3_SQ6_2                      ((uint32_t)0x08000000)        /*!&lt; Bit 2 */</div><div class="line">#define  ADC_SQR3_SQ6_3                      ((uint32_t)0x10000000)        /*!&lt; Bit 3 */</div><div class="line">#define  ADC_SQR3_SQ6_4                      ((uint32_t)0x20000000)        /*!&lt; Bit 4 */</div><div class="line"></div><div class="line">/*******************  Bit definition for ADC_JSQR register  *******************/</div><div class="line">#define  ADC_JSQR_JSQ1                       ((uint32_t)0x0000001F)        /*!&lt; JSQ1[4:0] bits (1st conversion in injected sequence) */  </div><div class="line">#define  ADC_JSQR_JSQ1_0                     ((uint32_t)0x00000001)        /*!&lt; Bit 0 */</div><div class="line">#define  ADC_JSQR_JSQ1_1                     ((uint32_t)0x00000002)        /*!&lt; Bit 1 */</div><div class="line">#define  ADC_JSQR_JSQ1_2                     ((uint32_t)0x00000004)        /*!&lt; Bit 2 */</div><div class="line">#define  ADC_JSQR_JSQ1_3                     ((uint32_t)0x00000008)        /*!&lt; Bit 3 */</div><div class="line">#define  ADC_JSQR_JSQ1_4                     ((uint32_t)0x00000010)        /*!&lt; Bit 4 */</div><div class="line"></div><div class="line">#define  ADC_JSQR_JSQ2                       ((uint32_t)0x000003E0)        /*!&lt; JSQ2[4:0] bits (2nd conversion in injected sequence) */</div><div class="line">#define  ADC_JSQR_JSQ2_0                     ((uint32_t)0x00000020)        /*!&lt; Bit 0 */</div><div class="line">#define  ADC_JSQR_JSQ2_1                     ((uint32_t)0x00000040)        /*!&lt; Bit 1 */</div><div class="line">#define  ADC_JSQR_JSQ2_2                     ((uint32_t)0x00000080)        /*!&lt; Bit 2 */</div><div class="line">#define  ADC_JSQR_JSQ2_3                     ((uint32_t)0x00000100)        /*!&lt; Bit 3 */</div><div class="line">#define  ADC_JSQR_JSQ2_4                     ((uint32_t)0x00000200)        /*!&lt; Bit 4 */</div><div class="line"></div><div class="line">#define  ADC_JSQR_JSQ3                       ((uint32_t)0x00007C00)        /*!&lt; JSQ3[4:0] bits (3rd conversion in injected sequence) */</div><div class="line">#define  ADC_JSQR_JSQ3_0                     ((uint32_t)0x00000400)        /*!&lt; Bit 0 */</div><div class="line">#define  ADC_JSQR_JSQ3_1                     ((uint32_t)0x00000800)        /*!&lt; Bit 1 */</div><div class="line">#define  ADC_JSQR_JSQ3_2                     ((uint32_t)0x00001000)        /*!&lt; Bit 2 */</div><div class="line">#define  ADC_JSQR_JSQ3_3                     ((uint32_t)0x00002000)        /*!&lt; Bit 3 */</div><div class="line">#define  ADC_JSQR_JSQ3_4                     ((uint32_t)0x00004000)        /*!&lt; Bit 4 */</div><div class="line"></div><div class="line">#define  ADC_JSQR_JSQ4                       ((uint32_t)0x000F8000)        /*!&lt; JSQ4[4:0] bits (4th conversion in injected sequence) */</div><div class="line">#define  ADC_JSQR_JSQ4_0                     ((uint32_t)0x00008000)        /*!&lt; Bit 0 */</div><div class="line">#define  ADC_JSQR_JSQ4_1                     ((uint32_t)0x00010000)        /*!&lt; Bit 1 */</div><div class="line">#define  ADC_JSQR_JSQ4_2                     ((uint32_t)0x00020000)        /*!&lt; Bit 2 */</div><div class="line">#define  ADC_JSQR_JSQ4_3                     ((uint32_t)0x00040000)        /*!&lt; Bit 3 */</div><div class="line">#define  ADC_JSQR_JSQ4_4                     ((uint32_t)0x00080000)        /*!&lt; Bit 4 */</div><div class="line"></div><div class="line">#define  ADC_JSQR_JL                         ((uint32_t)0x00300000)        /*!&lt; JL[1:0] bits (Injected Sequence length) */</div><div class="line">#define  ADC_JSQR_JL_0                       ((uint32_t)0x00100000)        /*!&lt; Bit 0 */</div><div class="line">#define  ADC_JSQR_JL_1                       ((uint32_t)0x00200000)        /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">/*******************  Bit definition for ADC_JDR1 register  *******************/</div><div class="line">#define  ADC_JDR1_JDATA                      ((uint16_t)0xFFFF)            /*!&lt; Injected data */</div><div class="line"></div><div class="line">/*******************  Bit definition for ADC_JDR2 register  *******************/</div><div class="line">#define  ADC_JDR2_JDATA                      ((uint16_t)0xFFFF)            /*!&lt; Injected data */</div><div class="line"></div><div class="line">/*******************  Bit definition for ADC_JDR3 register  *******************/</div><div class="line">#define  ADC_JDR3_JDATA                      ((uint16_t)0xFFFF)            /*!&lt; Injected data */</div><div class="line"></div><div class="line">/*******************  Bit definition for ADC_JDR4 register  *******************/</div><div class="line">#define  ADC_JDR4_JDATA                      ((uint16_t)0xFFFF)            /*!&lt; Injected data */</div><div class="line"></div><div class="line">/********************  Bit definition for ADC_DR register  ********************/</div><div class="line">#define  ADC_DR_DATA                         ((uint32_t)0x0000FFFF)        /*!&lt; Regular data */</div><div class="line">#define  ADC_DR_ADC2DATA                     ((uint32_t)0xFFFF0000)        /*!&lt; ADC2 data */</div><div class="line"></div><div class="line">/******************************************************************************/</div><div class="line">/*                                                                            */</div><div class="line">/*                      Digital to Analog Converter                           */</div><div class="line">/*                                                                            */</div><div class="line">/******************************************************************************/</div><div class="line"></div><div class="line">/********************  Bit definition for DAC_CR register  ********************/</div><div class="line">#define  DAC_CR_EN1                          ((uint32_t)0x00000001)        /*!&lt; DAC channel1 enable */</div><div class="line">#define  DAC_CR_BOFF1                        ((uint32_t)0x00000002)        /*!&lt; DAC channel1 output buffer disable */</div><div class="line">#define  DAC_CR_TEN1                         ((uint32_t)0x00000004)        /*!&lt; DAC channel1 Trigger enable */</div><div class="line"></div><div class="line">#define  DAC_CR_TSEL1                        ((uint32_t)0x00000038)        /*!&lt; TSEL1[2:0] (DAC channel1 Trigger selection) */</div><div class="line">#define  DAC_CR_TSEL1_0                      ((uint32_t)0x00000008)        /*!&lt; Bit 0 */</div><div class="line">#define  DAC_CR_TSEL1_1                      ((uint32_t)0x00000010)        /*!&lt; Bit 1 */</div><div class="line">#define  DAC_CR_TSEL1_2                      ((uint32_t)0x00000020)        /*!&lt; Bit 2 */</div><div class="line"></div><div class="line">#define  DAC_CR_WAVE1                        ((uint32_t)0x000000C0)        /*!&lt; WAVE1[1:0] (DAC channel1 noise/triangle wave generation enable) */</div><div class="line">#define  DAC_CR_WAVE1_0                      ((uint32_t)0x00000040)        /*!&lt; Bit 0 */</div><div class="line">#define  DAC_CR_WAVE1_1                      ((uint32_t)0x00000080)        /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  DAC_CR_MAMP1                        ((uint32_t)0x00000F00)        /*!&lt; MAMP1[3:0] (DAC channel1 Mask/Amplitude selector) */</div><div class="line">#define  DAC_CR_MAMP1_0                      ((uint32_t)0x00000100)        /*!&lt; Bit 0 */</div><div class="line">#define  DAC_CR_MAMP1_1                      ((uint32_t)0x00000200)        /*!&lt; Bit 1 */</div><div class="line">#define  DAC_CR_MAMP1_2                      ((uint32_t)0x00000400)        /*!&lt; Bit 2 */</div><div class="line">#define  DAC_CR_MAMP1_3                      ((uint32_t)0x00000800)        /*!&lt; Bit 3 */</div><div class="line"></div><div class="line">#define  DAC_CR_DMAEN1                       ((uint32_t)0x00001000)        /*!&lt; DAC channel1 DMA enable */</div><div class="line">#define  DAC_CR_EN2                          ((uint32_t)0x00010000)        /*!&lt; DAC channel2 enable */</div><div class="line">#define  DAC_CR_BOFF2                        ((uint32_t)0x00020000)        /*!&lt; DAC channel2 output buffer disable */</div><div class="line">#define  DAC_CR_TEN2                         ((uint32_t)0x00040000)        /*!&lt; DAC channel2 Trigger enable */</div><div class="line"></div><div class="line">#define  DAC_CR_TSEL2                        ((uint32_t)0x00380000)        /*!&lt; TSEL2[2:0] (DAC channel2 Trigger selection) */</div><div class="line">#define  DAC_CR_TSEL2_0                      ((uint32_t)0x00080000)        /*!&lt; Bit 0 */</div><div class="line">#define  DAC_CR_TSEL2_1                      ((uint32_t)0x00100000)        /*!&lt; Bit 1 */</div><div class="line">#define  DAC_CR_TSEL2_2                      ((uint32_t)0x00200000)        /*!&lt; Bit 2 */</div><div class="line"></div><div class="line">#define  DAC_CR_WAVE2                        ((uint32_t)0x00C00000)        /*!&lt; WAVE2[1:0] (DAC channel2 noise/triangle wave generation enable) */</div><div class="line">#define  DAC_CR_WAVE2_0                      ((uint32_t)0x00400000)        /*!&lt; Bit 0 */</div><div class="line">#define  DAC_CR_WAVE2_1                      ((uint32_t)0x00800000)        /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  DAC_CR_MAMP2                        ((uint32_t)0x0F000000)        /*!&lt; MAMP2[3:0] (DAC channel2 Mask/Amplitude selector) */</div><div class="line">#define  DAC_CR_MAMP2_0                      ((uint32_t)0x01000000)        /*!&lt; Bit 0 */</div><div class="line">#define  DAC_CR_MAMP2_1                      ((uint32_t)0x02000000)        /*!&lt; Bit 1 */</div><div class="line">#define  DAC_CR_MAMP2_2                      ((uint32_t)0x04000000)        /*!&lt; Bit 2 */</div><div class="line">#define  DAC_CR_MAMP2_3                      ((uint32_t)0x08000000)        /*!&lt; Bit 3 */</div><div class="line"></div><div class="line">#define  DAC_CR_DMAEN2                       ((uint32_t)0x10000000)        /*!&lt; DAC channel2 DMA enabled */</div><div class="line"></div><div class="line">/*****************  Bit definition for DAC_SWTRIGR register  ******************/</div><div class="line">#define  DAC_SWTRIGR_SWTRIG1                 ((uint8_t)0x01)               /*!&lt; DAC channel1 software trigger */</div><div class="line">#define  DAC_SWTRIGR_SWTRIG2                 ((uint8_t)0x02)               /*!&lt; DAC channel2 software trigger */</div><div class="line"></div><div class="line">/*****************  Bit definition for DAC_DHR12R1 register  ******************/</div><div class="line">#define  DAC_DHR12R1_DACC1DHR                ((uint16_t)0x0FFF)            /*!&lt; DAC channel1 12-bit Right aligned data */</div><div class="line"></div><div class="line">/*****************  Bit definition for DAC_DHR12L1 register  ******************/</div><div class="line">#define  DAC_DHR12L1_DACC1DHR                ((uint16_t)0xFFF0)            /*!&lt; DAC channel1 12-bit Left aligned data */</div><div class="line"></div><div class="line">/******************  Bit definition for DAC_DHR8R1 register  ******************/</div><div class="line">#define  DAC_DHR8R1_DACC1DHR                 ((uint8_t)0xFF)               /*!&lt; DAC channel1 8-bit Right aligned data */</div><div class="line"></div><div class="line">/*****************  Bit definition for DAC_DHR12R2 register  ******************/</div><div class="line">#define  DAC_DHR12R2_DACC2DHR                ((uint16_t)0x0FFF)            /*!&lt; DAC channel2 12-bit Right aligned data */</div><div class="line"></div><div class="line">/*****************  Bit definition for DAC_DHR12L2 register  ******************/</div><div class="line">#define  DAC_DHR12L2_DACC2DHR                ((uint16_t)0xFFF0)            /*!&lt; DAC channel2 12-bit Left aligned data */</div><div class="line"></div><div class="line">/******************  Bit definition for DAC_DHR8R2 register  ******************/</div><div class="line">#define  DAC_DHR8R2_DACC2DHR                 ((uint8_t)0xFF)               /*!&lt; DAC channel2 8-bit Right aligned data */</div><div class="line"></div><div class="line">/*****************  Bit definition for DAC_DHR12RD register  ******************/</div><div class="line">#define  DAC_DHR12RD_DACC1DHR                ((uint32_t)0x00000FFF)        /*!&lt; DAC channel1 12-bit Right aligned data */</div><div class="line">#define  DAC_DHR12RD_DACC2DHR                ((uint32_t)0x0FFF0000)        /*!&lt; DAC channel2 12-bit Right aligned data */</div><div class="line"></div><div class="line">/*****************  Bit definition for DAC_DHR12LD register  ******************/</div><div class="line">#define  DAC_DHR12LD_DACC1DHR                ((uint32_t)0x0000FFF0)        /*!&lt; DAC channel1 12-bit Left aligned data */</div><div class="line">#define  DAC_DHR12LD_DACC2DHR                ((uint32_t)0xFFF00000)        /*!&lt; DAC channel2 12-bit Left aligned data */</div><div class="line"></div><div class="line">/******************  Bit definition for DAC_DHR8RD register  ******************/</div><div class="line">#define  DAC_DHR8RD_DACC1DHR                 ((uint16_t)0x00FF)            /*!&lt; DAC channel1 8-bit Right aligned data */</div><div class="line">#define  DAC_DHR8RD_DACC2DHR                 ((uint16_t)0xFF00)            /*!&lt; DAC channel2 8-bit Right aligned data */</div><div class="line"></div><div class="line">/*******************  Bit definition for DAC_DOR1 register  *******************/</div><div class="line">#define  DAC_DOR1_DACC1DOR                   ((uint16_t)0x0FFF)            /*!&lt; DAC channel1 data output */</div><div class="line"></div><div class="line">/*******************  Bit definition for DAC_DOR2 register  *******************/</div><div class="line">#define  DAC_DOR2_DACC2DOR                   ((uint16_t)0x0FFF)            /*!&lt; DAC channel2 data output */</div><div class="line"></div><div class="line">/********************  Bit definition for DAC_SR register  ********************/</div><div class="line">#define  DAC_SR_DMAUDR1                      ((uint32_t)0x00002000)        /*!&lt; DAC channel1 DMA underrun flag */</div><div class="line">#define  DAC_SR_DMAUDR2                      ((uint32_t)0x20000000)        /*!&lt; DAC channel2 DMA underrun flag */</div><div class="line"></div><div class="line">/******************************************************************************/</div><div class="line">/*                                                                            */</div><div class="line">/*                                    CEC                                     */</div><div class="line">/*                                                                            */</div><div class="line">/******************************************************************************/</div><div class="line">/********************  Bit definition for CEC_CFGR register  ******************/</div><div class="line">#define  CEC_CFGR_PE              ((uint16_t)0x0001)     /*!&lt;  Peripheral Enable */</div><div class="line">#define  CEC_CFGR_IE              ((uint16_t)0x0002)     /*!&lt;  Interrupt Enable */</div><div class="line">#define  CEC_CFGR_BTEM            ((uint16_t)0x0004)     /*!&lt;  Bit Timing Error Mode */</div><div class="line">#define  CEC_CFGR_BPEM            ((uint16_t)0x0008)     /*!&lt;  Bit Period Error Mode */</div><div class="line"></div><div class="line">/********************  Bit definition for CEC_OAR register  ******************/</div><div class="line">#define  CEC_OAR_OA               ((uint16_t)0x000F)     /*!&lt;  OA[3:0]: Own Address */</div><div class="line">#define  CEC_OAR_OA_0             ((uint16_t)0x0001)     /*!&lt;  Bit 0 */</div><div class="line">#define  CEC_OAR_OA_1             ((uint16_t)0x0002)     /*!&lt;  Bit 1 */</div><div class="line">#define  CEC_OAR_OA_2             ((uint16_t)0x0004)     /*!&lt;  Bit 2 */</div><div class="line">#define  CEC_OAR_OA_3             ((uint16_t)0x0008)     /*!&lt;  Bit 3 */</div><div class="line"></div><div class="line">/********************  Bit definition for CEC_PRES register  ******************/</div><div class="line">#define  CEC_PRES_PRES            ((uint16_t)0x3FFF)   /*!&lt;  Prescaler Counter Value */</div><div class="line"></div><div class="line">/********************  Bit definition for CEC_ESR register  ******************/</div><div class="line">#define  CEC_ESR_BTE              ((uint16_t)0x0001)     /*!&lt;  Bit Timing Error */</div><div class="line">#define  CEC_ESR_BPE              ((uint16_t)0x0002)     /*!&lt;  Bit Period Error */</div><div class="line">#define  CEC_ESR_RBTFE            ((uint16_t)0x0004)     /*!&lt;  Rx Block Transfer Finished Error */</div><div class="line">#define  CEC_ESR_SBE              ((uint16_t)0x0008)     /*!&lt;  Start Bit Error */</div><div class="line">#define  CEC_ESR_ACKE             ((uint16_t)0x0010)     /*!&lt;  Block Acknowledge Error */</div><div class="line">#define  CEC_ESR_LINE             ((uint16_t)0x0020)     /*!&lt;  Line Error */</div><div class="line">#define  CEC_ESR_TBTFE            ((uint16_t)0x0040)     /*!&lt;  Tx Block Transfer Finished Error */</div><div class="line"></div><div class="line">/********************  Bit definition for CEC_CSR register  ******************/</div><div class="line">#define  CEC_CSR_TSOM             ((uint16_t)0x0001)     /*!&lt;  Tx Start Of Message */</div><div class="line">#define  CEC_CSR_TEOM             ((uint16_t)0x0002)     /*!&lt;  Tx End Of Message */</div><div class="line">#define  CEC_CSR_TERR             ((uint16_t)0x0004)     /*!&lt;  Tx Error */</div><div class="line">#define  CEC_CSR_TBTRF            ((uint16_t)0x0008)     /*!&lt;  Tx Byte Transfer Request or Block Transfer Finished */</div><div class="line">#define  CEC_CSR_RSOM             ((uint16_t)0x0010)     /*!&lt;  Rx Start Of Message */</div><div class="line">#define  CEC_CSR_REOM             ((uint16_t)0x0020)     /*!&lt;  Rx End Of Message */</div><div class="line">#define  CEC_CSR_RERR             ((uint16_t)0x0040)     /*!&lt;  Rx Error */</div><div class="line">#define  CEC_CSR_RBTF             ((uint16_t)0x0080)     /*!&lt;  Rx Block Transfer Finished */</div><div class="line"></div><div class="line">/********************  Bit definition for CEC_TXD register  ******************/</div><div class="line">#define  CEC_TXD_TXD              ((uint16_t)0x00FF)     /*!&lt;  Tx Data register */</div><div class="line"></div><div class="line">/********************  Bit definition for CEC_RXD register  ******************/</div><div class="line">#define  CEC_RXD_RXD              ((uint16_t)0x00FF)     /*!&lt;  Rx Data register */</div><div class="line"></div><div class="line">/******************************************************************************/</div><div class="line">/*                                                                            */</div><div class="line">/*                                    TIM                                     */</div><div class="line">/*                                                                            */</div><div class="line">/******************************************************************************/</div><div class="line"></div><div class="line">/*******************  Bit definition for TIM_CR1 register  ********************/</div><div class="line">#define  TIM_CR1_CEN                         ((uint16_t)0x0001)            /*!&lt; Counter enable */</div><div class="line">#define  TIM_CR1_UDIS                        ((uint16_t)0x0002)            /*!&lt; Update disable */</div><div class="line">#define  TIM_CR1_URS                         ((uint16_t)0x0004)            /*!&lt; Update request source */</div><div class="line">#define  TIM_CR1_OPM                         ((uint16_t)0x0008)            /*!&lt; One pulse mode */</div><div class="line">#define  TIM_CR1_DIR                         ((uint16_t)0x0010)            /*!&lt; Direction */</div><div class="line"></div><div class="line">#define  TIM_CR1_CMS                         ((uint16_t)0x0060)            /*!&lt; CMS[1:0] bits (Center-aligned mode selection) */</div><div class="line">#define  TIM_CR1_CMS_0                       ((uint16_t)0x0020)            /*!&lt; Bit 0 */</div><div class="line">#define  TIM_CR1_CMS_1                       ((uint16_t)0x0040)            /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  TIM_CR1_ARPE                        ((uint16_t)0x0080)            /*!&lt; Auto-reload preload enable */</div><div class="line"></div><div class="line">#define  TIM_CR1_CKD                         ((uint16_t)0x0300)            /*!&lt; CKD[1:0] bits (clock division) */</div><div class="line">#define  TIM_CR1_CKD_0                       ((uint16_t)0x0100)            /*!&lt; Bit 0 */</div><div class="line">#define  TIM_CR1_CKD_1                       ((uint16_t)0x0200)            /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">/*******************  Bit definition for TIM_CR2 register  ********************/</div><div class="line">#define  TIM_CR2_CCPC                        ((uint16_t)0x0001)            /*!&lt; Capture/Compare Preloaded Control */</div><div class="line">#define  TIM_CR2_CCUS                        ((uint16_t)0x0004)            /*!&lt; Capture/Compare Control Update Selection */</div><div class="line">#define  TIM_CR2_CCDS                        ((uint16_t)0x0008)            /*!&lt; Capture/Compare DMA Selection */</div><div class="line"></div><div class="line">#define  TIM_CR2_MMS                         ((uint16_t)0x0070)            /*!&lt; MMS[2:0] bits (Master Mode Selection) */</div><div class="line">#define  TIM_CR2_MMS_0                       ((uint16_t)0x0010)            /*!&lt; Bit 0 */</div><div class="line">#define  TIM_CR2_MMS_1                       ((uint16_t)0x0020)            /*!&lt; Bit 1 */</div><div class="line">#define  TIM_CR2_MMS_2                       ((uint16_t)0x0040)            /*!&lt; Bit 2 */</div><div class="line"></div><div class="line">#define  TIM_CR2_TI1S                        ((uint16_t)0x0080)            /*!&lt; TI1 Selection */</div><div class="line">#define  TIM_CR2_OIS1                        ((uint16_t)0x0100)            /*!&lt; Output Idle state 1 (OC1 output) */</div><div class="line">#define  TIM_CR2_OIS1N                       ((uint16_t)0x0200)            /*!&lt; Output Idle state 1 (OC1N output) */</div><div class="line">#define  TIM_CR2_OIS2                        ((uint16_t)0x0400)            /*!&lt; Output Idle state 2 (OC2 output) */</div><div class="line">#define  TIM_CR2_OIS2N                       ((uint16_t)0x0800)            /*!&lt; Output Idle state 2 (OC2N output) */</div><div class="line">#define  TIM_CR2_OIS3                        ((uint16_t)0x1000)            /*!&lt; Output Idle state 3 (OC3 output) */</div><div class="line">#define  TIM_CR2_OIS3N                       ((uint16_t)0x2000)            /*!&lt; Output Idle state 3 (OC3N output) */</div><div class="line">#define  TIM_CR2_OIS4                        ((uint16_t)0x4000)            /*!&lt; Output Idle state 4 (OC4 output) */</div><div class="line"></div><div class="line">/*******************  Bit definition for TIM_SMCR register  *******************/</div><div class="line">#define  TIM_SMCR_SMS                        ((uint16_t)0x0007)            /*!&lt; SMS[2:0] bits (Slave mode selection) */</div><div class="line">#define  TIM_SMCR_SMS_0                      ((uint16_t)0x0001)            /*!&lt; Bit 0 */</div><div class="line">#define  TIM_SMCR_SMS_1                      ((uint16_t)0x0002)            /*!&lt; Bit 1 */</div><div class="line">#define  TIM_SMCR_SMS_2                      ((uint16_t)0x0004)            /*!&lt; Bit 2 */</div><div class="line"></div><div class="line">#define  TIM_SMCR_TS                         ((uint16_t)0x0070)            /*!&lt; TS[2:0] bits (Trigger selection) */</div><div class="line">#define  TIM_SMCR_TS_0                       ((uint16_t)0x0010)            /*!&lt; Bit 0 */</div><div class="line">#define  TIM_SMCR_TS_1                       ((uint16_t)0x0020)            /*!&lt; Bit 1 */</div><div class="line">#define  TIM_SMCR_TS_2                       ((uint16_t)0x0040)            /*!&lt; Bit 2 */</div><div class="line"></div><div class="line">#define  TIM_SMCR_MSM                        ((uint16_t)0x0080)            /*!&lt; Master/slave mode */</div><div class="line"></div><div class="line">#define  TIM_SMCR_ETF                        ((uint16_t)0x0F00)            /*!&lt; ETF[3:0] bits (External trigger filter) */</div><div class="line">#define  TIM_SMCR_ETF_0                      ((uint16_t)0x0100)            /*!&lt; Bit 0 */</div><div class="line">#define  TIM_SMCR_ETF_1                      ((uint16_t)0x0200)            /*!&lt; Bit 1 */</div><div class="line">#define  TIM_SMCR_ETF_2                      ((uint16_t)0x0400)            /*!&lt; Bit 2 */</div><div class="line">#define  TIM_SMCR_ETF_3                      ((uint16_t)0x0800)            /*!&lt; Bit 3 */</div><div class="line"></div><div class="line">#define  TIM_SMCR_ETPS                       ((uint16_t)0x3000)            /*!&lt; ETPS[1:0] bits (External trigger prescaler) */</div><div class="line">#define  TIM_SMCR_ETPS_0                     ((uint16_t)0x1000)            /*!&lt; Bit 0 */</div><div class="line">#define  TIM_SMCR_ETPS_1                     ((uint16_t)0x2000)            /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  TIM_SMCR_ECE                        ((uint16_t)0x4000)            /*!&lt; External clock enable */</div><div class="line">#define  TIM_SMCR_ETP                        ((uint16_t)0x8000)            /*!&lt; External trigger polarity */</div><div class="line"></div><div class="line">/*******************  Bit definition for TIM_DIER register  *******************/</div><div class="line">#define  TIM_DIER_UIE                        ((uint16_t)0x0001)            /*!&lt; Update interrupt enable */</div><div class="line">#define  TIM_DIER_CC1IE                      ((uint16_t)0x0002)            /*!&lt; Capture/Compare 1 interrupt enable */</div><div class="line">#define  TIM_DIER_CC2IE                      ((uint16_t)0x0004)            /*!&lt; Capture/Compare 2 interrupt enable */</div><div class="line">#define  TIM_DIER_CC3IE                      ((uint16_t)0x0008)            /*!&lt; Capture/Compare 3 interrupt enable */</div><div class="line">#define  TIM_DIER_CC4IE                      ((uint16_t)0x0010)            /*!&lt; Capture/Compare 4 interrupt enable */</div><div class="line">#define  TIM_DIER_COMIE                      ((uint16_t)0x0020)            /*!&lt; COM interrupt enable */</div><div class="line">#define  TIM_DIER_TIE                        ((uint16_t)0x0040)            /*!&lt; Trigger interrupt enable */</div><div class="line">#define  TIM_DIER_BIE                        ((uint16_t)0x0080)            /*!&lt; Break interrupt enable */</div><div class="line">#define  TIM_DIER_UDE                        ((uint16_t)0x0100)            /*!&lt; Update DMA request enable */</div><div class="line">#define  TIM_DIER_CC1DE                      ((uint16_t)0x0200)            /*!&lt; Capture/Compare 1 DMA request enable */</div><div class="line">#define  TIM_DIER_CC2DE                      ((uint16_t)0x0400)            /*!&lt; Capture/Compare 2 DMA request enable */</div><div class="line">#define  TIM_DIER_CC3DE                      ((uint16_t)0x0800)            /*!&lt; Capture/Compare 3 DMA request enable */</div><div class="line">#define  TIM_DIER_CC4DE                      ((uint16_t)0x1000)            /*!&lt; Capture/Compare 4 DMA request enable */</div><div class="line">#define  TIM_DIER_COMDE                      ((uint16_t)0x2000)            /*!&lt; COM DMA request enable */</div><div class="line">#define  TIM_DIER_TDE                        ((uint16_t)0x4000)            /*!&lt; Trigger DMA request enable */</div><div class="line"></div><div class="line">/********************  Bit definition for TIM_SR register  ********************/</div><div class="line">#define  TIM_SR_UIF                          ((uint16_t)0x0001)            /*!&lt; Update interrupt Flag */</div><div class="line">#define  TIM_SR_CC1IF                        ((uint16_t)0x0002)            /*!&lt; Capture/Compare 1 interrupt Flag */</div><div class="line">#define  TIM_SR_CC2IF                        ((uint16_t)0x0004)            /*!&lt; Capture/Compare 2 interrupt Flag */</div><div class="line">#define  TIM_SR_CC3IF                        ((uint16_t)0x0008)            /*!&lt; Capture/Compare 3 interrupt Flag */</div><div class="line">#define  TIM_SR_CC4IF                        ((uint16_t)0x0010)            /*!&lt; Capture/Compare 4 interrupt Flag */</div><div class="line">#define  TIM_SR_COMIF                        ((uint16_t)0x0020)            /*!&lt; COM interrupt Flag */</div><div class="line">#define  TIM_SR_TIF                          ((uint16_t)0x0040)            /*!&lt; Trigger interrupt Flag */</div><div class="line">#define  TIM_SR_BIF                          ((uint16_t)0x0080)            /*!&lt; Break interrupt Flag */</div><div class="line">#define  TIM_SR_CC1OF                        ((uint16_t)0x0200)            /*!&lt; Capture/Compare 1 Overcapture Flag */</div><div class="line">#define  TIM_SR_CC2OF                        ((uint16_t)0x0400)            /*!&lt; Capture/Compare 2 Overcapture Flag */</div><div class="line">#define  TIM_SR_CC3OF                        ((uint16_t)0x0800)            /*!&lt; Capture/Compare 3 Overcapture Flag */</div><div class="line">#define  TIM_SR_CC4OF                        ((uint16_t)0x1000)            /*!&lt; Capture/Compare 4 Overcapture Flag */</div><div class="line"></div><div class="line">/*******************  Bit definition for TIM_EGR register  ********************/</div><div class="line">#define  TIM_EGR_UG                          ((uint8_t)0x01)               /*!&lt; Update Generation */</div><div class="line">#define  TIM_EGR_CC1G                        ((uint8_t)0x02)               /*!&lt; Capture/Compare 1 Generation */</div><div class="line">#define  TIM_EGR_CC2G                        ((uint8_t)0x04)               /*!&lt; Capture/Compare 2 Generation */</div><div class="line">#define  TIM_EGR_CC3G                        ((uint8_t)0x08)               /*!&lt; Capture/Compare 3 Generation */</div><div class="line">#define  TIM_EGR_CC4G                        ((uint8_t)0x10)               /*!&lt; Capture/Compare 4 Generation */</div><div class="line">#define  TIM_EGR_COMG                        ((uint8_t)0x20)               /*!&lt; Capture/Compare Control Update Generation */</div><div class="line">#define  TIM_EGR_TG                          ((uint8_t)0x40)               /*!&lt; Trigger Generation */</div><div class="line">#define  TIM_EGR_BG                          ((uint8_t)0x80)               /*!&lt; Break Generation */</div><div class="line"></div><div class="line">/******************  Bit definition for TIM_CCMR1 register  *******************/</div><div class="line">#define  TIM_CCMR1_CC1S                      ((uint16_t)0x0003)            /*!&lt; CC1S[1:0] bits (Capture/Compare 1 Selection) */</div><div class="line">#define  TIM_CCMR1_CC1S_0                    ((uint16_t)0x0001)            /*!&lt; Bit 0 */</div><div class="line">#define  TIM_CCMR1_CC1S_1                    ((uint16_t)0x0002)            /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  TIM_CCMR1_OC1FE                     ((uint16_t)0x0004)            /*!&lt; Output Compare 1 Fast enable */</div><div class="line">#define  TIM_CCMR1_OC1PE                     ((uint16_t)0x0008)            /*!&lt; Output Compare 1 Preload enable */</div><div class="line"></div><div class="line">#define  TIM_CCMR1_OC1M                      ((uint16_t)0x0070)            /*!&lt; OC1M[2:0] bits (Output Compare 1 Mode) */</div><div class="line">#define  TIM_CCMR1_OC1M_0                    ((uint16_t)0x0010)            /*!&lt; Bit 0 */</div><div class="line">#define  TIM_CCMR1_OC1M_1                    ((uint16_t)0x0020)            /*!&lt; Bit 1 */</div><div class="line">#define  TIM_CCMR1_OC1M_2                    ((uint16_t)0x0040)            /*!&lt; Bit 2 */</div><div class="line"></div><div class="line">#define  TIM_CCMR1_OC1CE                     ((uint16_t)0x0080)            /*!&lt; Output Compare 1Clear Enable */</div><div class="line"></div><div class="line">#define  TIM_CCMR1_CC2S                      ((uint16_t)0x0300)            /*!&lt; CC2S[1:0] bits (Capture/Compare 2 Selection) */</div><div class="line">#define  TIM_CCMR1_CC2S_0                    ((uint16_t)0x0100)            /*!&lt; Bit 0 */</div><div class="line">#define  TIM_CCMR1_CC2S_1                    ((uint16_t)0x0200)            /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  TIM_CCMR1_OC2FE                     ((uint16_t)0x0400)            /*!&lt; Output Compare 2 Fast enable */</div><div class="line">#define  TIM_CCMR1_OC2PE                     ((uint16_t)0x0800)            /*!&lt; Output Compare 2 Preload enable */</div><div class="line"></div><div class="line">#define  TIM_CCMR1_OC2M                      ((uint16_t)0x7000)            /*!&lt; OC2M[2:0] bits (Output Compare 2 Mode) */</div><div class="line">#define  TIM_CCMR1_OC2M_0                    ((uint16_t)0x1000)            /*!&lt; Bit 0 */</div><div class="line">#define  TIM_CCMR1_OC2M_1                    ((uint16_t)0x2000)            /*!&lt; Bit 1 */</div><div class="line">#define  TIM_CCMR1_OC2M_2                    ((uint16_t)0x4000)            /*!&lt; Bit 2 */</div><div class="line"></div><div class="line">#define  TIM_CCMR1_OC2CE                     ((uint16_t)0x8000)            /*!&lt; Output Compare 2 Clear Enable */</div><div class="line"></div><div class="line">/*----------------------------------------------------------------------------*/</div><div class="line"></div><div class="line">#define  TIM_CCMR1_IC1PSC                    ((uint16_t)0x000C)            /*!&lt; IC1PSC[1:0] bits (Input Capture 1 Prescaler) */</div><div class="line">#define  TIM_CCMR1_IC1PSC_0                  ((uint16_t)0x0004)            /*!&lt; Bit 0 */</div><div class="line">#define  TIM_CCMR1_IC1PSC_1                  ((uint16_t)0x0008)            /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  TIM_CCMR1_IC1F                      ((uint16_t)0x00F0)            /*!&lt; IC1F[3:0] bits (Input Capture 1 Filter) */</div><div class="line">#define  TIM_CCMR1_IC1F_0                    ((uint16_t)0x0010)            /*!&lt; Bit 0 */</div><div class="line">#define  TIM_CCMR1_IC1F_1                    ((uint16_t)0x0020)            /*!&lt; Bit 1 */</div><div class="line">#define  TIM_CCMR1_IC1F_2                    ((uint16_t)0x0040)            /*!&lt; Bit 2 */</div><div class="line">#define  TIM_CCMR1_IC1F_3                    ((uint16_t)0x0080)            /*!&lt; Bit 3 */</div><div class="line"></div><div class="line">#define  TIM_CCMR1_IC2PSC                    ((uint16_t)0x0C00)            /*!&lt; IC2PSC[1:0] bits (Input Capture 2 Prescaler) */</div><div class="line">#define  TIM_CCMR1_IC2PSC_0                  ((uint16_t)0x0400)            /*!&lt; Bit 0 */</div><div class="line">#define  TIM_CCMR1_IC2PSC_1                  ((uint16_t)0x0800)            /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  TIM_CCMR1_IC2F                      ((uint16_t)0xF000)            /*!&lt; IC2F[3:0] bits (Input Capture 2 Filter) */</div><div class="line">#define  TIM_CCMR1_IC2F_0                    ((uint16_t)0x1000)            /*!&lt; Bit 0 */</div><div class="line">#define  TIM_CCMR1_IC2F_1                    ((uint16_t)0x2000)            /*!&lt; Bit 1 */</div><div class="line">#define  TIM_CCMR1_IC2F_2                    ((uint16_t)0x4000)            /*!&lt; Bit 2 */</div><div class="line">#define  TIM_CCMR1_IC2F_3                    ((uint16_t)0x8000)            /*!&lt; Bit 3 */</div><div class="line"></div><div class="line">/******************  Bit definition for TIM_CCMR2 register  *******************/</div><div class="line">#define  TIM_CCMR2_CC3S                      ((uint16_t)0x0003)            /*!&lt; CC3S[1:0] bits (Capture/Compare 3 Selection) */</div><div class="line">#define  TIM_CCMR2_CC3S_0                    ((uint16_t)0x0001)            /*!&lt; Bit 0 */</div><div class="line">#define  TIM_CCMR2_CC3S_1                    ((uint16_t)0x0002)            /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  TIM_CCMR2_OC3FE                     ((uint16_t)0x0004)            /*!&lt; Output Compare 3 Fast enable */</div><div class="line">#define  TIM_CCMR2_OC3PE                     ((uint16_t)0x0008)            /*!&lt; Output Compare 3 Preload enable */</div><div class="line"></div><div class="line">#define  TIM_CCMR2_OC3M                      ((uint16_t)0x0070)            /*!&lt; OC3M[2:0] bits (Output Compare 3 Mode) */</div><div class="line">#define  TIM_CCMR2_OC3M_0                    ((uint16_t)0x0010)            /*!&lt; Bit 0 */</div><div class="line">#define  TIM_CCMR2_OC3M_1                    ((uint16_t)0x0020)            /*!&lt; Bit 1 */</div><div class="line">#define  TIM_CCMR2_OC3M_2                    ((uint16_t)0x0040)            /*!&lt; Bit 2 */</div><div class="line"></div><div class="line">#define  TIM_CCMR2_OC3CE                     ((uint16_t)0x0080)            /*!&lt; Output Compare 3 Clear Enable */</div><div class="line"></div><div class="line">#define  TIM_CCMR2_CC4S                      ((uint16_t)0x0300)            /*!&lt; CC4S[1:0] bits (Capture/Compare 4 Selection) */</div><div class="line">#define  TIM_CCMR2_CC4S_0                    ((uint16_t)0x0100)            /*!&lt; Bit 0 */</div><div class="line">#define  TIM_CCMR2_CC4S_1                    ((uint16_t)0x0200)            /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  TIM_CCMR2_OC4FE                     ((uint16_t)0x0400)            /*!&lt; Output Compare 4 Fast enable */</div><div class="line">#define  TIM_CCMR2_OC4PE                     ((uint16_t)0x0800)            /*!&lt; Output Compare 4 Preload enable */</div><div class="line"></div><div class="line">#define  TIM_CCMR2_OC4M                      ((uint16_t)0x7000)            /*!&lt; OC4M[2:0] bits (Output Compare 4 Mode) */</div><div class="line">#define  TIM_CCMR2_OC4M_0                    ((uint16_t)0x1000)            /*!&lt; Bit 0 */</div><div class="line">#define  TIM_CCMR2_OC4M_1                    ((uint16_t)0x2000)            /*!&lt; Bit 1 */</div><div class="line">#define  TIM_CCMR2_OC4M_2                    ((uint16_t)0x4000)            /*!&lt; Bit 2 */</div><div class="line"></div><div class="line">#define  TIM_CCMR2_OC4CE                     ((uint16_t)0x8000)            /*!&lt; Output Compare 4 Clear Enable */</div><div class="line"></div><div class="line">/*----------------------------------------------------------------------------*/</div><div class="line"></div><div class="line">#define  TIM_CCMR2_IC3PSC                    ((uint16_t)0x000C)            /*!&lt; IC3PSC[1:0] bits (Input Capture 3 Prescaler) */</div><div class="line">#define  TIM_CCMR2_IC3PSC_0                  ((uint16_t)0x0004)            /*!&lt; Bit 0 */</div><div class="line">#define  TIM_CCMR2_IC3PSC_1                  ((uint16_t)0x0008)            /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  TIM_CCMR2_IC3F                      ((uint16_t)0x00F0)            /*!&lt; IC3F[3:0] bits (Input Capture 3 Filter) */</div><div class="line">#define  TIM_CCMR2_IC3F_0                    ((uint16_t)0x0010)            /*!&lt; Bit 0 */</div><div class="line">#define  TIM_CCMR2_IC3F_1                    ((uint16_t)0x0020)            /*!&lt; Bit 1 */</div><div class="line">#define  TIM_CCMR2_IC3F_2                    ((uint16_t)0x0040)            /*!&lt; Bit 2 */</div><div class="line">#define  TIM_CCMR2_IC3F_3                    ((uint16_t)0x0080)            /*!&lt; Bit 3 */</div><div class="line"></div><div class="line">#define  TIM_CCMR2_IC4PSC                    ((uint16_t)0x0C00)            /*!&lt; IC4PSC[1:0] bits (Input Capture 4 Prescaler) */</div><div class="line">#define  TIM_CCMR2_IC4PSC_0                  ((uint16_t)0x0400)            /*!&lt; Bit 0 */</div><div class="line">#define  TIM_CCMR2_IC4PSC_1                  ((uint16_t)0x0800)            /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  TIM_CCMR2_IC4F                      ((uint16_t)0xF000)            /*!&lt; IC4F[3:0] bits (Input Capture 4 Filter) */</div><div class="line">#define  TIM_CCMR2_IC4F_0                    ((uint16_t)0x1000)            /*!&lt; Bit 0 */</div><div class="line">#define  TIM_CCMR2_IC4F_1                    ((uint16_t)0x2000)            /*!&lt; Bit 1 */</div><div class="line">#define  TIM_CCMR2_IC4F_2                    ((uint16_t)0x4000)            /*!&lt; Bit 2 */</div><div class="line">#define  TIM_CCMR2_IC4F_3                    ((uint16_t)0x8000)            /*!&lt; Bit 3 */</div><div class="line"></div><div class="line">/*******************  Bit definition for TIM_CCER register  *******************/</div><div class="line">#define  TIM_CCER_CC1E                       ((uint16_t)0x0001)            /*!&lt; Capture/Compare 1 output enable */</div><div class="line">#define  TIM_CCER_CC1P                       ((uint16_t)0x0002)            /*!&lt; Capture/Compare 1 output Polarity */</div><div class="line">#define  TIM_CCER_CC1NE                      ((uint16_t)0x0004)            /*!&lt; Capture/Compare 1 Complementary output enable */</div><div class="line">#define  TIM_CCER_CC1NP                      ((uint16_t)0x0008)            /*!&lt; Capture/Compare 1 Complementary output Polarity */</div><div class="line">#define  TIM_CCER_CC2E                       ((uint16_t)0x0010)            /*!&lt; Capture/Compare 2 output enable */</div><div class="line">#define  TIM_CCER_CC2P                       ((uint16_t)0x0020)            /*!&lt; Capture/Compare 2 output Polarity */</div><div class="line">#define  TIM_CCER_CC2NE                      ((uint16_t)0x0040)            /*!&lt; Capture/Compare 2 Complementary output enable */</div><div class="line">#define  TIM_CCER_CC2NP                      ((uint16_t)0x0080)            /*!&lt; Capture/Compare 2 Complementary output Polarity */</div><div class="line">#define  TIM_CCER_CC3E                       ((uint16_t)0x0100)            /*!&lt; Capture/Compare 3 output enable */</div><div class="line">#define  TIM_CCER_CC3P                       ((uint16_t)0x0200)            /*!&lt; Capture/Compare 3 output Polarity */</div><div class="line">#define  TIM_CCER_CC3NE                      ((uint16_t)0x0400)            /*!&lt; Capture/Compare 3 Complementary output enable */</div><div class="line">#define  TIM_CCER_CC3NP                      ((uint16_t)0x0800)            /*!&lt; Capture/Compare 3 Complementary output Polarity */</div><div class="line">#define  TIM_CCER_CC4E                       ((uint16_t)0x1000)            /*!&lt; Capture/Compare 4 output enable */</div><div class="line">#define  TIM_CCER_CC4P                       ((uint16_t)0x2000)            /*!&lt; Capture/Compare 4 output Polarity */</div><div class="line">#define  TIM_CCER_CC4NP                      ((uint16_t)0x8000)            /*!&lt; Capture/Compare 4 Complementary output Polarity */</div><div class="line"></div><div class="line">/*******************  Bit definition for TIM_CNT register  ********************/</div><div class="line">#define  TIM_CNT_CNT                         ((uint16_t)0xFFFF)            /*!&lt; Counter Value */</div><div class="line"></div><div class="line">/*******************  Bit definition for TIM_PSC register  ********************/</div><div class="line">#define  TIM_PSC_PSC                         ((uint16_t)0xFFFF)            /*!&lt; Prescaler Value */</div><div class="line"></div><div class="line">/*******************  Bit definition for TIM_ARR register  ********************/</div><div class="line">#define  TIM_ARR_ARR                         ((uint16_t)0xFFFF)            /*!&lt; actual auto-reload Value */</div><div class="line"></div><div class="line">/*******************  Bit definition for TIM_RCR register  ********************/</div><div class="line">#define  TIM_RCR_REP                         ((uint8_t)0xFF)               /*!&lt; Repetition Counter Value */</div><div class="line"></div><div class="line">/*******************  Bit definition for TIM_CCR1 register  *******************/</div><div class="line">#define  TIM_CCR1_CCR1                       ((uint16_t)0xFFFF)            /*!&lt; Capture/Compare 1 Value */</div><div class="line"></div><div class="line">/*******************  Bit definition for TIM_CCR2 register  *******************/</div><div class="line">#define  TIM_CCR2_CCR2                       ((uint16_t)0xFFFF)            /*!&lt; Capture/Compare 2 Value */</div><div class="line"></div><div class="line">/*******************  Bit definition for TIM_CCR3 register  *******************/</div><div class="line">#define  TIM_CCR3_CCR3                       ((uint16_t)0xFFFF)            /*!&lt; Capture/Compare 3 Value */</div><div class="line"></div><div class="line">/*******************  Bit definition for TIM_CCR4 register  *******************/</div><div class="line">#define  TIM_CCR4_CCR4                       ((uint16_t)0xFFFF)            /*!&lt; Capture/Compare 4 Value */</div><div class="line"></div><div class="line">/*******************  Bit definition for TIM_BDTR register  *******************/</div><div class="line">#define  TIM_BDTR_DTG                        ((uint16_t)0x00FF)            /*!&lt; DTG[0:7] bits (Dead-Time Generator set-up) */</div><div class="line">#define  TIM_BDTR_DTG_0                      ((uint16_t)0x0001)            /*!&lt; Bit 0 */</div><div class="line">#define  TIM_BDTR_DTG_1                      ((uint16_t)0x0002)            /*!&lt; Bit 1 */</div><div class="line">#define  TIM_BDTR_DTG_2                      ((uint16_t)0x0004)            /*!&lt; Bit 2 */</div><div class="line">#define  TIM_BDTR_DTG_3                      ((uint16_t)0x0008)            /*!&lt; Bit 3 */</div><div class="line">#define  TIM_BDTR_DTG_4                      ((uint16_t)0x0010)            /*!&lt; Bit 4 */</div><div class="line">#define  TIM_BDTR_DTG_5                      ((uint16_t)0x0020)            /*!&lt; Bit 5 */</div><div class="line">#define  TIM_BDTR_DTG_6                      ((uint16_t)0x0040)            /*!&lt; Bit 6 */</div><div class="line">#define  TIM_BDTR_DTG_7                      ((uint16_t)0x0080)            /*!&lt; Bit 7 */</div><div class="line"></div><div class="line">#define  TIM_BDTR_LOCK                       ((uint16_t)0x0300)            /*!&lt; LOCK[1:0] bits (Lock Configuration) */</div><div class="line">#define  TIM_BDTR_LOCK_0                     ((uint16_t)0x0100)            /*!&lt; Bit 0 */</div><div class="line">#define  TIM_BDTR_LOCK_1                     ((uint16_t)0x0200)            /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  TIM_BDTR_OSSI                       ((uint16_t)0x0400)            /*!&lt; Off-State Selection for Idle mode */</div><div class="line">#define  TIM_BDTR_OSSR                       ((uint16_t)0x0800)            /*!&lt; Off-State Selection for Run mode */</div><div class="line">#define  TIM_BDTR_BKE                        ((uint16_t)0x1000)            /*!&lt; Break enable */</div><div class="line">#define  TIM_BDTR_BKP                        ((uint16_t)0x2000)            /*!&lt; Break Polarity */</div><div class="line">#define  TIM_BDTR_AOE                        ((uint16_t)0x4000)            /*!&lt; Automatic Output enable */</div><div class="line">#define  TIM_BDTR_MOE                        ((uint16_t)0x8000)            /*!&lt; Main Output enable */</div><div class="line"></div><div class="line">/*******************  Bit definition for TIM_DCR register  ********************/</div><div class="line">#define  TIM_DCR_DBA                         ((uint16_t)0x001F)            /*!&lt; DBA[4:0] bits (DMA Base Address) */</div><div class="line">#define  TIM_DCR_DBA_0                       ((uint16_t)0x0001)            /*!&lt; Bit 0 */</div><div class="line">#define  TIM_DCR_DBA_1                       ((uint16_t)0x0002)            /*!&lt; Bit 1 */</div><div class="line">#define  TIM_DCR_DBA_2                       ((uint16_t)0x0004)            /*!&lt; Bit 2 */</div><div class="line">#define  TIM_DCR_DBA_3                       ((uint16_t)0x0008)            /*!&lt; Bit 3 */</div><div class="line">#define  TIM_DCR_DBA_4                       ((uint16_t)0x0010)            /*!&lt; Bit 4 */</div><div class="line"></div><div class="line">#define  TIM_DCR_DBL                         ((uint16_t)0x1F00)            /*!&lt; DBL[4:0] bits (DMA Burst Length) */</div><div class="line">#define  TIM_DCR_DBL_0                       ((uint16_t)0x0100)            /*!&lt; Bit 0 */</div><div class="line">#define  TIM_DCR_DBL_1                       ((uint16_t)0x0200)            /*!&lt; Bit 1 */</div><div class="line">#define  TIM_DCR_DBL_2                       ((uint16_t)0x0400)            /*!&lt; Bit 2 */</div><div class="line">#define  TIM_DCR_DBL_3                       ((uint16_t)0x0800)            /*!&lt; Bit 3 */</div><div class="line">#define  TIM_DCR_DBL_4                       ((uint16_t)0x1000)            /*!&lt; Bit 4 */</div><div class="line"></div><div class="line">/*******************  Bit definition for TIM_DMAR register  *******************/</div><div class="line">#define  TIM_DMAR_DMAB                       ((uint16_t)0xFFFF)            /*!&lt; DMA register for burst accesses */</div><div class="line"></div><div class="line">/******************************************************************************/</div><div class="line">/*                                                                            */</div><div class="line">/*                             Real-Time Clock                                */</div><div class="line">/*                                                                            */</div><div class="line">/******************************************************************************/</div><div class="line"></div><div class="line">/*******************  Bit definition for RTC_CRH register  ********************/</div><div class="line">#define  RTC_CRH_SECIE                       ((uint8_t)0x01)               /*!&lt; Second Interrupt Enable */</div><div class="line">#define  RTC_CRH_ALRIE                       ((uint8_t)0x02)               /*!&lt; Alarm Interrupt Enable */</div><div class="line">#define  RTC_CRH_OWIE                        ((uint8_t)0x04)               /*!&lt; OverfloW Interrupt Enable */</div><div class="line"></div><div class="line">/*******************  Bit definition for RTC_CRL register  ********************/</div><div class="line">#define  RTC_CRL_SECF                        ((uint8_t)0x01)               /*!&lt; Second Flag */</div><div class="line">#define  RTC_CRL_ALRF                        ((uint8_t)0x02)               /*!&lt; Alarm Flag */</div><div class="line">#define  RTC_CRL_OWF                         ((uint8_t)0x04)               /*!&lt; OverfloW Flag */</div><div class="line">#define  RTC_CRL_RSF                         ((uint8_t)0x08)               /*!&lt; Registers Synchronized Flag */</div><div class="line">#define  RTC_CRL_CNF                         ((uint8_t)0x10)               /*!&lt; Configuration Flag */</div><div class="line">#define  RTC_CRL_RTOFF                       ((uint8_t)0x20)               /*!&lt; RTC operation OFF */</div><div class="line"></div><div class="line">/*******************  Bit definition for RTC_PRLH register  *******************/</div><div class="line">#define  RTC_PRLH_PRL                        ((uint16_t)0x000F)            /*!&lt; RTC Prescaler Reload Value High */</div><div class="line"></div><div class="line">/*******************  Bit definition for RTC_PRLL register  *******************/</div><div class="line">#define  RTC_PRLL_PRL                        ((uint16_t)0xFFFF)            /*!&lt; RTC Prescaler Reload Value Low */</div><div class="line"></div><div class="line">/*******************  Bit definition for RTC_DIVH register  *******************/</div><div class="line">#define  RTC_DIVH_RTC_DIV                    ((uint16_t)0x000F)            /*!&lt; RTC Clock Divider High */</div><div class="line"></div><div class="line">/*******************  Bit definition for RTC_DIVL register  *******************/</div><div class="line">#define  RTC_DIVL_RTC_DIV                    ((uint16_t)0xFFFF)            /*!&lt; RTC Clock Divider Low */</div><div class="line"></div><div class="line">/*******************  Bit definition for RTC_CNTH register  *******************/</div><div class="line">#define  RTC_CNTH_RTC_CNT                    ((uint16_t)0xFFFF)            /*!&lt; RTC Counter High */</div><div class="line"></div><div class="line">/*******************  Bit definition for RTC_CNTL register  *******************/</div><div class="line">#define  RTC_CNTL_RTC_CNT                    ((uint16_t)0xFFFF)            /*!&lt; RTC Counter Low */</div><div class="line"></div><div class="line">/*******************  Bit definition for RTC_ALRH register  *******************/</div><div class="line">#define  RTC_ALRH_RTC_ALR                    ((uint16_t)0xFFFF)            /*!&lt; RTC Alarm High */</div><div class="line"></div><div class="line">/*******************  Bit definition for RTC_ALRL register  *******************/</div><div class="line">#define  RTC_ALRL_RTC_ALR                    ((uint16_t)0xFFFF)            /*!&lt; RTC Alarm Low */</div><div class="line"></div><div class="line">/******************************************************************************/</div><div class="line">/*                                                                            */</div><div class="line">/*                           Independent WATCHDOG                             */</div><div class="line">/*                                                                            */</div><div class="line">/******************************************************************************/</div><div class="line"></div><div class="line">/*******************  Bit definition for IWDG_KR register  ********************/</div><div class="line">#define  IWDG_KR_KEY                         ((uint16_t)0xFFFF)            /*!&lt; Key value (write only, read 0000h) */</div><div class="line"></div><div class="line">/*******************  Bit definition for IWDG_PR register  ********************/</div><div class="line">#define  IWDG_PR_PR                          ((uint8_t)0x07)               /*!&lt; PR[2:0] (Prescaler divider) */</div><div class="line">#define  IWDG_PR_PR_0                        ((uint8_t)0x01)               /*!&lt; Bit 0 */</div><div class="line">#define  IWDG_PR_PR_1                        ((uint8_t)0x02)               /*!&lt; Bit 1 */</div><div class="line">#define  IWDG_PR_PR_2                        ((uint8_t)0x04)               /*!&lt; Bit 2 */</div><div class="line"></div><div class="line">/*******************  Bit definition for IWDG_RLR register  *******************/</div><div class="line">#define  IWDG_RLR_RL                         ((uint16_t)0x0FFF)            /*!&lt; Watchdog counter reload value */</div><div class="line"></div><div class="line">/*******************  Bit definition for IWDG_SR register  ********************/</div><div class="line">#define  IWDG_SR_PVU                         ((uint8_t)0x01)               /*!&lt; Watchdog prescaler value update */</div><div class="line">#define  IWDG_SR_RVU                         ((uint8_t)0x02)               /*!&lt; Watchdog counter reload value update */</div><div class="line"></div><div class="line">/******************************************************************************/</div><div class="line">/*                                                                            */</div><div class="line">/*                            Window WATCHDOG                                 */</div><div class="line">/*                                                                            */</div><div class="line">/******************************************************************************/</div><div class="line"></div><div class="line">/*******************  Bit definition for WWDG_CR register  ********************/</div><div class="line">#define  WWDG_CR_T                           ((uint8_t)0x7F)               /*!&lt; T[6:0] bits (7-Bit counter (MSB to LSB)) */</div><div class="line">#define  WWDG_CR_T0                          ((uint8_t)0x01)               /*!&lt; Bit 0 */</div><div class="line">#define  WWDG_CR_T1                          ((uint8_t)0x02)               /*!&lt; Bit 1 */</div><div class="line">#define  WWDG_CR_T2                          ((uint8_t)0x04)               /*!&lt; Bit 2 */</div><div class="line">#define  WWDG_CR_T3                          ((uint8_t)0x08)               /*!&lt; Bit 3 */</div><div class="line">#define  WWDG_CR_T4                          ((uint8_t)0x10)               /*!&lt; Bit 4 */</div><div class="line">#define  WWDG_CR_T5                          ((uint8_t)0x20)               /*!&lt; Bit 5 */</div><div class="line">#define  WWDG_CR_T6                          ((uint8_t)0x40)               /*!&lt; Bit 6 */</div><div class="line"></div><div class="line">#define  WWDG_CR_WDGA                        ((uint8_t)0x80)               /*!&lt; Activation bit */</div><div class="line"></div><div class="line">/*******************  Bit definition for WWDG_CFR register  *******************/</div><div class="line">#define  WWDG_CFR_W                          ((uint16_t)0x007F)            /*!&lt; W[6:0] bits (7-bit window value) */</div><div class="line">#define  WWDG_CFR_W0                         ((uint16_t)0x0001)            /*!&lt; Bit 0 */</div><div class="line">#define  WWDG_CFR_W1                         ((uint16_t)0x0002)            /*!&lt; Bit 1 */</div><div class="line">#define  WWDG_CFR_W2                         ((uint16_t)0x0004)            /*!&lt; Bit 2 */</div><div class="line">#define  WWDG_CFR_W3                         ((uint16_t)0x0008)            /*!&lt; Bit 3 */</div><div class="line">#define  WWDG_CFR_W4                         ((uint16_t)0x0010)            /*!&lt; Bit 4 */</div><div class="line">#define  WWDG_CFR_W5                         ((uint16_t)0x0020)            /*!&lt; Bit 5 */</div><div class="line">#define  WWDG_CFR_W6                         ((uint16_t)0x0040)            /*!&lt; Bit 6 */</div><div class="line"></div><div class="line">#define  WWDG_CFR_WDGTB                      ((uint16_t)0x0180)            /*!&lt; WDGTB[1:0] bits (Timer Base) */</div><div class="line">#define  WWDG_CFR_WDGTB0                     ((uint16_t)0x0080)            /*!&lt; Bit 0 */</div><div class="line">#define  WWDG_CFR_WDGTB1                     ((uint16_t)0x0100)            /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  WWDG_CFR_EWI                        ((uint16_t)0x0200)            /*!&lt; Early Wakeup Interrupt */</div><div class="line"></div><div class="line">/*******************  Bit definition for WWDG_SR register  ********************/</div><div class="line">#define  WWDG_SR_EWIF                        ((uint8_t)0x01)               /*!&lt; Early Wakeup Interrupt Flag */</div><div class="line"></div><div class="line">/******************************************************************************/</div><div class="line">/*                                                                            */</div><div class="line">/*                       Flexible Static Memory Controller                    */</div><div class="line">/*                                                                            */</div><div class="line">/******************************************************************************/</div><div class="line"></div><div class="line">/******************  Bit definition for FSMC_BCR1 register  *******************/</div><div class="line">#define  FSMC_BCR1_MBKEN                     ((uint32_t)0x00000001)        /*!&lt; Memory bank enable bit */</div><div class="line">#define  FSMC_BCR1_MUXEN                     ((uint32_t)0x00000002)        /*!&lt; Address/data multiplexing enable bit */</div><div class="line"></div><div class="line">#define  FSMC_BCR1_MTYP                      ((uint32_t)0x0000000C)        /*!&lt; MTYP[1:0] bits (Memory type) */</div><div class="line">#define  FSMC_BCR1_MTYP_0                    ((uint32_t)0x00000004)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_BCR1_MTYP_1                    ((uint32_t)0x00000008)        /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  FSMC_BCR1_MWID                      ((uint32_t)0x00000030)        /*!&lt; MWID[1:0] bits (Memory data bus width) */</div><div class="line">#define  FSMC_BCR1_MWID_0                    ((uint32_t)0x00000010)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_BCR1_MWID_1                    ((uint32_t)0x00000020)        /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  FSMC_BCR1_FACCEN                    ((uint32_t)0x00000040)        /*!&lt; Flash access enable */</div><div class="line">#define  FSMC_BCR1_BURSTEN                   ((uint32_t)0x00000100)        /*!&lt; Burst enable bit */</div><div class="line">#define  FSMC_BCR1_WAITPOL                   ((uint32_t)0x00000200)        /*!&lt; Wait signal polarity bit */</div><div class="line">#define  FSMC_BCR1_WRAPMOD                   ((uint32_t)0x00000400)        /*!&lt; Wrapped burst mode support */</div><div class="line">#define  FSMC_BCR1_WAITCFG                   ((uint32_t)0x00000800)        /*!&lt; Wait timing configuration */</div><div class="line">#define  FSMC_BCR1_WREN                      ((uint32_t)0x00001000)        /*!&lt; Write enable bit */</div><div class="line">#define  FSMC_BCR1_WAITEN                    ((uint32_t)0x00002000)        /*!&lt; Wait enable bit */</div><div class="line">#define  FSMC_BCR1_EXTMOD                    ((uint32_t)0x00004000)        /*!&lt; Extended mode enable */</div><div class="line">#define  FSMC_BCR1_ASYNCWAIT                 ((uint32_t)0x00008000)       /*!&lt; Asynchronous wait */</div><div class="line">#define  FSMC_BCR1_CBURSTRW                  ((uint32_t)0x00080000)        /*!&lt; Write burst enable */</div><div class="line"></div><div class="line">/******************  Bit definition for FSMC_BCR2 register  *******************/</div><div class="line">#define  FSMC_BCR2_MBKEN                     ((uint32_t)0x00000001)        /*!&lt; Memory bank enable bit */</div><div class="line">#define  FSMC_BCR2_MUXEN                     ((uint32_t)0x00000002)        /*!&lt; Address/data multiplexing enable bit */</div><div class="line"></div><div class="line">#define  FSMC_BCR2_MTYP                      ((uint32_t)0x0000000C)        /*!&lt; MTYP[1:0] bits (Memory type) */</div><div class="line">#define  FSMC_BCR2_MTYP_0                    ((uint32_t)0x00000004)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_BCR2_MTYP_1                    ((uint32_t)0x00000008)        /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  FSMC_BCR2_MWID                      ((uint32_t)0x00000030)        /*!&lt; MWID[1:0] bits (Memory data bus width) */</div><div class="line">#define  FSMC_BCR2_MWID_0                    ((uint32_t)0x00000010)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_BCR2_MWID_1                    ((uint32_t)0x00000020)        /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  FSMC_BCR2_FACCEN                    ((uint32_t)0x00000040)        /*!&lt; Flash access enable */</div><div class="line">#define  FSMC_BCR2_BURSTEN                   ((uint32_t)0x00000100)        /*!&lt; Burst enable bit */</div><div class="line">#define  FSMC_BCR2_WAITPOL                   ((uint32_t)0x00000200)        /*!&lt; Wait signal polarity bit */</div><div class="line">#define  FSMC_BCR2_WRAPMOD                   ((uint32_t)0x00000400)        /*!&lt; Wrapped burst mode support */</div><div class="line">#define  FSMC_BCR2_WAITCFG                   ((uint32_t)0x00000800)        /*!&lt; Wait timing configuration */</div><div class="line">#define  FSMC_BCR2_WREN                      ((uint32_t)0x00001000)        /*!&lt; Write enable bit */</div><div class="line">#define  FSMC_BCR2_WAITEN                    ((uint32_t)0x00002000)        /*!&lt; Wait enable bit */</div><div class="line">#define  FSMC_BCR2_EXTMOD                    ((uint32_t)0x00004000)        /*!&lt; Extended mode enable */</div><div class="line">#define  FSMC_BCR2_ASYNCWAIT                 ((uint32_t)0x00008000)       /*!&lt; Asynchronous wait */</div><div class="line">#define  FSMC_BCR2_CBURSTRW                  ((uint32_t)0x00080000)        /*!&lt; Write burst enable */</div><div class="line"></div><div class="line">/******************  Bit definition for FSMC_BCR3 register  *******************/</div><div class="line">#define  FSMC_BCR3_MBKEN                     ((uint32_t)0x00000001)        /*!&lt; Memory bank enable bit */</div><div class="line">#define  FSMC_BCR3_MUXEN                     ((uint32_t)0x00000002)        /*!&lt; Address/data multiplexing enable bit */</div><div class="line"></div><div class="line">#define  FSMC_BCR3_MTYP                      ((uint32_t)0x0000000C)        /*!&lt; MTYP[1:0] bits (Memory type) */</div><div class="line">#define  FSMC_BCR3_MTYP_0                    ((uint32_t)0x00000004)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_BCR3_MTYP_1                    ((uint32_t)0x00000008)        /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  FSMC_BCR3_MWID                      ((uint32_t)0x00000030)        /*!&lt; MWID[1:0] bits (Memory data bus width) */</div><div class="line">#define  FSMC_BCR3_MWID_0                    ((uint32_t)0x00000010)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_BCR3_MWID_1                    ((uint32_t)0x00000020)        /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  FSMC_BCR3_FACCEN                    ((uint32_t)0x00000040)        /*!&lt; Flash access enable */</div><div class="line">#define  FSMC_BCR3_BURSTEN                   ((uint32_t)0x00000100)        /*!&lt; Burst enable bit */</div><div class="line">#define  FSMC_BCR3_WAITPOL                   ((uint32_t)0x00000200)        /*!&lt; Wait signal polarity bit. */</div><div class="line">#define  FSMC_BCR3_WRAPMOD                   ((uint32_t)0x00000400)        /*!&lt; Wrapped burst mode support */</div><div class="line">#define  FSMC_BCR3_WAITCFG                   ((uint32_t)0x00000800)        /*!&lt; Wait timing configuration */</div><div class="line">#define  FSMC_BCR3_WREN                      ((uint32_t)0x00001000)        /*!&lt; Write enable bit */</div><div class="line">#define  FSMC_BCR3_WAITEN                    ((uint32_t)0x00002000)        /*!&lt; Wait enable bit */</div><div class="line">#define  FSMC_BCR3_EXTMOD                    ((uint32_t)0x00004000)        /*!&lt; Extended mode enable */</div><div class="line">#define  FSMC_BCR3_ASYNCWAIT                 ((uint32_t)0x00008000)       /*!&lt; Asynchronous wait */</div><div class="line">#define  FSMC_BCR3_CBURSTRW                  ((uint32_t)0x00080000)        /*!&lt; Write burst enable */</div><div class="line"></div><div class="line">/******************  Bit definition for FSMC_BCR4 register  *******************/</div><div class="line">#define  FSMC_BCR4_MBKEN                     ((uint32_t)0x00000001)        /*!&lt; Memory bank enable bit */</div><div class="line">#define  FSMC_BCR4_MUXEN                     ((uint32_t)0x00000002)        /*!&lt; Address/data multiplexing enable bit */</div><div class="line"></div><div class="line">#define  FSMC_BCR4_MTYP                      ((uint32_t)0x0000000C)        /*!&lt; MTYP[1:0] bits (Memory type) */</div><div class="line">#define  FSMC_BCR4_MTYP_0                    ((uint32_t)0x00000004)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_BCR4_MTYP_1                    ((uint32_t)0x00000008)        /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  FSMC_BCR4_MWID                      ((uint32_t)0x00000030)        /*!&lt; MWID[1:0] bits (Memory data bus width) */</div><div class="line">#define  FSMC_BCR4_MWID_0                    ((uint32_t)0x00000010)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_BCR4_MWID_1                    ((uint32_t)0x00000020)        /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  FSMC_BCR4_FACCEN                    ((uint32_t)0x00000040)        /*!&lt; Flash access enable */</div><div class="line">#define  FSMC_BCR4_BURSTEN                   ((uint32_t)0x00000100)        /*!&lt; Burst enable bit */</div><div class="line">#define  FSMC_BCR4_WAITPOL                   ((uint32_t)0x00000200)        /*!&lt; Wait signal polarity bit */</div><div class="line">#define  FSMC_BCR4_WRAPMOD                   ((uint32_t)0x00000400)        /*!&lt; Wrapped burst mode support */</div><div class="line">#define  FSMC_BCR4_WAITCFG                   ((uint32_t)0x00000800)        /*!&lt; Wait timing configuration */</div><div class="line">#define  FSMC_BCR4_WREN                      ((uint32_t)0x00001000)        /*!&lt; Write enable bit */</div><div class="line">#define  FSMC_BCR4_WAITEN                    ((uint32_t)0x00002000)        /*!&lt; Wait enable bit */</div><div class="line">#define  FSMC_BCR4_EXTMOD                    ((uint32_t)0x00004000)        /*!&lt; Extended mode enable */</div><div class="line">#define  FSMC_BCR4_ASYNCWAIT                 ((uint32_t)0x00008000)       /*!&lt; Asynchronous wait */</div><div class="line">#define  FSMC_BCR4_CBURSTRW                  ((uint32_t)0x00080000)        /*!&lt; Write burst enable */</div><div class="line"></div><div class="line">/******************  Bit definition for FSMC_BTR1 register  ******************/</div><div class="line">#define  FSMC_BTR1_ADDSET                    ((uint32_t)0x0000000F)        /*!&lt; ADDSET[3:0] bits (Address setup phase duration) */</div><div class="line">#define  FSMC_BTR1_ADDSET_0                  ((uint32_t)0x00000001)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_BTR1_ADDSET_1                  ((uint32_t)0x00000002)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_BTR1_ADDSET_2                  ((uint32_t)0x00000004)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_BTR1_ADDSET_3                  ((uint32_t)0x00000008)        /*!&lt; Bit 3 */</div><div class="line"></div><div class="line">#define  FSMC_BTR1_ADDHLD                    ((uint32_t)0x000000F0)        /*!&lt; ADDHLD[3:0] bits (Address-hold phase duration) */</div><div class="line">#define  FSMC_BTR1_ADDHLD_0                  ((uint32_t)0x00000010)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_BTR1_ADDHLD_1                  ((uint32_t)0x00000020)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_BTR1_ADDHLD_2                  ((uint32_t)0x00000040)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_BTR1_ADDHLD_3                  ((uint32_t)0x00000080)        /*!&lt; Bit 3 */</div><div class="line"></div><div class="line">#define  FSMC_BTR1_DATAST                    ((uint32_t)0x0000FF00)        /*!&lt; DATAST [3:0] bits (Data-phase duration) */</div><div class="line">#define  FSMC_BTR1_DATAST_0                  ((uint32_t)0x00000100)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_BTR1_DATAST_1                  ((uint32_t)0x00000200)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_BTR1_DATAST_2                  ((uint32_t)0x00000400)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_BTR1_DATAST_3                  ((uint32_t)0x00000800)        /*!&lt; Bit 3 */</div><div class="line"></div><div class="line">#define  FSMC_BTR1_BUSTURN                   ((uint32_t)0x000F0000)        /*!&lt; BUSTURN[3:0] bits (Bus turnaround phase duration) */</div><div class="line">#define  FSMC_BTR1_BUSTURN_0                 ((uint32_t)0x00010000)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_BTR1_BUSTURN_1                 ((uint32_t)0x00020000)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_BTR1_BUSTURN_2                 ((uint32_t)0x00040000)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_BTR1_BUSTURN_3                 ((uint32_t)0x00080000)        /*!&lt; Bit 3 */</div><div class="line"></div><div class="line">#define  FSMC_BTR1_CLKDIV                    ((uint32_t)0x00F00000)        /*!&lt; CLKDIV[3:0] bits (Clock divide ratio) */</div><div class="line">#define  FSMC_BTR1_CLKDIV_0                  ((uint32_t)0x00100000)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_BTR1_CLKDIV_1                  ((uint32_t)0x00200000)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_BTR1_CLKDIV_2                  ((uint32_t)0x00400000)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_BTR1_CLKDIV_3                  ((uint32_t)0x00800000)        /*!&lt; Bit 3 */</div><div class="line"></div><div class="line">#define  FSMC_BTR1_DATLAT                    ((uint32_t)0x0F000000)        /*!&lt; DATLA[3:0] bits (Data latency) */</div><div class="line">#define  FSMC_BTR1_DATLAT_0                  ((uint32_t)0x01000000)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_BTR1_DATLAT_1                  ((uint32_t)0x02000000)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_BTR1_DATLAT_2                  ((uint32_t)0x04000000)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_BTR1_DATLAT_3                  ((uint32_t)0x08000000)        /*!&lt; Bit 3 */</div><div class="line"></div><div class="line">#define  FSMC_BTR1_ACCMOD                    ((uint32_t)0x30000000)        /*!&lt; ACCMOD[1:0] bits (Access mode) */</div><div class="line">#define  FSMC_BTR1_ACCMOD_0                  ((uint32_t)0x10000000)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_BTR1_ACCMOD_1                  ((uint32_t)0x20000000)        /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">/******************  Bit definition for FSMC_BTR2 register  *******************/</div><div class="line">#define  FSMC_BTR2_ADDSET                    ((uint32_t)0x0000000F)        /*!&lt; ADDSET[3:0] bits (Address setup phase duration) */</div><div class="line">#define  FSMC_BTR2_ADDSET_0                  ((uint32_t)0x00000001)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_BTR2_ADDSET_1                  ((uint32_t)0x00000002)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_BTR2_ADDSET_2                  ((uint32_t)0x00000004)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_BTR2_ADDSET_3                  ((uint32_t)0x00000008)        /*!&lt; Bit 3 */</div><div class="line"></div><div class="line">#define  FSMC_BTR2_ADDHLD                    ((uint32_t)0x000000F0)        /*!&lt; ADDHLD[3:0] bits (Address-hold phase duration) */</div><div class="line">#define  FSMC_BTR2_ADDHLD_0                  ((uint32_t)0x00000010)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_BTR2_ADDHLD_1                  ((uint32_t)0x00000020)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_BTR2_ADDHLD_2                  ((uint32_t)0x00000040)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_BTR2_ADDHLD_3                  ((uint32_t)0x00000080)        /*!&lt; Bit 3 */</div><div class="line"></div><div class="line">#define  FSMC_BTR2_DATAST                    ((uint32_t)0x0000FF00)        /*!&lt; DATAST [3:0] bits (Data-phase duration) */</div><div class="line">#define  FSMC_BTR2_DATAST_0                  ((uint32_t)0x00000100)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_BTR2_DATAST_1                  ((uint32_t)0x00000200)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_BTR2_DATAST_2                  ((uint32_t)0x00000400)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_BTR2_DATAST_3                  ((uint32_t)0x00000800)        /*!&lt; Bit 3 */</div><div class="line"></div><div class="line">#define  FSMC_BTR2_BUSTURN                   ((uint32_t)0x000F0000)        /*!&lt; BUSTURN[3:0] bits (Bus turnaround phase duration) */</div><div class="line">#define  FSMC_BTR2_BUSTURN_0                 ((uint32_t)0x00010000)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_BTR2_BUSTURN_1                 ((uint32_t)0x00020000)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_BTR2_BUSTURN_2                 ((uint32_t)0x00040000)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_BTR2_BUSTURN_3                 ((uint32_t)0x00080000)        /*!&lt; Bit 3 */</div><div class="line"></div><div class="line">#define  FSMC_BTR2_CLKDIV                    ((uint32_t)0x00F00000)        /*!&lt; CLKDIV[3:0] bits (Clock divide ratio) */</div><div class="line">#define  FSMC_BTR2_CLKDIV_0                  ((uint32_t)0x00100000)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_BTR2_CLKDIV_1                  ((uint32_t)0x00200000)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_BTR2_CLKDIV_2                  ((uint32_t)0x00400000)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_BTR2_CLKDIV_3                  ((uint32_t)0x00800000)        /*!&lt; Bit 3 */</div><div class="line"></div><div class="line">#define  FSMC_BTR2_DATLAT                    ((uint32_t)0x0F000000)        /*!&lt; DATLA[3:0] bits (Data latency) */</div><div class="line">#define  FSMC_BTR2_DATLAT_0                  ((uint32_t)0x01000000)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_BTR2_DATLAT_1                  ((uint32_t)0x02000000)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_BTR2_DATLAT_2                  ((uint32_t)0x04000000)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_BTR2_DATLAT_3                  ((uint32_t)0x08000000)        /*!&lt; Bit 3 */</div><div class="line"></div><div class="line">#define  FSMC_BTR2_ACCMOD                    ((uint32_t)0x30000000)        /*!&lt; ACCMOD[1:0] bits (Access mode) */</div><div class="line">#define  FSMC_BTR2_ACCMOD_0                  ((uint32_t)0x10000000)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_BTR2_ACCMOD_1                  ((uint32_t)0x20000000)        /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">/*******************  Bit definition for FSMC_BTR3 register  *******************/</div><div class="line">#define  FSMC_BTR3_ADDSET                    ((uint32_t)0x0000000F)        /*!&lt; ADDSET[3:0] bits (Address setup phase duration) */</div><div class="line">#define  FSMC_BTR3_ADDSET_0                  ((uint32_t)0x00000001)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_BTR3_ADDSET_1                  ((uint32_t)0x00000002)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_BTR3_ADDSET_2                  ((uint32_t)0x00000004)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_BTR3_ADDSET_3                  ((uint32_t)0x00000008)        /*!&lt; Bit 3 */</div><div class="line"></div><div class="line">#define  FSMC_BTR3_ADDHLD                    ((uint32_t)0x000000F0)        /*!&lt; ADDHLD[3:0] bits (Address-hold phase duration) */</div><div class="line">#define  FSMC_BTR3_ADDHLD_0                  ((uint32_t)0x00000010)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_BTR3_ADDHLD_1                  ((uint32_t)0x00000020)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_BTR3_ADDHLD_2                  ((uint32_t)0x00000040)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_BTR3_ADDHLD_3                  ((uint32_t)0x00000080)        /*!&lt; Bit 3 */</div><div class="line"></div><div class="line">#define  FSMC_BTR3_DATAST                    ((uint32_t)0x0000FF00)        /*!&lt; DATAST [3:0] bits (Data-phase duration) */</div><div class="line">#define  FSMC_BTR3_DATAST_0                  ((uint32_t)0x00000100)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_BTR3_DATAST_1                  ((uint32_t)0x00000200)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_BTR3_DATAST_2                  ((uint32_t)0x00000400)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_BTR3_DATAST_3                  ((uint32_t)0x00000800)        /*!&lt; Bit 3 */</div><div class="line"></div><div class="line">#define  FSMC_BTR3_BUSTURN                   ((uint32_t)0x000F0000)        /*!&lt; BUSTURN[3:0] bits (Bus turnaround phase duration) */</div><div class="line">#define  FSMC_BTR3_BUSTURN_0                 ((uint32_t)0x00010000)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_BTR3_BUSTURN_1                 ((uint32_t)0x00020000)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_BTR3_BUSTURN_2                 ((uint32_t)0x00040000)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_BTR3_BUSTURN_3                 ((uint32_t)0x00080000)        /*!&lt; Bit 3 */</div><div class="line"></div><div class="line">#define  FSMC_BTR3_CLKDIV                    ((uint32_t)0x00F00000)        /*!&lt; CLKDIV[3:0] bits (Clock divide ratio) */</div><div class="line">#define  FSMC_BTR3_CLKDIV_0                  ((uint32_t)0x00100000)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_BTR3_CLKDIV_1                  ((uint32_t)0x00200000)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_BTR3_CLKDIV_2                  ((uint32_t)0x00400000)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_BTR3_CLKDIV_3                  ((uint32_t)0x00800000)        /*!&lt; Bit 3 */</div><div class="line"></div><div class="line">#define  FSMC_BTR3_DATLAT                    ((uint32_t)0x0F000000)        /*!&lt; DATLA[3:0] bits (Data latency) */</div><div class="line">#define  FSMC_BTR3_DATLAT_0                  ((uint32_t)0x01000000)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_BTR3_DATLAT_1                  ((uint32_t)0x02000000)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_BTR3_DATLAT_2                  ((uint32_t)0x04000000)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_BTR3_DATLAT_3                  ((uint32_t)0x08000000)        /*!&lt; Bit 3 */</div><div class="line"></div><div class="line">#define  FSMC_BTR3_ACCMOD                    ((uint32_t)0x30000000)        /*!&lt; ACCMOD[1:0] bits (Access mode) */</div><div class="line">#define  FSMC_BTR3_ACCMOD_0                  ((uint32_t)0x10000000)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_BTR3_ACCMOD_1                  ((uint32_t)0x20000000)        /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">/******************  Bit definition for FSMC_BTR4 register  *******************/</div><div class="line">#define  FSMC_BTR4_ADDSET                    ((uint32_t)0x0000000F)        /*!&lt; ADDSET[3:0] bits (Address setup phase duration) */</div><div class="line">#define  FSMC_BTR4_ADDSET_0                  ((uint32_t)0x00000001)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_BTR4_ADDSET_1                  ((uint32_t)0x00000002)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_BTR4_ADDSET_2                  ((uint32_t)0x00000004)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_BTR4_ADDSET_3                  ((uint32_t)0x00000008)        /*!&lt; Bit 3 */</div><div class="line"></div><div class="line">#define  FSMC_BTR4_ADDHLD                    ((uint32_t)0x000000F0)        /*!&lt; ADDHLD[3:0] bits (Address-hold phase duration) */</div><div class="line">#define  FSMC_BTR4_ADDHLD_0                  ((uint32_t)0x00000010)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_BTR4_ADDHLD_1                  ((uint32_t)0x00000020)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_BTR4_ADDHLD_2                  ((uint32_t)0x00000040)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_BTR4_ADDHLD_3                  ((uint32_t)0x00000080)        /*!&lt; Bit 3 */</div><div class="line"></div><div class="line">#define  FSMC_BTR4_DATAST                    ((uint32_t)0x0000FF00)        /*!&lt; DATAST [3:0] bits (Data-phase duration) */</div><div class="line">#define  FSMC_BTR4_DATAST_0                  ((uint32_t)0x00000100)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_BTR4_DATAST_1                  ((uint32_t)0x00000200)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_BTR4_DATAST_2                  ((uint32_t)0x00000400)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_BTR4_DATAST_3                  ((uint32_t)0x00000800)        /*!&lt; Bit 3 */</div><div class="line"></div><div class="line">#define  FSMC_BTR4_BUSTURN                   ((uint32_t)0x000F0000)        /*!&lt; BUSTURN[3:0] bits (Bus turnaround phase duration) */</div><div class="line">#define  FSMC_BTR4_BUSTURN_0                 ((uint32_t)0x00010000)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_BTR4_BUSTURN_1                 ((uint32_t)0x00020000)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_BTR4_BUSTURN_2                 ((uint32_t)0x00040000)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_BTR4_BUSTURN_3                 ((uint32_t)0x00080000)        /*!&lt; Bit 3 */</div><div class="line"></div><div class="line">#define  FSMC_BTR4_CLKDIV                    ((uint32_t)0x00F00000)        /*!&lt; CLKDIV[3:0] bits (Clock divide ratio) */</div><div class="line">#define  FSMC_BTR4_CLKDIV_0                  ((uint32_t)0x00100000)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_BTR4_CLKDIV_1                  ((uint32_t)0x00200000)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_BTR4_CLKDIV_2                  ((uint32_t)0x00400000)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_BTR4_CLKDIV_3                  ((uint32_t)0x00800000)        /*!&lt; Bit 3 */</div><div class="line"></div><div class="line">#define  FSMC_BTR4_DATLAT                    ((uint32_t)0x0F000000)        /*!&lt; DATLA[3:0] bits (Data latency) */</div><div class="line">#define  FSMC_BTR4_DATLAT_0                  ((uint32_t)0x01000000)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_BTR4_DATLAT_1                  ((uint32_t)0x02000000)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_BTR4_DATLAT_2                  ((uint32_t)0x04000000)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_BTR4_DATLAT_3                  ((uint32_t)0x08000000)        /*!&lt; Bit 3 */</div><div class="line"></div><div class="line">#define  FSMC_BTR4_ACCMOD                    ((uint32_t)0x30000000)        /*!&lt; ACCMOD[1:0] bits (Access mode) */</div><div class="line">#define  FSMC_BTR4_ACCMOD_0                  ((uint32_t)0x10000000)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_BTR4_ACCMOD_1                  ((uint32_t)0x20000000)        /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">/******************  Bit definition for FSMC_BWTR1 register  ******************/</div><div class="line">#define  FSMC_BWTR1_ADDSET                   ((uint32_t)0x0000000F)        /*!&lt; ADDSET[3:0] bits (Address setup phase duration) */</div><div class="line">#define  FSMC_BWTR1_ADDSET_0                 ((uint32_t)0x00000001)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_BWTR1_ADDSET_1                 ((uint32_t)0x00000002)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_BWTR1_ADDSET_2                 ((uint32_t)0x00000004)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_BWTR1_ADDSET_3                 ((uint32_t)0x00000008)        /*!&lt; Bit 3 */</div><div class="line"></div><div class="line">#define  FSMC_BWTR1_ADDHLD                   ((uint32_t)0x000000F0)        /*!&lt; ADDHLD[3:0] bits (Address-hold phase duration) */</div><div class="line">#define  FSMC_BWTR1_ADDHLD_0                 ((uint32_t)0x00000010)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_BWTR1_ADDHLD_1                 ((uint32_t)0x00000020)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_BWTR1_ADDHLD_2                 ((uint32_t)0x00000040)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_BWTR1_ADDHLD_3                 ((uint32_t)0x00000080)        /*!&lt; Bit 3 */</div><div class="line"></div><div class="line">#define  FSMC_BWTR1_DATAST                   ((uint32_t)0x0000FF00)        /*!&lt; DATAST [3:0] bits (Data-phase duration) */</div><div class="line">#define  FSMC_BWTR1_DATAST_0                 ((uint32_t)0x00000100)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_BWTR1_DATAST_1                 ((uint32_t)0x00000200)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_BWTR1_DATAST_2                 ((uint32_t)0x00000400)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_BWTR1_DATAST_3                 ((uint32_t)0x00000800)        /*!&lt; Bit 3 */</div><div class="line"></div><div class="line">#define  FSMC_BWTR1_CLKDIV                   ((uint32_t)0x00F00000)        /*!&lt; CLKDIV[3:0] bits (Clock divide ratio) */</div><div class="line">#define  FSMC_BWTR1_CLKDIV_0                 ((uint32_t)0x00100000)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_BWTR1_CLKDIV_1                 ((uint32_t)0x00200000)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_BWTR1_CLKDIV_2                 ((uint32_t)0x00400000)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_BWTR1_CLKDIV_3                 ((uint32_t)0x00800000)        /*!&lt; Bit 3 */</div><div class="line"></div><div class="line">#define  FSMC_BWTR1_DATLAT                   ((uint32_t)0x0F000000)        /*!&lt; DATLA[3:0] bits (Data latency) */</div><div class="line">#define  FSMC_BWTR1_DATLAT_0                 ((uint32_t)0x01000000)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_BWTR1_DATLAT_1                 ((uint32_t)0x02000000)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_BWTR1_DATLAT_2                 ((uint32_t)0x04000000)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_BWTR1_DATLAT_3                 ((uint32_t)0x08000000)        /*!&lt; Bit 3 */</div><div class="line"></div><div class="line">#define  FSMC_BWTR1_ACCMOD                   ((uint32_t)0x30000000)        /*!&lt; ACCMOD[1:0] bits (Access mode) */</div><div class="line">#define  FSMC_BWTR1_ACCMOD_0                 ((uint32_t)0x10000000)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_BWTR1_ACCMOD_1                 ((uint32_t)0x20000000)        /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">/******************  Bit definition for FSMC_BWTR2 register  ******************/</div><div class="line">#define  FSMC_BWTR2_ADDSET                   ((uint32_t)0x0000000F)        /*!&lt; ADDSET[3:0] bits (Address setup phase duration) */</div><div class="line">#define  FSMC_BWTR2_ADDSET_0                 ((uint32_t)0x00000001)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_BWTR2_ADDSET_1                 ((uint32_t)0x00000002)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_BWTR2_ADDSET_2                 ((uint32_t)0x00000004)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_BWTR2_ADDSET_3                 ((uint32_t)0x00000008)        /*!&lt; Bit 3 */</div><div class="line"></div><div class="line">#define  FSMC_BWTR2_ADDHLD                   ((uint32_t)0x000000F0)        /*!&lt; ADDHLD[3:0] bits (Address-hold phase duration) */</div><div class="line">#define  FSMC_BWTR2_ADDHLD_0                 ((uint32_t)0x00000010)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_BWTR2_ADDHLD_1                 ((uint32_t)0x00000020)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_BWTR2_ADDHLD_2                 ((uint32_t)0x00000040)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_BWTR2_ADDHLD_3                 ((uint32_t)0x00000080)        /*!&lt; Bit 3 */</div><div class="line"></div><div class="line">#define  FSMC_BWTR2_DATAST                   ((uint32_t)0x0000FF00)        /*!&lt; DATAST [3:0] bits (Data-phase duration) */</div><div class="line">#define  FSMC_BWTR2_DATAST_0                 ((uint32_t)0x00000100)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_BWTR2_DATAST_1                 ((uint32_t)0x00000200)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_BWTR2_DATAST_2                 ((uint32_t)0x00000400)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_BWTR2_DATAST_3                 ((uint32_t)0x00000800)        /*!&lt; Bit 3 */</div><div class="line"></div><div class="line">#define  FSMC_BWTR2_CLKDIV                   ((uint32_t)0x00F00000)        /*!&lt; CLKDIV[3:0] bits (Clock divide ratio) */</div><div class="line">#define  FSMC_BWTR2_CLKDIV_0                 ((uint32_t)0x00100000)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_BWTR2_CLKDIV_1                 ((uint32_t)0x00200000)        /*!&lt; Bit 1*/</div><div class="line">#define  FSMC_BWTR2_CLKDIV_2                 ((uint32_t)0x00400000)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_BWTR2_CLKDIV_3                 ((uint32_t)0x00800000)        /*!&lt; Bit 3 */</div><div class="line"></div><div class="line">#define  FSMC_BWTR2_DATLAT                   ((uint32_t)0x0F000000)        /*!&lt; DATLA[3:0] bits (Data latency) */</div><div class="line">#define  FSMC_BWTR2_DATLAT_0                 ((uint32_t)0x01000000)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_BWTR2_DATLAT_1                 ((uint32_t)0x02000000)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_BWTR2_DATLAT_2                 ((uint32_t)0x04000000)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_BWTR2_DATLAT_3                 ((uint32_t)0x08000000)        /*!&lt; Bit 3 */</div><div class="line"></div><div class="line">#define  FSMC_BWTR2_ACCMOD                   ((uint32_t)0x30000000)        /*!&lt; ACCMOD[1:0] bits (Access mode) */</div><div class="line">#define  FSMC_BWTR2_ACCMOD_0                 ((uint32_t)0x10000000)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_BWTR2_ACCMOD_1                 ((uint32_t)0x20000000)        /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">/******************  Bit definition for FSMC_BWTR3 register  ******************/</div><div class="line">#define  FSMC_BWTR3_ADDSET                   ((uint32_t)0x0000000F)        /*!&lt; ADDSET[3:0] bits (Address setup phase duration) */</div><div class="line">#define  FSMC_BWTR3_ADDSET_0                 ((uint32_t)0x00000001)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_BWTR3_ADDSET_1                 ((uint32_t)0x00000002)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_BWTR3_ADDSET_2                 ((uint32_t)0x00000004)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_BWTR3_ADDSET_3                 ((uint32_t)0x00000008)        /*!&lt; Bit 3 */</div><div class="line"></div><div class="line">#define  FSMC_BWTR3_ADDHLD                   ((uint32_t)0x000000F0)        /*!&lt; ADDHLD[3:0] bits (Address-hold phase duration) */</div><div class="line">#define  FSMC_BWTR3_ADDHLD_0                 ((uint32_t)0x00000010)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_BWTR3_ADDHLD_1                 ((uint32_t)0x00000020)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_BWTR3_ADDHLD_2                 ((uint32_t)0x00000040)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_BWTR3_ADDHLD_3                 ((uint32_t)0x00000080)        /*!&lt; Bit 3 */</div><div class="line"></div><div class="line">#define  FSMC_BWTR3_DATAST                   ((uint32_t)0x0000FF00)        /*!&lt; DATAST [3:0] bits (Data-phase duration) */</div><div class="line">#define  FSMC_BWTR3_DATAST_0                 ((uint32_t)0x00000100)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_BWTR3_DATAST_1                 ((uint32_t)0x00000200)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_BWTR3_DATAST_2                 ((uint32_t)0x00000400)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_BWTR3_DATAST_3                 ((uint32_t)0x00000800)        /*!&lt; Bit 3 */</div><div class="line"></div><div class="line">#define  FSMC_BWTR3_CLKDIV                   ((uint32_t)0x00F00000)        /*!&lt; CLKDIV[3:0] bits (Clock divide ratio) */</div><div class="line">#define  FSMC_BWTR3_CLKDIV_0                 ((uint32_t)0x00100000)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_BWTR3_CLKDIV_1                 ((uint32_t)0x00200000)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_BWTR3_CLKDIV_2                 ((uint32_t)0x00400000)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_BWTR3_CLKDIV_3                 ((uint32_t)0x00800000)        /*!&lt; Bit 3 */</div><div class="line"></div><div class="line">#define  FSMC_BWTR3_DATLAT                   ((uint32_t)0x0F000000)        /*!&lt; DATLA[3:0] bits (Data latency) */</div><div class="line">#define  FSMC_BWTR3_DATLAT_0                 ((uint32_t)0x01000000)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_BWTR3_DATLAT_1                 ((uint32_t)0x02000000)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_BWTR3_DATLAT_2                 ((uint32_t)0x04000000)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_BWTR3_DATLAT_3                 ((uint32_t)0x08000000)        /*!&lt; Bit 3 */</div><div class="line"></div><div class="line">#define  FSMC_BWTR3_ACCMOD                   ((uint32_t)0x30000000)        /*!&lt; ACCMOD[1:0] bits (Access mode) */</div><div class="line">#define  FSMC_BWTR3_ACCMOD_0                 ((uint32_t)0x10000000)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_BWTR3_ACCMOD_1                 ((uint32_t)0x20000000)        /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">/******************  Bit definition for FSMC_BWTR4 register  ******************/</div><div class="line">#define  FSMC_BWTR4_ADDSET                   ((uint32_t)0x0000000F)        /*!&lt; ADDSET[3:0] bits (Address setup phase duration) */</div><div class="line">#define  FSMC_BWTR4_ADDSET_0                 ((uint32_t)0x00000001)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_BWTR4_ADDSET_1                 ((uint32_t)0x00000002)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_BWTR4_ADDSET_2                 ((uint32_t)0x00000004)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_BWTR4_ADDSET_3                 ((uint32_t)0x00000008)        /*!&lt; Bit 3 */</div><div class="line"></div><div class="line">#define  FSMC_BWTR4_ADDHLD                   ((uint32_t)0x000000F0)        /*!&lt; ADDHLD[3:0] bits (Address-hold phase duration) */</div><div class="line">#define  FSMC_BWTR4_ADDHLD_0                 ((uint32_t)0x00000010)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_BWTR4_ADDHLD_1                 ((uint32_t)0x00000020)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_BWTR4_ADDHLD_2                 ((uint32_t)0x00000040)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_BWTR4_ADDHLD_3                 ((uint32_t)0x00000080)        /*!&lt; Bit 3 */</div><div class="line"></div><div class="line">#define  FSMC_BWTR4_DATAST                   ((uint32_t)0x0000FF00)        /*!&lt; DATAST [3:0] bits (Data-phase duration) */</div><div class="line">#define  FSMC_BWTR4_DATAST_0                 ((uint32_t)0x00000100)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_BWTR4_DATAST_1                 ((uint32_t)0x00000200)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_BWTR4_DATAST_2                 ((uint32_t)0x00000400)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_BWTR4_DATAST_3                 ((uint32_t)0x00000800)        /*!&lt; Bit 3 */</div><div class="line"></div><div class="line">#define  FSMC_BWTR4_CLKDIV                   ((uint32_t)0x00F00000)        /*!&lt; CLKDIV[3:0] bits (Clock divide ratio) */</div><div class="line">#define  FSMC_BWTR4_CLKDIV_0                 ((uint32_t)0x00100000)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_BWTR4_CLKDIV_1                 ((uint32_t)0x00200000)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_BWTR4_CLKDIV_2                 ((uint32_t)0x00400000)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_BWTR4_CLKDIV_3                 ((uint32_t)0x00800000)        /*!&lt; Bit 3 */</div><div class="line"></div><div class="line">#define  FSMC_BWTR4_DATLAT                   ((uint32_t)0x0F000000)        /*!&lt; DATLA[3:0] bits (Data latency) */</div><div class="line">#define  FSMC_BWTR4_DATLAT_0                 ((uint32_t)0x01000000)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_BWTR4_DATLAT_1                 ((uint32_t)0x02000000)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_BWTR4_DATLAT_2                 ((uint32_t)0x04000000)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_BWTR4_DATLAT_3                 ((uint32_t)0x08000000)        /*!&lt; Bit 3 */</div><div class="line"></div><div class="line">#define  FSMC_BWTR4_ACCMOD                   ((uint32_t)0x30000000)        /*!&lt; ACCMOD[1:0] bits (Access mode) */</div><div class="line">#define  FSMC_BWTR4_ACCMOD_0                 ((uint32_t)0x10000000)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_BWTR4_ACCMOD_1                 ((uint32_t)0x20000000)        /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">/******************  Bit definition for FSMC_PCR2 register  *******************/</div><div class="line">#define  FSMC_PCR2_PWAITEN                   ((uint32_t)0x00000002)        /*!&lt; Wait feature enable bit */</div><div class="line">#define  FSMC_PCR2_PBKEN                     ((uint32_t)0x00000004)        /*!&lt; PC Card/NAND Flash memory bank enable bit */</div><div class="line">#define  FSMC_PCR2_PTYP                      ((uint32_t)0x00000008)        /*!&lt; Memory type */</div><div class="line"></div><div class="line">#define  FSMC_PCR2_PWID                      ((uint32_t)0x00000030)        /*!&lt; PWID[1:0] bits (NAND Flash databus width) */</div><div class="line">#define  FSMC_PCR2_PWID_0                    ((uint32_t)0x00000010)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_PCR2_PWID_1                    ((uint32_t)0x00000020)        /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  FSMC_PCR2_ECCEN                     ((uint32_t)0x00000040)        /*!&lt; ECC computation logic enable bit */</div><div class="line"></div><div class="line">#define  FSMC_PCR2_TCLR                      ((uint32_t)0x00001E00)        /*!&lt; TCLR[3:0] bits (CLE to RE delay) */</div><div class="line">#define  FSMC_PCR2_TCLR_0                    ((uint32_t)0x00000200)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_PCR2_TCLR_1                    ((uint32_t)0x00000400)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_PCR2_TCLR_2                    ((uint32_t)0x00000800)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_PCR2_TCLR_3                    ((uint32_t)0x00001000)        /*!&lt; Bit 3 */</div><div class="line"></div><div class="line">#define  FSMC_PCR2_TAR                       ((uint32_t)0x0001E000)        /*!&lt; TAR[3:0] bits (ALE to RE delay) */</div><div class="line">#define  FSMC_PCR2_TAR_0                     ((uint32_t)0x00002000)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_PCR2_TAR_1                     ((uint32_t)0x00004000)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_PCR2_TAR_2                     ((uint32_t)0x00008000)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_PCR2_TAR_3                     ((uint32_t)0x00010000)        /*!&lt; Bit 3 */</div><div class="line"></div><div class="line">#define  FSMC_PCR2_ECCPS                     ((uint32_t)0x000E0000)        /*!&lt; ECCPS[1:0] bits (ECC page size) */</div><div class="line">#define  FSMC_PCR2_ECCPS_0                   ((uint32_t)0x00020000)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_PCR2_ECCPS_1                   ((uint32_t)0x00040000)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_PCR2_ECCPS_2                   ((uint32_t)0x00080000)        /*!&lt; Bit 2 */</div><div class="line"></div><div class="line">/******************  Bit definition for FSMC_PCR3 register  *******************/</div><div class="line">#define  FSMC_PCR3_PWAITEN                   ((uint32_t)0x00000002)        /*!&lt; Wait feature enable bit */</div><div class="line">#define  FSMC_PCR3_PBKEN                     ((uint32_t)0x00000004)        /*!&lt; PC Card/NAND Flash memory bank enable bit */</div><div class="line">#define  FSMC_PCR3_PTYP                      ((uint32_t)0x00000008)        /*!&lt; Memory type */</div><div class="line"></div><div class="line">#define  FSMC_PCR3_PWID                      ((uint32_t)0x00000030)        /*!&lt; PWID[1:0] bits (NAND Flash databus width) */</div><div class="line">#define  FSMC_PCR3_PWID_0                    ((uint32_t)0x00000010)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_PCR3_PWID_1                    ((uint32_t)0x00000020)        /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  FSMC_PCR3_ECCEN                     ((uint32_t)0x00000040)        /*!&lt; ECC computation logic enable bit */</div><div class="line"></div><div class="line">#define  FSMC_PCR3_TCLR                      ((uint32_t)0x00001E00)        /*!&lt; TCLR[3:0] bits (CLE to RE delay) */</div><div class="line">#define  FSMC_PCR3_TCLR_0                    ((uint32_t)0x00000200)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_PCR3_TCLR_1                    ((uint32_t)0x00000400)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_PCR3_TCLR_2                    ((uint32_t)0x00000800)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_PCR3_TCLR_3                    ((uint32_t)0x00001000)        /*!&lt; Bit 3 */</div><div class="line"></div><div class="line">#define  FSMC_PCR3_TAR                       ((uint32_t)0x0001E000)        /*!&lt; TAR[3:0] bits (ALE to RE delay) */</div><div class="line">#define  FSMC_PCR3_TAR_0                     ((uint32_t)0x00002000)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_PCR3_TAR_1                     ((uint32_t)0x00004000)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_PCR3_TAR_2                     ((uint32_t)0x00008000)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_PCR3_TAR_3                     ((uint32_t)0x00010000)        /*!&lt; Bit 3 */</div><div class="line"></div><div class="line">#define  FSMC_PCR3_ECCPS                     ((uint32_t)0x000E0000)        /*!&lt; ECCPS[2:0] bits (ECC page size) */</div><div class="line">#define  FSMC_PCR3_ECCPS_0                   ((uint32_t)0x00020000)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_PCR3_ECCPS_1                   ((uint32_t)0x00040000)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_PCR3_ECCPS_2                   ((uint32_t)0x00080000)        /*!&lt; Bit 2 */</div><div class="line"></div><div class="line">/******************  Bit definition for FSMC_PCR4 register  *******************/</div><div class="line">#define  FSMC_PCR4_PWAITEN                   ((uint32_t)0x00000002)        /*!&lt; Wait feature enable bit */</div><div class="line">#define  FSMC_PCR4_PBKEN                     ((uint32_t)0x00000004)        /*!&lt; PC Card/NAND Flash memory bank enable bit */</div><div class="line">#define  FSMC_PCR4_PTYP                      ((uint32_t)0x00000008)        /*!&lt; Memory type */</div><div class="line"></div><div class="line">#define  FSMC_PCR4_PWID                      ((uint32_t)0x00000030)        /*!&lt; PWID[1:0] bits (NAND Flash databus width) */</div><div class="line">#define  FSMC_PCR4_PWID_0                    ((uint32_t)0x00000010)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_PCR4_PWID_1                    ((uint32_t)0x00000020)        /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  FSMC_PCR4_ECCEN                     ((uint32_t)0x00000040)        /*!&lt; ECC computation logic enable bit */</div><div class="line"></div><div class="line">#define  FSMC_PCR4_TCLR                      ((uint32_t)0x00001E00)        /*!&lt; TCLR[3:0] bits (CLE to RE delay) */</div><div class="line">#define  FSMC_PCR4_TCLR_0                    ((uint32_t)0x00000200)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_PCR4_TCLR_1                    ((uint32_t)0x00000400)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_PCR4_TCLR_2                    ((uint32_t)0x00000800)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_PCR4_TCLR_3                    ((uint32_t)0x00001000)        /*!&lt; Bit 3 */</div><div class="line"></div><div class="line">#define  FSMC_PCR4_TAR                       ((uint32_t)0x0001E000)        /*!&lt; TAR[3:0] bits (ALE to RE delay) */</div><div class="line">#define  FSMC_PCR4_TAR_0                     ((uint32_t)0x00002000)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_PCR4_TAR_1                     ((uint32_t)0x00004000)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_PCR4_TAR_2                     ((uint32_t)0x00008000)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_PCR4_TAR_3                     ((uint32_t)0x00010000)        /*!&lt; Bit 3 */</div><div class="line"></div><div class="line">#define  FSMC_PCR4_ECCPS                     ((uint32_t)0x000E0000)        /*!&lt; ECCPS[2:0] bits (ECC page size) */</div><div class="line">#define  FSMC_PCR4_ECCPS_0                   ((uint32_t)0x00020000)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_PCR4_ECCPS_1                   ((uint32_t)0x00040000)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_PCR4_ECCPS_2                   ((uint32_t)0x00080000)        /*!&lt; Bit 2 */</div><div class="line"></div><div class="line">/*******************  Bit definition for FSMC_SR2 register  *******************/</div><div class="line">#define  FSMC_SR2_IRS                        ((uint8_t)0x01)               /*!&lt; Interrupt Rising Edge status */</div><div class="line">#define  FSMC_SR2_ILS                        ((uint8_t)0x02)               /*!&lt; Interrupt Level status */</div><div class="line">#define  FSMC_SR2_IFS                        ((uint8_t)0x04)               /*!&lt; Interrupt Falling Edge status */</div><div class="line">#define  FSMC_SR2_IREN                       ((uint8_t)0x08)               /*!&lt; Interrupt Rising Edge detection Enable bit */</div><div class="line">#define  FSMC_SR2_ILEN                       ((uint8_t)0x10)               /*!&lt; Interrupt Level detection Enable bit */</div><div class="line">#define  FSMC_SR2_IFEN                       ((uint8_t)0x20)               /*!&lt; Interrupt Falling Edge detection Enable bit */</div><div class="line">#define  FSMC_SR2_FEMPT                      ((uint8_t)0x40)               /*!&lt; FIFO empty */</div><div class="line"></div><div class="line">/*******************  Bit definition for FSMC_SR3 register  *******************/</div><div class="line">#define  FSMC_SR3_IRS                        ((uint8_t)0x01)               /*!&lt; Interrupt Rising Edge status */</div><div class="line">#define  FSMC_SR3_ILS                        ((uint8_t)0x02)               /*!&lt; Interrupt Level status */</div><div class="line">#define  FSMC_SR3_IFS                        ((uint8_t)0x04)               /*!&lt; Interrupt Falling Edge status */</div><div class="line">#define  FSMC_SR3_IREN                       ((uint8_t)0x08)               /*!&lt; Interrupt Rising Edge detection Enable bit */</div><div class="line">#define  FSMC_SR3_ILEN                       ((uint8_t)0x10)               /*!&lt; Interrupt Level detection Enable bit */</div><div class="line">#define  FSMC_SR3_IFEN                       ((uint8_t)0x20)               /*!&lt; Interrupt Falling Edge detection Enable bit */</div><div class="line">#define  FSMC_SR3_FEMPT                      ((uint8_t)0x40)               /*!&lt; FIFO empty */</div><div class="line"></div><div class="line">/*******************  Bit definition for FSMC_SR4 register  *******************/</div><div class="line">#define  FSMC_SR4_IRS                        ((uint8_t)0x01)               /*!&lt; Interrupt Rising Edge status */</div><div class="line">#define  FSMC_SR4_ILS                        ((uint8_t)0x02)               /*!&lt; Interrupt Level status */</div><div class="line">#define  FSMC_SR4_IFS                        ((uint8_t)0x04)               /*!&lt; Interrupt Falling Edge status */</div><div class="line">#define  FSMC_SR4_IREN                       ((uint8_t)0x08)               /*!&lt; Interrupt Rising Edge detection Enable bit */</div><div class="line">#define  FSMC_SR4_ILEN                       ((uint8_t)0x10)               /*!&lt; Interrupt Level detection Enable bit */</div><div class="line">#define  FSMC_SR4_IFEN                       ((uint8_t)0x20)               /*!&lt; Interrupt Falling Edge detection Enable bit */</div><div class="line">#define  FSMC_SR4_FEMPT                      ((uint8_t)0x40)               /*!&lt; FIFO empty */</div><div class="line"></div><div class="line">/******************  Bit definition for FSMC_PMEM2 register  ******************/</div><div class="line">#define  FSMC_PMEM2_MEMSET2                  ((uint32_t)0x000000FF)        /*!&lt; MEMSET2[7:0] bits (Common memory 2 setup time) */</div><div class="line">#define  FSMC_PMEM2_MEMSET2_0                ((uint32_t)0x00000001)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_PMEM2_MEMSET2_1                ((uint32_t)0x00000002)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_PMEM2_MEMSET2_2                ((uint32_t)0x00000004)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_PMEM2_MEMSET2_3                ((uint32_t)0x00000008)        /*!&lt; Bit 3 */</div><div class="line">#define  FSMC_PMEM2_MEMSET2_4                ((uint32_t)0x00000010)        /*!&lt; Bit 4 */</div><div class="line">#define  FSMC_PMEM2_MEMSET2_5                ((uint32_t)0x00000020)        /*!&lt; Bit 5 */</div><div class="line">#define  FSMC_PMEM2_MEMSET2_6                ((uint32_t)0x00000040)        /*!&lt; Bit 6 */</div><div class="line">#define  FSMC_PMEM2_MEMSET2_7                ((uint32_t)0x00000080)        /*!&lt; Bit 7 */</div><div class="line"></div><div class="line">#define  FSMC_PMEM2_MEMWAIT2                 ((uint32_t)0x0000FF00)        /*!&lt; MEMWAIT2[7:0] bits (Common memory 2 wait time) */</div><div class="line">#define  FSMC_PMEM2_MEMWAIT2_0               ((uint32_t)0x00000100)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_PMEM2_MEMWAIT2_1               ((uint32_t)0x00000200)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_PMEM2_MEMWAIT2_2               ((uint32_t)0x00000400)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_PMEM2_MEMWAIT2_3               ((uint32_t)0x00000800)        /*!&lt; Bit 3 */</div><div class="line">#define  FSMC_PMEM2_MEMWAIT2_4               ((uint32_t)0x00001000)        /*!&lt; Bit 4 */</div><div class="line">#define  FSMC_PMEM2_MEMWAIT2_5               ((uint32_t)0x00002000)        /*!&lt; Bit 5 */</div><div class="line">#define  FSMC_PMEM2_MEMWAIT2_6               ((uint32_t)0x00004000)        /*!&lt; Bit 6 */</div><div class="line">#define  FSMC_PMEM2_MEMWAIT2_7               ((uint32_t)0x00008000)        /*!&lt; Bit 7 */</div><div class="line"></div><div class="line">#define  FSMC_PMEM2_MEMHOLD2                 ((uint32_t)0x00FF0000)        /*!&lt; MEMHOLD2[7:0] bits (Common memory 2 hold time) */</div><div class="line">#define  FSMC_PMEM2_MEMHOLD2_0               ((uint32_t)0x00010000)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_PMEM2_MEMHOLD2_1               ((uint32_t)0x00020000)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_PMEM2_MEMHOLD2_2               ((uint32_t)0x00040000)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_PMEM2_MEMHOLD2_3               ((uint32_t)0x00080000)        /*!&lt; Bit 3 */</div><div class="line">#define  FSMC_PMEM2_MEMHOLD2_4               ((uint32_t)0x00100000)        /*!&lt; Bit 4 */</div><div class="line">#define  FSMC_PMEM2_MEMHOLD2_5               ((uint32_t)0x00200000)        /*!&lt; Bit 5 */</div><div class="line">#define  FSMC_PMEM2_MEMHOLD2_6               ((uint32_t)0x00400000)        /*!&lt; Bit 6 */</div><div class="line">#define  FSMC_PMEM2_MEMHOLD2_7               ((uint32_t)0x00800000)        /*!&lt; Bit 7 */</div><div class="line"></div><div class="line">#define  FSMC_PMEM2_MEMHIZ2                  ((uint32_t)0xFF000000)        /*!&lt; MEMHIZ2[7:0] bits (Common memory 2 databus HiZ time) */</div><div class="line">#define  FSMC_PMEM2_MEMHIZ2_0                ((uint32_t)0x01000000)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_PMEM2_MEMHIZ2_1                ((uint32_t)0x02000000)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_PMEM2_MEMHIZ2_2                ((uint32_t)0x04000000)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_PMEM2_MEMHIZ2_3                ((uint32_t)0x08000000)        /*!&lt; Bit 3 */</div><div class="line">#define  FSMC_PMEM2_MEMHIZ2_4                ((uint32_t)0x10000000)        /*!&lt; Bit 4 */</div><div class="line">#define  FSMC_PMEM2_MEMHIZ2_5                ((uint32_t)0x20000000)        /*!&lt; Bit 5 */</div><div class="line">#define  FSMC_PMEM2_MEMHIZ2_6                ((uint32_t)0x40000000)        /*!&lt; Bit 6 */</div><div class="line">#define  FSMC_PMEM2_MEMHIZ2_7                ((uint32_t)0x80000000)        /*!&lt; Bit 7 */</div><div class="line"></div><div class="line">/******************  Bit definition for FSMC_PMEM3 register  ******************/</div><div class="line">#define  FSMC_PMEM3_MEMSET3                  ((uint32_t)0x000000FF)        /*!&lt; MEMSET3[7:0] bits (Common memory 3 setup time) */</div><div class="line">#define  FSMC_PMEM3_MEMSET3_0                ((uint32_t)0x00000001)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_PMEM3_MEMSET3_1                ((uint32_t)0x00000002)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_PMEM3_MEMSET3_2                ((uint32_t)0x00000004)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_PMEM3_MEMSET3_3                ((uint32_t)0x00000008)        /*!&lt; Bit 3 */</div><div class="line">#define  FSMC_PMEM3_MEMSET3_4                ((uint32_t)0x00000010)        /*!&lt; Bit 4 */</div><div class="line">#define  FSMC_PMEM3_MEMSET3_5                ((uint32_t)0x00000020)        /*!&lt; Bit 5 */</div><div class="line">#define  FSMC_PMEM3_MEMSET3_6                ((uint32_t)0x00000040)        /*!&lt; Bit 6 */</div><div class="line">#define  FSMC_PMEM3_MEMSET3_7                ((uint32_t)0x00000080)        /*!&lt; Bit 7 */</div><div class="line"></div><div class="line">#define  FSMC_PMEM3_MEMWAIT3                 ((uint32_t)0x0000FF00)        /*!&lt; MEMWAIT3[7:0] bits (Common memory 3 wait time) */</div><div class="line">#define  FSMC_PMEM3_MEMWAIT3_0               ((uint32_t)0x00000100)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_PMEM3_MEMWAIT3_1               ((uint32_t)0x00000200)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_PMEM3_MEMWAIT3_2               ((uint32_t)0x00000400)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_PMEM3_MEMWAIT3_3               ((uint32_t)0x00000800)        /*!&lt; Bit 3 */</div><div class="line">#define  FSMC_PMEM3_MEMWAIT3_4               ((uint32_t)0x00001000)        /*!&lt; Bit 4 */</div><div class="line">#define  FSMC_PMEM3_MEMWAIT3_5               ((uint32_t)0x00002000)        /*!&lt; Bit 5 */</div><div class="line">#define  FSMC_PMEM3_MEMWAIT3_6               ((uint32_t)0x00004000)        /*!&lt; Bit 6 */</div><div class="line">#define  FSMC_PMEM3_MEMWAIT3_7               ((uint32_t)0x00008000)        /*!&lt; Bit 7 */</div><div class="line"></div><div class="line">#define  FSMC_PMEM3_MEMHOLD3                 ((uint32_t)0x00FF0000)        /*!&lt; MEMHOLD3[7:0] bits (Common memory 3 hold time) */</div><div class="line">#define  FSMC_PMEM3_MEMHOLD3_0               ((uint32_t)0x00010000)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_PMEM3_MEMHOLD3_1               ((uint32_t)0x00020000)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_PMEM3_MEMHOLD3_2               ((uint32_t)0x00040000)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_PMEM3_MEMHOLD3_3               ((uint32_t)0x00080000)        /*!&lt; Bit 3 */</div><div class="line">#define  FSMC_PMEM3_MEMHOLD3_4               ((uint32_t)0x00100000)        /*!&lt; Bit 4 */</div><div class="line">#define  FSMC_PMEM3_MEMHOLD3_5               ((uint32_t)0x00200000)        /*!&lt; Bit 5 */</div><div class="line">#define  FSMC_PMEM3_MEMHOLD3_6               ((uint32_t)0x00400000)        /*!&lt; Bit 6 */</div><div class="line">#define  FSMC_PMEM3_MEMHOLD3_7               ((uint32_t)0x00800000)        /*!&lt; Bit 7 */</div><div class="line"></div><div class="line">#define  FSMC_PMEM3_MEMHIZ3                  ((uint32_t)0xFF000000)        /*!&lt; MEMHIZ3[7:0] bits (Common memory 3 databus HiZ time) */</div><div class="line">#define  FSMC_PMEM3_MEMHIZ3_0                ((uint32_t)0x01000000)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_PMEM3_MEMHIZ3_1                ((uint32_t)0x02000000)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_PMEM3_MEMHIZ3_2                ((uint32_t)0x04000000)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_PMEM3_MEMHIZ3_3                ((uint32_t)0x08000000)        /*!&lt; Bit 3 */</div><div class="line">#define  FSMC_PMEM3_MEMHIZ3_4                ((uint32_t)0x10000000)        /*!&lt; Bit 4 */</div><div class="line">#define  FSMC_PMEM3_MEMHIZ3_5                ((uint32_t)0x20000000)        /*!&lt; Bit 5 */</div><div class="line">#define  FSMC_PMEM3_MEMHIZ3_6                ((uint32_t)0x40000000)        /*!&lt; Bit 6 */</div><div class="line">#define  FSMC_PMEM3_MEMHIZ3_7                ((uint32_t)0x80000000)        /*!&lt; Bit 7 */</div><div class="line"></div><div class="line">/******************  Bit definition for FSMC_PMEM4 register  ******************/</div><div class="line">#define  FSMC_PMEM4_MEMSET4                  ((uint32_t)0x000000FF)        /*!&lt; MEMSET4[7:0] bits (Common memory 4 setup time) */</div><div class="line">#define  FSMC_PMEM4_MEMSET4_0                ((uint32_t)0x00000001)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_PMEM4_MEMSET4_1                ((uint32_t)0x00000002)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_PMEM4_MEMSET4_2                ((uint32_t)0x00000004)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_PMEM4_MEMSET4_3                ((uint32_t)0x00000008)        /*!&lt; Bit 3 */</div><div class="line">#define  FSMC_PMEM4_MEMSET4_4                ((uint32_t)0x00000010)        /*!&lt; Bit 4 */</div><div class="line">#define  FSMC_PMEM4_MEMSET4_5                ((uint32_t)0x00000020)        /*!&lt; Bit 5 */</div><div class="line">#define  FSMC_PMEM4_MEMSET4_6                ((uint32_t)0x00000040)        /*!&lt; Bit 6 */</div><div class="line">#define  FSMC_PMEM4_MEMSET4_7                ((uint32_t)0x00000080)        /*!&lt; Bit 7 */</div><div class="line"></div><div class="line">#define  FSMC_PMEM4_MEMWAIT4                 ((uint32_t)0x0000FF00)        /*!&lt; MEMWAIT4[7:0] bits (Common memory 4 wait time) */</div><div class="line">#define  FSMC_PMEM4_MEMWAIT4_0               ((uint32_t)0x00000100)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_PMEM4_MEMWAIT4_1               ((uint32_t)0x00000200)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_PMEM4_MEMWAIT4_2               ((uint32_t)0x00000400)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_PMEM4_MEMWAIT4_3               ((uint32_t)0x00000800)        /*!&lt; Bit 3 */</div><div class="line">#define  FSMC_PMEM4_MEMWAIT4_4               ((uint32_t)0x00001000)        /*!&lt; Bit 4 */</div><div class="line">#define  FSMC_PMEM4_MEMWAIT4_5               ((uint32_t)0x00002000)        /*!&lt; Bit 5 */</div><div class="line">#define  FSMC_PMEM4_MEMWAIT4_6               ((uint32_t)0x00004000)        /*!&lt; Bit 6 */</div><div class="line">#define  FSMC_PMEM4_MEMWAIT4_7               ((uint32_t)0x00008000)        /*!&lt; Bit 7 */</div><div class="line"></div><div class="line">#define  FSMC_PMEM4_MEMHOLD4                 ((uint32_t)0x00FF0000)        /*!&lt; MEMHOLD4[7:0] bits (Common memory 4 hold time) */</div><div class="line">#define  FSMC_PMEM4_MEMHOLD4_0               ((uint32_t)0x00010000)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_PMEM4_MEMHOLD4_1               ((uint32_t)0x00020000)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_PMEM4_MEMHOLD4_2               ((uint32_t)0x00040000)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_PMEM4_MEMHOLD4_3               ((uint32_t)0x00080000)        /*!&lt; Bit 3 */</div><div class="line">#define  FSMC_PMEM4_MEMHOLD4_4               ((uint32_t)0x00100000)        /*!&lt; Bit 4 */</div><div class="line">#define  FSMC_PMEM4_MEMHOLD4_5               ((uint32_t)0x00200000)        /*!&lt; Bit 5 */</div><div class="line">#define  FSMC_PMEM4_MEMHOLD4_6               ((uint32_t)0x00400000)        /*!&lt; Bit 6 */</div><div class="line">#define  FSMC_PMEM4_MEMHOLD4_7               ((uint32_t)0x00800000)        /*!&lt; Bit 7 */</div><div class="line"></div><div class="line">#define  FSMC_PMEM4_MEMHIZ4                  ((uint32_t)0xFF000000)        /*!&lt; MEMHIZ4[7:0] bits (Common memory 4 databus HiZ time) */</div><div class="line">#define  FSMC_PMEM4_MEMHIZ4_0                ((uint32_t)0x01000000)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_PMEM4_MEMHIZ4_1                ((uint32_t)0x02000000)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_PMEM4_MEMHIZ4_2                ((uint32_t)0x04000000)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_PMEM4_MEMHIZ4_3                ((uint32_t)0x08000000)        /*!&lt; Bit 3 */</div><div class="line">#define  FSMC_PMEM4_MEMHIZ4_4                ((uint32_t)0x10000000)        /*!&lt; Bit 4 */</div><div class="line">#define  FSMC_PMEM4_MEMHIZ4_5                ((uint32_t)0x20000000)        /*!&lt; Bit 5 */</div><div class="line">#define  FSMC_PMEM4_MEMHIZ4_6                ((uint32_t)0x40000000)        /*!&lt; Bit 6 */</div><div class="line">#define  FSMC_PMEM4_MEMHIZ4_7                ((uint32_t)0x80000000)        /*!&lt; Bit 7 */</div><div class="line"></div><div class="line">/******************  Bit definition for FSMC_PATT2 register  ******************/</div><div class="line">#define  FSMC_PATT2_ATTSET2                  ((uint32_t)0x000000FF)        /*!&lt; ATTSET2[7:0] bits (Attribute memory 2 setup time) */</div><div class="line">#define  FSMC_PATT2_ATTSET2_0                ((uint32_t)0x00000001)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_PATT2_ATTSET2_1                ((uint32_t)0x00000002)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_PATT2_ATTSET2_2                ((uint32_t)0x00000004)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_PATT2_ATTSET2_3                ((uint32_t)0x00000008)        /*!&lt; Bit 3 */</div><div class="line">#define  FSMC_PATT2_ATTSET2_4                ((uint32_t)0x00000010)        /*!&lt; Bit 4 */</div><div class="line">#define  FSMC_PATT2_ATTSET2_5                ((uint32_t)0x00000020)        /*!&lt; Bit 5 */</div><div class="line">#define  FSMC_PATT2_ATTSET2_6                ((uint32_t)0x00000040)        /*!&lt; Bit 6 */</div><div class="line">#define  FSMC_PATT2_ATTSET2_7                ((uint32_t)0x00000080)        /*!&lt; Bit 7 */</div><div class="line"></div><div class="line">#define  FSMC_PATT2_ATTWAIT2                 ((uint32_t)0x0000FF00)        /*!&lt; ATTWAIT2[7:0] bits (Attribute memory 2 wait time) */</div><div class="line">#define  FSMC_PATT2_ATTWAIT2_0               ((uint32_t)0x00000100)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_PATT2_ATTWAIT2_1               ((uint32_t)0x00000200)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_PATT2_ATTWAIT2_2               ((uint32_t)0x00000400)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_PATT2_ATTWAIT2_3               ((uint32_t)0x00000800)        /*!&lt; Bit 3 */</div><div class="line">#define  FSMC_PATT2_ATTWAIT2_4               ((uint32_t)0x00001000)        /*!&lt; Bit 4 */</div><div class="line">#define  FSMC_PATT2_ATTWAIT2_5               ((uint32_t)0x00002000)        /*!&lt; Bit 5 */</div><div class="line">#define  FSMC_PATT2_ATTWAIT2_6               ((uint32_t)0x00004000)        /*!&lt; Bit 6 */</div><div class="line">#define  FSMC_PATT2_ATTWAIT2_7               ((uint32_t)0x00008000)        /*!&lt; Bit 7 */</div><div class="line"></div><div class="line">#define  FSMC_PATT2_ATTHOLD2                 ((uint32_t)0x00FF0000)        /*!&lt; ATTHOLD2[7:0] bits (Attribute memory 2 hold time) */</div><div class="line">#define  FSMC_PATT2_ATTHOLD2_0               ((uint32_t)0x00010000)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_PATT2_ATTHOLD2_1               ((uint32_t)0x00020000)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_PATT2_ATTHOLD2_2               ((uint32_t)0x00040000)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_PATT2_ATTHOLD2_3               ((uint32_t)0x00080000)        /*!&lt; Bit 3 */</div><div class="line">#define  FSMC_PATT2_ATTHOLD2_4               ((uint32_t)0x00100000)        /*!&lt; Bit 4 */</div><div class="line">#define  FSMC_PATT2_ATTHOLD2_5               ((uint32_t)0x00200000)        /*!&lt; Bit 5 */</div><div class="line">#define  FSMC_PATT2_ATTHOLD2_6               ((uint32_t)0x00400000)        /*!&lt; Bit 6 */</div><div class="line">#define  FSMC_PATT2_ATTHOLD2_7               ((uint32_t)0x00800000)        /*!&lt; Bit 7 */</div><div class="line"></div><div class="line">#define  FSMC_PATT2_ATTHIZ2                  ((uint32_t)0xFF000000)        /*!&lt; ATTHIZ2[7:0] bits (Attribute memory 2 databus HiZ time) */</div><div class="line">#define  FSMC_PATT2_ATTHIZ2_0                ((uint32_t)0x01000000)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_PATT2_ATTHIZ2_1                ((uint32_t)0x02000000)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_PATT2_ATTHIZ2_2                ((uint32_t)0x04000000)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_PATT2_ATTHIZ2_3                ((uint32_t)0x08000000)        /*!&lt; Bit 3 */</div><div class="line">#define  FSMC_PATT2_ATTHIZ2_4                ((uint32_t)0x10000000)        /*!&lt; Bit 4 */</div><div class="line">#define  FSMC_PATT2_ATTHIZ2_5                ((uint32_t)0x20000000)        /*!&lt; Bit 5 */</div><div class="line">#define  FSMC_PATT2_ATTHIZ2_6                ((uint32_t)0x40000000)        /*!&lt; Bit 6 */</div><div class="line">#define  FSMC_PATT2_ATTHIZ2_7                ((uint32_t)0x80000000)        /*!&lt; Bit 7 */</div><div class="line"></div><div class="line">/******************  Bit definition for FSMC_PATT3 register  ******************/</div><div class="line">#define  FSMC_PATT3_ATTSET3                  ((uint32_t)0x000000FF)        /*!&lt; ATTSET3[7:0] bits (Attribute memory 3 setup time) */</div><div class="line">#define  FSMC_PATT3_ATTSET3_0                ((uint32_t)0x00000001)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_PATT3_ATTSET3_1                ((uint32_t)0x00000002)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_PATT3_ATTSET3_2                ((uint32_t)0x00000004)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_PATT3_ATTSET3_3                ((uint32_t)0x00000008)        /*!&lt; Bit 3 */</div><div class="line">#define  FSMC_PATT3_ATTSET3_4                ((uint32_t)0x00000010)        /*!&lt; Bit 4 */</div><div class="line">#define  FSMC_PATT3_ATTSET3_5                ((uint32_t)0x00000020)        /*!&lt; Bit 5 */</div><div class="line">#define  FSMC_PATT3_ATTSET3_6                ((uint32_t)0x00000040)        /*!&lt; Bit 6 */</div><div class="line">#define  FSMC_PATT3_ATTSET3_7                ((uint32_t)0x00000080)        /*!&lt; Bit 7 */</div><div class="line"></div><div class="line">#define  FSMC_PATT3_ATTWAIT3                 ((uint32_t)0x0000FF00)        /*!&lt; ATTWAIT3[7:0] bits (Attribute memory 3 wait time) */</div><div class="line">#define  FSMC_PATT3_ATTWAIT3_0               ((uint32_t)0x00000100)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_PATT3_ATTWAIT3_1               ((uint32_t)0x00000200)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_PATT3_ATTWAIT3_2               ((uint32_t)0x00000400)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_PATT3_ATTWAIT3_3               ((uint32_t)0x00000800)        /*!&lt; Bit 3 */</div><div class="line">#define  FSMC_PATT3_ATTWAIT3_4               ((uint32_t)0x00001000)        /*!&lt; Bit 4 */</div><div class="line">#define  FSMC_PATT3_ATTWAIT3_5               ((uint32_t)0x00002000)        /*!&lt; Bit 5 */</div><div class="line">#define  FSMC_PATT3_ATTWAIT3_6               ((uint32_t)0x00004000)        /*!&lt; Bit 6 */</div><div class="line">#define  FSMC_PATT3_ATTWAIT3_7               ((uint32_t)0x00008000)        /*!&lt; Bit 7 */</div><div class="line"></div><div class="line">#define  FSMC_PATT3_ATTHOLD3                 ((uint32_t)0x00FF0000)        /*!&lt; ATTHOLD3[7:0] bits (Attribute memory 3 hold time) */</div><div class="line">#define  FSMC_PATT3_ATTHOLD3_0               ((uint32_t)0x00010000)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_PATT3_ATTHOLD3_1               ((uint32_t)0x00020000)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_PATT3_ATTHOLD3_2               ((uint32_t)0x00040000)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_PATT3_ATTHOLD3_3               ((uint32_t)0x00080000)        /*!&lt; Bit 3 */</div><div class="line">#define  FSMC_PATT3_ATTHOLD3_4               ((uint32_t)0x00100000)        /*!&lt; Bit 4 */</div><div class="line">#define  FSMC_PATT3_ATTHOLD3_5               ((uint32_t)0x00200000)        /*!&lt; Bit 5 */</div><div class="line">#define  FSMC_PATT3_ATTHOLD3_6               ((uint32_t)0x00400000)        /*!&lt; Bit 6 */</div><div class="line">#define  FSMC_PATT3_ATTHOLD3_7               ((uint32_t)0x00800000)        /*!&lt; Bit 7 */</div><div class="line"></div><div class="line">#define  FSMC_PATT3_ATTHIZ3                  ((uint32_t)0xFF000000)        /*!&lt; ATTHIZ3[7:0] bits (Attribute memory 3 databus HiZ time) */</div><div class="line">#define  FSMC_PATT3_ATTHIZ3_0                ((uint32_t)0x01000000)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_PATT3_ATTHIZ3_1                ((uint32_t)0x02000000)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_PATT3_ATTHIZ3_2                ((uint32_t)0x04000000)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_PATT3_ATTHIZ3_3                ((uint32_t)0x08000000)        /*!&lt; Bit 3 */</div><div class="line">#define  FSMC_PATT3_ATTHIZ3_4                ((uint32_t)0x10000000)        /*!&lt; Bit 4 */</div><div class="line">#define  FSMC_PATT3_ATTHIZ3_5                ((uint32_t)0x20000000)        /*!&lt; Bit 5 */</div><div class="line">#define  FSMC_PATT3_ATTHIZ3_6                ((uint32_t)0x40000000)        /*!&lt; Bit 6 */</div><div class="line">#define  FSMC_PATT3_ATTHIZ3_7                ((uint32_t)0x80000000)        /*!&lt; Bit 7 */</div><div class="line"></div><div class="line">/******************  Bit definition for FSMC_PATT4 register  ******************/</div><div class="line">#define  FSMC_PATT4_ATTSET4                  ((uint32_t)0x000000FF)        /*!&lt; ATTSET4[7:0] bits (Attribute memory 4 setup time) */</div><div class="line">#define  FSMC_PATT4_ATTSET4_0                ((uint32_t)0x00000001)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_PATT4_ATTSET4_1                ((uint32_t)0x00000002)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_PATT4_ATTSET4_2                ((uint32_t)0x00000004)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_PATT4_ATTSET4_3                ((uint32_t)0x00000008)        /*!&lt; Bit 3 */</div><div class="line">#define  FSMC_PATT4_ATTSET4_4                ((uint32_t)0x00000010)        /*!&lt; Bit 4 */</div><div class="line">#define  FSMC_PATT4_ATTSET4_5                ((uint32_t)0x00000020)        /*!&lt; Bit 5 */</div><div class="line">#define  FSMC_PATT4_ATTSET4_6                ((uint32_t)0x00000040)        /*!&lt; Bit 6 */</div><div class="line">#define  FSMC_PATT4_ATTSET4_7                ((uint32_t)0x00000080)        /*!&lt; Bit 7 */</div><div class="line"></div><div class="line">#define  FSMC_PATT4_ATTWAIT4                 ((uint32_t)0x0000FF00)        /*!&lt; ATTWAIT4[7:0] bits (Attribute memory 4 wait time) */</div><div class="line">#define  FSMC_PATT4_ATTWAIT4_0               ((uint32_t)0x00000100)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_PATT4_ATTWAIT4_1               ((uint32_t)0x00000200)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_PATT4_ATTWAIT4_2               ((uint32_t)0x00000400)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_PATT4_ATTWAIT4_3               ((uint32_t)0x00000800)        /*!&lt; Bit 3 */</div><div class="line">#define  FSMC_PATT4_ATTWAIT4_4               ((uint32_t)0x00001000)        /*!&lt; Bit 4 */</div><div class="line">#define  FSMC_PATT4_ATTWAIT4_5               ((uint32_t)0x00002000)        /*!&lt; Bit 5 */</div><div class="line">#define  FSMC_PATT4_ATTWAIT4_6               ((uint32_t)0x00004000)        /*!&lt; Bit 6 */</div><div class="line">#define  FSMC_PATT4_ATTWAIT4_7               ((uint32_t)0x00008000)        /*!&lt; Bit 7 */</div><div class="line"></div><div class="line">#define  FSMC_PATT4_ATTHOLD4                 ((uint32_t)0x00FF0000)        /*!&lt; ATTHOLD4[7:0] bits (Attribute memory 4 hold time) */</div><div class="line">#define  FSMC_PATT4_ATTHOLD4_0               ((uint32_t)0x00010000)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_PATT4_ATTHOLD4_1               ((uint32_t)0x00020000)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_PATT4_ATTHOLD4_2               ((uint32_t)0x00040000)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_PATT4_ATTHOLD4_3               ((uint32_t)0x00080000)        /*!&lt; Bit 3 */</div><div class="line">#define  FSMC_PATT4_ATTHOLD4_4               ((uint32_t)0x00100000)        /*!&lt; Bit 4 */</div><div class="line">#define  FSMC_PATT4_ATTHOLD4_5               ((uint32_t)0x00200000)        /*!&lt; Bit 5 */</div><div class="line">#define  FSMC_PATT4_ATTHOLD4_6               ((uint32_t)0x00400000)        /*!&lt; Bit 6 */</div><div class="line">#define  FSMC_PATT4_ATTHOLD4_7               ((uint32_t)0x00800000)        /*!&lt; Bit 7 */</div><div class="line"></div><div class="line">#define  FSMC_PATT4_ATTHIZ4                  ((uint32_t)0xFF000000)        /*!&lt; ATTHIZ4[7:0] bits (Attribute memory 4 databus HiZ time) */</div><div class="line">#define  FSMC_PATT4_ATTHIZ4_0                ((uint32_t)0x01000000)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_PATT4_ATTHIZ4_1                ((uint32_t)0x02000000)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_PATT4_ATTHIZ4_2                ((uint32_t)0x04000000)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_PATT4_ATTHIZ4_3                ((uint32_t)0x08000000)        /*!&lt; Bit 3 */</div><div class="line">#define  FSMC_PATT4_ATTHIZ4_4                ((uint32_t)0x10000000)        /*!&lt; Bit 4 */</div><div class="line">#define  FSMC_PATT4_ATTHIZ4_5                ((uint32_t)0x20000000)        /*!&lt; Bit 5 */</div><div class="line">#define  FSMC_PATT4_ATTHIZ4_6                ((uint32_t)0x40000000)        /*!&lt; Bit 6 */</div><div class="line">#define  FSMC_PATT4_ATTHIZ4_7                ((uint32_t)0x80000000)        /*!&lt; Bit 7 */</div><div class="line"></div><div class="line">/******************  Bit definition for FSMC_PIO4 register  *******************/</div><div class="line">#define  FSMC_PIO4_IOSET4                    ((uint32_t)0x000000FF)        /*!&lt; IOSET4[7:0] bits (I/O 4 setup time) */</div><div class="line">#define  FSMC_PIO4_IOSET4_0                  ((uint32_t)0x00000001)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_PIO4_IOSET4_1                  ((uint32_t)0x00000002)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_PIO4_IOSET4_2                  ((uint32_t)0x00000004)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_PIO4_IOSET4_3                  ((uint32_t)0x00000008)        /*!&lt; Bit 3 */</div><div class="line">#define  FSMC_PIO4_IOSET4_4                  ((uint32_t)0x00000010)        /*!&lt; Bit 4 */</div><div class="line">#define  FSMC_PIO4_IOSET4_5                  ((uint32_t)0x00000020)        /*!&lt; Bit 5 */</div><div class="line">#define  FSMC_PIO4_IOSET4_6                  ((uint32_t)0x00000040)        /*!&lt; Bit 6 */</div><div class="line">#define  FSMC_PIO4_IOSET4_7                  ((uint32_t)0x00000080)        /*!&lt; Bit 7 */</div><div class="line"></div><div class="line">#define  FSMC_PIO4_IOWAIT4                   ((uint32_t)0x0000FF00)        /*!&lt; IOWAIT4[7:0] bits (I/O 4 wait time) */</div><div class="line">#define  FSMC_PIO4_IOWAIT4_0                 ((uint32_t)0x00000100)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_PIO4_IOWAIT4_1                 ((uint32_t)0x00000200)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_PIO4_IOWAIT4_2                 ((uint32_t)0x00000400)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_PIO4_IOWAIT4_3                 ((uint32_t)0x00000800)        /*!&lt; Bit 3 */</div><div class="line">#define  FSMC_PIO4_IOWAIT4_4                 ((uint32_t)0x00001000)        /*!&lt; Bit 4 */</div><div class="line">#define  FSMC_PIO4_IOWAIT4_5                 ((uint32_t)0x00002000)        /*!&lt; Bit 5 */</div><div class="line">#define  FSMC_PIO4_IOWAIT4_6                 ((uint32_t)0x00004000)        /*!&lt; Bit 6 */</div><div class="line">#define  FSMC_PIO4_IOWAIT4_7                 ((uint32_t)0x00008000)        /*!&lt; Bit 7 */</div><div class="line"></div><div class="line">#define  FSMC_PIO4_IOHOLD4                   ((uint32_t)0x00FF0000)        /*!&lt; IOHOLD4[7:0] bits (I/O 4 hold time) */</div><div class="line">#define  FSMC_PIO4_IOHOLD4_0                 ((uint32_t)0x00010000)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_PIO4_IOHOLD4_1                 ((uint32_t)0x00020000)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_PIO4_IOHOLD4_2                 ((uint32_t)0x00040000)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_PIO4_IOHOLD4_3                 ((uint32_t)0x00080000)        /*!&lt; Bit 3 */</div><div class="line">#define  FSMC_PIO4_IOHOLD4_4                 ((uint32_t)0x00100000)        /*!&lt; Bit 4 */</div><div class="line">#define  FSMC_PIO4_IOHOLD4_5                 ((uint32_t)0x00200000)        /*!&lt; Bit 5 */</div><div class="line">#define  FSMC_PIO4_IOHOLD4_6                 ((uint32_t)0x00400000)        /*!&lt; Bit 6 */</div><div class="line">#define  FSMC_PIO4_IOHOLD4_7                 ((uint32_t)0x00800000)        /*!&lt; Bit 7 */</div><div class="line"></div><div class="line">#define  FSMC_PIO4_IOHIZ4                    ((uint32_t)0xFF000000)        /*!&lt; IOHIZ4[7:0] bits (I/O 4 databus HiZ time) */</div><div class="line">#define  FSMC_PIO4_IOHIZ4_0                  ((uint32_t)0x01000000)        /*!&lt; Bit 0 */</div><div class="line">#define  FSMC_PIO4_IOHIZ4_1                  ((uint32_t)0x02000000)        /*!&lt; Bit 1 */</div><div class="line">#define  FSMC_PIO4_IOHIZ4_2                  ((uint32_t)0x04000000)        /*!&lt; Bit 2 */</div><div class="line">#define  FSMC_PIO4_IOHIZ4_3                  ((uint32_t)0x08000000)        /*!&lt; Bit 3 */</div><div class="line">#define  FSMC_PIO4_IOHIZ4_4                  ((uint32_t)0x10000000)        /*!&lt; Bit 4 */</div><div class="line">#define  FSMC_PIO4_IOHIZ4_5                  ((uint32_t)0x20000000)        /*!&lt; Bit 5 */</div><div class="line">#define  FSMC_PIO4_IOHIZ4_6                  ((uint32_t)0x40000000)        /*!&lt; Bit 6 */</div><div class="line">#define  FSMC_PIO4_IOHIZ4_7                  ((uint32_t)0x80000000)        /*!&lt; Bit 7 */</div><div class="line"></div><div class="line">/******************  Bit definition for FSMC_ECCR2 register  ******************/</div><div class="line">#define  FSMC_ECCR2_ECC2                     ((uint32_t)0xFFFFFFFF)        /*!&lt; ECC result */</div><div class="line"></div><div class="line">/******************  Bit definition for FSMC_ECCR3 register  ******************/</div><div class="line">#define  FSMC_ECCR3_ECC3                     ((uint32_t)0xFFFFFFFF)        /*!&lt; ECC result */</div><div class="line"></div><div class="line">/******************************************************************************/</div><div class="line">/*                                                                            */</div><div class="line">/*                          SD host Interface                                 */</div><div class="line">/*                                                                            */</div><div class="line">/******************************************************************************/</div><div class="line"></div><div class="line">/******************  Bit definition for SDIO_POWER register  ******************/</div><div class="line">#define  SDIO_POWER_PWRCTRL                  ((uint8_t)0x03)               /*!&lt; PWRCTRL[1:0] bits (Power supply control bits) */</div><div class="line">#define  SDIO_POWER_PWRCTRL_0                ((uint8_t)0x01)               /*!&lt; Bit 0 */</div><div class="line">#define  SDIO_POWER_PWRCTRL_1                ((uint8_t)0x02)               /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">/******************  Bit definition for SDIO_CLKCR register  ******************/</div><div class="line">#define  SDIO_CLKCR_CLKDIV                   ((uint16_t)0x00FF)            /*!&lt; Clock divide factor */</div><div class="line">#define  SDIO_CLKCR_CLKEN                    ((uint16_t)0x0100)            /*!&lt; Clock enable bit */</div><div class="line">#define  SDIO_CLKCR_PWRSAV                   ((uint16_t)0x0200)            /*!&lt; Power saving configuration bit */</div><div class="line">#define  SDIO_CLKCR_BYPASS                   ((uint16_t)0x0400)            /*!&lt; Clock divider bypass enable bit */</div><div class="line"></div><div class="line">#define  SDIO_CLKCR_WIDBUS                   ((uint16_t)0x1800)            /*!&lt; WIDBUS[1:0] bits (Wide bus mode enable bit) */</div><div class="line">#define  SDIO_CLKCR_WIDBUS_0                 ((uint16_t)0x0800)            /*!&lt; Bit 0 */</div><div class="line">#define  SDIO_CLKCR_WIDBUS_1                 ((uint16_t)0x1000)            /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  SDIO_CLKCR_NEGEDGE                  ((uint16_t)0x2000)            /*!&lt; SDIO_CK dephasing selection bit */</div><div class="line">#define  SDIO_CLKCR_HWFC_EN                  ((uint16_t)0x4000)            /*!&lt; HW Flow Control enable */</div><div class="line"></div><div class="line">/*******************  Bit definition for SDIO_ARG register  *******************/</div><div class="line">#define  SDIO_ARG_CMDARG                     ((uint32_t)0xFFFFFFFF)            /*!&lt; Command argument */</div><div class="line"></div><div class="line">/*******************  Bit definition for SDIO_CMD register  *******************/</div><div class="line">#define  SDIO_CMD_CMDINDEX                   ((uint16_t)0x003F)            /*!&lt; Command Index */</div><div class="line"></div><div class="line">#define  SDIO_CMD_WAITRESP                   ((uint16_t)0x00C0)            /*!&lt; WAITRESP[1:0] bits (Wait for response bits) */</div><div class="line">#define  SDIO_CMD_WAITRESP_0                 ((uint16_t)0x0040)            /*!&lt;  Bit 0 */</div><div class="line">#define  SDIO_CMD_WAITRESP_1                 ((uint16_t)0x0080)            /*!&lt;  Bit 1 */</div><div class="line"></div><div class="line">#define  SDIO_CMD_WAITINT                    ((uint16_t)0x0100)            /*!&lt; CPSM Waits for Interrupt Request */</div><div class="line">#define  SDIO_CMD_WAITPEND                   ((uint16_t)0x0200)            /*!&lt; CPSM Waits for ends of data transfer (CmdPend internal signal) */</div><div class="line">#define  SDIO_CMD_CPSMEN                     ((uint16_t)0x0400)            /*!&lt; Command path state machine (CPSM) Enable bit */</div><div class="line">#define  SDIO_CMD_SDIOSUSPEND                ((uint16_t)0x0800)            /*!&lt; SD I/O suspend command */</div><div class="line">#define  SDIO_CMD_ENCMDCOMPL                 ((uint16_t)0x1000)            /*!&lt; Enable CMD completion */</div><div class="line">#define  SDIO_CMD_NIEN                       ((uint16_t)0x2000)            /*!&lt; Not Interrupt Enable */</div><div class="line">#define  SDIO_CMD_CEATACMD                   ((uint16_t)0x4000)            /*!&lt; CE-ATA command */</div><div class="line"></div><div class="line">/*****************  Bit definition for SDIO_RESPCMD register  *****************/</div><div class="line">#define  SDIO_RESPCMD_RESPCMD                ((uint8_t)0x3F)               /*!&lt; Response command index */</div><div class="line"></div><div class="line">/******************  Bit definition for SDIO_RESP0 register  ******************/</div><div class="line">#define  SDIO_RESP0_CARDSTATUS0              ((uint32_t)0xFFFFFFFF)        /*!&lt; Card Status */</div><div class="line"></div><div class="line">/******************  Bit definition for SDIO_RESP1 register  ******************/</div><div class="line">#define  SDIO_RESP1_CARDSTATUS1              ((uint32_t)0xFFFFFFFF)        /*!&lt; Card Status */</div><div class="line"></div><div class="line">/******************  Bit definition for SDIO_RESP2 register  ******************/</div><div class="line">#define  SDIO_RESP2_CARDSTATUS2              ((uint32_t)0xFFFFFFFF)        /*!&lt; Card Status */</div><div class="line"></div><div class="line">/******************  Bit definition for SDIO_RESP3 register  ******************/</div><div class="line">#define  SDIO_RESP3_CARDSTATUS3              ((uint32_t)0xFFFFFFFF)        /*!&lt; Card Status */</div><div class="line"></div><div class="line">/******************  Bit definition for SDIO_RESP4 register  ******************/</div><div class="line">#define  SDIO_RESP4_CARDSTATUS4              ((uint32_t)0xFFFFFFFF)        /*!&lt; Card Status */</div><div class="line"></div><div class="line">/******************  Bit definition for SDIO_DTIMER register  *****************/</div><div class="line">#define  SDIO_DTIMER_DATATIME                ((uint32_t)0xFFFFFFFF)        /*!&lt; Data timeout period. */</div><div class="line"></div><div class="line">/******************  Bit definition for SDIO_DLEN register  *******************/</div><div class="line">#define  SDIO_DLEN_DATALENGTH                ((uint32_t)0x01FFFFFF)        /*!&lt; Data length value */</div><div class="line"></div><div class="line">/******************  Bit definition for SDIO_DCTRL register  ******************/</div><div class="line">#define  SDIO_DCTRL_DTEN                     ((uint16_t)0x0001)            /*!&lt; Data transfer enabled bit */</div><div class="line">#define  SDIO_DCTRL_DTDIR                    ((uint16_t)0x0002)            /*!&lt; Data transfer direction selection */</div><div class="line">#define  SDIO_DCTRL_DTMODE                   ((uint16_t)0x0004)            /*!&lt; Data transfer mode selection */</div><div class="line">#define  SDIO_DCTRL_DMAEN                    ((uint16_t)0x0008)            /*!&lt; DMA enabled bit */</div><div class="line"></div><div class="line">#define  SDIO_DCTRL_DBLOCKSIZE               ((uint16_t)0x00F0)            /*!&lt; DBLOCKSIZE[3:0] bits (Data block size) */</div><div class="line">#define  SDIO_DCTRL_DBLOCKSIZE_0             ((uint16_t)0x0010)            /*!&lt; Bit 0 */</div><div class="line">#define  SDIO_DCTRL_DBLOCKSIZE_1             ((uint16_t)0x0020)            /*!&lt; Bit 1 */</div><div class="line">#define  SDIO_DCTRL_DBLOCKSIZE_2             ((uint16_t)0x0040)            /*!&lt; Bit 2 */</div><div class="line">#define  SDIO_DCTRL_DBLOCKSIZE_3             ((uint16_t)0x0080)            /*!&lt; Bit 3 */</div><div class="line"></div><div class="line">#define  SDIO_DCTRL_RWSTART                  ((uint16_t)0x0100)            /*!&lt; Read wait start */</div><div class="line">#define  SDIO_DCTRL_RWSTOP                   ((uint16_t)0x0200)            /*!&lt; Read wait stop */</div><div class="line">#define  SDIO_DCTRL_RWMOD                    ((uint16_t)0x0400)            /*!&lt; Read wait mode */</div><div class="line">#define  SDIO_DCTRL_SDIOEN                   ((uint16_t)0x0800)            /*!&lt; SD I/O enable functions */</div><div class="line"></div><div class="line">/******************  Bit definition for SDIO_DCOUNT register  *****************/</div><div class="line">#define  SDIO_DCOUNT_DATACOUNT               ((uint32_t)0x01FFFFFF)        /*!&lt; Data count value */</div><div class="line"></div><div class="line">/******************  Bit definition for SDIO_STA register  ********************/</div><div class="line">#define  SDIO_STA_CCRCFAIL                   ((uint32_t)0x00000001)        /*!&lt; Command response received (CRC check failed) */</div><div class="line">#define  SDIO_STA_DCRCFAIL                   ((uint32_t)0x00000002)        /*!&lt; Data block sent/received (CRC check failed) */</div><div class="line">#define  SDIO_STA_CTIMEOUT                   ((uint32_t)0x00000004)        /*!&lt; Command response timeout */</div><div class="line">#define  SDIO_STA_DTIMEOUT                   ((uint32_t)0x00000008)        /*!&lt; Data timeout */</div><div class="line">#define  SDIO_STA_TXUNDERR                   ((uint32_t)0x00000010)        /*!&lt; Transmit FIFO underrun error */</div><div class="line">#define  SDIO_STA_RXOVERR                    ((uint32_t)0x00000020)        /*!&lt; Received FIFO overrun error */</div><div class="line">#define  SDIO_STA_CMDREND                    ((uint32_t)0x00000040)        /*!&lt; Command response received (CRC check passed) */</div><div class="line">#define  SDIO_STA_CMDSENT                    ((uint32_t)0x00000080)        /*!&lt; Command sent (no response required) */</div><div class="line">#define  SDIO_STA_DATAEND                    ((uint32_t)0x00000100)        /*!&lt; Data end (data counter, SDIDCOUNT, is zero) */</div><div class="line">#define  SDIO_STA_STBITERR                   ((uint32_t)0x00000200)        /*!&lt; Start bit not detected on all data signals in wide bus mode */</div><div class="line">#define  SDIO_STA_DBCKEND                    ((uint32_t)0x00000400)        /*!&lt; Data block sent/received (CRC check passed) */</div><div class="line">#define  SDIO_STA_CMDACT                     ((uint32_t)0x00000800)        /*!&lt; Command transfer in progress */</div><div class="line">#define  SDIO_STA_TXACT                      ((uint32_t)0x00001000)        /*!&lt; Data transmit in progress */</div><div class="line">#define  SDIO_STA_RXACT                      ((uint32_t)0x00002000)        /*!&lt; Data receive in progress */</div><div class="line">#define  SDIO_STA_TXFIFOHE                   ((uint32_t)0x00004000)        /*!&lt; Transmit FIFO Half Empty: at least 8 words can be written into the FIFO */</div><div class="line">#define  SDIO_STA_RXFIFOHF                   ((uint32_t)0x00008000)        /*!&lt; Receive FIFO Half Full: there are at least 8 words in the FIFO */</div><div class="line">#define  SDIO_STA_TXFIFOF                    ((uint32_t)0x00010000)        /*!&lt; Transmit FIFO full */</div><div class="line">#define  SDIO_STA_RXFIFOF                    ((uint32_t)0x00020000)        /*!&lt; Receive FIFO full */</div><div class="line">#define  SDIO_STA_TXFIFOE                    ((uint32_t)0x00040000)        /*!&lt; Transmit FIFO empty */</div><div class="line">#define  SDIO_STA_RXFIFOE                    ((uint32_t)0x00080000)        /*!&lt; Receive FIFO empty */</div><div class="line">#define  SDIO_STA_TXDAVL                     ((uint32_t)0x00100000)        /*!&lt; Data available in transmit FIFO */</div><div class="line">#define  SDIO_STA_RXDAVL                     ((uint32_t)0x00200000)        /*!&lt; Data available in receive FIFO */</div><div class="line">#define  SDIO_STA_SDIOIT                     ((uint32_t)0x00400000)        /*!&lt; SDIO interrupt received */</div><div class="line">#define  SDIO_STA_CEATAEND                   ((uint32_t)0x00800000)        /*!&lt; CE-ATA command completion signal received for CMD61 */</div><div class="line"></div><div class="line">/*******************  Bit definition for SDIO_ICR register  *******************/</div><div class="line">#define  SDIO_ICR_CCRCFAILC                  ((uint32_t)0x00000001)        /*!&lt; CCRCFAIL flag clear bit */</div><div class="line">#define  SDIO_ICR_DCRCFAILC                  ((uint32_t)0x00000002)        /*!&lt; DCRCFAIL flag clear bit */</div><div class="line">#define  SDIO_ICR_CTIMEOUTC                  ((uint32_t)0x00000004)        /*!&lt; CTIMEOUT flag clear bit */</div><div class="line">#define  SDIO_ICR_DTIMEOUTC                  ((uint32_t)0x00000008)        /*!&lt; DTIMEOUT flag clear bit */</div><div class="line">#define  SDIO_ICR_TXUNDERRC                  ((uint32_t)0x00000010)        /*!&lt; TXUNDERR flag clear bit */</div><div class="line">#define  SDIO_ICR_RXOVERRC                   ((uint32_t)0x00000020)        /*!&lt; RXOVERR flag clear bit */</div><div class="line">#define  SDIO_ICR_CMDRENDC                   ((uint32_t)0x00000040)        /*!&lt; CMDREND flag clear bit */</div><div class="line">#define  SDIO_ICR_CMDSENTC                   ((uint32_t)0x00000080)        /*!&lt; CMDSENT flag clear bit */</div><div class="line">#define  SDIO_ICR_DATAENDC                   ((uint32_t)0x00000100)        /*!&lt; DATAEND flag clear bit */</div><div class="line">#define  SDIO_ICR_STBITERRC                  ((uint32_t)0x00000200)        /*!&lt; STBITERR flag clear bit */</div><div class="line">#define  SDIO_ICR_DBCKENDC                   ((uint32_t)0x00000400)        /*!&lt; DBCKEND flag clear bit */</div><div class="line">#define  SDIO_ICR_SDIOITC                    ((uint32_t)0x00400000)        /*!&lt; SDIOIT flag clear bit */</div><div class="line">#define  SDIO_ICR_CEATAENDC                  ((uint32_t)0x00800000)        /*!&lt; CEATAEND flag clear bit */</div><div class="line"></div><div class="line">/******************  Bit definition for SDIO_MASK register  *******************/</div><div class="line">#define  SDIO_MASK_CCRCFAILIE                ((uint32_t)0x00000001)        /*!&lt; Command CRC Fail Interrupt Enable */</div><div class="line">#define  SDIO_MASK_DCRCFAILIE                ((uint32_t)0x00000002)        /*!&lt; Data CRC Fail Interrupt Enable */</div><div class="line">#define  SDIO_MASK_CTIMEOUTIE                ((uint32_t)0x00000004)        /*!&lt; Command TimeOut Interrupt Enable */</div><div class="line">#define  SDIO_MASK_DTIMEOUTIE                ((uint32_t)0x00000008)        /*!&lt; Data TimeOut Interrupt Enable */</div><div class="line">#define  SDIO_MASK_TXUNDERRIE                ((uint32_t)0x00000010)        /*!&lt; Tx FIFO UnderRun Error Interrupt Enable */</div><div class="line">#define  SDIO_MASK_RXOVERRIE                 ((uint32_t)0x00000020)        /*!&lt; Rx FIFO OverRun Error Interrupt Enable */</div><div class="line">#define  SDIO_MASK_CMDRENDIE                 ((uint32_t)0x00000040)        /*!&lt; Command Response Received Interrupt Enable */</div><div class="line">#define  SDIO_MASK_CMDSENTIE                 ((uint32_t)0x00000080)        /*!&lt; Command Sent Interrupt Enable */</div><div class="line">#define  SDIO_MASK_DATAENDIE                 ((uint32_t)0x00000100)        /*!&lt; Data End Interrupt Enable */</div><div class="line">#define  SDIO_MASK_STBITERRIE                ((uint32_t)0x00000200)        /*!&lt; Start Bit Error Interrupt Enable */</div><div class="line">#define  SDIO_MASK_DBCKENDIE                 ((uint32_t)0x00000400)        /*!&lt; Data Block End Interrupt Enable */</div><div class="line">#define  SDIO_MASK_CMDACTIE                  ((uint32_t)0x00000800)        /*!&lt; Command Acting Interrupt Enable */</div><div class="line">#define  SDIO_MASK_TXACTIE                   ((uint32_t)0x00001000)        /*!&lt; Data Transmit Acting Interrupt Enable */</div><div class="line">#define  SDIO_MASK_RXACTIE                   ((uint32_t)0x00002000)        /*!&lt; Data receive acting interrupt enabled */</div><div class="line">#define  SDIO_MASK_TXFIFOHEIE                ((uint32_t)0x00004000)        /*!&lt; Tx FIFO Half Empty interrupt Enable */</div><div class="line">#define  SDIO_MASK_RXFIFOHFIE                ((uint32_t)0x00008000)        /*!&lt; Rx FIFO Half Full interrupt Enable */</div><div class="line">#define  SDIO_MASK_TXFIFOFIE                 ((uint32_t)0x00010000)        /*!&lt; Tx FIFO Full interrupt Enable */</div><div class="line">#define  SDIO_MASK_RXFIFOFIE                 ((uint32_t)0x00020000)        /*!&lt; Rx FIFO Full interrupt Enable */</div><div class="line">#define  SDIO_MASK_TXFIFOEIE                 ((uint32_t)0x00040000)        /*!&lt; Tx FIFO Empty interrupt Enable */</div><div class="line">#define  SDIO_MASK_RXFIFOEIE                 ((uint32_t)0x00080000)        /*!&lt; Rx FIFO Empty interrupt Enable */</div><div class="line">#define  SDIO_MASK_TXDAVLIE                  ((uint32_t)0x00100000)        /*!&lt; Data available in Tx FIFO interrupt Enable */</div><div class="line">#define  SDIO_MASK_RXDAVLIE                  ((uint32_t)0x00200000)        /*!&lt; Data available in Rx FIFO interrupt Enable */</div><div class="line">#define  SDIO_MASK_SDIOITIE                  ((uint32_t)0x00400000)        /*!&lt; SDIO Mode Interrupt Received interrupt Enable */</div><div class="line">#define  SDIO_MASK_CEATAENDIE                ((uint32_t)0x00800000)        /*!&lt; CE-ATA command completion signal received Interrupt Enable */</div><div class="line"></div><div class="line">/*****************  Bit definition for SDIO_FIFOCNT register  *****************/</div><div class="line">#define  SDIO_FIFOCNT_FIFOCOUNT              ((uint32_t)0x00FFFFFF)        /*!&lt; Remaining number of words to be written to or read from the FIFO */</div><div class="line"></div><div class="line">/******************  Bit definition for SDIO_FIFO register  *******************/</div><div class="line">#define  SDIO_FIFO_FIFODATA                  ((uint32_t)0xFFFFFFFF)        /*!&lt; Receive and transmit FIFO data */</div><div class="line"></div><div class="line">/******************************************************************************/</div><div class="line">/*                                                                            */</div><div class="line">/*                                   USB Device FS                            */</div><div class="line">/*                                                                            */</div><div class="line">/******************************************************************************/</div><div class="line"></div><div class="line">/*!&lt; Endpoint-specific registers */</div><div class="line">/*******************  Bit definition for USB_EP0R register  *******************/</div><div class="line">#define  USB_EP0R_EA                         ((uint16_t)0x000F)            /*!&lt; Endpoint Address */</div><div class="line"></div><div class="line">#define  USB_EP0R_STAT_TX                    ((uint16_t)0x0030)            /*!&lt; STAT_TX[1:0] bits (Status bits, for transmission transfers) */</div><div class="line">#define  USB_EP0R_STAT_TX_0                  ((uint16_t)0x0010)            /*!&lt; Bit 0 */</div><div class="line">#define  USB_EP0R_STAT_TX_1                  ((uint16_t)0x0020)            /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  USB_EP0R_DTOG_TX                    ((uint16_t)0x0040)            /*!&lt; Data Toggle, for transmission transfers */</div><div class="line">#define  USB_EP0R_CTR_TX                     ((uint16_t)0x0080)            /*!&lt; Correct Transfer for transmission */</div><div class="line">#define  USB_EP0R_EP_KIND                    ((uint16_t)0x0100)            /*!&lt; Endpoint Kind */</div><div class="line"></div><div class="line">#define  USB_EP0R_EP_TYPE                    ((uint16_t)0x0600)            /*!&lt; EP_TYPE[1:0] bits (Endpoint type) */</div><div class="line">#define  USB_EP0R_EP_TYPE_0                  ((uint16_t)0x0200)            /*!&lt; Bit 0 */</div><div class="line">#define  USB_EP0R_EP_TYPE_1                  ((uint16_t)0x0400)            /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  USB_EP0R_SETUP                      ((uint16_t)0x0800)            /*!&lt; Setup transaction completed */</div><div class="line"></div><div class="line">#define  USB_EP0R_STAT_RX                    ((uint16_t)0x3000)            /*!&lt; STAT_RX[1:0] bits (Status bits, for reception transfers) */</div><div class="line">#define  USB_EP0R_STAT_RX_0                  ((uint16_t)0x1000)            /*!&lt; Bit 0 */</div><div class="line">#define  USB_EP0R_STAT_RX_1                  ((uint16_t)0x2000)            /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  USB_EP0R_DTOG_RX                    ((uint16_t)0x4000)            /*!&lt; Data Toggle, for reception transfers */</div><div class="line">#define  USB_EP0R_CTR_RX                     ((uint16_t)0x8000)            /*!&lt; Correct Transfer for reception */</div><div class="line"></div><div class="line">/*******************  Bit definition for USB_EP1R register  *******************/</div><div class="line">#define  USB_EP1R_EA                         ((uint16_t)0x000F)            /*!&lt; Endpoint Address */</div><div class="line"></div><div class="line">#define  USB_EP1R_STAT_TX                    ((uint16_t)0x0030)            /*!&lt; STAT_TX[1:0] bits (Status bits, for transmission transfers) */</div><div class="line">#define  USB_EP1R_STAT_TX_0                  ((uint16_t)0x0010)            /*!&lt; Bit 0 */</div><div class="line">#define  USB_EP1R_STAT_TX_1                  ((uint16_t)0x0020)            /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  USB_EP1R_DTOG_TX                    ((uint16_t)0x0040)            /*!&lt; Data Toggle, for transmission transfers */</div><div class="line">#define  USB_EP1R_CTR_TX                     ((uint16_t)0x0080)            /*!&lt; Correct Transfer for transmission */</div><div class="line">#define  USB_EP1R_EP_KIND                    ((uint16_t)0x0100)            /*!&lt; Endpoint Kind */</div><div class="line"></div><div class="line">#define  USB_EP1R_EP_TYPE                    ((uint16_t)0x0600)            /*!&lt; EP_TYPE[1:0] bits (Endpoint type) */</div><div class="line">#define  USB_EP1R_EP_TYPE_0                  ((uint16_t)0x0200)            /*!&lt; Bit 0 */</div><div class="line">#define  USB_EP1R_EP_TYPE_1                  ((uint16_t)0x0400)            /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  USB_EP1R_SETUP                      ((uint16_t)0x0800)            /*!&lt; Setup transaction completed */</div><div class="line"></div><div class="line">#define  USB_EP1R_STAT_RX                    ((uint16_t)0x3000)            /*!&lt; STAT_RX[1:0] bits (Status bits, for reception transfers) */</div><div class="line">#define  USB_EP1R_STAT_RX_0                  ((uint16_t)0x1000)            /*!&lt; Bit 0 */</div><div class="line">#define  USB_EP1R_STAT_RX_1                  ((uint16_t)0x2000)            /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  USB_EP1R_DTOG_RX                    ((uint16_t)0x4000)            /*!&lt; Data Toggle, for reception transfers */</div><div class="line">#define  USB_EP1R_CTR_RX                     ((uint16_t)0x8000)            /*!&lt; Correct Transfer for reception */</div><div class="line"></div><div class="line">/*******************  Bit definition for USB_EP2R register  *******************/</div><div class="line">#define  USB_EP2R_EA                         ((uint16_t)0x000F)            /*!&lt; Endpoint Address */</div><div class="line"></div><div class="line">#define  USB_EP2R_STAT_TX                    ((uint16_t)0x0030)            /*!&lt; STAT_TX[1:0] bits (Status bits, for transmission transfers) */</div><div class="line">#define  USB_EP2R_STAT_TX_0                  ((uint16_t)0x0010)            /*!&lt; Bit 0 */</div><div class="line">#define  USB_EP2R_STAT_TX_1                  ((uint16_t)0x0020)            /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  USB_EP2R_DTOG_TX                    ((uint16_t)0x0040)            /*!&lt; Data Toggle, for transmission transfers */</div><div class="line">#define  USB_EP2R_CTR_TX                     ((uint16_t)0x0080)            /*!&lt; Correct Transfer for transmission */</div><div class="line">#define  USB_EP2R_EP_KIND                    ((uint16_t)0x0100)            /*!&lt; Endpoint Kind */</div><div class="line"></div><div class="line">#define  USB_EP2R_EP_TYPE                    ((uint16_t)0x0600)            /*!&lt; EP_TYPE[1:0] bits (Endpoint type) */</div><div class="line">#define  USB_EP2R_EP_TYPE_0                  ((uint16_t)0x0200)            /*!&lt; Bit 0 */</div><div class="line">#define  USB_EP2R_EP_TYPE_1                  ((uint16_t)0x0400)            /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  USB_EP2R_SETUP                      ((uint16_t)0x0800)            /*!&lt; Setup transaction completed */</div><div class="line"></div><div class="line">#define  USB_EP2R_STAT_RX                    ((uint16_t)0x3000)            /*!&lt; STAT_RX[1:0] bits (Status bits, for reception transfers) */</div><div class="line">#define  USB_EP2R_STAT_RX_0                  ((uint16_t)0x1000)            /*!&lt; Bit 0 */</div><div class="line">#define  USB_EP2R_STAT_RX_1                  ((uint16_t)0x2000)            /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  USB_EP2R_DTOG_RX                    ((uint16_t)0x4000)            /*!&lt; Data Toggle, for reception transfers */</div><div class="line">#define  USB_EP2R_CTR_RX                     ((uint16_t)0x8000)            /*!&lt; Correct Transfer for reception */</div><div class="line"></div><div class="line">/*******************  Bit definition for USB_EP3R register  *******************/</div><div class="line">#define  USB_EP3R_EA                         ((uint16_t)0x000F)            /*!&lt; Endpoint Address */</div><div class="line"></div><div class="line">#define  USB_EP3R_STAT_TX                    ((uint16_t)0x0030)            /*!&lt; STAT_TX[1:0] bits (Status bits, for transmission transfers) */</div><div class="line">#define  USB_EP3R_STAT_TX_0                  ((uint16_t)0x0010)            /*!&lt; Bit 0 */</div><div class="line">#define  USB_EP3R_STAT_TX_1                  ((uint16_t)0x0020)            /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  USB_EP3R_DTOG_TX                    ((uint16_t)0x0040)            /*!&lt; Data Toggle, for transmission transfers */</div><div class="line">#define  USB_EP3R_CTR_TX                     ((uint16_t)0x0080)            /*!&lt; Correct Transfer for transmission */</div><div class="line">#define  USB_EP3R_EP_KIND                    ((uint16_t)0x0100)            /*!&lt; Endpoint Kind */</div><div class="line"></div><div class="line">#define  USB_EP3R_EP_TYPE                    ((uint16_t)0x0600)            /*!&lt; EP_TYPE[1:0] bits (Endpoint type) */</div><div class="line">#define  USB_EP3R_EP_TYPE_0                  ((uint16_t)0x0200)            /*!&lt; Bit 0 */</div><div class="line">#define  USB_EP3R_EP_TYPE_1                  ((uint16_t)0x0400)            /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  USB_EP3R_SETUP                      ((uint16_t)0x0800)            /*!&lt; Setup transaction completed */</div><div class="line"></div><div class="line">#define  USB_EP3R_STAT_RX                    ((uint16_t)0x3000)            /*!&lt; STAT_RX[1:0] bits (Status bits, for reception transfers) */</div><div class="line">#define  USB_EP3R_STAT_RX_0                  ((uint16_t)0x1000)            /*!&lt; Bit 0 */</div><div class="line">#define  USB_EP3R_STAT_RX_1                  ((uint16_t)0x2000)            /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  USB_EP3R_DTOG_RX                    ((uint16_t)0x4000)            /*!&lt; Data Toggle, for reception transfers */</div><div class="line">#define  USB_EP3R_CTR_RX                     ((uint16_t)0x8000)            /*!&lt; Correct Transfer for reception */</div><div class="line"></div><div class="line">/*******************  Bit definition for USB_EP4R register  *******************/</div><div class="line">#define  USB_EP4R_EA                         ((uint16_t)0x000F)            /*!&lt; Endpoint Address */</div><div class="line"></div><div class="line">#define  USB_EP4R_STAT_TX                    ((uint16_t)0x0030)            /*!&lt; STAT_TX[1:0] bits (Status bits, for transmission transfers) */</div><div class="line">#define  USB_EP4R_STAT_TX_0                  ((uint16_t)0x0010)            /*!&lt; Bit 0 */</div><div class="line">#define  USB_EP4R_STAT_TX_1                  ((uint16_t)0x0020)            /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  USB_EP4R_DTOG_TX                    ((uint16_t)0x0040)            /*!&lt; Data Toggle, for transmission transfers */</div><div class="line">#define  USB_EP4R_CTR_TX                     ((uint16_t)0x0080)            /*!&lt; Correct Transfer for transmission */</div><div class="line">#define  USB_EP4R_EP_KIND                    ((uint16_t)0x0100)            /*!&lt; Endpoint Kind */</div><div class="line"></div><div class="line">#define  USB_EP4R_EP_TYPE                    ((uint16_t)0x0600)            /*!&lt; EP_TYPE[1:0] bits (Endpoint type) */</div><div class="line">#define  USB_EP4R_EP_TYPE_0                  ((uint16_t)0x0200)            /*!&lt; Bit 0 */</div><div class="line">#define  USB_EP4R_EP_TYPE_1                  ((uint16_t)0x0400)            /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  USB_EP4R_SETUP                      ((uint16_t)0x0800)            /*!&lt; Setup transaction completed */</div><div class="line"></div><div class="line">#define  USB_EP4R_STAT_RX                    ((uint16_t)0x3000)            /*!&lt; STAT_RX[1:0] bits (Status bits, for reception transfers) */</div><div class="line">#define  USB_EP4R_STAT_RX_0                  ((uint16_t)0x1000)            /*!&lt; Bit 0 */</div><div class="line">#define  USB_EP4R_STAT_RX_1                  ((uint16_t)0x2000)            /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  USB_EP4R_DTOG_RX                    ((uint16_t)0x4000)            /*!&lt; Data Toggle, for reception transfers */</div><div class="line">#define  USB_EP4R_CTR_RX                     ((uint16_t)0x8000)            /*!&lt; Correct Transfer for reception */</div><div class="line"></div><div class="line">/*******************  Bit definition for USB_EP5R register  *******************/</div><div class="line">#define  USB_EP5R_EA                         ((uint16_t)0x000F)            /*!&lt; Endpoint Address */</div><div class="line"></div><div class="line">#define  USB_EP5R_STAT_TX                    ((uint16_t)0x0030)            /*!&lt; STAT_TX[1:0] bits (Status bits, for transmission transfers) */</div><div class="line">#define  USB_EP5R_STAT_TX_0                  ((uint16_t)0x0010)            /*!&lt; Bit 0 */</div><div class="line">#define  USB_EP5R_STAT_TX_1                  ((uint16_t)0x0020)            /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  USB_EP5R_DTOG_TX                    ((uint16_t)0x0040)            /*!&lt; Data Toggle, for transmission transfers */</div><div class="line">#define  USB_EP5R_CTR_TX                     ((uint16_t)0x0080)            /*!&lt; Correct Transfer for transmission */</div><div class="line">#define  USB_EP5R_EP_KIND                    ((uint16_t)0x0100)            /*!&lt; Endpoint Kind */</div><div class="line"></div><div class="line">#define  USB_EP5R_EP_TYPE                    ((uint16_t)0x0600)            /*!&lt; EP_TYPE[1:0] bits (Endpoint type) */</div><div class="line">#define  USB_EP5R_EP_TYPE_0                  ((uint16_t)0x0200)            /*!&lt; Bit 0 */</div><div class="line">#define  USB_EP5R_EP_TYPE_1                  ((uint16_t)0x0400)            /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  USB_EP5R_SETUP                      ((uint16_t)0x0800)            /*!&lt; Setup transaction completed */</div><div class="line"></div><div class="line">#define  USB_EP5R_STAT_RX                    ((uint16_t)0x3000)            /*!&lt; STAT_RX[1:0] bits (Status bits, for reception transfers) */</div><div class="line">#define  USB_EP5R_STAT_RX_0                  ((uint16_t)0x1000)            /*!&lt; Bit 0 */</div><div class="line">#define  USB_EP5R_STAT_RX_1                  ((uint16_t)0x2000)            /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  USB_EP5R_DTOG_RX                    ((uint16_t)0x4000)            /*!&lt; Data Toggle, for reception transfers */</div><div class="line">#define  USB_EP5R_CTR_RX                     ((uint16_t)0x8000)            /*!&lt; Correct Transfer for reception */</div><div class="line"></div><div class="line">/*******************  Bit definition for USB_EP6R register  *******************/</div><div class="line">#define  USB_EP6R_EA                         ((uint16_t)0x000F)            /*!&lt; Endpoint Address */</div><div class="line"></div><div class="line">#define  USB_EP6R_STAT_TX                    ((uint16_t)0x0030)            /*!&lt; STAT_TX[1:0] bits (Status bits, for transmission transfers) */</div><div class="line">#define  USB_EP6R_STAT_TX_0                  ((uint16_t)0x0010)            /*!&lt; Bit 0 */</div><div class="line">#define  USB_EP6R_STAT_TX_1                  ((uint16_t)0x0020)            /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  USB_EP6R_DTOG_TX                    ((uint16_t)0x0040)            /*!&lt; Data Toggle, for transmission transfers */</div><div class="line">#define  USB_EP6R_CTR_TX                     ((uint16_t)0x0080)            /*!&lt; Correct Transfer for transmission */</div><div class="line">#define  USB_EP6R_EP_KIND                    ((uint16_t)0x0100)            /*!&lt; Endpoint Kind */</div><div class="line"></div><div class="line">#define  USB_EP6R_EP_TYPE                    ((uint16_t)0x0600)            /*!&lt; EP_TYPE[1:0] bits (Endpoint type) */</div><div class="line">#define  USB_EP6R_EP_TYPE_0                  ((uint16_t)0x0200)            /*!&lt; Bit 0 */</div><div class="line">#define  USB_EP6R_EP_TYPE_1                  ((uint16_t)0x0400)            /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  USB_EP6R_SETUP                      ((uint16_t)0x0800)            /*!&lt; Setup transaction completed */</div><div class="line"></div><div class="line">#define  USB_EP6R_STAT_RX                    ((uint16_t)0x3000)            /*!&lt; STAT_RX[1:0] bits (Status bits, for reception transfers) */</div><div class="line">#define  USB_EP6R_STAT_RX_0                  ((uint16_t)0x1000)            /*!&lt; Bit 0 */</div><div class="line">#define  USB_EP6R_STAT_RX_1                  ((uint16_t)0x2000)            /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  USB_EP6R_DTOG_RX                    ((uint16_t)0x4000)            /*!&lt; Data Toggle, for reception transfers */</div><div class="line">#define  USB_EP6R_CTR_RX                     ((uint16_t)0x8000)            /*!&lt; Correct Transfer for reception */</div><div class="line"></div><div class="line">/*******************  Bit definition for USB_EP7R register  *******************/</div><div class="line">#define  USB_EP7R_EA                         ((uint16_t)0x000F)            /*!&lt; Endpoint Address */</div><div class="line"></div><div class="line">#define  USB_EP7R_STAT_TX                    ((uint16_t)0x0030)            /*!&lt; STAT_TX[1:0] bits (Status bits, for transmission transfers) */</div><div class="line">#define  USB_EP7R_STAT_TX_0                  ((uint16_t)0x0010)            /*!&lt; Bit 0 */</div><div class="line">#define  USB_EP7R_STAT_TX_1                  ((uint16_t)0x0020)            /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  USB_EP7R_DTOG_TX                    ((uint16_t)0x0040)            /*!&lt; Data Toggle, for transmission transfers */</div><div class="line">#define  USB_EP7R_CTR_TX                     ((uint16_t)0x0080)            /*!&lt; Correct Transfer for transmission */</div><div class="line">#define  USB_EP7R_EP_KIND                    ((uint16_t)0x0100)            /*!&lt; Endpoint Kind */</div><div class="line"></div><div class="line">#define  USB_EP7R_EP_TYPE                    ((uint16_t)0x0600)            /*!&lt; EP_TYPE[1:0] bits (Endpoint type) */</div><div class="line">#define  USB_EP7R_EP_TYPE_0                  ((uint16_t)0x0200)            /*!&lt; Bit 0 */</div><div class="line">#define  USB_EP7R_EP_TYPE_1                  ((uint16_t)0x0400)            /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  USB_EP7R_SETUP                      ((uint16_t)0x0800)            /*!&lt; Setup transaction completed */</div><div class="line"></div><div class="line">#define  USB_EP7R_STAT_RX                    ((uint16_t)0x3000)            /*!&lt; STAT_RX[1:0] bits (Status bits, for reception transfers) */</div><div class="line">#define  USB_EP7R_STAT_RX_0                  ((uint16_t)0x1000)            /*!&lt; Bit 0 */</div><div class="line">#define  USB_EP7R_STAT_RX_1                  ((uint16_t)0x2000)            /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  USB_EP7R_DTOG_RX                    ((uint16_t)0x4000)            /*!&lt; Data Toggle, for reception transfers */</div><div class="line">#define  USB_EP7R_CTR_RX                     ((uint16_t)0x8000)            /*!&lt; Correct Transfer for reception */</div><div class="line"></div><div class="line">/*!&lt; Common registers */</div><div class="line">/*******************  Bit definition for USB_CNTR register  *******************/</div><div class="line">#define  USB_CNTR_FRES                       ((uint16_t)0x0001)            /*!&lt; Force USB Reset */</div><div class="line">#define  USB_CNTR_PDWN                       ((uint16_t)0x0002)            /*!&lt; Power down */</div><div class="line">#define  USB_CNTR_LP_MODE                    ((uint16_t)0x0004)            /*!&lt; Low-power mode */</div><div class="line">#define  USB_CNTR_FSUSP                      ((uint16_t)0x0008)            /*!&lt; Force suspend */</div><div class="line">#define  USB_CNTR_RESUME                     ((uint16_t)0x0010)            /*!&lt; Resume request */</div><div class="line">#define  USB_CNTR_ESOFM                      ((uint16_t)0x0100)            /*!&lt; Expected Start Of Frame Interrupt Mask */</div><div class="line">#define  USB_CNTR_SOFM                       ((uint16_t)0x0200)            /*!&lt; Start Of Frame Interrupt Mask */</div><div class="line">#define  USB_CNTR_RESETM                     ((uint16_t)0x0400)            /*!&lt; RESET Interrupt Mask */</div><div class="line">#define  USB_CNTR_SUSPM                      ((uint16_t)0x0800)            /*!&lt; Suspend mode Interrupt Mask */</div><div class="line">#define  USB_CNTR_WKUPM                      ((uint16_t)0x1000)            /*!&lt; Wakeup Interrupt Mask */</div><div class="line">#define  USB_CNTR_ERRM                       ((uint16_t)0x2000)            /*!&lt; Error Interrupt Mask */</div><div class="line">#define  USB_CNTR_PMAOVRM                    ((uint16_t)0x4000)            /*!&lt; Packet Memory Area Over / Underrun Interrupt Mask */</div><div class="line">#define  USB_CNTR_CTRM                       ((uint16_t)0x8000)            /*!&lt; Correct Transfer Interrupt Mask */</div><div class="line"></div><div class="line">/*******************  Bit definition for USB_ISTR register  *******************/</div><div class="line">#define  USB_ISTR_EP_ID                      ((uint16_t)0x000F)            /*!&lt; Endpoint Identifier */</div><div class="line">#define  USB_ISTR_DIR                        ((uint16_t)0x0010)            /*!&lt; Direction of transaction */</div><div class="line">#define  USB_ISTR_ESOF                       ((uint16_t)0x0100)            /*!&lt; Expected Start Of Frame */</div><div class="line">#define  USB_ISTR_SOF                        ((uint16_t)0x0200)            /*!&lt; Start Of Frame */</div><div class="line">#define  USB_ISTR_RESET                      ((uint16_t)0x0400)            /*!&lt; USB RESET request */</div><div class="line">#define  USB_ISTR_SUSP                       ((uint16_t)0x0800)            /*!&lt; Suspend mode request */</div><div class="line">#define  USB_ISTR_WKUP                       ((uint16_t)0x1000)            /*!&lt; Wake up */</div><div class="line">#define  USB_ISTR_ERR                        ((uint16_t)0x2000)            /*!&lt; Error */</div><div class="line">#define  USB_ISTR_PMAOVR                     ((uint16_t)0x4000)            /*!&lt; Packet Memory Area Over / Underrun */</div><div class="line">#define  USB_ISTR_CTR                        ((uint16_t)0x8000)            /*!&lt; Correct Transfer */</div><div class="line"></div><div class="line">/*******************  Bit definition for USB_FNR register  ********************/</div><div class="line">#define  USB_FNR_FN                          ((uint16_t)0x07FF)            /*!&lt; Frame Number */</div><div class="line">#define  USB_FNR_LSOF                        ((uint16_t)0x1800)            /*!&lt; Lost SOF */</div><div class="line">#define  USB_FNR_LCK                         ((uint16_t)0x2000)            /*!&lt; Locked */</div><div class="line">#define  USB_FNR_RXDM                        ((uint16_t)0x4000)            /*!&lt; Receive Data - Line Status */</div><div class="line">#define  USB_FNR_RXDP                        ((uint16_t)0x8000)            /*!&lt; Receive Data + Line Status */</div><div class="line"></div><div class="line">/******************  Bit definition for USB_DADDR register  *******************/</div><div class="line">#define  USB_DADDR_ADD                       ((uint8_t)0x7F)               /*!&lt; ADD[6:0] bits (Device Address) */</div><div class="line">#define  USB_DADDR_ADD0                      ((uint8_t)0x01)               /*!&lt; Bit 0 */</div><div class="line">#define  USB_DADDR_ADD1                      ((uint8_t)0x02)               /*!&lt; Bit 1 */</div><div class="line">#define  USB_DADDR_ADD2                      ((uint8_t)0x04)               /*!&lt; Bit 2 */</div><div class="line">#define  USB_DADDR_ADD3                      ((uint8_t)0x08)               /*!&lt; Bit 3 */</div><div class="line">#define  USB_DADDR_ADD4                      ((uint8_t)0x10)               /*!&lt; Bit 4 */</div><div class="line">#define  USB_DADDR_ADD5                      ((uint8_t)0x20)               /*!&lt; Bit 5 */</div><div class="line">#define  USB_DADDR_ADD6                      ((uint8_t)0x40)               /*!&lt; Bit 6 */</div><div class="line"></div><div class="line">#define  USB_DADDR_EF                        ((uint8_t)0x80)               /*!&lt; Enable Function */</div><div class="line"></div><div class="line">/******************  Bit definition for USB_BTABLE register  ******************/    </div><div class="line">#define  USB_BTABLE_BTABLE                   ((uint16_t)0xFFF8)            /*!&lt; Buffer Table */</div><div class="line"></div><div class="line">/*!&lt; Buffer descriptor table */</div><div class="line">/*****************  Bit definition for USB_ADDR0_TX register  *****************/</div><div class="line">#define  USB_ADDR0_TX_ADDR0_TX               ((uint16_t)0xFFFE)            /*!&lt; Transmission Buffer Address 0 */</div><div class="line"></div><div class="line">/*****************  Bit definition for USB_ADDR1_TX register  *****************/</div><div class="line">#define  USB_ADDR1_TX_ADDR1_TX               ((uint16_t)0xFFFE)            /*!&lt; Transmission Buffer Address 1 */</div><div class="line"></div><div class="line">/*****************  Bit definition for USB_ADDR2_TX register  *****************/</div><div class="line">#define  USB_ADDR2_TX_ADDR2_TX               ((uint16_t)0xFFFE)            /*!&lt; Transmission Buffer Address 2 */</div><div class="line"></div><div class="line">/*****************  Bit definition for USB_ADDR3_TX register  *****************/</div><div class="line">#define  USB_ADDR3_TX_ADDR3_TX               ((uint16_t)0xFFFE)            /*!&lt; Transmission Buffer Address 3 */</div><div class="line"></div><div class="line">/*****************  Bit definition for USB_ADDR4_TX register  *****************/</div><div class="line">#define  USB_ADDR4_TX_ADDR4_TX               ((uint16_t)0xFFFE)            /*!&lt; Transmission Buffer Address 4 */</div><div class="line"></div><div class="line">/*****************  Bit definition for USB_ADDR5_TX register  *****************/</div><div class="line">#define  USB_ADDR5_TX_ADDR5_TX               ((uint16_t)0xFFFE)            /*!&lt; Transmission Buffer Address 5 */</div><div class="line"></div><div class="line">/*****************  Bit definition for USB_ADDR6_TX register  *****************/</div><div class="line">#define  USB_ADDR6_TX_ADDR6_TX               ((uint16_t)0xFFFE)            /*!&lt; Transmission Buffer Address 6 */</div><div class="line"></div><div class="line">/*****************  Bit definition for USB_ADDR7_TX register  *****************/</div><div class="line">#define  USB_ADDR7_TX_ADDR7_TX               ((uint16_t)0xFFFE)            /*!&lt; Transmission Buffer Address 7 */</div><div class="line"></div><div class="line">/*----------------------------------------------------------------------------*/</div><div class="line"></div><div class="line">/*****************  Bit definition for USB_COUNT0_TX register  ****************/</div><div class="line">#define  USB_COUNT0_TX_COUNT0_TX             ((uint16_t)0x03FF)            /*!&lt; Transmission Byte Count 0 */</div><div class="line"></div><div class="line">/*****************  Bit definition for USB_COUNT1_TX register  ****************/</div><div class="line">#define  USB_COUNT1_TX_COUNT1_TX             ((uint16_t)0x03FF)            /*!&lt; Transmission Byte Count 1 */</div><div class="line"></div><div class="line">/*****************  Bit definition for USB_COUNT2_TX register  ****************/</div><div class="line">#define  USB_COUNT2_TX_COUNT2_TX             ((uint16_t)0x03FF)            /*!&lt; Transmission Byte Count 2 */</div><div class="line"></div><div class="line">/*****************  Bit definition for USB_COUNT3_TX register  ****************/</div><div class="line">#define  USB_COUNT3_TX_COUNT3_TX             ((uint16_t)0x03FF)            /*!&lt; Transmission Byte Count 3 */</div><div class="line"></div><div class="line">/*****************  Bit definition for USB_COUNT4_TX register  ****************/</div><div class="line">#define  USB_COUNT4_TX_COUNT4_TX             ((uint16_t)0x03FF)            /*!&lt; Transmission Byte Count 4 */</div><div class="line"></div><div class="line">/*****************  Bit definition for USB_COUNT5_TX register  ****************/</div><div class="line">#define  USB_COUNT5_TX_COUNT5_TX             ((uint16_t)0x03FF)            /*!&lt; Transmission Byte Count 5 */</div><div class="line"></div><div class="line">/*****************  Bit definition for USB_COUNT6_TX register  ****************/</div><div class="line">#define  USB_COUNT6_TX_COUNT6_TX             ((uint16_t)0x03FF)            /*!&lt; Transmission Byte Count 6 */</div><div class="line"></div><div class="line">/*****************  Bit definition for USB_COUNT7_TX register  ****************/</div><div class="line">#define  USB_COUNT7_TX_COUNT7_TX             ((uint16_t)0x03FF)            /*!&lt; Transmission Byte Count 7 */</div><div class="line"></div><div class="line">/*----------------------------------------------------------------------------*/</div><div class="line"></div><div class="line">/****************  Bit definition for USB_COUNT0_TX_0 register  ***************/</div><div class="line">#define  USB_COUNT0_TX_0_COUNT0_TX_0         ((uint32_t)0x000003FF)        /*!&lt; Transmission Byte Count 0 (low) */</div><div class="line"></div><div class="line">/****************  Bit definition for USB_COUNT0_TX_1 register  ***************/</div><div class="line">#define  USB_COUNT0_TX_1_COUNT0_TX_1         ((uint32_t)0x03FF0000)        /*!&lt; Transmission Byte Count 0 (high) */</div><div class="line"></div><div class="line">/****************  Bit definition for USB_COUNT1_TX_0 register  ***************/</div><div class="line">#define  USB_COUNT1_TX_0_COUNT1_TX_0          ((uint32_t)0x000003FF)        /*!&lt; Transmission Byte Count 1 (low) */</div><div class="line"></div><div class="line">/****************  Bit definition for USB_COUNT1_TX_1 register  ***************/</div><div class="line">#define  USB_COUNT1_TX_1_COUNT1_TX_1          ((uint32_t)0x03FF0000)        /*!&lt; Transmission Byte Count 1 (high) */</div><div class="line"></div><div class="line">/****************  Bit definition for USB_COUNT2_TX_0 register  ***************/</div><div class="line">#define  USB_COUNT2_TX_0_COUNT2_TX_0         ((uint32_t)0x000003FF)        /*!&lt; Transmission Byte Count 2 (low) */</div><div class="line"></div><div class="line">/****************  Bit definition for USB_COUNT2_TX_1 register  ***************/</div><div class="line">#define  USB_COUNT2_TX_1_COUNT2_TX_1         ((uint32_t)0x03FF0000)        /*!&lt; Transmission Byte Count 2 (high) */</div><div class="line"></div><div class="line">/****************  Bit definition for USB_COUNT3_TX_0 register  ***************/</div><div class="line">#define  USB_COUNT3_TX_0_COUNT3_TX_0         ((uint16_t)0x000003FF)        /*!&lt; Transmission Byte Count 3 (low) */</div><div class="line"></div><div class="line">/****************  Bit definition for USB_COUNT3_TX_1 register  ***************/</div><div class="line">#define  USB_COUNT3_TX_1_COUNT3_TX_1         ((uint16_t)0x03FF0000)        /*!&lt; Transmission Byte Count 3 (high) */</div><div class="line"></div><div class="line">/****************  Bit definition for USB_COUNT4_TX_0 register  ***************/</div><div class="line">#define  USB_COUNT4_TX_0_COUNT4_TX_0         ((uint32_t)0x000003FF)        /*!&lt; Transmission Byte Count 4 (low) */</div><div class="line"></div><div class="line">/****************  Bit definition for USB_COUNT4_TX_1 register  ***************/</div><div class="line">#define  USB_COUNT4_TX_1_COUNT4_TX_1         ((uint32_t)0x03FF0000)        /*!&lt; Transmission Byte Count 4 (high) */</div><div class="line"></div><div class="line">/****************  Bit definition for USB_COUNT5_TX_0 register  ***************/</div><div class="line">#define  USB_COUNT5_TX_0_COUNT5_TX_0         ((uint32_t)0x000003FF)        /*!&lt; Transmission Byte Count 5 (low) */</div><div class="line"></div><div class="line">/****************  Bit definition for USB_COUNT5_TX_1 register  ***************/</div><div class="line">#define  USB_COUNT5_TX_1_COUNT5_TX_1         ((uint32_t)0x03FF0000)        /*!&lt; Transmission Byte Count 5 (high) */</div><div class="line"></div><div class="line">/****************  Bit definition for USB_COUNT6_TX_0 register  ***************/</div><div class="line">#define  USB_COUNT6_TX_0_COUNT6_TX_0         ((uint32_t)0x000003FF)        /*!&lt; Transmission Byte Count 6 (low) */</div><div class="line"></div><div class="line">/****************  Bit definition for USB_COUNT6_TX_1 register  ***************/</div><div class="line">#define  USB_COUNT6_TX_1_COUNT6_TX_1         ((uint32_t)0x03FF0000)        /*!&lt; Transmission Byte Count 6 (high) */</div><div class="line"></div><div class="line">/****************  Bit definition for USB_COUNT7_TX_0 register  ***************/</div><div class="line">#define  USB_COUNT7_TX_0_COUNT7_TX_0         ((uint32_t)0x000003FF)        /*!&lt; Transmission Byte Count 7 (low) */</div><div class="line"></div><div class="line">/****************  Bit definition for USB_COUNT7_TX_1 register  ***************/</div><div class="line">#define  USB_COUNT7_TX_1_COUNT7_TX_1         ((uint32_t)0x03FF0000)        /*!&lt; Transmission Byte Count 7 (high) */</div><div class="line"></div><div class="line">/*----------------------------------------------------------------------------*/</div><div class="line"></div><div class="line">/*****************  Bit definition for USB_ADDR0_RX register  *****************/</div><div class="line">#define  USB_ADDR0_RX_ADDR0_RX               ((uint16_t)0xFFFE)            /*!&lt; Reception Buffer Address 0 */</div><div class="line"></div><div class="line">/*****************  Bit definition for USB_ADDR1_RX register  *****************/</div><div class="line">#define  USB_ADDR1_RX_ADDR1_RX               ((uint16_t)0xFFFE)            /*!&lt; Reception Buffer Address 1 */</div><div class="line"></div><div class="line">/*****************  Bit definition for USB_ADDR2_RX register  *****************/</div><div class="line">#define  USB_ADDR2_RX_ADDR2_RX               ((uint16_t)0xFFFE)            /*!&lt; Reception Buffer Address 2 */</div><div class="line"></div><div class="line">/*****************  Bit definition for USB_ADDR3_RX register  *****************/</div><div class="line">#define  USB_ADDR3_RX_ADDR3_RX               ((uint16_t)0xFFFE)            /*!&lt; Reception Buffer Address 3 */</div><div class="line"></div><div class="line">/*****************  Bit definition for USB_ADDR4_RX register  *****************/</div><div class="line">#define  USB_ADDR4_RX_ADDR4_RX               ((uint16_t)0xFFFE)            /*!&lt; Reception Buffer Address 4 */</div><div class="line"></div><div class="line">/*****************  Bit definition for USB_ADDR5_RX register  *****************/</div><div class="line">#define  USB_ADDR5_RX_ADDR5_RX               ((uint16_t)0xFFFE)            /*!&lt; Reception Buffer Address 5 */</div><div class="line"></div><div class="line">/*****************  Bit definition for USB_ADDR6_RX register  *****************/</div><div class="line">#define  USB_ADDR6_RX_ADDR6_RX               ((uint16_t)0xFFFE)            /*!&lt; Reception Buffer Address 6 */</div><div class="line"></div><div class="line">/*****************  Bit definition for USB_ADDR7_RX register  *****************/</div><div class="line">#define  USB_ADDR7_RX_ADDR7_RX               ((uint16_t)0xFFFE)            /*!&lt; Reception Buffer Address 7 */</div><div class="line"></div><div class="line">/*----------------------------------------------------------------------------*/</div><div class="line"></div><div class="line">/*****************  Bit definition for USB_COUNT0_RX register  ****************/</div><div class="line">#define  USB_COUNT0_RX_COUNT0_RX             ((uint16_t)0x03FF)            /*!&lt; Reception Byte Count */</div><div class="line"></div><div class="line">#define  USB_COUNT0_RX_NUM_BLOCK             ((uint16_t)0x7C00)            /*!&lt; NUM_BLOCK[4:0] bits (Number of blocks) */</div><div class="line">#define  USB_COUNT0_RX_NUM_BLOCK_0           ((uint16_t)0x0400)            /*!&lt; Bit 0 */</div><div class="line">#define  USB_COUNT0_RX_NUM_BLOCK_1           ((uint16_t)0x0800)            /*!&lt; Bit 1 */</div><div class="line">#define  USB_COUNT0_RX_NUM_BLOCK_2           ((uint16_t)0x1000)            /*!&lt; Bit 2 */</div><div class="line">#define  USB_COUNT0_RX_NUM_BLOCK_3           ((uint16_t)0x2000)            /*!&lt; Bit 3 */</div><div class="line">#define  USB_COUNT0_RX_NUM_BLOCK_4           ((uint16_t)0x4000)            /*!&lt; Bit 4 */</div><div class="line"></div><div class="line">#define  USB_COUNT0_RX_BLSIZE                ((uint16_t)0x8000)            /*!&lt; BLock SIZE */</div><div class="line"></div><div class="line">/*****************  Bit definition for USB_COUNT1_RX register  ****************/</div><div class="line">#define  USB_COUNT1_RX_COUNT1_RX             ((uint16_t)0x03FF)            /*!&lt; Reception Byte Count */</div><div class="line"></div><div class="line">#define  USB_COUNT1_RX_NUM_BLOCK             ((uint16_t)0x7C00)            /*!&lt; NUM_BLOCK[4:0] bits (Number of blocks) */</div><div class="line">#define  USB_COUNT1_RX_NUM_BLOCK_0           ((uint16_t)0x0400)            /*!&lt; Bit 0 */</div><div class="line">#define  USB_COUNT1_RX_NUM_BLOCK_1           ((uint16_t)0x0800)            /*!&lt; Bit 1 */</div><div class="line">#define  USB_COUNT1_RX_NUM_BLOCK_2           ((uint16_t)0x1000)            /*!&lt; Bit 2 */</div><div class="line">#define  USB_COUNT1_RX_NUM_BLOCK_3           ((uint16_t)0x2000)            /*!&lt; Bit 3 */</div><div class="line">#define  USB_COUNT1_RX_NUM_BLOCK_4           ((uint16_t)0x4000)            /*!&lt; Bit 4 */</div><div class="line"></div><div class="line">#define  USB_COUNT1_RX_BLSIZE                ((uint16_t)0x8000)            /*!&lt; BLock SIZE */</div><div class="line"></div><div class="line">/*****************  Bit definition for USB_COUNT2_RX register  ****************/</div><div class="line">#define  USB_COUNT2_RX_COUNT2_RX             ((uint16_t)0x03FF)            /*!&lt; Reception Byte Count */</div><div class="line"></div><div class="line">#define  USB_COUNT2_RX_NUM_BLOCK             ((uint16_t)0x7C00)            /*!&lt; NUM_BLOCK[4:0] bits (Number of blocks) */</div><div class="line">#define  USB_COUNT2_RX_NUM_BLOCK_0           ((uint16_t)0x0400)            /*!&lt; Bit 0 */</div><div class="line">#define  USB_COUNT2_RX_NUM_BLOCK_1           ((uint16_t)0x0800)            /*!&lt; Bit 1 */</div><div class="line">#define  USB_COUNT2_RX_NUM_BLOCK_2           ((uint16_t)0x1000)            /*!&lt; Bit 2 */</div><div class="line">#define  USB_COUNT2_RX_NUM_BLOCK_3           ((uint16_t)0x2000)            /*!&lt; Bit 3 */</div><div class="line">#define  USB_COUNT2_RX_NUM_BLOCK_4           ((uint16_t)0x4000)            /*!&lt; Bit 4 */</div><div class="line"></div><div class="line">#define  USB_COUNT2_RX_BLSIZE                ((uint16_t)0x8000)            /*!&lt; BLock SIZE */</div><div class="line"></div><div class="line">/*****************  Bit definition for USB_COUNT3_RX register  ****************/</div><div class="line">#define  USB_COUNT3_RX_COUNT3_RX             ((uint16_t)0x03FF)            /*!&lt; Reception Byte Count */</div><div class="line"></div><div class="line">#define  USB_COUNT3_RX_NUM_BLOCK             ((uint16_t)0x7C00)            /*!&lt; NUM_BLOCK[4:0] bits (Number of blocks) */</div><div class="line">#define  USB_COUNT3_RX_NUM_BLOCK_0           ((uint16_t)0x0400)            /*!&lt; Bit 0 */</div><div class="line">#define  USB_COUNT3_RX_NUM_BLOCK_1           ((uint16_t)0x0800)            /*!&lt; Bit 1 */</div><div class="line">#define  USB_COUNT3_RX_NUM_BLOCK_2           ((uint16_t)0x1000)            /*!&lt; Bit 2 */</div><div class="line">#define  USB_COUNT3_RX_NUM_BLOCK_3           ((uint16_t)0x2000)            /*!&lt; Bit 3 */</div><div class="line">#define  USB_COUNT3_RX_NUM_BLOCK_4           ((uint16_t)0x4000)            /*!&lt; Bit 4 */</div><div class="line"></div><div class="line">#define  USB_COUNT3_RX_BLSIZE                ((uint16_t)0x8000)            /*!&lt; BLock SIZE */</div><div class="line"></div><div class="line">/*****************  Bit definition for USB_COUNT4_RX register  ****************/</div><div class="line">#define  USB_COUNT4_RX_COUNT4_RX             ((uint16_t)0x03FF)            /*!&lt; Reception Byte Count */</div><div class="line"></div><div class="line">#define  USB_COUNT4_RX_NUM_BLOCK             ((uint16_t)0x7C00)            /*!&lt; NUM_BLOCK[4:0] bits (Number of blocks) */</div><div class="line">#define  USB_COUNT4_RX_NUM_BLOCK_0           ((uint16_t)0x0400)            /*!&lt; Bit 0 */</div><div class="line">#define  USB_COUNT4_RX_NUM_BLOCK_1           ((uint16_t)0x0800)            /*!&lt; Bit 1 */</div><div class="line">#define  USB_COUNT4_RX_NUM_BLOCK_2           ((uint16_t)0x1000)            /*!&lt; Bit 2 */</div><div class="line">#define  USB_COUNT4_RX_NUM_BLOCK_3           ((uint16_t)0x2000)            /*!&lt; Bit 3 */</div><div class="line">#define  USB_COUNT4_RX_NUM_BLOCK_4           ((uint16_t)0x4000)            /*!&lt; Bit 4 */</div><div class="line"></div><div class="line">#define  USB_COUNT4_RX_BLSIZE                ((uint16_t)0x8000)            /*!&lt; BLock SIZE */</div><div class="line"></div><div class="line">/*****************  Bit definition for USB_COUNT5_RX register  ****************/</div><div class="line">#define  USB_COUNT5_RX_COUNT5_RX             ((uint16_t)0x03FF)            /*!&lt; Reception Byte Count */</div><div class="line"></div><div class="line">#define  USB_COUNT5_RX_NUM_BLOCK             ((uint16_t)0x7C00)            /*!&lt; NUM_BLOCK[4:0] bits (Number of blocks) */</div><div class="line">#define  USB_COUNT5_RX_NUM_BLOCK_0           ((uint16_t)0x0400)            /*!&lt; Bit 0 */</div><div class="line">#define  USB_COUNT5_RX_NUM_BLOCK_1           ((uint16_t)0x0800)            /*!&lt; Bit 1 */</div><div class="line">#define  USB_COUNT5_RX_NUM_BLOCK_2           ((uint16_t)0x1000)            /*!&lt; Bit 2 */</div><div class="line">#define  USB_COUNT5_RX_NUM_BLOCK_3           ((uint16_t)0x2000)            /*!&lt; Bit 3 */</div><div class="line">#define  USB_COUNT5_RX_NUM_BLOCK_4           ((uint16_t)0x4000)            /*!&lt; Bit 4 */</div><div class="line"></div><div class="line">#define  USB_COUNT5_RX_BLSIZE                ((uint16_t)0x8000)            /*!&lt; BLock SIZE */</div><div class="line"></div><div class="line">/*****************  Bit definition for USB_COUNT6_RX register  ****************/</div><div class="line">#define  USB_COUNT6_RX_COUNT6_RX             ((uint16_t)0x03FF)            /*!&lt; Reception Byte Count */</div><div class="line"></div><div class="line">#define  USB_COUNT6_RX_NUM_BLOCK             ((uint16_t)0x7C00)            /*!&lt; NUM_BLOCK[4:0] bits (Number of blocks) */</div><div class="line">#define  USB_COUNT6_RX_NUM_BLOCK_0           ((uint16_t)0x0400)            /*!&lt; Bit 0 */</div><div class="line">#define  USB_COUNT6_RX_NUM_BLOCK_1           ((uint16_t)0x0800)            /*!&lt; Bit 1 */</div><div class="line">#define  USB_COUNT6_RX_NUM_BLOCK_2           ((uint16_t)0x1000)            /*!&lt; Bit 2 */</div><div class="line">#define  USB_COUNT6_RX_NUM_BLOCK_3           ((uint16_t)0x2000)            /*!&lt; Bit 3 */</div><div class="line">#define  USB_COUNT6_RX_NUM_BLOCK_4           ((uint16_t)0x4000)            /*!&lt; Bit 4 */</div><div class="line"></div><div class="line">#define  USB_COUNT6_RX_BLSIZE                ((uint16_t)0x8000)            /*!&lt; BLock SIZE */</div><div class="line"></div><div class="line">/*****************  Bit definition for USB_COUNT7_RX register  ****************/</div><div class="line">#define  USB_COUNT7_RX_COUNT7_RX             ((uint16_t)0x03FF)            /*!&lt; Reception Byte Count */</div><div class="line"></div><div class="line">#define  USB_COUNT7_RX_NUM_BLOCK             ((uint16_t)0x7C00)            /*!&lt; NUM_BLOCK[4:0] bits (Number of blocks) */</div><div class="line">#define  USB_COUNT7_RX_NUM_BLOCK_0           ((uint16_t)0x0400)            /*!&lt; Bit 0 */</div><div class="line">#define  USB_COUNT7_RX_NUM_BLOCK_1           ((uint16_t)0x0800)            /*!&lt; Bit 1 */</div><div class="line">#define  USB_COUNT7_RX_NUM_BLOCK_2           ((uint16_t)0x1000)            /*!&lt; Bit 2 */</div><div class="line">#define  USB_COUNT7_RX_NUM_BLOCK_3           ((uint16_t)0x2000)            /*!&lt; Bit 3 */</div><div class="line">#define  USB_COUNT7_RX_NUM_BLOCK_4           ((uint16_t)0x4000)            /*!&lt; Bit 4 */</div><div class="line"></div><div class="line">#define  USB_COUNT7_RX_BLSIZE                ((uint16_t)0x8000)            /*!&lt; BLock SIZE */</div><div class="line"></div><div class="line">/*----------------------------------------------------------------------------*/</div><div class="line"></div><div class="line">/****************  Bit definition for USB_COUNT0_RX_0 register  ***************/</div><div class="line">#define  USB_COUNT0_RX_0_COUNT0_RX_0         ((uint32_t)0x000003FF)        /*!&lt; Reception Byte Count (low) */</div><div class="line"></div><div class="line">#define  USB_COUNT0_RX_0_NUM_BLOCK_0         ((uint32_t)0x00007C00)        /*!&lt; NUM_BLOCK_0[4:0] bits (Number of blocks) (low) */</div><div class="line">#define  USB_COUNT0_RX_0_NUM_BLOCK_0_0       ((uint32_t)0x00000400)        /*!&lt; Bit 0 */</div><div class="line">#define  USB_COUNT0_RX_0_NUM_BLOCK_0_1       ((uint32_t)0x00000800)        /*!&lt; Bit 1 */</div><div class="line">#define  USB_COUNT0_RX_0_NUM_BLOCK_0_2       ((uint32_t)0x00001000)        /*!&lt; Bit 2 */</div><div class="line">#define  USB_COUNT0_RX_0_NUM_BLOCK_0_3       ((uint32_t)0x00002000)        /*!&lt; Bit 3 */</div><div class="line">#define  USB_COUNT0_RX_0_NUM_BLOCK_0_4       ((uint32_t)0x00004000)        /*!&lt; Bit 4 */</div><div class="line"></div><div class="line">#define  USB_COUNT0_RX_0_BLSIZE_0            ((uint32_t)0x00008000)        /*!&lt; BLock SIZE (low) */</div><div class="line"></div><div class="line">/****************  Bit definition for USB_COUNT0_RX_1 register  ***************/</div><div class="line">#define  USB_COUNT0_RX_1_COUNT0_RX_1         ((uint32_t)0x03FF0000)        /*!&lt; Reception Byte Count (high) */</div><div class="line"></div><div class="line">#define  USB_COUNT0_RX_1_NUM_BLOCK_1         ((uint32_t)0x7C000000)        /*!&lt; NUM_BLOCK_1[4:0] bits (Number of blocks) (high) */</div><div class="line">#define  USB_COUNT0_RX_1_NUM_BLOCK_1_0       ((uint32_t)0x04000000)        /*!&lt; Bit 1 */</div><div class="line">#define  USB_COUNT0_RX_1_NUM_BLOCK_1_1       ((uint32_t)0x08000000)        /*!&lt; Bit 1 */</div><div class="line">#define  USB_COUNT0_RX_1_NUM_BLOCK_1_2       ((uint32_t)0x10000000)        /*!&lt; Bit 2 */</div><div class="line">#define  USB_COUNT0_RX_1_NUM_BLOCK_1_3       ((uint32_t)0x20000000)        /*!&lt; Bit 3 */</div><div class="line">#define  USB_COUNT0_RX_1_NUM_BLOCK_1_4       ((uint32_t)0x40000000)        /*!&lt; Bit 4 */</div><div class="line"></div><div class="line">#define  USB_COUNT0_RX_1_BLSIZE_1            ((uint32_t)0x80000000)        /*!&lt; BLock SIZE (high) */</div><div class="line"></div><div class="line">/****************  Bit definition for USB_COUNT1_RX_0 register  ***************/</div><div class="line">#define  USB_COUNT1_RX_0_COUNT1_RX_0         ((uint32_t)0x000003FF)        /*!&lt; Reception Byte Count (low) */</div><div class="line"></div><div class="line">#define  USB_COUNT1_RX_0_NUM_BLOCK_0         ((uint32_t)0x00007C00)        /*!&lt; NUM_BLOCK_0[4:0] bits (Number of blocks) (low) */</div><div class="line">#define  USB_COUNT1_RX_0_NUM_BLOCK_0_0       ((uint32_t)0x00000400)        /*!&lt; Bit 0 */</div><div class="line">#define  USB_COUNT1_RX_0_NUM_BLOCK_0_1       ((uint32_t)0x00000800)        /*!&lt; Bit 1 */</div><div class="line">#define  USB_COUNT1_RX_0_NUM_BLOCK_0_2       ((uint32_t)0x00001000)        /*!&lt; Bit 2 */</div><div class="line">#define  USB_COUNT1_RX_0_NUM_BLOCK_0_3       ((uint32_t)0x00002000)        /*!&lt; Bit 3 */</div><div class="line">#define  USB_COUNT1_RX_0_NUM_BLOCK_0_4       ((uint32_t)0x00004000)        /*!&lt; Bit 4 */</div><div class="line"></div><div class="line">#define  USB_COUNT1_RX_0_BLSIZE_0            ((uint32_t)0x00008000)        /*!&lt; BLock SIZE (low) */</div><div class="line"></div><div class="line">/****************  Bit definition for USB_COUNT1_RX_1 register  ***************/</div><div class="line">#define  USB_COUNT1_RX_1_COUNT1_RX_1         ((uint32_t)0x03FF0000)        /*!&lt; Reception Byte Count (high) */</div><div class="line"></div><div class="line">#define  USB_COUNT1_RX_1_NUM_BLOCK_1         ((uint32_t)0x7C000000)        /*!&lt; NUM_BLOCK_1[4:0] bits (Number of blocks) (high) */</div><div class="line">#define  USB_COUNT1_RX_1_NUM_BLOCK_1_0       ((uint32_t)0x04000000)        /*!&lt; Bit 0 */</div><div class="line">#define  USB_COUNT1_RX_1_NUM_BLOCK_1_1       ((uint32_t)0x08000000)        /*!&lt; Bit 1 */</div><div class="line">#define  USB_COUNT1_RX_1_NUM_BLOCK_1_2       ((uint32_t)0x10000000)        /*!&lt; Bit 2 */</div><div class="line">#define  USB_COUNT1_RX_1_NUM_BLOCK_1_3       ((uint32_t)0x20000000)        /*!&lt; Bit 3 */</div><div class="line">#define  USB_COUNT1_RX_1_NUM_BLOCK_1_4       ((uint32_t)0x40000000)        /*!&lt; Bit 4 */</div><div class="line"></div><div class="line">#define  USB_COUNT1_RX_1_BLSIZE_1            ((uint32_t)0x80000000)        /*!&lt; BLock SIZE (high) */</div><div class="line"></div><div class="line">/****************  Bit definition for USB_COUNT2_RX_0 register  ***************/</div><div class="line">#define  USB_COUNT2_RX_0_COUNT2_RX_0         ((uint32_t)0x000003FF)        /*!&lt; Reception Byte Count (low) */</div><div class="line"></div><div class="line">#define  USB_COUNT2_RX_0_NUM_BLOCK_0         ((uint32_t)0x00007C00)        /*!&lt; NUM_BLOCK_0[4:0] bits (Number of blocks) (low) */</div><div class="line">#define  USB_COUNT2_RX_0_NUM_BLOCK_0_0       ((uint32_t)0x00000400)        /*!&lt; Bit 0 */</div><div class="line">#define  USB_COUNT2_RX_0_NUM_BLOCK_0_1       ((uint32_t)0x00000800)        /*!&lt; Bit 1 */</div><div class="line">#define  USB_COUNT2_RX_0_NUM_BLOCK_0_2       ((uint32_t)0x00001000)        /*!&lt; Bit 2 */</div><div class="line">#define  USB_COUNT2_RX_0_NUM_BLOCK_0_3       ((uint32_t)0x00002000)        /*!&lt; Bit 3 */</div><div class="line">#define  USB_COUNT2_RX_0_NUM_BLOCK_0_4       ((uint32_t)0x00004000)        /*!&lt; Bit 4 */</div><div class="line"></div><div class="line">#define  USB_COUNT2_RX_0_BLSIZE_0            ((uint32_t)0x00008000)        /*!&lt; BLock SIZE (low) */</div><div class="line"></div><div class="line">/****************  Bit definition for USB_COUNT2_RX_1 register  ***************/</div><div class="line">#define  USB_COUNT2_RX_1_COUNT2_RX_1         ((uint32_t)0x03FF0000)        /*!&lt; Reception Byte Count (high) */</div><div class="line"></div><div class="line">#define  USB_COUNT2_RX_1_NUM_BLOCK_1         ((uint32_t)0x7C000000)        /*!&lt; NUM_BLOCK_1[4:0] bits (Number of blocks) (high) */</div><div class="line">#define  USB_COUNT2_RX_1_NUM_BLOCK_1_0       ((uint32_t)0x04000000)        /*!&lt; Bit 0 */</div><div class="line">#define  USB_COUNT2_RX_1_NUM_BLOCK_1_1       ((uint32_t)0x08000000)        /*!&lt; Bit 1 */</div><div class="line">#define  USB_COUNT2_RX_1_NUM_BLOCK_1_2       ((uint32_t)0x10000000)        /*!&lt; Bit 2 */</div><div class="line">#define  USB_COUNT2_RX_1_NUM_BLOCK_1_3       ((uint32_t)0x20000000)        /*!&lt; Bit 3 */</div><div class="line">#define  USB_COUNT2_RX_1_NUM_BLOCK_1_4       ((uint32_t)0x40000000)        /*!&lt; Bit 4 */</div><div class="line"></div><div class="line">#define  USB_COUNT2_RX_1_BLSIZE_1            ((uint32_t)0x80000000)        /*!&lt; BLock SIZE (high) */</div><div class="line"></div><div class="line">/****************  Bit definition for USB_COUNT3_RX_0 register  ***************/</div><div class="line">#define  USB_COUNT3_RX_0_COUNT3_RX_0         ((uint32_t)0x000003FF)        /*!&lt; Reception Byte Count (low) */</div><div class="line"></div><div class="line">#define  USB_COUNT3_RX_0_NUM_BLOCK_0         ((uint32_t)0x00007C00)        /*!&lt; NUM_BLOCK_0[4:0] bits (Number of blocks) (low) */</div><div class="line">#define  USB_COUNT3_RX_0_NUM_BLOCK_0_0       ((uint32_t)0x00000400)        /*!&lt; Bit 0 */</div><div class="line">#define  USB_COUNT3_RX_0_NUM_BLOCK_0_1       ((uint32_t)0x00000800)        /*!&lt; Bit 1 */</div><div class="line">#define  USB_COUNT3_RX_0_NUM_BLOCK_0_2       ((uint32_t)0x00001000)        /*!&lt; Bit 2 */</div><div class="line">#define  USB_COUNT3_RX_0_NUM_BLOCK_0_3       ((uint32_t)0x00002000)        /*!&lt; Bit 3 */</div><div class="line">#define  USB_COUNT3_RX_0_NUM_BLOCK_0_4       ((uint32_t)0x00004000)        /*!&lt; Bit 4 */</div><div class="line"></div><div class="line">#define  USB_COUNT3_RX_0_BLSIZE_0            ((uint32_t)0x00008000)        /*!&lt; BLock SIZE (low) */</div><div class="line"></div><div class="line">/****************  Bit definition for USB_COUNT3_RX_1 register  ***************/</div><div class="line">#define  USB_COUNT3_RX_1_COUNT3_RX_1         ((uint32_t)0x03FF0000)        /*!&lt; Reception Byte Count (high) */</div><div class="line"></div><div class="line">#define  USB_COUNT3_RX_1_NUM_BLOCK_1         ((uint32_t)0x7C000000)        /*!&lt; NUM_BLOCK_1[4:0] bits (Number of blocks) (high) */</div><div class="line">#define  USB_COUNT3_RX_1_NUM_BLOCK_1_0       ((uint32_t)0x04000000)        /*!&lt; Bit 0 */</div><div class="line">#define  USB_COUNT3_RX_1_NUM_BLOCK_1_1       ((uint32_t)0x08000000)        /*!&lt; Bit 1 */</div><div class="line">#define  USB_COUNT3_RX_1_NUM_BLOCK_1_2       ((uint32_t)0x10000000)        /*!&lt; Bit 2 */</div><div class="line">#define  USB_COUNT3_RX_1_NUM_BLOCK_1_3       ((uint32_t)0x20000000)        /*!&lt; Bit 3 */</div><div class="line">#define  USB_COUNT3_RX_1_NUM_BLOCK_1_4       ((uint32_t)0x40000000)        /*!&lt; Bit 4 */</div><div class="line"></div><div class="line">#define  USB_COUNT3_RX_1_BLSIZE_1            ((uint32_t)0x80000000)        /*!&lt; BLock SIZE (high) */</div><div class="line"></div><div class="line">/****************  Bit definition for USB_COUNT4_RX_0 register  ***************/</div><div class="line">#define  USB_COUNT4_RX_0_COUNT4_RX_0         ((uint32_t)0x000003FF)        /*!&lt; Reception Byte Count (low) */</div><div class="line"></div><div class="line">#define  USB_COUNT4_RX_0_NUM_BLOCK_0         ((uint32_t)0x00007C00)        /*!&lt; NUM_BLOCK_0[4:0] bits (Number of blocks) (low) */</div><div class="line">#define  USB_COUNT4_RX_0_NUM_BLOCK_0_0      ((uint32_t)0x00000400)        /*!&lt; Bit 0 */</div><div class="line">#define  USB_COUNT4_RX_0_NUM_BLOCK_0_1      ((uint32_t)0x00000800)        /*!&lt; Bit 1 */</div><div class="line">#define  USB_COUNT4_RX_0_NUM_BLOCK_0_2      ((uint32_t)0x00001000)        /*!&lt; Bit 2 */</div><div class="line">#define  USB_COUNT4_RX_0_NUM_BLOCK_0_3      ((uint32_t)0x00002000)        /*!&lt; Bit 3 */</div><div class="line">#define  USB_COUNT4_RX_0_NUM_BLOCK_0_4      ((uint32_t)0x00004000)        /*!&lt; Bit 4 */</div><div class="line"></div><div class="line">#define  USB_COUNT4_RX_0_BLSIZE_0            ((uint32_t)0x00008000)        /*!&lt; BLock SIZE (low) */</div><div class="line"></div><div class="line">/****************  Bit definition for USB_COUNT4_RX_1 register  ***************/</div><div class="line">#define  USB_COUNT4_RX_1_COUNT4_RX_1         ((uint32_t)0x03FF0000)        /*!&lt; Reception Byte Count (high) */</div><div class="line"></div><div class="line">#define  USB_COUNT4_RX_1_NUM_BLOCK_1         ((uint32_t)0x7C000000)        /*!&lt; NUM_BLOCK_1[4:0] bits (Number of blocks) (high) */</div><div class="line">#define  USB_COUNT4_RX_1_NUM_BLOCK_1_0       ((uint32_t)0x04000000)        /*!&lt; Bit 0 */</div><div class="line">#define  USB_COUNT4_RX_1_NUM_BLOCK_1_1       ((uint32_t)0x08000000)        /*!&lt; Bit 1 */</div><div class="line">#define  USB_COUNT4_RX_1_NUM_BLOCK_1_2       ((uint32_t)0x10000000)        /*!&lt; Bit 2 */</div><div class="line">#define  USB_COUNT4_RX_1_NUM_BLOCK_1_3       ((uint32_t)0x20000000)        /*!&lt; Bit 3 */</div><div class="line">#define  USB_COUNT4_RX_1_NUM_BLOCK_1_4       ((uint32_t)0x40000000)        /*!&lt; Bit 4 */</div><div class="line"></div><div class="line">#define  USB_COUNT4_RX_1_BLSIZE_1            ((uint32_t)0x80000000)        /*!&lt; BLock SIZE (high) */</div><div class="line"></div><div class="line">/****************  Bit definition for USB_COUNT5_RX_0 register  ***************/</div><div class="line">#define  USB_COUNT5_RX_0_COUNT5_RX_0         ((uint32_t)0x000003FF)        /*!&lt; Reception Byte Count (low) */</div><div class="line"></div><div class="line">#define  USB_COUNT5_RX_0_NUM_BLOCK_0         ((uint32_t)0x00007C00)        /*!&lt; NUM_BLOCK_0[4:0] bits (Number of blocks) (low) */</div><div class="line">#define  USB_COUNT5_RX_0_NUM_BLOCK_0_0       ((uint32_t)0x00000400)        /*!&lt; Bit 0 */</div><div class="line">#define  USB_COUNT5_RX_0_NUM_BLOCK_0_1       ((uint32_t)0x00000800)        /*!&lt; Bit 1 */</div><div class="line">#define  USB_COUNT5_RX_0_NUM_BLOCK_0_2       ((uint32_t)0x00001000)        /*!&lt; Bit 2 */</div><div class="line">#define  USB_COUNT5_RX_0_NUM_BLOCK_0_3       ((uint32_t)0x00002000)        /*!&lt; Bit 3 */</div><div class="line">#define  USB_COUNT5_RX_0_NUM_BLOCK_0_4       ((uint32_t)0x00004000)        /*!&lt; Bit 4 */</div><div class="line"></div><div class="line">#define  USB_COUNT5_RX_0_BLSIZE_0            ((uint32_t)0x00008000)        /*!&lt; BLock SIZE (low) */</div><div class="line"></div><div class="line">/****************  Bit definition for USB_COUNT5_RX_1 register  ***************/</div><div class="line">#define  USB_COUNT5_RX_1_COUNT5_RX_1         ((uint32_t)0x03FF0000)        /*!&lt; Reception Byte Count (high) */</div><div class="line"></div><div class="line">#define  USB_COUNT5_RX_1_NUM_BLOCK_1         ((uint32_t)0x7C000000)        /*!&lt; NUM_BLOCK_1[4:0] bits (Number of blocks) (high) */</div><div class="line">#define  USB_COUNT5_RX_1_NUM_BLOCK_1_0       ((uint32_t)0x04000000)        /*!&lt; Bit 0 */</div><div class="line">#define  USB_COUNT5_RX_1_NUM_BLOCK_1_1       ((uint32_t)0x08000000)        /*!&lt; Bit 1 */</div><div class="line">#define  USB_COUNT5_RX_1_NUM_BLOCK_1_2       ((uint32_t)0x10000000)        /*!&lt; Bit 2 */</div><div class="line">#define  USB_COUNT5_RX_1_NUM_BLOCK_1_3       ((uint32_t)0x20000000)        /*!&lt; Bit 3 */</div><div class="line">#define  USB_COUNT5_RX_1_NUM_BLOCK_1_4       ((uint32_t)0x40000000)        /*!&lt; Bit 4 */</div><div class="line"></div><div class="line">#define  USB_COUNT5_RX_1_BLSIZE_1            ((uint32_t)0x80000000)        /*!&lt; BLock SIZE (high) */</div><div class="line"></div><div class="line">/***************  Bit definition for USB_COUNT6_RX_0  register  ***************/</div><div class="line">#define  USB_COUNT6_RX_0_COUNT6_RX_0         ((uint32_t)0x000003FF)        /*!&lt; Reception Byte Count (low) */</div><div class="line"></div><div class="line">#define  USB_COUNT6_RX_0_NUM_BLOCK_0         ((uint32_t)0x00007C00)        /*!&lt; NUM_BLOCK_0[4:0] bits (Number of blocks) (low) */</div><div class="line">#define  USB_COUNT6_RX_0_NUM_BLOCK_0_0       ((uint32_t)0x00000400)        /*!&lt; Bit 0 */</div><div class="line">#define  USB_COUNT6_RX_0_NUM_BLOCK_0_1       ((uint32_t)0x00000800)        /*!&lt; Bit 1 */</div><div class="line">#define  USB_COUNT6_RX_0_NUM_BLOCK_0_2       ((uint32_t)0x00001000)        /*!&lt; Bit 2 */</div><div class="line">#define  USB_COUNT6_RX_0_NUM_BLOCK_0_3       ((uint32_t)0x00002000)        /*!&lt; Bit 3 */</div><div class="line">#define  USB_COUNT6_RX_0_NUM_BLOCK_0_4       ((uint32_t)0x00004000)        /*!&lt; Bit 4 */</div><div class="line"></div><div class="line">#define  USB_COUNT6_RX_0_BLSIZE_0            ((uint32_t)0x00008000)        /*!&lt; BLock SIZE (low) */</div><div class="line"></div><div class="line">/****************  Bit definition for USB_COUNT6_RX_1 register  ***************/</div><div class="line">#define  USB_COUNT6_RX_1_COUNT6_RX_1         ((uint32_t)0x03FF0000)        /*!&lt; Reception Byte Count (high) */</div><div class="line"></div><div class="line">#define  USB_COUNT6_RX_1_NUM_BLOCK_1         ((uint32_t)0x7C000000)        /*!&lt; NUM_BLOCK_1[4:0] bits (Number of blocks) (high) */</div><div class="line">#define  USB_COUNT6_RX_1_NUM_BLOCK_1_0       ((uint32_t)0x04000000)        /*!&lt; Bit 0 */</div><div class="line">#define  USB_COUNT6_RX_1_NUM_BLOCK_1_1       ((uint32_t)0x08000000)        /*!&lt; Bit 1 */</div><div class="line">#define  USB_COUNT6_RX_1_NUM_BLOCK_1_2       ((uint32_t)0x10000000)        /*!&lt; Bit 2 */</div><div class="line">#define  USB_COUNT6_RX_1_NUM_BLOCK_1_3       ((uint32_t)0x20000000)        /*!&lt; Bit 3 */</div><div class="line">#define  USB_COUNT6_RX_1_NUM_BLOCK_1_4       ((uint32_t)0x40000000)        /*!&lt; Bit 4 */</div><div class="line"></div><div class="line">#define  USB_COUNT6_RX_1_BLSIZE_1            ((uint32_t)0x80000000)        /*!&lt; BLock SIZE (high) */</div><div class="line"></div><div class="line">/***************  Bit definition for USB_COUNT7_RX_0 register  ****************/</div><div class="line">#define  USB_COUNT7_RX_0_COUNT7_RX_0         ((uint32_t)0x000003FF)        /*!&lt; Reception Byte Count (low) */</div><div class="line"></div><div class="line">#define  USB_COUNT7_RX_0_NUM_BLOCK_0         ((uint32_t)0x00007C00)        /*!&lt; NUM_BLOCK_0[4:0] bits (Number of blocks) (low) */</div><div class="line">#define  USB_COUNT7_RX_0_NUM_BLOCK_0_0       ((uint32_t)0x00000400)        /*!&lt; Bit 0 */</div><div class="line">#define  USB_COUNT7_RX_0_NUM_BLOCK_0_1       ((uint32_t)0x00000800)        /*!&lt; Bit 1 */</div><div class="line">#define  USB_COUNT7_RX_0_NUM_BLOCK_0_2       ((uint32_t)0x00001000)        /*!&lt; Bit 2 */</div><div class="line">#define  USB_COUNT7_RX_0_NUM_BLOCK_0_3       ((uint32_t)0x00002000)        /*!&lt; Bit 3 */</div><div class="line">#define  USB_COUNT7_RX_0_NUM_BLOCK_0_4       ((uint32_t)0x00004000)        /*!&lt; Bit 4 */</div><div class="line"></div><div class="line">#define  USB_COUNT7_RX_0_BLSIZE_0            ((uint32_t)0x00008000)        /*!&lt; BLock SIZE (low) */</div><div class="line"></div><div class="line">/***************  Bit definition for USB_COUNT7_RX_1 register  ****************/</div><div class="line">#define  USB_COUNT7_RX_1_COUNT7_RX_1         ((uint32_t)0x03FF0000)        /*!&lt; Reception Byte Count (high) */</div><div class="line"></div><div class="line">#define  USB_COUNT7_RX_1_NUM_BLOCK_1         ((uint32_t)0x7C000000)        /*!&lt; NUM_BLOCK_1[4:0] bits (Number of blocks) (high) */</div><div class="line">#define  USB_COUNT7_RX_1_NUM_BLOCK_1_0       ((uint32_t)0x04000000)        /*!&lt; Bit 0 */</div><div class="line">#define  USB_COUNT7_RX_1_NUM_BLOCK_1_1       ((uint32_t)0x08000000)        /*!&lt; Bit 1 */</div><div class="line">#define  USB_COUNT7_RX_1_NUM_BLOCK_1_2       ((uint32_t)0x10000000)        /*!&lt; Bit 2 */</div><div class="line">#define  USB_COUNT7_RX_1_NUM_BLOCK_1_3       ((uint32_t)0x20000000)        /*!&lt; Bit 3 */</div><div class="line">#define  USB_COUNT7_RX_1_NUM_BLOCK_1_4       ((uint32_t)0x40000000)        /*!&lt; Bit 4 */</div><div class="line"></div><div class="line">#define  USB_COUNT7_RX_1_BLSIZE_1            ((uint32_t)0x80000000)        /*!&lt; BLock SIZE (high) */</div><div class="line"></div><div class="line">/******************************************************************************/</div><div class="line">/*                                                                            */</div><div class="line">/*                         Controller Area Network                            */</div><div class="line">/*                                                                            */</div><div class="line">/******************************************************************************/</div><div class="line"></div><div class="line">/*!&lt; CAN control and status registers */</div><div class="line">/*******************  Bit definition for CAN_MCR register  ********************/</div><div class="line">#define  CAN_MCR_INRQ                        ((uint16_t)0x0001)            /*!&lt; Initialization Request */</div><div class="line">#define  CAN_MCR_SLEEP                       ((uint16_t)0x0002)            /*!&lt; Sleep Mode Request */</div><div class="line">#define  CAN_MCR_TXFP                        ((uint16_t)0x0004)            /*!&lt; Transmit FIFO Priority */</div><div class="line">#define  CAN_MCR_RFLM                        ((uint16_t)0x0008)            /*!&lt; Receive FIFO Locked Mode */</div><div class="line">#define  CAN_MCR_NART                        ((uint16_t)0x0010)            /*!&lt; No Automatic Retransmission */</div><div class="line">#define  CAN_MCR_AWUM                        ((uint16_t)0x0020)            /*!&lt; Automatic Wakeup Mode */</div><div class="line">#define  CAN_MCR_ABOM                        ((uint16_t)0x0040)            /*!&lt; Automatic Bus-Off Management */</div><div class="line">#define  CAN_MCR_TTCM                        ((uint16_t)0x0080)            /*!&lt; Time Triggered Communication Mode */</div><div class="line">#define  CAN_MCR_RESET                       ((uint16_t)0x8000)            /*!&lt; CAN software master reset */</div><div class="line"></div><div class="line">/*******************  Bit definition for CAN_MSR register  ********************/</div><div class="line">#define  CAN_MSR_INAK                        ((uint16_t)0x0001)            /*!&lt; Initialization Acknowledge */</div><div class="line">#define  CAN_MSR_SLAK                        ((uint16_t)0x0002)            /*!&lt; Sleep Acknowledge */</div><div class="line">#define  CAN_MSR_ERRI                        ((uint16_t)0x0004)            /*!&lt; Error Interrupt */</div><div class="line">#define  CAN_MSR_WKUI                        ((uint16_t)0x0008)            /*!&lt; Wakeup Interrupt */</div><div class="line">#define  CAN_MSR_SLAKI                       ((uint16_t)0x0010)            /*!&lt; Sleep Acknowledge Interrupt */</div><div class="line">#define  CAN_MSR_TXM                         ((uint16_t)0x0100)            /*!&lt; Transmit Mode */</div><div class="line">#define  CAN_MSR_RXM                         ((uint16_t)0x0200)            /*!&lt; Receive Mode */</div><div class="line">#define  CAN_MSR_SAMP                        ((uint16_t)0x0400)            /*!&lt; Last Sample Point */</div><div class="line">#define  CAN_MSR_RX                          ((uint16_t)0x0800)            /*!&lt; CAN Rx Signal */</div><div class="line"></div><div class="line">/*******************  Bit definition for CAN_TSR register  ********************/</div><div class="line">#define  CAN_TSR_RQCP0                       ((uint32_t)0x00000001)        /*!&lt; Request Completed Mailbox0 */</div><div class="line">#define  CAN_TSR_TXOK0                       ((uint32_t)0x00000002)        /*!&lt; Transmission OK of Mailbox0 */</div><div class="line">#define  CAN_TSR_ALST0                       ((uint32_t)0x00000004)        /*!&lt; Arbitration Lost for Mailbox0 */</div><div class="line">#define  CAN_TSR_TERR0                       ((uint32_t)0x00000008)        /*!&lt; Transmission Error of Mailbox0 */</div><div class="line">#define  CAN_TSR_ABRQ0                       ((uint32_t)0x00000080)        /*!&lt; Abort Request for Mailbox0 */</div><div class="line">#define  CAN_TSR_RQCP1                       ((uint32_t)0x00000100)        /*!&lt; Request Completed Mailbox1 */</div><div class="line">#define  CAN_TSR_TXOK1                       ((uint32_t)0x00000200)        /*!&lt; Transmission OK of Mailbox1 */</div><div class="line">#define  CAN_TSR_ALST1                       ((uint32_t)0x00000400)        /*!&lt; Arbitration Lost for Mailbox1 */</div><div class="line">#define  CAN_TSR_TERR1                       ((uint32_t)0x00000800)        /*!&lt; Transmission Error of Mailbox1 */</div><div class="line">#define  CAN_TSR_ABRQ1                       ((uint32_t)0x00008000)        /*!&lt; Abort Request for Mailbox 1 */</div><div class="line">#define  CAN_TSR_RQCP2                       ((uint32_t)0x00010000)        /*!&lt; Request Completed Mailbox2 */</div><div class="line">#define  CAN_TSR_TXOK2                       ((uint32_t)0x00020000)        /*!&lt; Transmission OK of Mailbox 2 */</div><div class="line">#define  CAN_TSR_ALST2                       ((uint32_t)0x00040000)        /*!&lt; Arbitration Lost for mailbox 2 */</div><div class="line">#define  CAN_TSR_TERR2                       ((uint32_t)0x00080000)        /*!&lt; Transmission Error of Mailbox 2 */</div><div class="line">#define  CAN_TSR_ABRQ2                       ((uint32_t)0x00800000)        /*!&lt; Abort Request for Mailbox 2 */</div><div class="line">#define  CAN_TSR_CODE                        ((uint32_t)0x03000000)        /*!&lt; Mailbox Code */</div><div class="line"></div><div class="line">#define  CAN_TSR_TME                         ((uint32_t)0x1C000000)        /*!&lt; TME[2:0] bits */</div><div class="line">#define  CAN_TSR_TME0                        ((uint32_t)0x04000000)        /*!&lt; Transmit Mailbox 0 Empty */</div><div class="line">#define  CAN_TSR_TME1                        ((uint32_t)0x08000000)        /*!&lt; Transmit Mailbox 1 Empty */</div><div class="line">#define  CAN_TSR_TME2                        ((uint32_t)0x10000000)        /*!&lt; Transmit Mailbox 2 Empty */</div><div class="line"></div><div class="line">#define  CAN_TSR_LOW                         ((uint32_t)0xE0000000)        /*!&lt; LOW[2:0] bits */</div><div class="line">#define  CAN_TSR_LOW0                        ((uint32_t)0x20000000)        /*!&lt; Lowest Priority Flag for Mailbox 0 */</div><div class="line">#define  CAN_TSR_LOW1                        ((uint32_t)0x40000000)        /*!&lt; Lowest Priority Flag for Mailbox 1 */</div><div class="line">#define  CAN_TSR_LOW2                        ((uint32_t)0x80000000)        /*!&lt; Lowest Priority Flag for Mailbox 2 */</div><div class="line"></div><div class="line">/*******************  Bit definition for CAN_RF0R register  *******************/</div><div class="line">#define  CAN_RF0R_FMP0                       ((uint8_t)0x03)               /*!&lt; FIFO 0 Message Pending */</div><div class="line">#define  CAN_RF0R_FULL0                      ((uint8_t)0x08)               /*!&lt; FIFO 0 Full */</div><div class="line">#define  CAN_RF0R_FOVR0                      ((uint8_t)0x10)               /*!&lt; FIFO 0 Overrun */</div><div class="line">#define  CAN_RF0R_RFOM0                      ((uint8_t)0x20)               /*!&lt; Release FIFO 0 Output Mailbox */</div><div class="line"></div><div class="line">/*******************  Bit definition for CAN_RF1R register  *******************/</div><div class="line">#define  CAN_RF1R_FMP1                       ((uint8_t)0x03)               /*!&lt; FIFO 1 Message Pending */</div><div class="line">#define  CAN_RF1R_FULL1                      ((uint8_t)0x08)               /*!&lt; FIFO 1 Full */</div><div class="line">#define  CAN_RF1R_FOVR1                      ((uint8_t)0x10)               /*!&lt; FIFO 1 Overrun */</div><div class="line">#define  CAN_RF1R_RFOM1                      ((uint8_t)0x20)               /*!&lt; Release FIFO 1 Output Mailbox */</div><div class="line"></div><div class="line">/********************  Bit definition for CAN_IER register  *******************/</div><div class="line">#define  CAN_IER_TMEIE                       ((uint32_t)0x00000001)        /*!&lt; Transmit Mailbox Empty Interrupt Enable */</div><div class="line">#define  CAN_IER_FMPIE0                      ((uint32_t)0x00000002)        /*!&lt; FIFO Message Pending Interrupt Enable */</div><div class="line">#define  CAN_IER_FFIE0                       ((uint32_t)0x00000004)        /*!&lt; FIFO Full Interrupt Enable */</div><div class="line">#define  CAN_IER_FOVIE0                      ((uint32_t)0x00000008)        /*!&lt; FIFO Overrun Interrupt Enable */</div><div class="line">#define  CAN_IER_FMPIE1                      ((uint32_t)0x00000010)        /*!&lt; FIFO Message Pending Interrupt Enable */</div><div class="line">#define  CAN_IER_FFIE1                       ((uint32_t)0x00000020)        /*!&lt; FIFO Full Interrupt Enable */</div><div class="line">#define  CAN_IER_FOVIE1                      ((uint32_t)0x00000040)        /*!&lt; FIFO Overrun Interrupt Enable */</div><div class="line">#define  CAN_IER_EWGIE                       ((uint32_t)0x00000100)        /*!&lt; Error Warning Interrupt Enable */</div><div class="line">#define  CAN_IER_EPVIE                       ((uint32_t)0x00000200)        /*!&lt; Error Passive Interrupt Enable */</div><div class="line">#define  CAN_IER_BOFIE                       ((uint32_t)0x00000400)        /*!&lt; Bus-Off Interrupt Enable */</div><div class="line">#define  CAN_IER_LECIE                       ((uint32_t)0x00000800)        /*!&lt; Last Error Code Interrupt Enable */</div><div class="line">#define  CAN_IER_ERRIE                       ((uint32_t)0x00008000)        /*!&lt; Error Interrupt Enable */</div><div class="line">#define  CAN_IER_WKUIE                       ((uint32_t)0x00010000)        /*!&lt; Wakeup Interrupt Enable */</div><div class="line">#define  CAN_IER_SLKIE                       ((uint32_t)0x00020000)        /*!&lt; Sleep Interrupt Enable */</div><div class="line"></div><div class="line">/********************  Bit definition for CAN_ESR register  *******************/</div><div class="line">#define  CAN_ESR_EWGF                        ((uint32_t)0x00000001)        /*!&lt; Error Warning Flag */</div><div class="line">#define  CAN_ESR_EPVF                        ((uint32_t)0x00000002)        /*!&lt; Error Passive Flag */</div><div class="line">#define  CAN_ESR_BOFF                        ((uint32_t)0x00000004)        /*!&lt; Bus-Off Flag */</div><div class="line"></div><div class="line">#define  CAN_ESR_LEC                         ((uint32_t)0x00000070)        /*!&lt; LEC[2:0] bits (Last Error Code) */</div><div class="line">#define  CAN_ESR_LEC_0                       ((uint32_t)0x00000010)        /*!&lt; Bit 0 */</div><div class="line">#define  CAN_ESR_LEC_1                       ((uint32_t)0x00000020)        /*!&lt; Bit 1 */</div><div class="line">#define  CAN_ESR_LEC_2                       ((uint32_t)0x00000040)        /*!&lt; Bit 2 */</div><div class="line"></div><div class="line">#define  CAN_ESR_TEC                         ((uint32_t)0x00FF0000)        /*!&lt; Least significant byte of the 9-bit Transmit Error Counter */</div><div class="line">#define  CAN_ESR_REC                         ((uint32_t)0xFF000000)        /*!&lt; Receive Error Counter */</div><div class="line"></div><div class="line">/*******************  Bit definition for CAN_BTR register  ********************/</div><div class="line">#define  CAN_BTR_BRP                         ((uint32_t)0x000003FF)        /*!&lt; Baud Rate Prescaler */</div><div class="line">#define  CAN_BTR_TS1                         ((uint32_t)0x000F0000)        /*!&lt; Time Segment 1 */</div><div class="line">#define  CAN_BTR_TS2                         ((uint32_t)0x00700000)        /*!&lt; Time Segment 2 */</div><div class="line">#define  CAN_BTR_SJW                         ((uint32_t)0x03000000)        /*!&lt; Resynchronization Jump Width */</div><div class="line">#define  CAN_BTR_LBKM                        ((uint32_t)0x40000000)        /*!&lt; Loop Back Mode (Debug) */</div><div class="line">#define  CAN_BTR_SILM                        ((uint32_t)0x80000000)        /*!&lt; Silent Mode */</div><div class="line"></div><div class="line">/*!&lt; Mailbox registers */</div><div class="line">/******************  Bit definition for CAN_TI0R register  ********************/</div><div class="line">#define  CAN_TI0R_TXRQ                       ((uint32_t)0x00000001)        /*!&lt; Transmit Mailbox Request */</div><div class="line">#define  CAN_TI0R_RTR                        ((uint32_t)0x00000002)        /*!&lt; Remote Transmission Request */</div><div class="line">#define  CAN_TI0R_IDE                        ((uint32_t)0x00000004)        /*!&lt; Identifier Extension */</div><div class="line">#define  CAN_TI0R_EXID                       ((uint32_t)0x001FFFF8)        /*!&lt; Extended Identifier */</div><div class="line">#define  CAN_TI0R_STID                       ((uint32_t)0xFFE00000)        /*!&lt; Standard Identifier or Extended Identifier */</div><div class="line"></div><div class="line">/******************  Bit definition for CAN_TDT0R register  *******************/</div><div class="line">#define  CAN_TDT0R_DLC                       ((uint32_t)0x0000000F)        /*!&lt; Data Length Code */</div><div class="line">#define  CAN_TDT0R_TGT                       ((uint32_t)0x00000100)        /*!&lt; Transmit Global Time */</div><div class="line">#define  CAN_TDT0R_TIME                      ((uint32_t)0xFFFF0000)        /*!&lt; Message Time Stamp */</div><div class="line"></div><div class="line">/******************  Bit definition for CAN_TDL0R register  *******************/</div><div class="line">#define  CAN_TDL0R_DATA0                     ((uint32_t)0x000000FF)        /*!&lt; Data byte 0 */</div><div class="line">#define  CAN_TDL0R_DATA1                     ((uint32_t)0x0000FF00)        /*!&lt; Data byte 1 */</div><div class="line">#define  CAN_TDL0R_DATA2                     ((uint32_t)0x00FF0000)        /*!&lt; Data byte 2 */</div><div class="line">#define  CAN_TDL0R_DATA3                     ((uint32_t)0xFF000000)        /*!&lt; Data byte 3 */</div><div class="line"></div><div class="line">/******************  Bit definition for CAN_TDH0R register  *******************/</div><div class="line">#define  CAN_TDH0R_DATA4                     ((uint32_t)0x000000FF)        /*!&lt; Data byte 4 */</div><div class="line">#define  CAN_TDH0R_DATA5                     ((uint32_t)0x0000FF00)        /*!&lt; Data byte 5 */</div><div class="line">#define  CAN_TDH0R_DATA6                     ((uint32_t)0x00FF0000)        /*!&lt; Data byte 6 */</div><div class="line">#define  CAN_TDH0R_DATA7                     ((uint32_t)0xFF000000)        /*!&lt; Data byte 7 */</div><div class="line"></div><div class="line">/*******************  Bit definition for CAN_TI1R register  *******************/</div><div class="line">#define  CAN_TI1R_TXRQ                       ((uint32_t)0x00000001)        /*!&lt; Transmit Mailbox Request */</div><div class="line">#define  CAN_TI1R_RTR                        ((uint32_t)0x00000002)        /*!&lt; Remote Transmission Request */</div><div class="line">#define  CAN_TI1R_IDE                        ((uint32_t)0x00000004)        /*!&lt; Identifier Extension */</div><div class="line">#define  CAN_TI1R_EXID                       ((uint32_t)0x001FFFF8)        /*!&lt; Extended Identifier */</div><div class="line">#define  CAN_TI1R_STID                       ((uint32_t)0xFFE00000)        /*!&lt; Standard Identifier or Extended Identifier */</div><div class="line"></div><div class="line">/*******************  Bit definition for CAN_TDT1R register  ******************/</div><div class="line">#define  CAN_TDT1R_DLC                       ((uint32_t)0x0000000F)        /*!&lt; Data Length Code */</div><div class="line">#define  CAN_TDT1R_TGT                       ((uint32_t)0x00000100)        /*!&lt; Transmit Global Time */</div><div class="line">#define  CAN_TDT1R_TIME                      ((uint32_t)0xFFFF0000)        /*!&lt; Message Time Stamp */</div><div class="line"></div><div class="line">/*******************  Bit definition for CAN_TDL1R register  ******************/</div><div class="line">#define  CAN_TDL1R_DATA0                     ((uint32_t)0x000000FF)        /*!&lt; Data byte 0 */</div><div class="line">#define  CAN_TDL1R_DATA1                     ((uint32_t)0x0000FF00)        /*!&lt; Data byte 1 */</div><div class="line">#define  CAN_TDL1R_DATA2                     ((uint32_t)0x00FF0000)        /*!&lt; Data byte 2 */</div><div class="line">#define  CAN_TDL1R_DATA3                     ((uint32_t)0xFF000000)        /*!&lt; Data byte 3 */</div><div class="line"></div><div class="line">/*******************  Bit definition for CAN_TDH1R register  ******************/</div><div class="line">#define  CAN_TDH1R_DATA4                     ((uint32_t)0x000000FF)        /*!&lt; Data byte 4 */</div><div class="line">#define  CAN_TDH1R_DATA5                     ((uint32_t)0x0000FF00)        /*!&lt; Data byte 5 */</div><div class="line">#define  CAN_TDH1R_DATA6                     ((uint32_t)0x00FF0000)        /*!&lt; Data byte 6 */</div><div class="line">#define  CAN_TDH1R_DATA7                     ((uint32_t)0xFF000000)        /*!&lt; Data byte 7 */</div><div class="line"></div><div class="line">/*******************  Bit definition for CAN_TI2R register  *******************/</div><div class="line">#define  CAN_TI2R_TXRQ                       ((uint32_t)0x00000001)        /*!&lt; Transmit Mailbox Request */</div><div class="line">#define  CAN_TI2R_RTR                        ((uint32_t)0x00000002)        /*!&lt; Remote Transmission Request */</div><div class="line">#define  CAN_TI2R_IDE                        ((uint32_t)0x00000004)        /*!&lt; Identifier Extension */</div><div class="line">#define  CAN_TI2R_EXID                       ((uint32_t)0x001FFFF8)        /*!&lt; Extended identifier */</div><div class="line">#define  CAN_TI2R_STID                       ((uint32_t)0xFFE00000)        /*!&lt; Standard Identifier or Extended Identifier */</div><div class="line"></div><div class="line">/*******************  Bit definition for CAN_TDT2R register  ******************/  </div><div class="line">#define  CAN_TDT2R_DLC                       ((uint32_t)0x0000000F)        /*!&lt; Data Length Code */</div><div class="line">#define  CAN_TDT2R_TGT                       ((uint32_t)0x00000100)        /*!&lt; Transmit Global Time */</div><div class="line">#define  CAN_TDT2R_TIME                      ((uint32_t)0xFFFF0000)        /*!&lt; Message Time Stamp */</div><div class="line"></div><div class="line">/*******************  Bit definition for CAN_TDL2R register  ******************/</div><div class="line">#define  CAN_TDL2R_DATA0                     ((uint32_t)0x000000FF)        /*!&lt; Data byte 0 */</div><div class="line">#define  CAN_TDL2R_DATA1                     ((uint32_t)0x0000FF00)        /*!&lt; Data byte 1 */</div><div class="line">#define  CAN_TDL2R_DATA2                     ((uint32_t)0x00FF0000)        /*!&lt; Data byte 2 */</div><div class="line">#define  CAN_TDL2R_DATA3                     ((uint32_t)0xFF000000)        /*!&lt; Data byte 3 */</div><div class="line"></div><div class="line">/*******************  Bit definition for CAN_TDH2R register  ******************/</div><div class="line">#define  CAN_TDH2R_DATA4                     ((uint32_t)0x000000FF)        /*!&lt; Data byte 4 */</div><div class="line">#define  CAN_TDH2R_DATA5                     ((uint32_t)0x0000FF00)        /*!&lt; Data byte 5 */</div><div class="line">#define  CAN_TDH2R_DATA6                     ((uint32_t)0x00FF0000)        /*!&lt; Data byte 6 */</div><div class="line">#define  CAN_TDH2R_DATA7                     ((uint32_t)0xFF000000)        /*!&lt; Data byte 7 */</div><div class="line"></div><div class="line">/*******************  Bit definition for CAN_RI0R register  *******************/</div><div class="line">#define  CAN_RI0R_RTR                        ((uint32_t)0x00000002)        /*!&lt; Remote Transmission Request */</div><div class="line">#define  CAN_RI0R_IDE                        ((uint32_t)0x00000004)        /*!&lt; Identifier Extension */</div><div class="line">#define  CAN_RI0R_EXID                       ((uint32_t)0x001FFFF8)        /*!&lt; Extended Identifier */</div><div class="line">#define  CAN_RI0R_STID                       ((uint32_t)0xFFE00000)        /*!&lt; Standard Identifier or Extended Identifier */</div><div class="line"></div><div class="line">/*******************  Bit definition for CAN_RDT0R register  ******************/</div><div class="line">#define  CAN_RDT0R_DLC                       ((uint32_t)0x0000000F)        /*!&lt; Data Length Code */</div><div class="line">#define  CAN_RDT0R_FMI                       ((uint32_t)0x0000FF00)        /*!&lt; Filter Match Index */</div><div class="line">#define  CAN_RDT0R_TIME                      ((uint32_t)0xFFFF0000)        /*!&lt; Message Time Stamp */</div><div class="line"></div><div class="line">/*******************  Bit definition for CAN_RDL0R register  ******************/</div><div class="line">#define  CAN_RDL0R_DATA0                     ((uint32_t)0x000000FF)        /*!&lt; Data byte 0 */</div><div class="line">#define  CAN_RDL0R_DATA1                     ((uint32_t)0x0000FF00)        /*!&lt; Data byte 1 */</div><div class="line">#define  CAN_RDL0R_DATA2                     ((uint32_t)0x00FF0000)        /*!&lt; Data byte 2 */</div><div class="line">#define  CAN_RDL0R_DATA3                     ((uint32_t)0xFF000000)        /*!&lt; Data byte 3 */</div><div class="line"></div><div class="line">/*******************  Bit definition for CAN_RDH0R register  ******************/</div><div class="line">#define  CAN_RDH0R_DATA4                     ((uint32_t)0x000000FF)        /*!&lt; Data byte 4 */</div><div class="line">#define  CAN_RDH0R_DATA5                     ((uint32_t)0x0000FF00)        /*!&lt; Data byte 5 */</div><div class="line">#define  CAN_RDH0R_DATA6                     ((uint32_t)0x00FF0000)        /*!&lt; Data byte 6 */</div><div class="line">#define  CAN_RDH0R_DATA7                     ((uint32_t)0xFF000000)        /*!&lt; Data byte 7 */</div><div class="line"></div><div class="line">/*******************  Bit definition for CAN_RI1R register  *******************/</div><div class="line">#define  CAN_RI1R_RTR                        ((uint32_t)0x00000002)        /*!&lt; Remote Transmission Request */</div><div class="line">#define  CAN_RI1R_IDE                        ((uint32_t)0x00000004)        /*!&lt; Identifier Extension */</div><div class="line">#define  CAN_RI1R_EXID                       ((uint32_t)0x001FFFF8)        /*!&lt; Extended identifier */</div><div class="line">#define  CAN_RI1R_STID                       ((uint32_t)0xFFE00000)        /*!&lt; Standard Identifier or Extended Identifier */</div><div class="line"></div><div class="line">/*******************  Bit definition for CAN_RDT1R register  ******************/</div><div class="line">#define  CAN_RDT1R_DLC                       ((uint32_t)0x0000000F)        /*!&lt; Data Length Code */</div><div class="line">#define  CAN_RDT1R_FMI                       ((uint32_t)0x0000FF00)        /*!&lt; Filter Match Index */</div><div class="line">#define  CAN_RDT1R_TIME                      ((uint32_t)0xFFFF0000)        /*!&lt; Message Time Stamp */</div><div class="line"></div><div class="line">/*******************  Bit definition for CAN_RDL1R register  ******************/</div><div class="line">#define  CAN_RDL1R_DATA0                     ((uint32_t)0x000000FF)        /*!&lt; Data byte 0 */</div><div class="line">#define  CAN_RDL1R_DATA1                     ((uint32_t)0x0000FF00)        /*!&lt; Data byte 1 */</div><div class="line">#define  CAN_RDL1R_DATA2                     ((uint32_t)0x00FF0000)        /*!&lt; Data byte 2 */</div><div class="line">#define  CAN_RDL1R_DATA3                     ((uint32_t)0xFF000000)        /*!&lt; Data byte 3 */</div><div class="line"></div><div class="line">/*******************  Bit definition for CAN_RDH1R register  ******************/</div><div class="line">#define  CAN_RDH1R_DATA4                     ((uint32_t)0x000000FF)        /*!&lt; Data byte 4 */</div><div class="line">#define  CAN_RDH1R_DATA5                     ((uint32_t)0x0000FF00)        /*!&lt; Data byte 5 */</div><div class="line">#define  CAN_RDH1R_DATA6                     ((uint32_t)0x00FF0000)        /*!&lt; Data byte 6 */</div><div class="line">#define  CAN_RDH1R_DATA7                     ((uint32_t)0xFF000000)        /*!&lt; Data byte 7 */</div><div class="line"></div><div class="line">/*!&lt; CAN filter registers */</div><div class="line">/*******************  Bit definition for CAN_FMR register  ********************/</div><div class="line">#define  CAN_FMR_FINIT                       ((uint8_t)0x01)               /*!&lt; Filter Init Mode */</div><div class="line"></div><div class="line">/*******************  Bit definition for CAN_FM1R register  *******************/</div><div class="line">#define  CAN_FM1R_FBM                        ((uint16_t)0x3FFF)            /*!&lt; Filter Mode */</div><div class="line">#define  CAN_FM1R_FBM0                       ((uint16_t)0x0001)            /*!&lt; Filter Init Mode bit 0 */</div><div class="line">#define  CAN_FM1R_FBM1                       ((uint16_t)0x0002)            /*!&lt; Filter Init Mode bit 1 */</div><div class="line">#define  CAN_FM1R_FBM2                       ((uint16_t)0x0004)            /*!&lt; Filter Init Mode bit 2 */</div><div class="line">#define  CAN_FM1R_FBM3                       ((uint16_t)0x0008)            /*!&lt; Filter Init Mode bit 3 */</div><div class="line">#define  CAN_FM1R_FBM4                       ((uint16_t)0x0010)            /*!&lt; Filter Init Mode bit 4 */</div><div class="line">#define  CAN_FM1R_FBM5                       ((uint16_t)0x0020)            /*!&lt; Filter Init Mode bit 5 */</div><div class="line">#define  CAN_FM1R_FBM6                       ((uint16_t)0x0040)            /*!&lt; Filter Init Mode bit 6 */</div><div class="line">#define  CAN_FM1R_FBM7                       ((uint16_t)0x0080)            /*!&lt; Filter Init Mode bit 7 */</div><div class="line">#define  CAN_FM1R_FBM8                       ((uint16_t)0x0100)            /*!&lt; Filter Init Mode bit 8 */</div><div class="line">#define  CAN_FM1R_FBM9                       ((uint16_t)0x0200)            /*!&lt; Filter Init Mode bit 9 */</div><div class="line">#define  CAN_FM1R_FBM10                      ((uint16_t)0x0400)            /*!&lt; Filter Init Mode bit 10 */</div><div class="line">#define  CAN_FM1R_FBM11                      ((uint16_t)0x0800)            /*!&lt; Filter Init Mode bit 11 */</div><div class="line">#define  CAN_FM1R_FBM12                      ((uint16_t)0x1000)            /*!&lt; Filter Init Mode bit 12 */</div><div class="line">#define  CAN_FM1R_FBM13                      ((uint16_t)0x2000)            /*!&lt; Filter Init Mode bit 13 */</div><div class="line"></div><div class="line">/*******************  Bit definition for CAN_FS1R register  *******************/</div><div class="line">#define  CAN_FS1R_FSC                        ((uint16_t)0x3FFF)            /*!&lt; Filter Scale Configuration */</div><div class="line">#define  CAN_FS1R_FSC0                       ((uint16_t)0x0001)            /*!&lt; Filter Scale Configuration bit 0 */</div><div class="line">#define  CAN_FS1R_FSC1                       ((uint16_t)0x0002)            /*!&lt; Filter Scale Configuration bit 1 */</div><div class="line">#define  CAN_FS1R_FSC2                       ((uint16_t)0x0004)            /*!&lt; Filter Scale Configuration bit 2 */</div><div class="line">#define  CAN_FS1R_FSC3                       ((uint16_t)0x0008)            /*!&lt; Filter Scale Configuration bit 3 */</div><div class="line">#define  CAN_FS1R_FSC4                       ((uint16_t)0x0010)            /*!&lt; Filter Scale Configuration bit 4 */</div><div class="line">#define  CAN_FS1R_FSC5                       ((uint16_t)0x0020)            /*!&lt; Filter Scale Configuration bit 5 */</div><div class="line">#define  CAN_FS1R_FSC6                       ((uint16_t)0x0040)            /*!&lt; Filter Scale Configuration bit 6 */</div><div class="line">#define  CAN_FS1R_FSC7                       ((uint16_t)0x0080)            /*!&lt; Filter Scale Configuration bit 7 */</div><div class="line">#define  CAN_FS1R_FSC8                       ((uint16_t)0x0100)            /*!&lt; Filter Scale Configuration bit 8 */</div><div class="line">#define  CAN_FS1R_FSC9                       ((uint16_t)0x0200)            /*!&lt; Filter Scale Configuration bit 9 */</div><div class="line">#define  CAN_FS1R_FSC10                      ((uint16_t)0x0400)            /*!&lt; Filter Scale Configuration bit 10 */</div><div class="line">#define  CAN_FS1R_FSC11                      ((uint16_t)0x0800)            /*!&lt; Filter Scale Configuration bit 11 */</div><div class="line">#define  CAN_FS1R_FSC12                      ((uint16_t)0x1000)            /*!&lt; Filter Scale Configuration bit 12 */</div><div class="line">#define  CAN_FS1R_FSC13                      ((uint16_t)0x2000)            /*!&lt; Filter Scale Configuration bit 13 */</div><div class="line"></div><div class="line">/******************  Bit definition for CAN_FFA1R register  *******************/</div><div class="line">#define  CAN_FFA1R_FFA                       ((uint16_t)0x3FFF)            /*!&lt; Filter FIFO Assignment */</div><div class="line">#define  CAN_FFA1R_FFA0                      ((uint16_t)0x0001)            /*!&lt; Filter FIFO Assignment for Filter 0 */</div><div class="line">#define  CAN_FFA1R_FFA1                      ((uint16_t)0x0002)            /*!&lt; Filter FIFO Assignment for Filter 1 */</div><div class="line">#define  CAN_FFA1R_FFA2                      ((uint16_t)0x0004)            /*!&lt; Filter FIFO Assignment for Filter 2 */</div><div class="line">#define  CAN_FFA1R_FFA3                      ((uint16_t)0x0008)            /*!&lt; Filter FIFO Assignment for Filter 3 */</div><div class="line">#define  CAN_FFA1R_FFA4                      ((uint16_t)0x0010)            /*!&lt; Filter FIFO Assignment for Filter 4 */</div><div class="line">#define  CAN_FFA1R_FFA5                      ((uint16_t)0x0020)            /*!&lt; Filter FIFO Assignment for Filter 5 */</div><div class="line">#define  CAN_FFA1R_FFA6                      ((uint16_t)0x0040)            /*!&lt; Filter FIFO Assignment for Filter 6 */</div><div class="line">#define  CAN_FFA1R_FFA7                      ((uint16_t)0x0080)            /*!&lt; Filter FIFO Assignment for Filter 7 */</div><div class="line">#define  CAN_FFA1R_FFA8                      ((uint16_t)0x0100)            /*!&lt; Filter FIFO Assignment for Filter 8 */</div><div class="line">#define  CAN_FFA1R_FFA9                      ((uint16_t)0x0200)            /*!&lt; Filter FIFO Assignment for Filter 9 */</div><div class="line">#define  CAN_FFA1R_FFA10                     ((uint16_t)0x0400)            /*!&lt; Filter FIFO Assignment for Filter 10 */</div><div class="line">#define  CAN_FFA1R_FFA11                     ((uint16_t)0x0800)            /*!&lt; Filter FIFO Assignment for Filter 11 */</div><div class="line">#define  CAN_FFA1R_FFA12                     ((uint16_t)0x1000)            /*!&lt; Filter FIFO Assignment for Filter 12 */</div><div class="line">#define  CAN_FFA1R_FFA13                     ((uint16_t)0x2000)            /*!&lt; Filter FIFO Assignment for Filter 13 */</div><div class="line"></div><div class="line">/*******************  Bit definition for CAN_FA1R register  *******************/</div><div class="line">#define  CAN_FA1R_FACT                       ((uint16_t)0x3FFF)            /*!&lt; Filter Active */</div><div class="line">#define  CAN_FA1R_FACT0                      ((uint16_t)0x0001)            /*!&lt; Filter 0 Active */</div><div class="line">#define  CAN_FA1R_FACT1                      ((uint16_t)0x0002)            /*!&lt; Filter 1 Active */</div><div class="line">#define  CAN_FA1R_FACT2                      ((uint16_t)0x0004)            /*!&lt; Filter 2 Active */</div><div class="line">#define  CAN_FA1R_FACT3                      ((uint16_t)0x0008)            /*!&lt; Filter 3 Active */</div><div class="line">#define  CAN_FA1R_FACT4                      ((uint16_t)0x0010)            /*!&lt; Filter 4 Active */</div><div class="line">#define  CAN_FA1R_FACT5                      ((uint16_t)0x0020)            /*!&lt; Filter 5 Active */</div><div class="line">#define  CAN_FA1R_FACT6                      ((uint16_t)0x0040)            /*!&lt; Filter 6 Active */</div><div class="line">#define  CAN_FA1R_FACT7                      ((uint16_t)0x0080)            /*!&lt; Filter 7 Active */</div><div class="line">#define  CAN_FA1R_FACT8                      ((uint16_t)0x0100)            /*!&lt; Filter 8 Active */</div><div class="line">#define  CAN_FA1R_FACT9                      ((uint16_t)0x0200)            /*!&lt; Filter 9 Active */</div><div class="line">#define  CAN_FA1R_FACT10                     ((uint16_t)0x0400)            /*!&lt; Filter 10 Active */</div><div class="line">#define  CAN_FA1R_FACT11                     ((uint16_t)0x0800)            /*!&lt; Filter 11 Active */</div><div class="line">#define  CAN_FA1R_FACT12                     ((uint16_t)0x1000)            /*!&lt; Filter 12 Active */</div><div class="line">#define  CAN_FA1R_FACT13                     ((uint16_t)0x2000)            /*!&lt; Filter 13 Active */</div><div class="line"></div><div class="line">/*******************  Bit definition for CAN_F0R1 register  *******************/</div><div class="line">#define  CAN_F0R1_FB0                        ((uint32_t)0x00000001)        /*!&lt; Filter bit 0 */</div><div class="line">#define  CAN_F0R1_FB1                        ((uint32_t)0x00000002)        /*!&lt; Filter bit 1 */</div><div class="line">#define  CAN_F0R1_FB2                        ((uint32_t)0x00000004)        /*!&lt; Filter bit 2 */</div><div class="line">#define  CAN_F0R1_FB3                        ((uint32_t)0x00000008)        /*!&lt; Filter bit 3 */</div><div class="line">#define  CAN_F0R1_FB4                        ((uint32_t)0x00000010)        /*!&lt; Filter bit 4 */</div><div class="line">#define  CAN_F0R1_FB5                        ((uint32_t)0x00000020)        /*!&lt; Filter bit 5 */</div><div class="line">#define  CAN_F0R1_FB6                        ((uint32_t)0x00000040)        /*!&lt; Filter bit 6 */</div><div class="line">#define  CAN_F0R1_FB7                        ((uint32_t)0x00000080)        /*!&lt; Filter bit 7 */</div><div class="line">#define  CAN_F0R1_FB8                        ((uint32_t)0x00000100)        /*!&lt; Filter bit 8 */</div><div class="line">#define  CAN_F0R1_FB9                        ((uint32_t)0x00000200)        /*!&lt; Filter bit 9 */</div><div class="line">#define  CAN_F0R1_FB10                       ((uint32_t)0x00000400)        /*!&lt; Filter bit 10 */</div><div class="line">#define  CAN_F0R1_FB11                       ((uint32_t)0x00000800)        /*!&lt; Filter bit 11 */</div><div class="line">#define  CAN_F0R1_FB12                       ((uint32_t)0x00001000)        /*!&lt; Filter bit 12 */</div><div class="line">#define  CAN_F0R1_FB13                       ((uint32_t)0x00002000)        /*!&lt; Filter bit 13 */</div><div class="line">#define  CAN_F0R1_FB14                       ((uint32_t)0x00004000)        /*!&lt; Filter bit 14 */</div><div class="line">#define  CAN_F0R1_FB15                       ((uint32_t)0x00008000)        /*!&lt; Filter bit 15 */</div><div class="line">#define  CAN_F0R1_FB16                       ((uint32_t)0x00010000)        /*!&lt; Filter bit 16 */</div><div class="line">#define  CAN_F0R1_FB17                       ((uint32_t)0x00020000)        /*!&lt; Filter bit 17 */</div><div class="line">#define  CAN_F0R1_FB18                       ((uint32_t)0x00040000)        /*!&lt; Filter bit 18 */</div><div class="line">#define  CAN_F0R1_FB19                       ((uint32_t)0x00080000)        /*!&lt; Filter bit 19 */</div><div class="line">#define  CAN_F0R1_FB20                       ((uint32_t)0x00100000)        /*!&lt; Filter bit 20 */</div><div class="line">#define  CAN_F0R1_FB21                       ((uint32_t)0x00200000)        /*!&lt; Filter bit 21 */</div><div class="line">#define  CAN_F0R1_FB22                       ((uint32_t)0x00400000)        /*!&lt; Filter bit 22 */</div><div class="line">#define  CAN_F0R1_FB23                       ((uint32_t)0x00800000)        /*!&lt; Filter bit 23 */</div><div class="line">#define  CAN_F0R1_FB24                       ((uint32_t)0x01000000)        /*!&lt; Filter bit 24 */</div><div class="line">#define  CAN_F0R1_FB25                       ((uint32_t)0x02000000)        /*!&lt; Filter bit 25 */</div><div class="line">#define  CAN_F0R1_FB26                       ((uint32_t)0x04000000)        /*!&lt; Filter bit 26 */</div><div class="line">#define  CAN_F0R1_FB27                       ((uint32_t)0x08000000)        /*!&lt; Filter bit 27 */</div><div class="line">#define  CAN_F0R1_FB28                       ((uint32_t)0x10000000)        /*!&lt; Filter bit 28 */</div><div class="line">#define  CAN_F0R1_FB29                       ((uint32_t)0x20000000)        /*!&lt; Filter bit 29 */</div><div class="line">#define  CAN_F0R1_FB30                       ((uint32_t)0x40000000)        /*!&lt; Filter bit 30 */</div><div class="line">#define  CAN_F0R1_FB31                       ((uint32_t)0x80000000)        /*!&lt; Filter bit 31 */</div><div class="line"></div><div class="line">/*******************  Bit definition for CAN_F1R1 register  *******************/</div><div class="line">#define  CAN_F1R1_FB0                        ((uint32_t)0x00000001)        /*!&lt; Filter bit 0 */</div><div class="line">#define  CAN_F1R1_FB1                        ((uint32_t)0x00000002)        /*!&lt; Filter bit 1 */</div><div class="line">#define  CAN_F1R1_FB2                        ((uint32_t)0x00000004)        /*!&lt; Filter bit 2 */</div><div class="line">#define  CAN_F1R1_FB3                        ((uint32_t)0x00000008)        /*!&lt; Filter bit 3 */</div><div class="line">#define  CAN_F1R1_FB4                        ((uint32_t)0x00000010)        /*!&lt; Filter bit 4 */</div><div class="line">#define  CAN_F1R1_FB5                        ((uint32_t)0x00000020)        /*!&lt; Filter bit 5 */</div><div class="line">#define  CAN_F1R1_FB6                        ((uint32_t)0x00000040)        /*!&lt; Filter bit 6 */</div><div class="line">#define  CAN_F1R1_FB7                        ((uint32_t)0x00000080)        /*!&lt; Filter bit 7 */</div><div class="line">#define  CAN_F1R1_FB8                        ((uint32_t)0x00000100)        /*!&lt; Filter bit 8 */</div><div class="line">#define  CAN_F1R1_FB9                        ((uint32_t)0x00000200)        /*!&lt; Filter bit 9 */</div><div class="line">#define  CAN_F1R1_FB10                       ((uint32_t)0x00000400)        /*!&lt; Filter bit 10 */</div><div class="line">#define  CAN_F1R1_FB11                       ((uint32_t)0x00000800)        /*!&lt; Filter bit 11 */</div><div class="line">#define  CAN_F1R1_FB12                       ((uint32_t)0x00001000)        /*!&lt; Filter bit 12 */</div><div class="line">#define  CAN_F1R1_FB13                       ((uint32_t)0x00002000)        /*!&lt; Filter bit 13 */</div><div class="line">#define  CAN_F1R1_FB14                       ((uint32_t)0x00004000)        /*!&lt; Filter bit 14 */</div><div class="line">#define  CAN_F1R1_FB15                       ((uint32_t)0x00008000)        /*!&lt; Filter bit 15 */</div><div class="line">#define  CAN_F1R1_FB16                       ((uint32_t)0x00010000)        /*!&lt; Filter bit 16 */</div><div class="line">#define  CAN_F1R1_FB17                       ((uint32_t)0x00020000)        /*!&lt; Filter bit 17 */</div><div class="line">#define  CAN_F1R1_FB18                       ((uint32_t)0x00040000)        /*!&lt; Filter bit 18 */</div><div class="line">#define  CAN_F1R1_FB19                       ((uint32_t)0x00080000)        /*!&lt; Filter bit 19 */</div><div class="line">#define  CAN_F1R1_FB20                       ((uint32_t)0x00100000)        /*!&lt; Filter bit 20 */</div><div class="line">#define  CAN_F1R1_FB21                       ((uint32_t)0x00200000)        /*!&lt; Filter bit 21 */</div><div class="line">#define  CAN_F1R1_FB22                       ((uint32_t)0x00400000)        /*!&lt; Filter bit 22 */</div><div class="line">#define  CAN_F1R1_FB23                       ((uint32_t)0x00800000)        /*!&lt; Filter bit 23 */</div><div class="line">#define  CAN_F1R1_FB24                       ((uint32_t)0x01000000)        /*!&lt; Filter bit 24 */</div><div class="line">#define  CAN_F1R1_FB25                       ((uint32_t)0x02000000)        /*!&lt; Filter bit 25 */</div><div class="line">#define  CAN_F1R1_FB26                       ((uint32_t)0x04000000)        /*!&lt; Filter bit 26 */</div><div class="line">#define  CAN_F1R1_FB27                       ((uint32_t)0x08000000)        /*!&lt; Filter bit 27 */</div><div class="line">#define  CAN_F1R1_FB28                       ((uint32_t)0x10000000)        /*!&lt; Filter bit 28 */</div><div class="line">#define  CAN_F1R1_FB29                       ((uint32_t)0x20000000)        /*!&lt; Filter bit 29 */</div><div class="line">#define  CAN_F1R1_FB30                       ((uint32_t)0x40000000)        /*!&lt; Filter bit 30 */</div><div class="line">#define  CAN_F1R1_FB31                       ((uint32_t)0x80000000)        /*!&lt; Filter bit 31 */</div><div class="line"></div><div class="line">/*******************  Bit definition for CAN_F2R1 register  *******************/</div><div class="line">#define  CAN_F2R1_FB0                        ((uint32_t)0x00000001)        /*!&lt; Filter bit 0 */</div><div class="line">#define  CAN_F2R1_FB1                        ((uint32_t)0x00000002)        /*!&lt; Filter bit 1 */</div><div class="line">#define  CAN_F2R1_FB2                        ((uint32_t)0x00000004)        /*!&lt; Filter bit 2 */</div><div class="line">#define  CAN_F2R1_FB3                        ((uint32_t)0x00000008)        /*!&lt; Filter bit 3 */</div><div class="line">#define  CAN_F2R1_FB4                        ((uint32_t)0x00000010)        /*!&lt; Filter bit 4 */</div><div class="line">#define  CAN_F2R1_FB5                        ((uint32_t)0x00000020)        /*!&lt; Filter bit 5 */</div><div class="line">#define  CAN_F2R1_FB6                        ((uint32_t)0x00000040)        /*!&lt; Filter bit 6 */</div><div class="line">#define  CAN_F2R1_FB7                        ((uint32_t)0x00000080)        /*!&lt; Filter bit 7 */</div><div class="line">#define  CAN_F2R1_FB8                        ((uint32_t)0x00000100)        /*!&lt; Filter bit 8 */</div><div class="line">#define  CAN_F2R1_FB9                        ((uint32_t)0x00000200)        /*!&lt; Filter bit 9 */</div><div class="line">#define  CAN_F2R1_FB10                       ((uint32_t)0x00000400)        /*!&lt; Filter bit 10 */</div><div class="line">#define  CAN_F2R1_FB11                       ((uint32_t)0x00000800)        /*!&lt; Filter bit 11 */</div><div class="line">#define  CAN_F2R1_FB12                       ((uint32_t)0x00001000)        /*!&lt; Filter bit 12 */</div><div class="line">#define  CAN_F2R1_FB13                       ((uint32_t)0x00002000)        /*!&lt; Filter bit 13 */</div><div class="line">#define  CAN_F2R1_FB14                       ((uint32_t)0x00004000)        /*!&lt; Filter bit 14 */</div><div class="line">#define  CAN_F2R1_FB15                       ((uint32_t)0x00008000)        /*!&lt; Filter bit 15 */</div><div class="line">#define  CAN_F2R1_FB16                       ((uint32_t)0x00010000)        /*!&lt; Filter bit 16 */</div><div class="line">#define  CAN_F2R1_FB17                       ((uint32_t)0x00020000)        /*!&lt; Filter bit 17 */</div><div class="line">#define  CAN_F2R1_FB18                       ((uint32_t)0x00040000)        /*!&lt; Filter bit 18 */</div><div class="line">#define  CAN_F2R1_FB19                       ((uint32_t)0x00080000)        /*!&lt; Filter bit 19 */</div><div class="line">#define  CAN_F2R1_FB20                       ((uint32_t)0x00100000)        /*!&lt; Filter bit 20 */</div><div class="line">#define  CAN_F2R1_FB21                       ((uint32_t)0x00200000)        /*!&lt; Filter bit 21 */</div><div class="line">#define  CAN_F2R1_FB22                       ((uint32_t)0x00400000)        /*!&lt; Filter bit 22 */</div><div class="line">#define  CAN_F2R1_FB23                       ((uint32_t)0x00800000)        /*!&lt; Filter bit 23 */</div><div class="line">#define  CAN_F2R1_FB24                       ((uint32_t)0x01000000)        /*!&lt; Filter bit 24 */</div><div class="line">#define  CAN_F2R1_FB25                       ((uint32_t)0x02000000)        /*!&lt; Filter bit 25 */</div><div class="line">#define  CAN_F2R1_FB26                       ((uint32_t)0x04000000)        /*!&lt; Filter bit 26 */</div><div class="line">#define  CAN_F2R1_FB27                       ((uint32_t)0x08000000)        /*!&lt; Filter bit 27 */</div><div class="line">#define  CAN_F2R1_FB28                       ((uint32_t)0x10000000)        /*!&lt; Filter bit 28 */</div><div class="line">#define  CAN_F2R1_FB29                       ((uint32_t)0x20000000)        /*!&lt; Filter bit 29 */</div><div class="line">#define  CAN_F2R1_FB30                       ((uint32_t)0x40000000)        /*!&lt; Filter bit 30 */</div><div class="line">#define  CAN_F2R1_FB31                       ((uint32_t)0x80000000)        /*!&lt; Filter bit 31 */</div><div class="line"></div><div class="line">/*******************  Bit definition for CAN_F3R1 register  *******************/</div><div class="line">#define  CAN_F3R1_FB0                        ((uint32_t)0x00000001)        /*!&lt; Filter bit 0 */</div><div class="line">#define  CAN_F3R1_FB1                        ((uint32_t)0x00000002)        /*!&lt; Filter bit 1 */</div><div class="line">#define  CAN_F3R1_FB2                        ((uint32_t)0x00000004)        /*!&lt; Filter bit 2 */</div><div class="line">#define  CAN_F3R1_FB3                        ((uint32_t)0x00000008)        /*!&lt; Filter bit 3 */</div><div class="line">#define  CAN_F3R1_FB4                        ((uint32_t)0x00000010)        /*!&lt; Filter bit 4 */</div><div class="line">#define  CAN_F3R1_FB5                        ((uint32_t)0x00000020)        /*!&lt; Filter bit 5 */</div><div class="line">#define  CAN_F3R1_FB6                        ((uint32_t)0x00000040)        /*!&lt; Filter bit 6 */</div><div class="line">#define  CAN_F3R1_FB7                        ((uint32_t)0x00000080)        /*!&lt; Filter bit 7 */</div><div class="line">#define  CAN_F3R1_FB8                        ((uint32_t)0x00000100)        /*!&lt; Filter bit 8 */</div><div class="line">#define  CAN_F3R1_FB9                        ((uint32_t)0x00000200)        /*!&lt; Filter bit 9 */</div><div class="line">#define  CAN_F3R1_FB10                       ((uint32_t)0x00000400)        /*!&lt; Filter bit 10 */</div><div class="line">#define  CAN_F3R1_FB11                       ((uint32_t)0x00000800)        /*!&lt; Filter bit 11 */</div><div class="line">#define  CAN_F3R1_FB12                       ((uint32_t)0x00001000)        /*!&lt; Filter bit 12 */</div><div class="line">#define  CAN_F3R1_FB13                       ((uint32_t)0x00002000)        /*!&lt; Filter bit 13 */</div><div class="line">#define  CAN_F3R1_FB14                       ((uint32_t)0x00004000)        /*!&lt; Filter bit 14 */</div><div class="line">#define  CAN_F3R1_FB15                       ((uint32_t)0x00008000)        /*!&lt; Filter bit 15 */</div><div class="line">#define  CAN_F3R1_FB16                       ((uint32_t)0x00010000)        /*!&lt; Filter bit 16 */</div><div class="line">#define  CAN_F3R1_FB17                       ((uint32_t)0x00020000)        /*!&lt; Filter bit 17 */</div><div class="line">#define  CAN_F3R1_FB18                       ((uint32_t)0x00040000)        /*!&lt; Filter bit 18 */</div><div class="line">#define  CAN_F3R1_FB19                       ((uint32_t)0x00080000)        /*!&lt; Filter bit 19 */</div><div class="line">#define  CAN_F3R1_FB20                       ((uint32_t)0x00100000)        /*!&lt; Filter bit 20 */</div><div class="line">#define  CAN_F3R1_FB21                       ((uint32_t)0x00200000)        /*!&lt; Filter bit 21 */</div><div class="line">#define  CAN_F3R1_FB22                       ((uint32_t)0x00400000)        /*!&lt; Filter bit 22 */</div><div class="line">#define  CAN_F3R1_FB23                       ((uint32_t)0x00800000)        /*!&lt; Filter bit 23 */</div><div class="line">#define  CAN_F3R1_FB24                       ((uint32_t)0x01000000)        /*!&lt; Filter bit 24 */</div><div class="line">#define  CAN_F3R1_FB25                       ((uint32_t)0x02000000)        /*!&lt; Filter bit 25 */</div><div class="line">#define  CAN_F3R1_FB26                       ((uint32_t)0x04000000)        /*!&lt; Filter bit 26 */</div><div class="line">#define  CAN_F3R1_FB27                       ((uint32_t)0x08000000)        /*!&lt; Filter bit 27 */</div><div class="line">#define  CAN_F3R1_FB28                       ((uint32_t)0x10000000)        /*!&lt; Filter bit 28 */</div><div class="line">#define  CAN_F3R1_FB29                       ((uint32_t)0x20000000)        /*!&lt; Filter bit 29 */</div><div class="line">#define  CAN_F3R1_FB30                       ((uint32_t)0x40000000)        /*!&lt; Filter bit 30 */</div><div class="line">#define  CAN_F3R1_FB31                       ((uint32_t)0x80000000)        /*!&lt; Filter bit 31 */</div><div class="line"></div><div class="line">/*******************  Bit definition for CAN_F4R1 register  *******************/</div><div class="line">#define  CAN_F4R1_FB0                        ((uint32_t)0x00000001)        /*!&lt; Filter bit 0 */</div><div class="line">#define  CAN_F4R1_FB1                        ((uint32_t)0x00000002)        /*!&lt; Filter bit 1 */</div><div class="line">#define  CAN_F4R1_FB2                        ((uint32_t)0x00000004)        /*!&lt; Filter bit 2 */</div><div class="line">#define  CAN_F4R1_FB3                        ((uint32_t)0x00000008)        /*!&lt; Filter bit 3 */</div><div class="line">#define  CAN_F4R1_FB4                        ((uint32_t)0x00000010)        /*!&lt; Filter bit 4 */</div><div class="line">#define  CAN_F4R1_FB5                        ((uint32_t)0x00000020)        /*!&lt; Filter bit 5 */</div><div class="line">#define  CAN_F4R1_FB6                        ((uint32_t)0x00000040)        /*!&lt; Filter bit 6 */</div><div class="line">#define  CAN_F4R1_FB7                        ((uint32_t)0x00000080)        /*!&lt; Filter bit 7 */</div><div class="line">#define  CAN_F4R1_FB8                        ((uint32_t)0x00000100)        /*!&lt; Filter bit 8 */</div><div class="line">#define  CAN_F4R1_FB9                        ((uint32_t)0x00000200)        /*!&lt; Filter bit 9 */</div><div class="line">#define  CAN_F4R1_FB10                       ((uint32_t)0x00000400)        /*!&lt; Filter bit 10 */</div><div class="line">#define  CAN_F4R1_FB11                       ((uint32_t)0x00000800)        /*!&lt; Filter bit 11 */</div><div class="line">#define  CAN_F4R1_FB12                       ((uint32_t)0x00001000)        /*!&lt; Filter bit 12 */</div><div class="line">#define  CAN_F4R1_FB13                       ((uint32_t)0x00002000)        /*!&lt; Filter bit 13 */</div><div class="line">#define  CAN_F4R1_FB14                       ((uint32_t)0x00004000)        /*!&lt; Filter bit 14 */</div><div class="line">#define  CAN_F4R1_FB15                       ((uint32_t)0x00008000)        /*!&lt; Filter bit 15 */</div><div class="line">#define  CAN_F4R1_FB16                       ((uint32_t)0x00010000)        /*!&lt; Filter bit 16 */</div><div class="line">#define  CAN_F4R1_FB17                       ((uint32_t)0x00020000)        /*!&lt; Filter bit 17 */</div><div class="line">#define  CAN_F4R1_FB18                       ((uint32_t)0x00040000)        /*!&lt; Filter bit 18 */</div><div class="line">#define  CAN_F4R1_FB19                       ((uint32_t)0x00080000)        /*!&lt; Filter bit 19 */</div><div class="line">#define  CAN_F4R1_FB20                       ((uint32_t)0x00100000)        /*!&lt; Filter bit 20 */</div><div class="line">#define  CAN_F4R1_FB21                       ((uint32_t)0x00200000)        /*!&lt; Filter bit 21 */</div><div class="line">#define  CAN_F4R1_FB22                       ((uint32_t)0x00400000)        /*!&lt; Filter bit 22 */</div><div class="line">#define  CAN_F4R1_FB23                       ((uint32_t)0x00800000)        /*!&lt; Filter bit 23 */</div><div class="line">#define  CAN_F4R1_FB24                       ((uint32_t)0x01000000)        /*!&lt; Filter bit 24 */</div><div class="line">#define  CAN_F4R1_FB25                       ((uint32_t)0x02000000)        /*!&lt; Filter bit 25 */</div><div class="line">#define  CAN_F4R1_FB26                       ((uint32_t)0x04000000)        /*!&lt; Filter bit 26 */</div><div class="line">#define  CAN_F4R1_FB27                       ((uint32_t)0x08000000)        /*!&lt; Filter bit 27 */</div><div class="line">#define  CAN_F4R1_FB28                       ((uint32_t)0x10000000)        /*!&lt; Filter bit 28 */</div><div class="line">#define  CAN_F4R1_FB29                       ((uint32_t)0x20000000)        /*!&lt; Filter bit 29 */</div><div class="line">#define  CAN_F4R1_FB30                       ((uint32_t)0x40000000)        /*!&lt; Filter bit 30 */</div><div class="line">#define  CAN_F4R1_FB31                       ((uint32_t)0x80000000)        /*!&lt; Filter bit 31 */</div><div class="line"></div><div class="line">/*******************  Bit definition for CAN_F5R1 register  *******************/</div><div class="line">#define  CAN_F5R1_FB0                        ((uint32_t)0x00000001)        /*!&lt; Filter bit 0 */</div><div class="line">#define  CAN_F5R1_FB1                        ((uint32_t)0x00000002)        /*!&lt; Filter bit 1 */</div><div class="line">#define  CAN_F5R1_FB2                        ((uint32_t)0x00000004)        /*!&lt; Filter bit 2 */</div><div class="line">#define  CAN_F5R1_FB3                        ((uint32_t)0x00000008)        /*!&lt; Filter bit 3 */</div><div class="line">#define  CAN_F5R1_FB4                        ((uint32_t)0x00000010)        /*!&lt; Filter bit 4 */</div><div class="line">#define  CAN_F5R1_FB5                        ((uint32_t)0x00000020)        /*!&lt; Filter bit 5 */</div><div class="line">#define  CAN_F5R1_FB6                        ((uint32_t)0x00000040)        /*!&lt; Filter bit 6 */</div><div class="line">#define  CAN_F5R1_FB7                        ((uint32_t)0x00000080)        /*!&lt; Filter bit 7 */</div><div class="line">#define  CAN_F5R1_FB8                        ((uint32_t)0x00000100)        /*!&lt; Filter bit 8 */</div><div class="line">#define  CAN_F5R1_FB9                        ((uint32_t)0x00000200)        /*!&lt; Filter bit 9 */</div><div class="line">#define  CAN_F5R1_FB10                       ((uint32_t)0x00000400)        /*!&lt; Filter bit 10 */</div><div class="line">#define  CAN_F5R1_FB11                       ((uint32_t)0x00000800)        /*!&lt; Filter bit 11 */</div><div class="line">#define  CAN_F5R1_FB12                       ((uint32_t)0x00001000)        /*!&lt; Filter bit 12 */</div><div class="line">#define  CAN_F5R1_FB13                       ((uint32_t)0x00002000)        /*!&lt; Filter bit 13 */</div><div class="line">#define  CAN_F5R1_FB14                       ((uint32_t)0x00004000)        /*!&lt; Filter bit 14 */</div><div class="line">#define  CAN_F5R1_FB15                       ((uint32_t)0x00008000)        /*!&lt; Filter bit 15 */</div><div class="line">#define  CAN_F5R1_FB16                       ((uint32_t)0x00010000)        /*!&lt; Filter bit 16 */</div><div class="line">#define  CAN_F5R1_FB17                       ((uint32_t)0x00020000)        /*!&lt; Filter bit 17 */</div><div class="line">#define  CAN_F5R1_FB18                       ((uint32_t)0x00040000)        /*!&lt; Filter bit 18 */</div><div class="line">#define  CAN_F5R1_FB19                       ((uint32_t)0x00080000)        /*!&lt; Filter bit 19 */</div><div class="line">#define  CAN_F5R1_FB20                       ((uint32_t)0x00100000)        /*!&lt; Filter bit 20 */</div><div class="line">#define  CAN_F5R1_FB21                       ((uint32_t)0x00200000)        /*!&lt; Filter bit 21 */</div><div class="line">#define  CAN_F5R1_FB22                       ((uint32_t)0x00400000)        /*!&lt; Filter bit 22 */</div><div class="line">#define  CAN_F5R1_FB23                       ((uint32_t)0x00800000)        /*!&lt; Filter bit 23 */</div><div class="line">#define  CAN_F5R1_FB24                       ((uint32_t)0x01000000)        /*!&lt; Filter bit 24 */</div><div class="line">#define  CAN_F5R1_FB25                       ((uint32_t)0x02000000)        /*!&lt; Filter bit 25 */</div><div class="line">#define  CAN_F5R1_FB26                       ((uint32_t)0x04000000)        /*!&lt; Filter bit 26 */</div><div class="line">#define  CAN_F5R1_FB27                       ((uint32_t)0x08000000)        /*!&lt; Filter bit 27 */</div><div class="line">#define  CAN_F5R1_FB28                       ((uint32_t)0x10000000)        /*!&lt; Filter bit 28 */</div><div class="line">#define  CAN_F5R1_FB29                       ((uint32_t)0x20000000)        /*!&lt; Filter bit 29 */</div><div class="line">#define  CAN_F5R1_FB30                       ((uint32_t)0x40000000)        /*!&lt; Filter bit 30 */</div><div class="line">#define  CAN_F5R1_FB31                       ((uint32_t)0x80000000)        /*!&lt; Filter bit 31 */</div><div class="line"></div><div class="line">/*******************  Bit definition for CAN_F6R1 register  *******************/</div><div class="line">#define  CAN_F6R1_FB0                        ((uint32_t)0x00000001)        /*!&lt; Filter bit 0 */</div><div class="line">#define  CAN_F6R1_FB1                        ((uint32_t)0x00000002)        /*!&lt; Filter bit 1 */</div><div class="line">#define  CAN_F6R1_FB2                        ((uint32_t)0x00000004)        /*!&lt; Filter bit 2 */</div><div class="line">#define  CAN_F6R1_FB3                        ((uint32_t)0x00000008)        /*!&lt; Filter bit 3 */</div><div class="line">#define  CAN_F6R1_FB4                        ((uint32_t)0x00000010)        /*!&lt; Filter bit 4 */</div><div class="line">#define  CAN_F6R1_FB5                        ((uint32_t)0x00000020)        /*!&lt; Filter bit 5 */</div><div class="line">#define  CAN_F6R1_FB6                        ((uint32_t)0x00000040)        /*!&lt; Filter bit 6 */</div><div class="line">#define  CAN_F6R1_FB7                        ((uint32_t)0x00000080)        /*!&lt; Filter bit 7 */</div><div class="line">#define  CAN_F6R1_FB8                        ((uint32_t)0x00000100)        /*!&lt; Filter bit 8 */</div><div class="line">#define  CAN_F6R1_FB9                        ((uint32_t)0x00000200)        /*!&lt; Filter bit 9 */</div><div class="line">#define  CAN_F6R1_FB10                       ((uint32_t)0x00000400)        /*!&lt; Filter bit 10 */</div><div class="line">#define  CAN_F6R1_FB11                       ((uint32_t)0x00000800)        /*!&lt; Filter bit 11 */</div><div class="line">#define  CAN_F6R1_FB12                       ((uint32_t)0x00001000)        /*!&lt; Filter bit 12 */</div><div class="line">#define  CAN_F6R1_FB13                       ((uint32_t)0x00002000)        /*!&lt; Filter bit 13 */</div><div class="line">#define  CAN_F6R1_FB14                       ((uint32_t)0x00004000)        /*!&lt; Filter bit 14 */</div><div class="line">#define  CAN_F6R1_FB15                       ((uint32_t)0x00008000)        /*!&lt; Filter bit 15 */</div><div class="line">#define  CAN_F6R1_FB16                       ((uint32_t)0x00010000)        /*!&lt; Filter bit 16 */</div><div class="line">#define  CAN_F6R1_FB17                       ((uint32_t)0x00020000)        /*!&lt; Filter bit 17 */</div><div class="line">#define  CAN_F6R1_FB18                       ((uint32_t)0x00040000)        /*!&lt; Filter bit 18 */</div><div class="line">#define  CAN_F6R1_FB19                       ((uint32_t)0x00080000)        /*!&lt; Filter bit 19 */</div><div class="line">#define  CAN_F6R1_FB20                       ((uint32_t)0x00100000)        /*!&lt; Filter bit 20 */</div><div class="line">#define  CAN_F6R1_FB21                       ((uint32_t)0x00200000)        /*!&lt; Filter bit 21 */</div><div class="line">#define  CAN_F6R1_FB22                       ((uint32_t)0x00400000)        /*!&lt; Filter bit 22 */</div><div class="line">#define  CAN_F6R1_FB23                       ((uint32_t)0x00800000)        /*!&lt; Filter bit 23 */</div><div class="line">#define  CAN_F6R1_FB24                       ((uint32_t)0x01000000)        /*!&lt; Filter bit 24 */</div><div class="line">#define  CAN_F6R1_FB25                       ((uint32_t)0x02000000)        /*!&lt; Filter bit 25 */</div><div class="line">#define  CAN_F6R1_FB26                       ((uint32_t)0x04000000)        /*!&lt; Filter bit 26 */</div><div class="line">#define  CAN_F6R1_FB27                       ((uint32_t)0x08000000)        /*!&lt; Filter bit 27 */</div><div class="line">#define  CAN_F6R1_FB28                       ((uint32_t)0x10000000)        /*!&lt; Filter bit 28 */</div><div class="line">#define  CAN_F6R1_FB29                       ((uint32_t)0x20000000)        /*!&lt; Filter bit 29 */</div><div class="line">#define  CAN_F6R1_FB30                       ((uint32_t)0x40000000)        /*!&lt; Filter bit 30 */</div><div class="line">#define  CAN_F6R1_FB31                       ((uint32_t)0x80000000)        /*!&lt; Filter bit 31 */</div><div class="line"></div><div class="line">/*******************  Bit definition for CAN_F7R1 register  *******************/</div><div class="line">#define  CAN_F7R1_FB0                        ((uint32_t)0x00000001)        /*!&lt; Filter bit 0 */</div><div class="line">#define  CAN_F7R1_FB1                        ((uint32_t)0x00000002)        /*!&lt; Filter bit 1 */</div><div class="line">#define  CAN_F7R1_FB2                        ((uint32_t)0x00000004)        /*!&lt; Filter bit 2 */</div><div class="line">#define  CAN_F7R1_FB3                        ((uint32_t)0x00000008)        /*!&lt; Filter bit 3 */</div><div class="line">#define  CAN_F7R1_FB4                        ((uint32_t)0x00000010)        /*!&lt; Filter bit 4 */</div><div class="line">#define  CAN_F7R1_FB5                        ((uint32_t)0x00000020)        /*!&lt; Filter bit 5 */</div><div class="line">#define  CAN_F7R1_FB6                        ((uint32_t)0x00000040)        /*!&lt; Filter bit 6 */</div><div class="line">#define  CAN_F7R1_FB7                        ((uint32_t)0x00000080)        /*!&lt; Filter bit 7 */</div><div class="line">#define  CAN_F7R1_FB8                        ((uint32_t)0x00000100)        /*!&lt; Filter bit 8 */</div><div class="line">#define  CAN_F7R1_FB9                        ((uint32_t)0x00000200)        /*!&lt; Filter bit 9 */</div><div class="line">#define  CAN_F7R1_FB10                       ((uint32_t)0x00000400)        /*!&lt; Filter bit 10 */</div><div class="line">#define  CAN_F7R1_FB11                       ((uint32_t)0x00000800)        /*!&lt; Filter bit 11 */</div><div class="line">#define  CAN_F7R1_FB12                       ((uint32_t)0x00001000)        /*!&lt; Filter bit 12 */</div><div class="line">#define  CAN_F7R1_FB13                       ((uint32_t)0x00002000)        /*!&lt; Filter bit 13 */</div><div class="line">#define  CAN_F7R1_FB14                       ((uint32_t)0x00004000)        /*!&lt; Filter bit 14 */</div><div class="line">#define  CAN_F7R1_FB15                       ((uint32_t)0x00008000)        /*!&lt; Filter bit 15 */</div><div class="line">#define  CAN_F7R1_FB16                       ((uint32_t)0x00010000)        /*!&lt; Filter bit 16 */</div><div class="line">#define  CAN_F7R1_FB17                       ((uint32_t)0x00020000)        /*!&lt; Filter bit 17 */</div><div class="line">#define  CAN_F7R1_FB18                       ((uint32_t)0x00040000)        /*!&lt; Filter bit 18 */</div><div class="line">#define  CAN_F7R1_FB19                       ((uint32_t)0x00080000)        /*!&lt; Filter bit 19 */</div><div class="line">#define  CAN_F7R1_FB20                       ((uint32_t)0x00100000)        /*!&lt; Filter bit 20 */</div><div class="line">#define  CAN_F7R1_FB21                       ((uint32_t)0x00200000)        /*!&lt; Filter bit 21 */</div><div class="line">#define  CAN_F7R1_FB22                       ((uint32_t)0x00400000)        /*!&lt; Filter bit 22 */</div><div class="line">#define  CAN_F7R1_FB23                       ((uint32_t)0x00800000)        /*!&lt; Filter bit 23 */</div><div class="line">#define  CAN_F7R1_FB24                       ((uint32_t)0x01000000)        /*!&lt; Filter bit 24 */</div><div class="line">#define  CAN_F7R1_FB25                       ((uint32_t)0x02000000)        /*!&lt; Filter bit 25 */</div><div class="line">#define  CAN_F7R1_FB26                       ((uint32_t)0x04000000)        /*!&lt; Filter bit 26 */</div><div class="line">#define  CAN_F7R1_FB27                       ((uint32_t)0x08000000)        /*!&lt; Filter bit 27 */</div><div class="line">#define  CAN_F7R1_FB28                       ((uint32_t)0x10000000)        /*!&lt; Filter bit 28 */</div><div class="line">#define  CAN_F7R1_FB29                       ((uint32_t)0x20000000)        /*!&lt; Filter bit 29 */</div><div class="line">#define  CAN_F7R1_FB30                       ((uint32_t)0x40000000)        /*!&lt; Filter bit 30 */</div><div class="line">#define  CAN_F7R1_FB31                       ((uint32_t)0x80000000)        /*!&lt; Filter bit 31 */</div><div class="line"></div><div class="line">/*******************  Bit definition for CAN_F8R1 register  *******************/</div><div class="line">#define  CAN_F8R1_FB0                        ((uint32_t)0x00000001)        /*!&lt; Filter bit 0 */</div><div class="line">#define  CAN_F8R1_FB1                        ((uint32_t)0x00000002)        /*!&lt; Filter bit 1 */</div><div class="line">#define  CAN_F8R1_FB2                        ((uint32_t)0x00000004)        /*!&lt; Filter bit 2 */</div><div class="line">#define  CAN_F8R1_FB3                        ((uint32_t)0x00000008)        /*!&lt; Filter bit 3 */</div><div class="line">#define  CAN_F8R1_FB4                        ((uint32_t)0x00000010)        /*!&lt; Filter bit 4 */</div><div class="line">#define  CAN_F8R1_FB5                        ((uint32_t)0x00000020)        /*!&lt; Filter bit 5 */</div><div class="line">#define  CAN_F8R1_FB6                        ((uint32_t)0x00000040)        /*!&lt; Filter bit 6 */</div><div class="line">#define  CAN_F8R1_FB7                        ((uint32_t)0x00000080)        /*!&lt; Filter bit 7 */</div><div class="line">#define  CAN_F8R1_FB8                        ((uint32_t)0x00000100)        /*!&lt; Filter bit 8 */</div><div class="line">#define  CAN_F8R1_FB9                        ((uint32_t)0x00000200)        /*!&lt; Filter bit 9 */</div><div class="line">#define  CAN_F8R1_FB10                       ((uint32_t)0x00000400)        /*!&lt; Filter bit 10 */</div><div class="line">#define  CAN_F8R1_FB11                       ((uint32_t)0x00000800)        /*!&lt; Filter bit 11 */</div><div class="line">#define  CAN_F8R1_FB12                       ((uint32_t)0x00001000)        /*!&lt; Filter bit 12 */</div><div class="line">#define  CAN_F8R1_FB13                       ((uint32_t)0x00002000)        /*!&lt; Filter bit 13 */</div><div class="line">#define  CAN_F8R1_FB14                       ((uint32_t)0x00004000)        /*!&lt; Filter bit 14 */</div><div class="line">#define  CAN_F8R1_FB15                       ((uint32_t)0x00008000)        /*!&lt; Filter bit 15 */</div><div class="line">#define  CAN_F8R1_FB16                       ((uint32_t)0x00010000)        /*!&lt; Filter bit 16 */</div><div class="line">#define  CAN_F8R1_FB17                       ((uint32_t)0x00020000)        /*!&lt; Filter bit 17 */</div><div class="line">#define  CAN_F8R1_FB18                       ((uint32_t)0x00040000)        /*!&lt; Filter bit 18 */</div><div class="line">#define  CAN_F8R1_FB19                       ((uint32_t)0x00080000)        /*!&lt; Filter bit 19 */</div><div class="line">#define  CAN_F8R1_FB20                       ((uint32_t)0x00100000)        /*!&lt; Filter bit 20 */</div><div class="line">#define  CAN_F8R1_FB21                       ((uint32_t)0x00200000)        /*!&lt; Filter bit 21 */</div><div class="line">#define  CAN_F8R1_FB22                       ((uint32_t)0x00400000)        /*!&lt; Filter bit 22 */</div><div class="line">#define  CAN_F8R1_FB23                       ((uint32_t)0x00800000)        /*!&lt; Filter bit 23 */</div><div class="line">#define  CAN_F8R1_FB24                       ((uint32_t)0x01000000)        /*!&lt; Filter bit 24 */</div><div class="line">#define  CAN_F8R1_FB25                       ((uint32_t)0x02000000)        /*!&lt; Filter bit 25 */</div><div class="line">#define  CAN_F8R1_FB26                       ((uint32_t)0x04000000)        /*!&lt; Filter bit 26 */</div><div class="line">#define  CAN_F8R1_FB27                       ((uint32_t)0x08000000)        /*!&lt; Filter bit 27 */</div><div class="line">#define  CAN_F8R1_FB28                       ((uint32_t)0x10000000)        /*!&lt; Filter bit 28 */</div><div class="line">#define  CAN_F8R1_FB29                       ((uint32_t)0x20000000)        /*!&lt; Filter bit 29 */</div><div class="line">#define  CAN_F8R1_FB30                       ((uint32_t)0x40000000)        /*!&lt; Filter bit 30 */</div><div class="line">#define  CAN_F8R1_FB31                       ((uint32_t)0x80000000)        /*!&lt; Filter bit 31 */</div><div class="line"></div><div class="line">/*******************  Bit definition for CAN_F9R1 register  *******************/</div><div class="line">#define  CAN_F9R1_FB0                        ((uint32_t)0x00000001)        /*!&lt; Filter bit 0 */</div><div class="line">#define  CAN_F9R1_FB1                        ((uint32_t)0x00000002)        /*!&lt; Filter bit 1 */</div><div class="line">#define  CAN_F9R1_FB2                        ((uint32_t)0x00000004)        /*!&lt; Filter bit 2 */</div><div class="line">#define  CAN_F9R1_FB3                        ((uint32_t)0x00000008)        /*!&lt; Filter bit 3 */</div><div class="line">#define  CAN_F9R1_FB4                        ((uint32_t)0x00000010)        /*!&lt; Filter bit 4 */</div><div class="line">#define  CAN_F9R1_FB5                        ((uint32_t)0x00000020)        /*!&lt; Filter bit 5 */</div><div class="line">#define  CAN_F9R1_FB6                        ((uint32_t)0x00000040)        /*!&lt; Filter bit 6 */</div><div class="line">#define  CAN_F9R1_FB7                        ((uint32_t)0x00000080)        /*!&lt; Filter bit 7 */</div><div class="line">#define  CAN_F9R1_FB8                        ((uint32_t)0x00000100)        /*!&lt; Filter bit 8 */</div><div class="line">#define  CAN_F9R1_FB9                        ((uint32_t)0x00000200)        /*!&lt; Filter bit 9 */</div><div class="line">#define  CAN_F9R1_FB10                       ((uint32_t)0x00000400)        /*!&lt; Filter bit 10 */</div><div class="line">#define  CAN_F9R1_FB11                       ((uint32_t)0x00000800)        /*!&lt; Filter bit 11 */</div><div class="line">#define  CAN_F9R1_FB12                       ((uint32_t)0x00001000)        /*!&lt; Filter bit 12 */</div><div class="line">#define  CAN_F9R1_FB13                       ((uint32_t)0x00002000)        /*!&lt; Filter bit 13 */</div><div class="line">#define  CAN_F9R1_FB14                       ((uint32_t)0x00004000)        /*!&lt; Filter bit 14 */</div><div class="line">#define  CAN_F9R1_FB15                       ((uint32_t)0x00008000)        /*!&lt; Filter bit 15 */</div><div class="line">#define  CAN_F9R1_FB16                       ((uint32_t)0x00010000)        /*!&lt; Filter bit 16 */</div><div class="line">#define  CAN_F9R1_FB17                       ((uint32_t)0x00020000)        /*!&lt; Filter bit 17 */</div><div class="line">#define  CAN_F9R1_FB18                       ((uint32_t)0x00040000)        /*!&lt; Filter bit 18 */</div><div class="line">#define  CAN_F9R1_FB19                       ((uint32_t)0x00080000)        /*!&lt; Filter bit 19 */</div><div class="line">#define  CAN_F9R1_FB20                       ((uint32_t)0x00100000)        /*!&lt; Filter bit 20 */</div><div class="line">#define  CAN_F9R1_FB21                       ((uint32_t)0x00200000)        /*!&lt; Filter bit 21 */</div><div class="line">#define  CAN_F9R1_FB22                       ((uint32_t)0x00400000)        /*!&lt; Filter bit 22 */</div><div class="line">#define  CAN_F9R1_FB23                       ((uint32_t)0x00800000)        /*!&lt; Filter bit 23 */</div><div class="line">#define  CAN_F9R1_FB24                       ((uint32_t)0x01000000)        /*!&lt; Filter bit 24 */</div><div class="line">#define  CAN_F9R1_FB25                       ((uint32_t)0x02000000)        /*!&lt; Filter bit 25 */</div><div class="line">#define  CAN_F9R1_FB26                       ((uint32_t)0x04000000)        /*!&lt; Filter bit 26 */</div><div class="line">#define  CAN_F9R1_FB27                       ((uint32_t)0x08000000)        /*!&lt; Filter bit 27 */</div><div class="line">#define  CAN_F9R1_FB28                       ((uint32_t)0x10000000)        /*!&lt; Filter bit 28 */</div><div class="line">#define  CAN_F9R1_FB29                       ((uint32_t)0x20000000)        /*!&lt; Filter bit 29 */</div><div class="line">#define  CAN_F9R1_FB30                       ((uint32_t)0x40000000)        /*!&lt; Filter bit 30 */</div><div class="line">#define  CAN_F9R1_FB31                       ((uint32_t)0x80000000)        /*!&lt; Filter bit 31 */</div><div class="line"></div><div class="line">/*******************  Bit definition for CAN_F10R1 register  ******************/</div><div class="line">#define  CAN_F10R1_FB0                       ((uint32_t)0x00000001)        /*!&lt; Filter bit 0 */</div><div class="line">#define  CAN_F10R1_FB1                       ((uint32_t)0x00000002)        /*!&lt; Filter bit 1 */</div><div class="line">#define  CAN_F10R1_FB2                       ((uint32_t)0x00000004)        /*!&lt; Filter bit 2 */</div><div class="line">#define  CAN_F10R1_FB3                       ((uint32_t)0x00000008)        /*!&lt; Filter bit 3 */</div><div class="line">#define  CAN_F10R1_FB4                       ((uint32_t)0x00000010)        /*!&lt; Filter bit 4 */</div><div class="line">#define  CAN_F10R1_FB5                       ((uint32_t)0x00000020)        /*!&lt; Filter bit 5 */</div><div class="line">#define  CAN_F10R1_FB6                       ((uint32_t)0x00000040)        /*!&lt; Filter bit 6 */</div><div class="line">#define  CAN_F10R1_FB7                       ((uint32_t)0x00000080)        /*!&lt; Filter bit 7 */</div><div class="line">#define  CAN_F10R1_FB8                       ((uint32_t)0x00000100)        /*!&lt; Filter bit 8 */</div><div class="line">#define  CAN_F10R1_FB9                       ((uint32_t)0x00000200)        /*!&lt; Filter bit 9 */</div><div class="line">#define  CAN_F10R1_FB10                      ((uint32_t)0x00000400)        /*!&lt; Filter bit 10 */</div><div class="line">#define  CAN_F10R1_FB11                      ((uint32_t)0x00000800)        /*!&lt; Filter bit 11 */</div><div class="line">#define  CAN_F10R1_FB12                      ((uint32_t)0x00001000)        /*!&lt; Filter bit 12 */</div><div class="line">#define  CAN_F10R1_FB13                      ((uint32_t)0x00002000)        /*!&lt; Filter bit 13 */</div><div class="line">#define  CAN_F10R1_FB14                      ((uint32_t)0x00004000)        /*!&lt; Filter bit 14 */</div><div class="line">#define  CAN_F10R1_FB15                      ((uint32_t)0x00008000)        /*!&lt; Filter bit 15 */</div><div class="line">#define  CAN_F10R1_FB16                      ((uint32_t)0x00010000)        /*!&lt; Filter bit 16 */</div><div class="line">#define  CAN_F10R1_FB17                      ((uint32_t)0x00020000)        /*!&lt; Filter bit 17 */</div><div class="line">#define  CAN_F10R1_FB18                      ((uint32_t)0x00040000)        /*!&lt; Filter bit 18 */</div><div class="line">#define  CAN_F10R1_FB19                      ((uint32_t)0x00080000)        /*!&lt; Filter bit 19 */</div><div class="line">#define  CAN_F10R1_FB20                      ((uint32_t)0x00100000)        /*!&lt; Filter bit 20 */</div><div class="line">#define  CAN_F10R1_FB21                      ((uint32_t)0x00200000)        /*!&lt; Filter bit 21 */</div><div class="line">#define  CAN_F10R1_FB22                      ((uint32_t)0x00400000)        /*!&lt; Filter bit 22 */</div><div class="line">#define  CAN_F10R1_FB23                      ((uint32_t)0x00800000)        /*!&lt; Filter bit 23 */</div><div class="line">#define  CAN_F10R1_FB24                      ((uint32_t)0x01000000)        /*!&lt; Filter bit 24 */</div><div class="line">#define  CAN_F10R1_FB25                      ((uint32_t)0x02000000)        /*!&lt; Filter bit 25 */</div><div class="line">#define  CAN_F10R1_FB26                      ((uint32_t)0x04000000)        /*!&lt; Filter bit 26 */</div><div class="line">#define  CAN_F10R1_FB27                      ((uint32_t)0x08000000)        /*!&lt; Filter bit 27 */</div><div class="line">#define  CAN_F10R1_FB28                      ((uint32_t)0x10000000)        /*!&lt; Filter bit 28 */</div><div class="line">#define  CAN_F10R1_FB29                      ((uint32_t)0x20000000)        /*!&lt; Filter bit 29 */</div><div class="line">#define  CAN_F10R1_FB30                      ((uint32_t)0x40000000)        /*!&lt; Filter bit 30 */</div><div class="line">#define  CAN_F10R1_FB31                      ((uint32_t)0x80000000)        /*!&lt; Filter bit 31 */</div><div class="line"></div><div class="line">/*******************  Bit definition for CAN_F11R1 register  ******************/</div><div class="line">#define  CAN_F11R1_FB0                       ((uint32_t)0x00000001)        /*!&lt; Filter bit 0 */</div><div class="line">#define  CAN_F11R1_FB1                       ((uint32_t)0x00000002)        /*!&lt; Filter bit 1 */</div><div class="line">#define  CAN_F11R1_FB2                       ((uint32_t)0x00000004)        /*!&lt; Filter bit 2 */</div><div class="line">#define  CAN_F11R1_FB3                       ((uint32_t)0x00000008)        /*!&lt; Filter bit 3 */</div><div class="line">#define  CAN_F11R1_FB4                       ((uint32_t)0x00000010)        /*!&lt; Filter bit 4 */</div><div class="line">#define  CAN_F11R1_FB5                       ((uint32_t)0x00000020)        /*!&lt; Filter bit 5 */</div><div class="line">#define  CAN_F11R1_FB6                       ((uint32_t)0x00000040)        /*!&lt; Filter bit 6 */</div><div class="line">#define  CAN_F11R1_FB7                       ((uint32_t)0x00000080)        /*!&lt; Filter bit 7 */</div><div class="line">#define  CAN_F11R1_FB8                       ((uint32_t)0x00000100)        /*!&lt; Filter bit 8 */</div><div class="line">#define  CAN_F11R1_FB9                       ((uint32_t)0x00000200)        /*!&lt; Filter bit 9 */</div><div class="line">#define  CAN_F11R1_FB10                      ((uint32_t)0x00000400)        /*!&lt; Filter bit 10 */</div><div class="line">#define  CAN_F11R1_FB11                      ((uint32_t)0x00000800)        /*!&lt; Filter bit 11 */</div><div class="line">#define  CAN_F11R1_FB12                      ((uint32_t)0x00001000)        /*!&lt; Filter bit 12 */</div><div class="line">#define  CAN_F11R1_FB13                      ((uint32_t)0x00002000)        /*!&lt; Filter bit 13 */</div><div class="line">#define  CAN_F11R1_FB14                      ((uint32_t)0x00004000)        /*!&lt; Filter bit 14 */</div><div class="line">#define  CAN_F11R1_FB15                      ((uint32_t)0x00008000)        /*!&lt; Filter bit 15 */</div><div class="line">#define  CAN_F11R1_FB16                      ((uint32_t)0x00010000)        /*!&lt; Filter bit 16 */</div><div class="line">#define  CAN_F11R1_FB17                      ((uint32_t)0x00020000)        /*!&lt; Filter bit 17 */</div><div class="line">#define  CAN_F11R1_FB18                      ((uint32_t)0x00040000)        /*!&lt; Filter bit 18 */</div><div class="line">#define  CAN_F11R1_FB19                      ((uint32_t)0x00080000)        /*!&lt; Filter bit 19 */</div><div class="line">#define  CAN_F11R1_FB20                      ((uint32_t)0x00100000)        /*!&lt; Filter bit 20 */</div><div class="line">#define  CAN_F11R1_FB21                      ((uint32_t)0x00200000)        /*!&lt; Filter bit 21 */</div><div class="line">#define  CAN_F11R1_FB22                      ((uint32_t)0x00400000)        /*!&lt; Filter bit 22 */</div><div class="line">#define  CAN_F11R1_FB23                      ((uint32_t)0x00800000)        /*!&lt; Filter bit 23 */</div><div class="line">#define  CAN_F11R1_FB24                      ((uint32_t)0x01000000)        /*!&lt; Filter bit 24 */</div><div class="line">#define  CAN_F11R1_FB25                      ((uint32_t)0x02000000)        /*!&lt; Filter bit 25 */</div><div class="line">#define  CAN_F11R1_FB26                      ((uint32_t)0x04000000)        /*!&lt; Filter bit 26 */</div><div class="line">#define  CAN_F11R1_FB27                      ((uint32_t)0x08000000)        /*!&lt; Filter bit 27 */</div><div class="line">#define  CAN_F11R1_FB28                      ((uint32_t)0x10000000)        /*!&lt; Filter bit 28 */</div><div class="line">#define  CAN_F11R1_FB29                      ((uint32_t)0x20000000)        /*!&lt; Filter bit 29 */</div><div class="line">#define  CAN_F11R1_FB30                      ((uint32_t)0x40000000)        /*!&lt; Filter bit 30 */</div><div class="line">#define  CAN_F11R1_FB31                      ((uint32_t)0x80000000)        /*!&lt; Filter bit 31 */</div><div class="line"></div><div class="line">/*******************  Bit definition for CAN_F12R1 register  ******************/</div><div class="line">#define  CAN_F12R1_FB0                       ((uint32_t)0x00000001)        /*!&lt; Filter bit 0 */</div><div class="line">#define  CAN_F12R1_FB1                       ((uint32_t)0x00000002)        /*!&lt; Filter bit 1 */</div><div class="line">#define  CAN_F12R1_FB2                       ((uint32_t)0x00000004)        /*!&lt; Filter bit 2 */</div><div class="line">#define  CAN_F12R1_FB3                       ((uint32_t)0x00000008)        /*!&lt; Filter bit 3 */</div><div class="line">#define  CAN_F12R1_FB4                       ((uint32_t)0x00000010)        /*!&lt; Filter bit 4 */</div><div class="line">#define  CAN_F12R1_FB5                       ((uint32_t)0x00000020)        /*!&lt; Filter bit 5 */</div><div class="line">#define  CAN_F12R1_FB6                       ((uint32_t)0x00000040)        /*!&lt; Filter bit 6 */</div><div class="line">#define  CAN_F12R1_FB7                       ((uint32_t)0x00000080)        /*!&lt; Filter bit 7 */</div><div class="line">#define  CAN_F12R1_FB8                       ((uint32_t)0x00000100)        /*!&lt; Filter bit 8 */</div><div class="line">#define  CAN_F12R1_FB9                       ((uint32_t)0x00000200)        /*!&lt; Filter bit 9 */</div><div class="line">#define  CAN_F12R1_FB10                      ((uint32_t)0x00000400)        /*!&lt; Filter bit 10 */</div><div class="line">#define  CAN_F12R1_FB11                      ((uint32_t)0x00000800)        /*!&lt; Filter bit 11 */</div><div class="line">#define  CAN_F12R1_FB12                      ((uint32_t)0x00001000)        /*!&lt; Filter bit 12 */</div><div class="line">#define  CAN_F12R1_FB13                      ((uint32_t)0x00002000)        /*!&lt; Filter bit 13 */</div><div class="line">#define  CAN_F12R1_FB14                      ((uint32_t)0x00004000)        /*!&lt; Filter bit 14 */</div><div class="line">#define  CAN_F12R1_FB15                      ((uint32_t)0x00008000)        /*!&lt; Filter bit 15 */</div><div class="line">#define  CAN_F12R1_FB16                      ((uint32_t)0x00010000)        /*!&lt; Filter bit 16 */</div><div class="line">#define  CAN_F12R1_FB17                      ((uint32_t)0x00020000)        /*!&lt; Filter bit 17 */</div><div class="line">#define  CAN_F12R1_FB18                      ((uint32_t)0x00040000)        /*!&lt; Filter bit 18 */</div><div class="line">#define  CAN_F12R1_FB19                      ((uint32_t)0x00080000)        /*!&lt; Filter bit 19 */</div><div class="line">#define  CAN_F12R1_FB20                      ((uint32_t)0x00100000)        /*!&lt; Filter bit 20 */</div><div class="line">#define  CAN_F12R1_FB21                      ((uint32_t)0x00200000)        /*!&lt; Filter bit 21 */</div><div class="line">#define  CAN_F12R1_FB22                      ((uint32_t)0x00400000)        /*!&lt; Filter bit 22 */</div><div class="line">#define  CAN_F12R1_FB23                      ((uint32_t)0x00800000)        /*!&lt; Filter bit 23 */</div><div class="line">#define  CAN_F12R1_FB24                      ((uint32_t)0x01000000)        /*!&lt; Filter bit 24 */</div><div class="line">#define  CAN_F12R1_FB25                      ((uint32_t)0x02000000)        /*!&lt; Filter bit 25 */</div><div class="line">#define  CAN_F12R1_FB26                      ((uint32_t)0x04000000)        /*!&lt; Filter bit 26 */</div><div class="line">#define  CAN_F12R1_FB27                      ((uint32_t)0x08000000)        /*!&lt; Filter bit 27 */</div><div class="line">#define  CAN_F12R1_FB28                      ((uint32_t)0x10000000)        /*!&lt; Filter bit 28 */</div><div class="line">#define  CAN_F12R1_FB29                      ((uint32_t)0x20000000)        /*!&lt; Filter bit 29 */</div><div class="line">#define  CAN_F12R1_FB30                      ((uint32_t)0x40000000)        /*!&lt; Filter bit 30 */</div><div class="line">#define  CAN_F12R1_FB31                      ((uint32_t)0x80000000)        /*!&lt; Filter bit 31 */</div><div class="line"></div><div class="line">/*******************  Bit definition for CAN_F13R1 register  ******************/</div><div class="line">#define  CAN_F13R1_FB0                       ((uint32_t)0x00000001)        /*!&lt; Filter bit 0 */</div><div class="line">#define  CAN_F13R1_FB1                       ((uint32_t)0x00000002)        /*!&lt; Filter bit 1 */</div><div class="line">#define  CAN_F13R1_FB2                       ((uint32_t)0x00000004)        /*!&lt; Filter bit 2 */</div><div class="line">#define  CAN_F13R1_FB3                       ((uint32_t)0x00000008)        /*!&lt; Filter bit 3 */</div><div class="line">#define  CAN_F13R1_FB4                       ((uint32_t)0x00000010)        /*!&lt; Filter bit 4 */</div><div class="line">#define  CAN_F13R1_FB5                       ((uint32_t)0x00000020)        /*!&lt; Filter bit 5 */</div><div class="line">#define  CAN_F13R1_FB6                       ((uint32_t)0x00000040)        /*!&lt; Filter bit 6 */</div><div class="line">#define  CAN_F13R1_FB7                       ((uint32_t)0x00000080)        /*!&lt; Filter bit 7 */</div><div class="line">#define  CAN_F13R1_FB8                       ((uint32_t)0x00000100)        /*!&lt; Filter bit 8 */</div><div class="line">#define  CAN_F13R1_FB9                       ((uint32_t)0x00000200)        /*!&lt; Filter bit 9 */</div><div class="line">#define  CAN_F13R1_FB10                      ((uint32_t)0x00000400)        /*!&lt; Filter bit 10 */</div><div class="line">#define  CAN_F13R1_FB11                      ((uint32_t)0x00000800)        /*!&lt; Filter bit 11 */</div><div class="line">#define  CAN_F13R1_FB12                      ((uint32_t)0x00001000)        /*!&lt; Filter bit 12 */</div><div class="line">#define  CAN_F13R1_FB13                      ((uint32_t)0x00002000)        /*!&lt; Filter bit 13 */</div><div class="line">#define  CAN_F13R1_FB14                      ((uint32_t)0x00004000)        /*!&lt; Filter bit 14 */</div><div class="line">#define  CAN_F13R1_FB15                      ((uint32_t)0x00008000)        /*!&lt; Filter bit 15 */</div><div class="line">#define  CAN_F13R1_FB16                      ((uint32_t)0x00010000)        /*!&lt; Filter bit 16 */</div><div class="line">#define  CAN_F13R1_FB17                      ((uint32_t)0x00020000)        /*!&lt; Filter bit 17 */</div><div class="line">#define  CAN_F13R1_FB18                      ((uint32_t)0x00040000)        /*!&lt; Filter bit 18 */</div><div class="line">#define  CAN_F13R1_FB19                      ((uint32_t)0x00080000)        /*!&lt; Filter bit 19 */</div><div class="line">#define  CAN_F13R1_FB20                      ((uint32_t)0x00100000)        /*!&lt; Filter bit 20 */</div><div class="line">#define  CAN_F13R1_FB21                      ((uint32_t)0x00200000)        /*!&lt; Filter bit 21 */</div><div class="line">#define  CAN_F13R1_FB22                      ((uint32_t)0x00400000)        /*!&lt; Filter bit 22 */</div><div class="line">#define  CAN_F13R1_FB23                      ((uint32_t)0x00800000)        /*!&lt; Filter bit 23 */</div><div class="line">#define  CAN_F13R1_FB24                      ((uint32_t)0x01000000)        /*!&lt; Filter bit 24 */</div><div class="line">#define  CAN_F13R1_FB25                      ((uint32_t)0x02000000)        /*!&lt; Filter bit 25 */</div><div class="line">#define  CAN_F13R1_FB26                      ((uint32_t)0x04000000)        /*!&lt; Filter bit 26 */</div><div class="line">#define  CAN_F13R1_FB27                      ((uint32_t)0x08000000)        /*!&lt; Filter bit 27 */</div><div class="line">#define  CAN_F13R1_FB28                      ((uint32_t)0x10000000)        /*!&lt; Filter bit 28 */</div><div class="line">#define  CAN_F13R1_FB29                      ((uint32_t)0x20000000)        /*!&lt; Filter bit 29 */</div><div class="line">#define  CAN_F13R1_FB30                      ((uint32_t)0x40000000)        /*!&lt; Filter bit 30 */</div><div class="line">#define  CAN_F13R1_FB31                      ((uint32_t)0x80000000)        /*!&lt; Filter bit 31 */</div><div class="line"></div><div class="line">/*******************  Bit definition for CAN_F0R2 register  *******************/</div><div class="line">#define  CAN_F0R2_FB0                        ((uint32_t)0x00000001)        /*!&lt; Filter bit 0 */</div><div class="line">#define  CAN_F0R2_FB1                        ((uint32_t)0x00000002)        /*!&lt; Filter bit 1 */</div><div class="line">#define  CAN_F0R2_FB2                        ((uint32_t)0x00000004)        /*!&lt; Filter bit 2 */</div><div class="line">#define  CAN_F0R2_FB3                        ((uint32_t)0x00000008)        /*!&lt; Filter bit 3 */</div><div class="line">#define  CAN_F0R2_FB4                        ((uint32_t)0x00000010)        /*!&lt; Filter bit 4 */</div><div class="line">#define  CAN_F0R2_FB5                        ((uint32_t)0x00000020)        /*!&lt; Filter bit 5 */</div><div class="line">#define  CAN_F0R2_FB6                        ((uint32_t)0x00000040)        /*!&lt; Filter bit 6 */</div><div class="line">#define  CAN_F0R2_FB7                        ((uint32_t)0x00000080)        /*!&lt; Filter bit 7 */</div><div class="line">#define  CAN_F0R2_FB8                        ((uint32_t)0x00000100)        /*!&lt; Filter bit 8 */</div><div class="line">#define  CAN_F0R2_FB9                        ((uint32_t)0x00000200)        /*!&lt; Filter bit 9 */</div><div class="line">#define  CAN_F0R2_FB10                       ((uint32_t)0x00000400)        /*!&lt; Filter bit 10 */</div><div class="line">#define  CAN_F0R2_FB11                       ((uint32_t)0x00000800)        /*!&lt; Filter bit 11 */</div><div class="line">#define  CAN_F0R2_FB12                       ((uint32_t)0x00001000)        /*!&lt; Filter bit 12 */</div><div class="line">#define  CAN_F0R2_FB13                       ((uint32_t)0x00002000)        /*!&lt; Filter bit 13 */</div><div class="line">#define  CAN_F0R2_FB14                       ((uint32_t)0x00004000)        /*!&lt; Filter bit 14 */</div><div class="line">#define  CAN_F0R2_FB15                       ((uint32_t)0x00008000)        /*!&lt; Filter bit 15 */</div><div class="line">#define  CAN_F0R2_FB16                       ((uint32_t)0x00010000)        /*!&lt; Filter bit 16 */</div><div class="line">#define  CAN_F0R2_FB17                       ((uint32_t)0x00020000)        /*!&lt; Filter bit 17 */</div><div class="line">#define  CAN_F0R2_FB18                       ((uint32_t)0x00040000)        /*!&lt; Filter bit 18 */</div><div class="line">#define  CAN_F0R2_FB19                       ((uint32_t)0x00080000)        /*!&lt; Filter bit 19 */</div><div class="line">#define  CAN_F0R2_FB20                       ((uint32_t)0x00100000)        /*!&lt; Filter bit 20 */</div><div class="line">#define  CAN_F0R2_FB21                       ((uint32_t)0x00200000)        /*!&lt; Filter bit 21 */</div><div class="line">#define  CAN_F0R2_FB22                       ((uint32_t)0x00400000)        /*!&lt; Filter bit 22 */</div><div class="line">#define  CAN_F0R2_FB23                       ((uint32_t)0x00800000)        /*!&lt; Filter bit 23 */</div><div class="line">#define  CAN_F0R2_FB24                       ((uint32_t)0x01000000)        /*!&lt; Filter bit 24 */</div><div class="line">#define  CAN_F0R2_FB25                       ((uint32_t)0x02000000)        /*!&lt; Filter bit 25 */</div><div class="line">#define  CAN_F0R2_FB26                       ((uint32_t)0x04000000)        /*!&lt; Filter bit 26 */</div><div class="line">#define  CAN_F0R2_FB27                       ((uint32_t)0x08000000)        /*!&lt; Filter bit 27 */</div><div class="line">#define  CAN_F0R2_FB28                       ((uint32_t)0x10000000)        /*!&lt; Filter bit 28 */</div><div class="line">#define  CAN_F0R2_FB29                       ((uint32_t)0x20000000)        /*!&lt; Filter bit 29 */</div><div class="line">#define  CAN_F0R2_FB30                       ((uint32_t)0x40000000)        /*!&lt; Filter bit 30 */</div><div class="line">#define  CAN_F0R2_FB31                       ((uint32_t)0x80000000)        /*!&lt; Filter bit 31 */</div><div class="line"></div><div class="line">/*******************  Bit definition for CAN_F1R2 register  *******************/</div><div class="line">#define  CAN_F1R2_FB0                        ((uint32_t)0x00000001)        /*!&lt; Filter bit 0 */</div><div class="line">#define  CAN_F1R2_FB1                        ((uint32_t)0x00000002)        /*!&lt; Filter bit 1 */</div><div class="line">#define  CAN_F1R2_FB2                        ((uint32_t)0x00000004)        /*!&lt; Filter bit 2 */</div><div class="line">#define  CAN_F1R2_FB3                        ((uint32_t)0x00000008)        /*!&lt; Filter bit 3 */</div><div class="line">#define  CAN_F1R2_FB4                        ((uint32_t)0x00000010)        /*!&lt; Filter bit 4 */</div><div class="line">#define  CAN_F1R2_FB5                        ((uint32_t)0x00000020)        /*!&lt; Filter bit 5 */</div><div class="line">#define  CAN_F1R2_FB6                        ((uint32_t)0x00000040)        /*!&lt; Filter bit 6 */</div><div class="line">#define  CAN_F1R2_FB7                        ((uint32_t)0x00000080)        /*!&lt; Filter bit 7 */</div><div class="line">#define  CAN_F1R2_FB8                        ((uint32_t)0x00000100)        /*!&lt; Filter bit 8 */</div><div class="line">#define  CAN_F1R2_FB9                        ((uint32_t)0x00000200)        /*!&lt; Filter bit 9 */</div><div class="line">#define  CAN_F1R2_FB10                       ((uint32_t)0x00000400)        /*!&lt; Filter bit 10 */</div><div class="line">#define  CAN_F1R2_FB11                       ((uint32_t)0x00000800)        /*!&lt; Filter bit 11 */</div><div class="line">#define  CAN_F1R2_FB12                       ((uint32_t)0x00001000)        /*!&lt; Filter bit 12 */</div><div class="line">#define  CAN_F1R2_FB13                       ((uint32_t)0x00002000)        /*!&lt; Filter bit 13 */</div><div class="line">#define  CAN_F1R2_FB14                       ((uint32_t)0x00004000)        /*!&lt; Filter bit 14 */</div><div class="line">#define  CAN_F1R2_FB15                       ((uint32_t)0x00008000)        /*!&lt; Filter bit 15 */</div><div class="line">#define  CAN_F1R2_FB16                       ((uint32_t)0x00010000)        /*!&lt; Filter bit 16 */</div><div class="line">#define  CAN_F1R2_FB17                       ((uint32_t)0x00020000)        /*!&lt; Filter bit 17 */</div><div class="line">#define  CAN_F1R2_FB18                       ((uint32_t)0x00040000)        /*!&lt; Filter bit 18 */</div><div class="line">#define  CAN_F1R2_FB19                       ((uint32_t)0x00080000)        /*!&lt; Filter bit 19 */</div><div class="line">#define  CAN_F1R2_FB20                       ((uint32_t)0x00100000)        /*!&lt; Filter bit 20 */</div><div class="line">#define  CAN_F1R2_FB21                       ((uint32_t)0x00200000)        /*!&lt; Filter bit 21 */</div><div class="line">#define  CAN_F1R2_FB22                       ((uint32_t)0x00400000)        /*!&lt; Filter bit 22 */</div><div class="line">#define  CAN_F1R2_FB23                       ((uint32_t)0x00800000)        /*!&lt; Filter bit 23 */</div><div class="line">#define  CAN_F1R2_FB24                       ((uint32_t)0x01000000)        /*!&lt; Filter bit 24 */</div><div class="line">#define  CAN_F1R2_FB25                       ((uint32_t)0x02000000)        /*!&lt; Filter bit 25 */</div><div class="line">#define  CAN_F1R2_FB26                       ((uint32_t)0x04000000)        /*!&lt; Filter bit 26 */</div><div class="line">#define  CAN_F1R2_FB27                       ((uint32_t)0x08000000)        /*!&lt; Filter bit 27 */</div><div class="line">#define  CAN_F1R2_FB28                       ((uint32_t)0x10000000)        /*!&lt; Filter bit 28 */</div><div class="line">#define  CAN_F1R2_FB29                       ((uint32_t)0x20000000)        /*!&lt; Filter bit 29 */</div><div class="line">#define  CAN_F1R2_FB30                       ((uint32_t)0x40000000)        /*!&lt; Filter bit 30 */</div><div class="line">#define  CAN_F1R2_FB31                       ((uint32_t)0x80000000)        /*!&lt; Filter bit 31 */</div><div class="line"></div><div class="line">/*******************  Bit definition for CAN_F2R2 register  *******************/</div><div class="line">#define  CAN_F2R2_FB0                        ((uint32_t)0x00000001)        /*!&lt; Filter bit 0 */</div><div class="line">#define  CAN_F2R2_FB1                        ((uint32_t)0x00000002)        /*!&lt; Filter bit 1 */</div><div class="line">#define  CAN_F2R2_FB2                        ((uint32_t)0x00000004)        /*!&lt; Filter bit 2 */</div><div class="line">#define  CAN_F2R2_FB3                        ((uint32_t)0x00000008)        /*!&lt; Filter bit 3 */</div><div class="line">#define  CAN_F2R2_FB4                        ((uint32_t)0x00000010)        /*!&lt; Filter bit 4 */</div><div class="line">#define  CAN_F2R2_FB5                        ((uint32_t)0x00000020)        /*!&lt; Filter bit 5 */</div><div class="line">#define  CAN_F2R2_FB6                        ((uint32_t)0x00000040)        /*!&lt; Filter bit 6 */</div><div class="line">#define  CAN_F2R2_FB7                        ((uint32_t)0x00000080)        /*!&lt; Filter bit 7 */</div><div class="line">#define  CAN_F2R2_FB8                        ((uint32_t)0x00000100)        /*!&lt; Filter bit 8 */</div><div class="line">#define  CAN_F2R2_FB9                        ((uint32_t)0x00000200)        /*!&lt; Filter bit 9 */</div><div class="line">#define  CAN_F2R2_FB10                       ((uint32_t)0x00000400)        /*!&lt; Filter bit 10 */</div><div class="line">#define  CAN_F2R2_FB11                       ((uint32_t)0x00000800)        /*!&lt; Filter bit 11 */</div><div class="line">#define  CAN_F2R2_FB12                       ((uint32_t)0x00001000)        /*!&lt; Filter bit 12 */</div><div class="line">#define  CAN_F2R2_FB13                       ((uint32_t)0x00002000)        /*!&lt; Filter bit 13 */</div><div class="line">#define  CAN_F2R2_FB14                       ((uint32_t)0x00004000)        /*!&lt; Filter bit 14 */</div><div class="line">#define  CAN_F2R2_FB15                       ((uint32_t)0x00008000)        /*!&lt; Filter bit 15 */</div><div class="line">#define  CAN_F2R2_FB16                       ((uint32_t)0x00010000)        /*!&lt; Filter bit 16 */</div><div class="line">#define  CAN_F2R2_FB17                       ((uint32_t)0x00020000)        /*!&lt; Filter bit 17 */</div><div class="line">#define  CAN_F2R2_FB18                       ((uint32_t)0x00040000)        /*!&lt; Filter bit 18 */</div><div class="line">#define  CAN_F2R2_FB19                       ((uint32_t)0x00080000)        /*!&lt; Filter bit 19 */</div><div class="line">#define  CAN_F2R2_FB20                       ((uint32_t)0x00100000)        /*!&lt; Filter bit 20 */</div><div class="line">#define  CAN_F2R2_FB21                       ((uint32_t)0x00200000)        /*!&lt; Filter bit 21 */</div><div class="line">#define  CAN_F2R2_FB22                       ((uint32_t)0x00400000)        /*!&lt; Filter bit 22 */</div><div class="line">#define  CAN_F2R2_FB23                       ((uint32_t)0x00800000)        /*!&lt; Filter bit 23 */</div><div class="line">#define  CAN_F2R2_FB24                       ((uint32_t)0x01000000)        /*!&lt; Filter bit 24 */</div><div class="line">#define  CAN_F2R2_FB25                       ((uint32_t)0x02000000)        /*!&lt; Filter bit 25 */</div><div class="line">#define  CAN_F2R2_FB26                       ((uint32_t)0x04000000)        /*!&lt; Filter bit 26 */</div><div class="line">#define  CAN_F2R2_FB27                       ((uint32_t)0x08000000)        /*!&lt; Filter bit 27 */</div><div class="line">#define  CAN_F2R2_FB28                       ((uint32_t)0x10000000)        /*!&lt; Filter bit 28 */</div><div class="line">#define  CAN_F2R2_FB29                       ((uint32_t)0x20000000)        /*!&lt; Filter bit 29 */</div><div class="line">#define  CAN_F2R2_FB30                       ((uint32_t)0x40000000)        /*!&lt; Filter bit 30 */</div><div class="line">#define  CAN_F2R2_FB31                       ((uint32_t)0x80000000)        /*!&lt; Filter bit 31 */</div><div class="line"></div><div class="line">/*******************  Bit definition for CAN_F3R2 register  *******************/</div><div class="line">#define  CAN_F3R2_FB0                        ((uint32_t)0x00000001)        /*!&lt; Filter bit 0 */</div><div class="line">#define  CAN_F3R2_FB1                        ((uint32_t)0x00000002)        /*!&lt; Filter bit 1 */</div><div class="line">#define  CAN_F3R2_FB2                        ((uint32_t)0x00000004)        /*!&lt; Filter bit 2 */</div><div class="line">#define  CAN_F3R2_FB3                        ((uint32_t)0x00000008)        /*!&lt; Filter bit 3 */</div><div class="line">#define  CAN_F3R2_FB4                        ((uint32_t)0x00000010)        /*!&lt; Filter bit 4 */</div><div class="line">#define  CAN_F3R2_FB5                        ((uint32_t)0x00000020)        /*!&lt; Filter bit 5 */</div><div class="line">#define  CAN_F3R2_FB6                        ((uint32_t)0x00000040)        /*!&lt; Filter bit 6 */</div><div class="line">#define  CAN_F3R2_FB7                        ((uint32_t)0x00000080)        /*!&lt; Filter bit 7 */</div><div class="line">#define  CAN_F3R2_FB8                        ((uint32_t)0x00000100)        /*!&lt; Filter bit 8 */</div><div class="line">#define  CAN_F3R2_FB9                        ((uint32_t)0x00000200)        /*!&lt; Filter bit 9 */</div><div class="line">#define  CAN_F3R2_FB10                       ((uint32_t)0x00000400)        /*!&lt; Filter bit 10 */</div><div class="line">#define  CAN_F3R2_FB11                       ((uint32_t)0x00000800)        /*!&lt; Filter bit 11 */</div><div class="line">#define  CAN_F3R2_FB12                       ((uint32_t)0x00001000)        /*!&lt; Filter bit 12 */</div><div class="line">#define  CAN_F3R2_FB13                       ((uint32_t)0x00002000)        /*!&lt; Filter bit 13 */</div><div class="line">#define  CAN_F3R2_FB14                       ((uint32_t)0x00004000)        /*!&lt; Filter bit 14 */</div><div class="line">#define  CAN_F3R2_FB15                       ((uint32_t)0x00008000)        /*!&lt; Filter bit 15 */</div><div class="line">#define  CAN_F3R2_FB16                       ((uint32_t)0x00010000)        /*!&lt; Filter bit 16 */</div><div class="line">#define  CAN_F3R2_FB17                       ((uint32_t)0x00020000)        /*!&lt; Filter bit 17 */</div><div class="line">#define  CAN_F3R2_FB18                       ((uint32_t)0x00040000)        /*!&lt; Filter bit 18 */</div><div class="line">#define  CAN_F3R2_FB19                       ((uint32_t)0x00080000)        /*!&lt; Filter bit 19 */</div><div class="line">#define  CAN_F3R2_FB20                       ((uint32_t)0x00100000)        /*!&lt; Filter bit 20 */</div><div class="line">#define  CAN_F3R2_FB21                       ((uint32_t)0x00200000)        /*!&lt; Filter bit 21 */</div><div class="line">#define  CAN_F3R2_FB22                       ((uint32_t)0x00400000)        /*!&lt; Filter bit 22 */</div><div class="line">#define  CAN_F3R2_FB23                       ((uint32_t)0x00800000)        /*!&lt; Filter bit 23 */</div><div class="line">#define  CAN_F3R2_FB24                       ((uint32_t)0x01000000)        /*!&lt; Filter bit 24 */</div><div class="line">#define  CAN_F3R2_FB25                       ((uint32_t)0x02000000)        /*!&lt; Filter bit 25 */</div><div class="line">#define  CAN_F3R2_FB26                       ((uint32_t)0x04000000)        /*!&lt; Filter bit 26 */</div><div class="line">#define  CAN_F3R2_FB27                       ((uint32_t)0x08000000)        /*!&lt; Filter bit 27 */</div><div class="line">#define  CAN_F3R2_FB28                       ((uint32_t)0x10000000)        /*!&lt; Filter bit 28 */</div><div class="line">#define  CAN_F3R2_FB29                       ((uint32_t)0x20000000)        /*!&lt; Filter bit 29 */</div><div class="line">#define  CAN_F3R2_FB30                       ((uint32_t)0x40000000)        /*!&lt; Filter bit 30 */</div><div class="line">#define  CAN_F3R2_FB31                       ((uint32_t)0x80000000)        /*!&lt; Filter bit 31 */</div><div class="line"></div><div class="line">/*******************  Bit definition for CAN_F4R2 register  *******************/</div><div class="line">#define  CAN_F4R2_FB0                        ((uint32_t)0x00000001)        /*!&lt; Filter bit 0 */</div><div class="line">#define  CAN_F4R2_FB1                        ((uint32_t)0x00000002)        /*!&lt; Filter bit 1 */</div><div class="line">#define  CAN_F4R2_FB2                        ((uint32_t)0x00000004)        /*!&lt; Filter bit 2 */</div><div class="line">#define  CAN_F4R2_FB3                        ((uint32_t)0x00000008)        /*!&lt; Filter bit 3 */</div><div class="line">#define  CAN_F4R2_FB4                        ((uint32_t)0x00000010)        /*!&lt; Filter bit 4 */</div><div class="line">#define  CAN_F4R2_FB5                        ((uint32_t)0x00000020)        /*!&lt; Filter bit 5 */</div><div class="line">#define  CAN_F4R2_FB6                        ((uint32_t)0x00000040)        /*!&lt; Filter bit 6 */</div><div class="line">#define  CAN_F4R2_FB7                        ((uint32_t)0x00000080)        /*!&lt; Filter bit 7 */</div><div class="line">#define  CAN_F4R2_FB8                        ((uint32_t)0x00000100)        /*!&lt; Filter bit 8 */</div><div class="line">#define  CAN_F4R2_FB9                        ((uint32_t)0x00000200)        /*!&lt; Filter bit 9 */</div><div class="line">#define  CAN_F4R2_FB10                       ((uint32_t)0x00000400)        /*!&lt; Filter bit 10 */</div><div class="line">#define  CAN_F4R2_FB11                       ((uint32_t)0x00000800)        /*!&lt; Filter bit 11 */</div><div class="line">#define  CAN_F4R2_FB12                       ((uint32_t)0x00001000)        /*!&lt; Filter bit 12 */</div><div class="line">#define  CAN_F4R2_FB13                       ((uint32_t)0x00002000)        /*!&lt; Filter bit 13 */</div><div class="line">#define  CAN_F4R2_FB14                       ((uint32_t)0x00004000)        /*!&lt; Filter bit 14 */</div><div class="line">#define  CAN_F4R2_FB15                       ((uint32_t)0x00008000)        /*!&lt; Filter bit 15 */</div><div class="line">#define  CAN_F4R2_FB16                       ((uint32_t)0x00010000)        /*!&lt; Filter bit 16 */</div><div class="line">#define  CAN_F4R2_FB17                       ((uint32_t)0x00020000)        /*!&lt; Filter bit 17 */</div><div class="line">#define  CAN_F4R2_FB18                       ((uint32_t)0x00040000)        /*!&lt; Filter bit 18 */</div><div class="line">#define  CAN_F4R2_FB19                       ((uint32_t)0x00080000)        /*!&lt; Filter bit 19 */</div><div class="line">#define  CAN_F4R2_FB20                       ((uint32_t)0x00100000)        /*!&lt; Filter bit 20 */</div><div class="line">#define  CAN_F4R2_FB21                       ((uint32_t)0x00200000)        /*!&lt; Filter bit 21 */</div><div class="line">#define  CAN_F4R2_FB22                       ((uint32_t)0x00400000)        /*!&lt; Filter bit 22 */</div><div class="line">#define  CAN_F4R2_FB23                       ((uint32_t)0x00800000)        /*!&lt; Filter bit 23 */</div><div class="line">#define  CAN_F4R2_FB24                       ((uint32_t)0x01000000)        /*!&lt; Filter bit 24 */</div><div class="line">#define  CAN_F4R2_FB25                       ((uint32_t)0x02000000)        /*!&lt; Filter bit 25 */</div><div class="line">#define  CAN_F4R2_FB26                       ((uint32_t)0x04000000)        /*!&lt; Filter bit 26 */</div><div class="line">#define  CAN_F4R2_FB27                       ((uint32_t)0x08000000)        /*!&lt; Filter bit 27 */</div><div class="line">#define  CAN_F4R2_FB28                       ((uint32_t)0x10000000)        /*!&lt; Filter bit 28 */</div><div class="line">#define  CAN_F4R2_FB29                       ((uint32_t)0x20000000)        /*!&lt; Filter bit 29 */</div><div class="line">#define  CAN_F4R2_FB30                       ((uint32_t)0x40000000)        /*!&lt; Filter bit 30 */</div><div class="line">#define  CAN_F4R2_FB31                       ((uint32_t)0x80000000)        /*!&lt; Filter bit 31 */</div><div class="line"></div><div class="line">/*******************  Bit definition for CAN_F5R2 register  *******************/</div><div class="line">#define  CAN_F5R2_FB0                        ((uint32_t)0x00000001)        /*!&lt; Filter bit 0 */</div><div class="line">#define  CAN_F5R2_FB1                        ((uint32_t)0x00000002)        /*!&lt; Filter bit 1 */</div><div class="line">#define  CAN_F5R2_FB2                        ((uint32_t)0x00000004)        /*!&lt; Filter bit 2 */</div><div class="line">#define  CAN_F5R2_FB3                        ((uint32_t)0x00000008)        /*!&lt; Filter bit 3 */</div><div class="line">#define  CAN_F5R2_FB4                        ((uint32_t)0x00000010)        /*!&lt; Filter bit 4 */</div><div class="line">#define  CAN_F5R2_FB5                        ((uint32_t)0x00000020)        /*!&lt; Filter bit 5 */</div><div class="line">#define  CAN_F5R2_FB6                        ((uint32_t)0x00000040)        /*!&lt; Filter bit 6 */</div><div class="line">#define  CAN_F5R2_FB7                        ((uint32_t)0x00000080)        /*!&lt; Filter bit 7 */</div><div class="line">#define  CAN_F5R2_FB8                        ((uint32_t)0x00000100)        /*!&lt; Filter bit 8 */</div><div class="line">#define  CAN_F5R2_FB9                        ((uint32_t)0x00000200)        /*!&lt; Filter bit 9 */</div><div class="line">#define  CAN_F5R2_FB10                       ((uint32_t)0x00000400)        /*!&lt; Filter bit 10 */</div><div class="line">#define  CAN_F5R2_FB11                       ((uint32_t)0x00000800)        /*!&lt; Filter bit 11 */</div><div class="line">#define  CAN_F5R2_FB12                       ((uint32_t)0x00001000)        /*!&lt; Filter bit 12 */</div><div class="line">#define  CAN_F5R2_FB13                       ((uint32_t)0x00002000)        /*!&lt; Filter bit 13 */</div><div class="line">#define  CAN_F5R2_FB14                       ((uint32_t)0x00004000)        /*!&lt; Filter bit 14 */</div><div class="line">#define  CAN_F5R2_FB15                       ((uint32_t)0x00008000)        /*!&lt; Filter bit 15 */</div><div class="line">#define  CAN_F5R2_FB16                       ((uint32_t)0x00010000)        /*!&lt; Filter bit 16 */</div><div class="line">#define  CAN_F5R2_FB17                       ((uint32_t)0x00020000)        /*!&lt; Filter bit 17 */</div><div class="line">#define  CAN_F5R2_FB18                       ((uint32_t)0x00040000)        /*!&lt; Filter bit 18 */</div><div class="line">#define  CAN_F5R2_FB19                       ((uint32_t)0x00080000)        /*!&lt; Filter bit 19 */</div><div class="line">#define  CAN_F5R2_FB20                       ((uint32_t)0x00100000)        /*!&lt; Filter bit 20 */</div><div class="line">#define  CAN_F5R2_FB21                       ((uint32_t)0x00200000)        /*!&lt; Filter bit 21 */</div><div class="line">#define  CAN_F5R2_FB22                       ((uint32_t)0x00400000)        /*!&lt; Filter bit 22 */</div><div class="line">#define  CAN_F5R2_FB23                       ((uint32_t)0x00800000)        /*!&lt; Filter bit 23 */</div><div class="line">#define  CAN_F5R2_FB24                       ((uint32_t)0x01000000)        /*!&lt; Filter bit 24 */</div><div class="line">#define  CAN_F5R2_FB25                       ((uint32_t)0x02000000)        /*!&lt; Filter bit 25 */</div><div class="line">#define  CAN_F5R2_FB26                       ((uint32_t)0x04000000)        /*!&lt; Filter bit 26 */</div><div class="line">#define  CAN_F5R2_FB27                       ((uint32_t)0x08000000)        /*!&lt; Filter bit 27 */</div><div class="line">#define  CAN_F5R2_FB28                       ((uint32_t)0x10000000)        /*!&lt; Filter bit 28 */</div><div class="line">#define  CAN_F5R2_FB29                       ((uint32_t)0x20000000)        /*!&lt; Filter bit 29 */</div><div class="line">#define  CAN_F5R2_FB30                       ((uint32_t)0x40000000)        /*!&lt; Filter bit 30 */</div><div class="line">#define  CAN_F5R2_FB31                       ((uint32_t)0x80000000)        /*!&lt; Filter bit 31 */</div><div class="line"></div><div class="line">/*******************  Bit definition for CAN_F6R2 register  *******************/</div><div class="line">#define  CAN_F6R2_FB0                        ((uint32_t)0x00000001)        /*!&lt; Filter bit 0 */</div><div class="line">#define  CAN_F6R2_FB1                        ((uint32_t)0x00000002)        /*!&lt; Filter bit 1 */</div><div class="line">#define  CAN_F6R2_FB2                        ((uint32_t)0x00000004)        /*!&lt; Filter bit 2 */</div><div class="line">#define  CAN_F6R2_FB3                        ((uint32_t)0x00000008)        /*!&lt; Filter bit 3 */</div><div class="line">#define  CAN_F6R2_FB4                        ((uint32_t)0x00000010)        /*!&lt; Filter bit 4 */</div><div class="line">#define  CAN_F6R2_FB5                        ((uint32_t)0x00000020)        /*!&lt; Filter bit 5 */</div><div class="line">#define  CAN_F6R2_FB6                        ((uint32_t)0x00000040)        /*!&lt; Filter bit 6 */</div><div class="line">#define  CAN_F6R2_FB7                        ((uint32_t)0x00000080)        /*!&lt; Filter bit 7 */</div><div class="line">#define  CAN_F6R2_FB8                        ((uint32_t)0x00000100)        /*!&lt; Filter bit 8 */</div><div class="line">#define  CAN_F6R2_FB9                        ((uint32_t)0x00000200)        /*!&lt; Filter bit 9 */</div><div class="line">#define  CAN_F6R2_FB10                       ((uint32_t)0x00000400)        /*!&lt; Filter bit 10 */</div><div class="line">#define  CAN_F6R2_FB11                       ((uint32_t)0x00000800)        /*!&lt; Filter bit 11 */</div><div class="line">#define  CAN_F6R2_FB12                       ((uint32_t)0x00001000)        /*!&lt; Filter bit 12 */</div><div class="line">#define  CAN_F6R2_FB13                       ((uint32_t)0x00002000)        /*!&lt; Filter bit 13 */</div><div class="line">#define  CAN_F6R2_FB14                       ((uint32_t)0x00004000)        /*!&lt; Filter bit 14 */</div><div class="line">#define  CAN_F6R2_FB15                       ((uint32_t)0x00008000)        /*!&lt; Filter bit 15 */</div><div class="line">#define  CAN_F6R2_FB16                       ((uint32_t)0x00010000)        /*!&lt; Filter bit 16 */</div><div class="line">#define  CAN_F6R2_FB17                       ((uint32_t)0x00020000)        /*!&lt; Filter bit 17 */</div><div class="line">#define  CAN_F6R2_FB18                       ((uint32_t)0x00040000)        /*!&lt; Filter bit 18 */</div><div class="line">#define  CAN_F6R2_FB19                       ((uint32_t)0x00080000)        /*!&lt; Filter bit 19 */</div><div class="line">#define  CAN_F6R2_FB20                       ((uint32_t)0x00100000)        /*!&lt; Filter bit 20 */</div><div class="line">#define  CAN_F6R2_FB21                       ((uint32_t)0x00200000)        /*!&lt; Filter bit 21 */</div><div class="line">#define  CAN_F6R2_FB22                       ((uint32_t)0x00400000)        /*!&lt; Filter bit 22 */</div><div class="line">#define  CAN_F6R2_FB23                       ((uint32_t)0x00800000)        /*!&lt; Filter bit 23 */</div><div class="line">#define  CAN_F6R2_FB24                       ((uint32_t)0x01000000)        /*!&lt; Filter bit 24 */</div><div class="line">#define  CAN_F6R2_FB25                       ((uint32_t)0x02000000)        /*!&lt; Filter bit 25 */</div><div class="line">#define  CAN_F6R2_FB26                       ((uint32_t)0x04000000)        /*!&lt; Filter bit 26 */</div><div class="line">#define  CAN_F6R2_FB27                       ((uint32_t)0x08000000)        /*!&lt; Filter bit 27 */</div><div class="line">#define  CAN_F6R2_FB28                       ((uint32_t)0x10000000)        /*!&lt; Filter bit 28 */</div><div class="line">#define  CAN_F6R2_FB29                       ((uint32_t)0x20000000)        /*!&lt; Filter bit 29 */</div><div class="line">#define  CAN_F6R2_FB30                       ((uint32_t)0x40000000)        /*!&lt; Filter bit 30 */</div><div class="line">#define  CAN_F6R2_FB31                       ((uint32_t)0x80000000)        /*!&lt; Filter bit 31 */</div><div class="line"></div><div class="line">/*******************  Bit definition for CAN_F7R2 register  *******************/</div><div class="line">#define  CAN_F7R2_FB0                        ((uint32_t)0x00000001)        /*!&lt; Filter bit 0 */</div><div class="line">#define  CAN_F7R2_FB1                        ((uint32_t)0x00000002)        /*!&lt; Filter bit 1 */</div><div class="line">#define  CAN_F7R2_FB2                        ((uint32_t)0x00000004)        /*!&lt; Filter bit 2 */</div><div class="line">#define  CAN_F7R2_FB3                        ((uint32_t)0x00000008)        /*!&lt; Filter bit 3 */</div><div class="line">#define  CAN_F7R2_FB4                        ((uint32_t)0x00000010)        /*!&lt; Filter bit 4 */</div><div class="line">#define  CAN_F7R2_FB5                        ((uint32_t)0x00000020)        /*!&lt; Filter bit 5 */</div><div class="line">#define  CAN_F7R2_FB6                        ((uint32_t)0x00000040)        /*!&lt; Filter bit 6 */</div><div class="line">#define  CAN_F7R2_FB7                        ((uint32_t)0x00000080)        /*!&lt; Filter bit 7 */</div><div class="line">#define  CAN_F7R2_FB8                        ((uint32_t)0x00000100)        /*!&lt; Filter bit 8 */</div><div class="line">#define  CAN_F7R2_FB9                        ((uint32_t)0x00000200)        /*!&lt; Filter bit 9 */</div><div class="line">#define  CAN_F7R2_FB10                       ((uint32_t)0x00000400)        /*!&lt; Filter bit 10 */</div><div class="line">#define  CAN_F7R2_FB11                       ((uint32_t)0x00000800)        /*!&lt; Filter bit 11 */</div><div class="line">#define  CAN_F7R2_FB12                       ((uint32_t)0x00001000)        /*!&lt; Filter bit 12 */</div><div class="line">#define  CAN_F7R2_FB13                       ((uint32_t)0x00002000)        /*!&lt; Filter bit 13 */</div><div class="line">#define  CAN_F7R2_FB14                       ((uint32_t)0x00004000)        /*!&lt; Filter bit 14 */</div><div class="line">#define  CAN_F7R2_FB15                       ((uint32_t)0x00008000)        /*!&lt; Filter bit 15 */</div><div class="line">#define  CAN_F7R2_FB16                       ((uint32_t)0x00010000)        /*!&lt; Filter bit 16 */</div><div class="line">#define  CAN_F7R2_FB17                       ((uint32_t)0x00020000)        /*!&lt; Filter bit 17 */</div><div class="line">#define  CAN_F7R2_FB18                       ((uint32_t)0x00040000)        /*!&lt; Filter bit 18 */</div><div class="line">#define  CAN_F7R2_FB19                       ((uint32_t)0x00080000)        /*!&lt; Filter bit 19 */</div><div class="line">#define  CAN_F7R2_FB20                       ((uint32_t)0x00100000)        /*!&lt; Filter bit 20 */</div><div class="line">#define  CAN_F7R2_FB21                       ((uint32_t)0x00200000)        /*!&lt; Filter bit 21 */</div><div class="line">#define  CAN_F7R2_FB22                       ((uint32_t)0x00400000)        /*!&lt; Filter bit 22 */</div><div class="line">#define  CAN_F7R2_FB23                       ((uint32_t)0x00800000)        /*!&lt; Filter bit 23 */</div><div class="line">#define  CAN_F7R2_FB24                       ((uint32_t)0x01000000)        /*!&lt; Filter bit 24 */</div><div class="line">#define  CAN_F7R2_FB25                       ((uint32_t)0x02000000)        /*!&lt; Filter bit 25 */</div><div class="line">#define  CAN_F7R2_FB26                       ((uint32_t)0x04000000)        /*!&lt; Filter bit 26 */</div><div class="line">#define  CAN_F7R2_FB27                       ((uint32_t)0x08000000)        /*!&lt; Filter bit 27 */</div><div class="line">#define  CAN_F7R2_FB28                       ((uint32_t)0x10000000)        /*!&lt; Filter bit 28 */</div><div class="line">#define  CAN_F7R2_FB29                       ((uint32_t)0x20000000)        /*!&lt; Filter bit 29 */</div><div class="line">#define  CAN_F7R2_FB30                       ((uint32_t)0x40000000)        /*!&lt; Filter bit 30 */</div><div class="line">#define  CAN_F7R2_FB31                       ((uint32_t)0x80000000)        /*!&lt; Filter bit 31 */</div><div class="line"></div><div class="line">/*******************  Bit definition for CAN_F8R2 register  *******************/</div><div class="line">#define  CAN_F8R2_FB0                        ((uint32_t)0x00000001)        /*!&lt; Filter bit 0 */</div><div class="line">#define  CAN_F8R2_FB1                        ((uint32_t)0x00000002)        /*!&lt; Filter bit 1 */</div><div class="line">#define  CAN_F8R2_FB2                        ((uint32_t)0x00000004)        /*!&lt; Filter bit 2 */</div><div class="line">#define  CAN_F8R2_FB3                        ((uint32_t)0x00000008)        /*!&lt; Filter bit 3 */</div><div class="line">#define  CAN_F8R2_FB4                        ((uint32_t)0x00000010)        /*!&lt; Filter bit 4 */</div><div class="line">#define  CAN_F8R2_FB5                        ((uint32_t)0x00000020)        /*!&lt; Filter bit 5 */</div><div class="line">#define  CAN_F8R2_FB6                        ((uint32_t)0x00000040)        /*!&lt; Filter bit 6 */</div><div class="line">#define  CAN_F8R2_FB7                        ((uint32_t)0x00000080)        /*!&lt; Filter bit 7 */</div><div class="line">#define  CAN_F8R2_FB8                        ((uint32_t)0x00000100)        /*!&lt; Filter bit 8 */</div><div class="line">#define  CAN_F8R2_FB9                        ((uint32_t)0x00000200)        /*!&lt; Filter bit 9 */</div><div class="line">#define  CAN_F8R2_FB10                       ((uint32_t)0x00000400)        /*!&lt; Filter bit 10 */</div><div class="line">#define  CAN_F8R2_FB11                       ((uint32_t)0x00000800)        /*!&lt; Filter bit 11 */</div><div class="line">#define  CAN_F8R2_FB12                       ((uint32_t)0x00001000)        /*!&lt; Filter bit 12 */</div><div class="line">#define  CAN_F8R2_FB13                       ((uint32_t)0x00002000)        /*!&lt; Filter bit 13 */</div><div class="line">#define  CAN_F8R2_FB14                       ((uint32_t)0x00004000)        /*!&lt; Filter bit 14 */</div><div class="line">#define  CAN_F8R2_FB15                       ((uint32_t)0x00008000)        /*!&lt; Filter bit 15 */</div><div class="line">#define  CAN_F8R2_FB16                       ((uint32_t)0x00010000)        /*!&lt; Filter bit 16 */</div><div class="line">#define  CAN_F8R2_FB17                       ((uint32_t)0x00020000)        /*!&lt; Filter bit 17 */</div><div class="line">#define  CAN_F8R2_FB18                       ((uint32_t)0x00040000)        /*!&lt; Filter bit 18 */</div><div class="line">#define  CAN_F8R2_FB19                       ((uint32_t)0x00080000)        /*!&lt; Filter bit 19 */</div><div class="line">#define  CAN_F8R2_FB20                       ((uint32_t)0x00100000)        /*!&lt; Filter bit 20 */</div><div class="line">#define  CAN_F8R2_FB21                       ((uint32_t)0x00200000)        /*!&lt; Filter bit 21 */</div><div class="line">#define  CAN_F8R2_FB22                       ((uint32_t)0x00400000)        /*!&lt; Filter bit 22 */</div><div class="line">#define  CAN_F8R2_FB23                       ((uint32_t)0x00800000)        /*!&lt; Filter bit 23 */</div><div class="line">#define  CAN_F8R2_FB24                       ((uint32_t)0x01000000)        /*!&lt; Filter bit 24 */</div><div class="line">#define  CAN_F8R2_FB25                       ((uint32_t)0x02000000)        /*!&lt; Filter bit 25 */</div><div class="line">#define  CAN_F8R2_FB26                       ((uint32_t)0x04000000)        /*!&lt; Filter bit 26 */</div><div class="line">#define  CAN_F8R2_FB27                       ((uint32_t)0x08000000)        /*!&lt; Filter bit 27 */</div><div class="line">#define  CAN_F8R2_FB28                       ((uint32_t)0x10000000)        /*!&lt; Filter bit 28 */</div><div class="line">#define  CAN_F8R2_FB29                       ((uint32_t)0x20000000)        /*!&lt; Filter bit 29 */</div><div class="line">#define  CAN_F8R2_FB30                       ((uint32_t)0x40000000)        /*!&lt; Filter bit 30 */</div><div class="line">#define  CAN_F8R2_FB31                       ((uint32_t)0x80000000)        /*!&lt; Filter bit 31 */</div><div class="line"></div><div class="line">/*******************  Bit definition for CAN_F9R2 register  *******************/</div><div class="line">#define  CAN_F9R2_FB0                        ((uint32_t)0x00000001)        /*!&lt; Filter bit 0 */</div><div class="line">#define  CAN_F9R2_FB1                        ((uint32_t)0x00000002)        /*!&lt; Filter bit 1 */</div><div class="line">#define  CAN_F9R2_FB2                        ((uint32_t)0x00000004)        /*!&lt; Filter bit 2 */</div><div class="line">#define  CAN_F9R2_FB3                        ((uint32_t)0x00000008)        /*!&lt; Filter bit 3 */</div><div class="line">#define  CAN_F9R2_FB4                        ((uint32_t)0x00000010)        /*!&lt; Filter bit 4 */</div><div class="line">#define  CAN_F9R2_FB5                        ((uint32_t)0x00000020)        /*!&lt; Filter bit 5 */</div><div class="line">#define  CAN_F9R2_FB6                        ((uint32_t)0x00000040)        /*!&lt; Filter bit 6 */</div><div class="line">#define  CAN_F9R2_FB7                        ((uint32_t)0x00000080)        /*!&lt; Filter bit 7 */</div><div class="line">#define  CAN_F9R2_FB8                        ((uint32_t)0x00000100)        /*!&lt; Filter bit 8 */</div><div class="line">#define  CAN_F9R2_FB9                        ((uint32_t)0x00000200)        /*!&lt; Filter bit 9 */</div><div class="line">#define  CAN_F9R2_FB10                       ((uint32_t)0x00000400)        /*!&lt; Filter bit 10 */</div><div class="line">#define  CAN_F9R2_FB11                       ((uint32_t)0x00000800)        /*!&lt; Filter bit 11 */</div><div class="line">#define  CAN_F9R2_FB12                       ((uint32_t)0x00001000)        /*!&lt; Filter bit 12 */</div><div class="line">#define  CAN_F9R2_FB13                       ((uint32_t)0x00002000)        /*!&lt; Filter bit 13 */</div><div class="line">#define  CAN_F9R2_FB14                       ((uint32_t)0x00004000)        /*!&lt; Filter bit 14 */</div><div class="line">#define  CAN_F9R2_FB15                       ((uint32_t)0x00008000)        /*!&lt; Filter bit 15 */</div><div class="line">#define  CAN_F9R2_FB16                       ((uint32_t)0x00010000)        /*!&lt; Filter bit 16 */</div><div class="line">#define  CAN_F9R2_FB17                       ((uint32_t)0x00020000)        /*!&lt; Filter bit 17 */</div><div class="line">#define  CAN_F9R2_FB18                       ((uint32_t)0x00040000)        /*!&lt; Filter bit 18 */</div><div class="line">#define  CAN_F9R2_FB19                       ((uint32_t)0x00080000)        /*!&lt; Filter bit 19 */</div><div class="line">#define  CAN_F9R2_FB20                       ((uint32_t)0x00100000)        /*!&lt; Filter bit 20 */</div><div class="line">#define  CAN_F9R2_FB21                       ((uint32_t)0x00200000)        /*!&lt; Filter bit 21 */</div><div class="line">#define  CAN_F9R2_FB22                       ((uint32_t)0x00400000)        /*!&lt; Filter bit 22 */</div><div class="line">#define  CAN_F9R2_FB23                       ((uint32_t)0x00800000)        /*!&lt; Filter bit 23 */</div><div class="line">#define  CAN_F9R2_FB24                       ((uint32_t)0x01000000)        /*!&lt; Filter bit 24 */</div><div class="line">#define  CAN_F9R2_FB25                       ((uint32_t)0x02000000)        /*!&lt; Filter bit 25 */</div><div class="line">#define  CAN_F9R2_FB26                       ((uint32_t)0x04000000)        /*!&lt; Filter bit 26 */</div><div class="line">#define  CAN_F9R2_FB27                       ((uint32_t)0x08000000)        /*!&lt; Filter bit 27 */</div><div class="line">#define  CAN_F9R2_FB28                       ((uint32_t)0x10000000)        /*!&lt; Filter bit 28 */</div><div class="line">#define  CAN_F9R2_FB29                       ((uint32_t)0x20000000)        /*!&lt; Filter bit 29 */</div><div class="line">#define  CAN_F9R2_FB30                       ((uint32_t)0x40000000)        /*!&lt; Filter bit 30 */</div><div class="line">#define  CAN_F9R2_FB31                       ((uint32_t)0x80000000)        /*!&lt; Filter bit 31 */</div><div class="line"></div><div class="line">/*******************  Bit definition for CAN_F10R2 register  ******************/</div><div class="line">#define  CAN_F10R2_FB0                       ((uint32_t)0x00000001)        /*!&lt; Filter bit 0 */</div><div class="line">#define  CAN_F10R2_FB1                       ((uint32_t)0x00000002)        /*!&lt; Filter bit 1 */</div><div class="line">#define  CAN_F10R2_FB2                       ((uint32_t)0x00000004)        /*!&lt; Filter bit 2 */</div><div class="line">#define  CAN_F10R2_FB3                       ((uint32_t)0x00000008)        /*!&lt; Filter bit 3 */</div><div class="line">#define  CAN_F10R2_FB4                       ((uint32_t)0x00000010)        /*!&lt; Filter bit 4 */</div><div class="line">#define  CAN_F10R2_FB5                       ((uint32_t)0x00000020)        /*!&lt; Filter bit 5 */</div><div class="line">#define  CAN_F10R2_FB6                       ((uint32_t)0x00000040)        /*!&lt; Filter bit 6 */</div><div class="line">#define  CAN_F10R2_FB7                       ((uint32_t)0x00000080)        /*!&lt; Filter bit 7 */</div><div class="line">#define  CAN_F10R2_FB8                       ((uint32_t)0x00000100)        /*!&lt; Filter bit 8 */</div><div class="line">#define  CAN_F10R2_FB9                       ((uint32_t)0x00000200)        /*!&lt; Filter bit 9 */</div><div class="line">#define  CAN_F10R2_FB10                      ((uint32_t)0x00000400)        /*!&lt; Filter bit 10 */</div><div class="line">#define  CAN_F10R2_FB11                      ((uint32_t)0x00000800)        /*!&lt; Filter bit 11 */</div><div class="line">#define  CAN_F10R2_FB12                      ((uint32_t)0x00001000)        /*!&lt; Filter bit 12 */</div><div class="line">#define  CAN_F10R2_FB13                      ((uint32_t)0x00002000)        /*!&lt; Filter bit 13 */</div><div class="line">#define  CAN_F10R2_FB14                      ((uint32_t)0x00004000)        /*!&lt; Filter bit 14 */</div><div class="line">#define  CAN_F10R2_FB15                      ((uint32_t)0x00008000)        /*!&lt; Filter bit 15 */</div><div class="line">#define  CAN_F10R2_FB16                      ((uint32_t)0x00010000)        /*!&lt; Filter bit 16 */</div><div class="line">#define  CAN_F10R2_FB17                      ((uint32_t)0x00020000)        /*!&lt; Filter bit 17 */</div><div class="line">#define  CAN_F10R2_FB18                      ((uint32_t)0x00040000)        /*!&lt; Filter bit 18 */</div><div class="line">#define  CAN_F10R2_FB19                      ((uint32_t)0x00080000)        /*!&lt; Filter bit 19 */</div><div class="line">#define  CAN_F10R2_FB20                      ((uint32_t)0x00100000)        /*!&lt; Filter bit 20 */</div><div class="line">#define  CAN_F10R2_FB21                      ((uint32_t)0x00200000)        /*!&lt; Filter bit 21 */</div><div class="line">#define  CAN_F10R2_FB22                      ((uint32_t)0x00400000)        /*!&lt; Filter bit 22 */</div><div class="line">#define  CAN_F10R2_FB23                      ((uint32_t)0x00800000)        /*!&lt; Filter bit 23 */</div><div class="line">#define  CAN_F10R2_FB24                      ((uint32_t)0x01000000)        /*!&lt; Filter bit 24 */</div><div class="line">#define  CAN_F10R2_FB25                      ((uint32_t)0x02000000)        /*!&lt; Filter bit 25 */</div><div class="line">#define  CAN_F10R2_FB26                      ((uint32_t)0x04000000)        /*!&lt; Filter bit 26 */</div><div class="line">#define  CAN_F10R2_FB27                      ((uint32_t)0x08000000)        /*!&lt; Filter bit 27 */</div><div class="line">#define  CAN_F10R2_FB28                      ((uint32_t)0x10000000)        /*!&lt; Filter bit 28 */</div><div class="line">#define  CAN_F10R2_FB29                      ((uint32_t)0x20000000)        /*!&lt; Filter bit 29 */</div><div class="line">#define  CAN_F10R2_FB30                      ((uint32_t)0x40000000)        /*!&lt; Filter bit 30 */</div><div class="line">#define  CAN_F10R2_FB31                      ((uint32_t)0x80000000)        /*!&lt; Filter bit 31 */</div><div class="line"></div><div class="line">/*******************  Bit definition for CAN_F11R2 register  ******************/</div><div class="line">#define  CAN_F11R2_FB0                       ((uint32_t)0x00000001)        /*!&lt; Filter bit 0 */</div><div class="line">#define  CAN_F11R2_FB1                       ((uint32_t)0x00000002)        /*!&lt; Filter bit 1 */</div><div class="line">#define  CAN_F11R2_FB2                       ((uint32_t)0x00000004)        /*!&lt; Filter bit 2 */</div><div class="line">#define  CAN_F11R2_FB3                       ((uint32_t)0x00000008)        /*!&lt; Filter bit 3 */</div><div class="line">#define  CAN_F11R2_FB4                       ((uint32_t)0x00000010)        /*!&lt; Filter bit 4 */</div><div class="line">#define  CAN_F11R2_FB5                       ((uint32_t)0x00000020)        /*!&lt; Filter bit 5 */</div><div class="line">#define  CAN_F11R2_FB6                       ((uint32_t)0x00000040)        /*!&lt; Filter bit 6 */</div><div class="line">#define  CAN_F11R2_FB7                       ((uint32_t)0x00000080)        /*!&lt; Filter bit 7 */</div><div class="line">#define  CAN_F11R2_FB8                       ((uint32_t)0x00000100)        /*!&lt; Filter bit 8 */</div><div class="line">#define  CAN_F11R2_FB9                       ((uint32_t)0x00000200)        /*!&lt; Filter bit 9 */</div><div class="line">#define  CAN_F11R2_FB10                      ((uint32_t)0x00000400)        /*!&lt; Filter bit 10 */</div><div class="line">#define  CAN_F11R2_FB11                      ((uint32_t)0x00000800)        /*!&lt; Filter bit 11 */</div><div class="line">#define  CAN_F11R2_FB12                      ((uint32_t)0x00001000)        /*!&lt; Filter bit 12 */</div><div class="line">#define  CAN_F11R2_FB13                      ((uint32_t)0x00002000)        /*!&lt; Filter bit 13 */</div><div class="line">#define  CAN_F11R2_FB14                      ((uint32_t)0x00004000)        /*!&lt; Filter bit 14 */</div><div class="line">#define  CAN_F11R2_FB15                      ((uint32_t)0x00008000)        /*!&lt; Filter bit 15 */</div><div class="line">#define  CAN_F11R2_FB16                      ((uint32_t)0x00010000)        /*!&lt; Filter bit 16 */</div><div class="line">#define  CAN_F11R2_FB17                      ((uint32_t)0x00020000)        /*!&lt; Filter bit 17 */</div><div class="line">#define  CAN_F11R2_FB18                      ((uint32_t)0x00040000)        /*!&lt; Filter bit 18 */</div><div class="line">#define  CAN_F11R2_FB19                      ((uint32_t)0x00080000)        /*!&lt; Filter bit 19 */</div><div class="line">#define  CAN_F11R2_FB20                      ((uint32_t)0x00100000)        /*!&lt; Filter bit 20 */</div><div class="line">#define  CAN_F11R2_FB21                      ((uint32_t)0x00200000)        /*!&lt; Filter bit 21 */</div><div class="line">#define  CAN_F11R2_FB22                      ((uint32_t)0x00400000)        /*!&lt; Filter bit 22 */</div><div class="line">#define  CAN_F11R2_FB23                      ((uint32_t)0x00800000)        /*!&lt; Filter bit 23 */</div><div class="line">#define  CAN_F11R2_FB24                      ((uint32_t)0x01000000)        /*!&lt; Filter bit 24 */</div><div class="line">#define  CAN_F11R2_FB25                      ((uint32_t)0x02000000)        /*!&lt; Filter bit 25 */</div><div class="line">#define  CAN_F11R2_FB26                      ((uint32_t)0x04000000)        /*!&lt; Filter bit 26 */</div><div class="line">#define  CAN_F11R2_FB27                      ((uint32_t)0x08000000)        /*!&lt; Filter bit 27 */</div><div class="line">#define  CAN_F11R2_FB28                      ((uint32_t)0x10000000)        /*!&lt; Filter bit 28 */</div><div class="line">#define  CAN_F11R2_FB29                      ((uint32_t)0x20000000)        /*!&lt; Filter bit 29 */</div><div class="line">#define  CAN_F11R2_FB30                      ((uint32_t)0x40000000)        /*!&lt; Filter bit 30 */</div><div class="line">#define  CAN_F11R2_FB31                      ((uint32_t)0x80000000)        /*!&lt; Filter bit 31 */</div><div class="line"></div><div class="line">/*******************  Bit definition for CAN_F12R2 register  ******************/</div><div class="line">#define  CAN_F12R2_FB0                       ((uint32_t)0x00000001)        /*!&lt; Filter bit 0 */</div><div class="line">#define  CAN_F12R2_FB1                       ((uint32_t)0x00000002)        /*!&lt; Filter bit 1 */</div><div class="line">#define  CAN_F12R2_FB2                       ((uint32_t)0x00000004)        /*!&lt; Filter bit 2 */</div><div class="line">#define  CAN_F12R2_FB3                       ((uint32_t)0x00000008)        /*!&lt; Filter bit 3 */</div><div class="line">#define  CAN_F12R2_FB4                       ((uint32_t)0x00000010)        /*!&lt; Filter bit 4 */</div><div class="line">#define  CAN_F12R2_FB5                       ((uint32_t)0x00000020)        /*!&lt; Filter bit 5 */</div><div class="line">#define  CAN_F12R2_FB6                       ((uint32_t)0x00000040)        /*!&lt; Filter bit 6 */</div><div class="line">#define  CAN_F12R2_FB7                       ((uint32_t)0x00000080)        /*!&lt; Filter bit 7 */</div><div class="line">#define  CAN_F12R2_FB8                       ((uint32_t)0x00000100)        /*!&lt; Filter bit 8 */</div><div class="line">#define  CAN_F12R2_FB9                       ((uint32_t)0x00000200)        /*!&lt; Filter bit 9 */</div><div class="line">#define  CAN_F12R2_FB10                      ((uint32_t)0x00000400)        /*!&lt; Filter bit 10 */</div><div class="line">#define  CAN_F12R2_FB11                      ((uint32_t)0x00000800)        /*!&lt; Filter bit 11 */</div><div class="line">#define  CAN_F12R2_FB12                      ((uint32_t)0x00001000)        /*!&lt; Filter bit 12 */</div><div class="line">#define  CAN_F12R2_FB13                      ((uint32_t)0x00002000)        /*!&lt; Filter bit 13 */</div><div class="line">#define  CAN_F12R2_FB14                      ((uint32_t)0x00004000)        /*!&lt; Filter bit 14 */</div><div class="line">#define  CAN_F12R2_FB15                      ((uint32_t)0x00008000)        /*!&lt; Filter bit 15 */</div><div class="line">#define  CAN_F12R2_FB16                      ((uint32_t)0x00010000)        /*!&lt; Filter bit 16 */</div><div class="line">#define  CAN_F12R2_FB17                      ((uint32_t)0x00020000)        /*!&lt; Filter bit 17 */</div><div class="line">#define  CAN_F12R2_FB18                      ((uint32_t)0x00040000)        /*!&lt; Filter bit 18 */</div><div class="line">#define  CAN_F12R2_FB19                      ((uint32_t)0x00080000)        /*!&lt; Filter bit 19 */</div><div class="line">#define  CAN_F12R2_FB20                      ((uint32_t)0x00100000)        /*!&lt; Filter bit 20 */</div><div class="line">#define  CAN_F12R2_FB21                      ((uint32_t)0x00200000)        /*!&lt; Filter bit 21 */</div><div class="line">#define  CAN_F12R2_FB22                      ((uint32_t)0x00400000)        /*!&lt; Filter bit 22 */</div><div class="line">#define  CAN_F12R2_FB23                      ((uint32_t)0x00800000)        /*!&lt; Filter bit 23 */</div><div class="line">#define  CAN_F12R2_FB24                      ((uint32_t)0x01000000)        /*!&lt; Filter bit 24 */</div><div class="line">#define  CAN_F12R2_FB25                      ((uint32_t)0x02000000)        /*!&lt; Filter bit 25 */</div><div class="line">#define  CAN_F12R2_FB26                      ((uint32_t)0x04000000)        /*!&lt; Filter bit 26 */</div><div class="line">#define  CAN_F12R2_FB27                      ((uint32_t)0x08000000)        /*!&lt; Filter bit 27 */</div><div class="line">#define  CAN_F12R2_FB28                      ((uint32_t)0x10000000)        /*!&lt; Filter bit 28 */</div><div class="line">#define  CAN_F12R2_FB29                      ((uint32_t)0x20000000)        /*!&lt; Filter bit 29 */</div><div class="line">#define  CAN_F12R2_FB30                      ((uint32_t)0x40000000)        /*!&lt; Filter bit 30 */</div><div class="line">#define  CAN_F12R2_FB31                      ((uint32_t)0x80000000)        /*!&lt; Filter bit 31 */</div><div class="line"></div><div class="line">/*******************  Bit definition for CAN_F13R2 register  ******************/</div><div class="line">#define  CAN_F13R2_FB0                       ((uint32_t)0x00000001)        /*!&lt; Filter bit 0 */</div><div class="line">#define  CAN_F13R2_FB1                       ((uint32_t)0x00000002)        /*!&lt; Filter bit 1 */</div><div class="line">#define  CAN_F13R2_FB2                       ((uint32_t)0x00000004)        /*!&lt; Filter bit 2 */</div><div class="line">#define  CAN_F13R2_FB3                       ((uint32_t)0x00000008)        /*!&lt; Filter bit 3 */</div><div class="line">#define  CAN_F13R2_FB4                       ((uint32_t)0x00000010)        /*!&lt; Filter bit 4 */</div><div class="line">#define  CAN_F13R2_FB5                       ((uint32_t)0x00000020)        /*!&lt; Filter bit 5 */</div><div class="line">#define  CAN_F13R2_FB6                       ((uint32_t)0x00000040)        /*!&lt; Filter bit 6 */</div><div class="line">#define  CAN_F13R2_FB7                       ((uint32_t)0x00000080)        /*!&lt; Filter bit 7 */</div><div class="line">#define  CAN_F13R2_FB8                       ((uint32_t)0x00000100)        /*!&lt; Filter bit 8 */</div><div class="line">#define  CAN_F13R2_FB9                       ((uint32_t)0x00000200)        /*!&lt; Filter bit 9 */</div><div class="line">#define  CAN_F13R2_FB10                      ((uint32_t)0x00000400)        /*!&lt; Filter bit 10 */</div><div class="line">#define  CAN_F13R2_FB11                      ((uint32_t)0x00000800)        /*!&lt; Filter bit 11 */</div><div class="line">#define  CAN_F13R2_FB12                      ((uint32_t)0x00001000)        /*!&lt; Filter bit 12 */</div><div class="line">#define  CAN_F13R2_FB13                      ((uint32_t)0x00002000)        /*!&lt; Filter bit 13 */</div><div class="line">#define  CAN_F13R2_FB14                      ((uint32_t)0x00004000)        /*!&lt; Filter bit 14 */</div><div class="line">#define  CAN_F13R2_FB15                      ((uint32_t)0x00008000)        /*!&lt; Filter bit 15 */</div><div class="line">#define  CAN_F13R2_FB16                      ((uint32_t)0x00010000)        /*!&lt; Filter bit 16 */</div><div class="line">#define  CAN_F13R2_FB17                      ((uint32_t)0x00020000)        /*!&lt; Filter bit 17 */</div><div class="line">#define  CAN_F13R2_FB18                      ((uint32_t)0x00040000)        /*!&lt; Filter bit 18 */</div><div class="line">#define  CAN_F13R2_FB19                      ((uint32_t)0x00080000)        /*!&lt; Filter bit 19 */</div><div class="line">#define  CAN_F13R2_FB20                      ((uint32_t)0x00100000)        /*!&lt; Filter bit 20 */</div><div class="line">#define  CAN_F13R2_FB21                      ((uint32_t)0x00200000)        /*!&lt; Filter bit 21 */</div><div class="line">#define  CAN_F13R2_FB22                      ((uint32_t)0x00400000)        /*!&lt; Filter bit 22 */</div><div class="line">#define  CAN_F13R2_FB23                      ((uint32_t)0x00800000)        /*!&lt; Filter bit 23 */</div><div class="line">#define  CAN_F13R2_FB24                      ((uint32_t)0x01000000)        /*!&lt; Filter bit 24 */</div><div class="line">#define  CAN_F13R2_FB25                      ((uint32_t)0x02000000)        /*!&lt; Filter bit 25 */</div><div class="line">#define  CAN_F13R2_FB26                      ((uint32_t)0x04000000)        /*!&lt; Filter bit 26 */</div><div class="line">#define  CAN_F13R2_FB27                      ((uint32_t)0x08000000)        /*!&lt; Filter bit 27 */</div><div class="line">#define  CAN_F13R2_FB28                      ((uint32_t)0x10000000)        /*!&lt; Filter bit 28 */</div><div class="line">#define  CAN_F13R2_FB29                      ((uint32_t)0x20000000)        /*!&lt; Filter bit 29 */</div><div class="line">#define  CAN_F13R2_FB30                      ((uint32_t)0x40000000)        /*!&lt; Filter bit 30 */</div><div class="line">#define  CAN_F13R2_FB31                      ((uint32_t)0x80000000)        /*!&lt; Filter bit 31 */</div><div class="line"></div><div class="line">/******************************************************************************/</div><div class="line">/*                                                                            */</div><div class="line">/*                        Serial Peripheral Interface                         */</div><div class="line">/*                                                                            */</div><div class="line">/******************************************************************************/</div><div class="line"></div><div class="line">/*******************  Bit definition for SPI_CR1 register  ********************/</div><div class="line">#define  SPI_CR1_CPHA                        ((uint16_t)0x0001)            /*!&lt; Clock Phase */</div><div class="line">#define  SPI_CR1_CPOL                        ((uint16_t)0x0002)            /*!&lt; Clock Polarity */</div><div class="line">#define  SPI_CR1_MSTR                        ((uint16_t)0x0004)            /*!&lt; Master Selection */</div><div class="line"></div><div class="line">#define  SPI_CR1_BR                          ((uint16_t)0x0038)            /*!&lt; BR[2:0] bits (Baud Rate Control) */</div><div class="line">#define  SPI_CR1_BR_0                        ((uint16_t)0x0008)            /*!&lt; Bit 0 */</div><div class="line">#define  SPI_CR1_BR_1                        ((uint16_t)0x0010)            /*!&lt; Bit 1 */</div><div class="line">#define  SPI_CR1_BR_2                        ((uint16_t)0x0020)            /*!&lt; Bit 2 */</div><div class="line"></div><div class="line">#define  SPI_CR1_SPE                         ((uint16_t)0x0040)            /*!&lt; SPI Enable */</div><div class="line">#define  SPI_CR1_LSBFIRST                    ((uint16_t)0x0080)            /*!&lt; Frame Format */</div><div class="line">#define  SPI_CR1_SSI                         ((uint16_t)0x0100)            /*!&lt; Internal slave select */</div><div class="line">#define  SPI_CR1_SSM                         ((uint16_t)0x0200)            /*!&lt; Software slave management */</div><div class="line">#define  SPI_CR1_RXONLY                      ((uint16_t)0x0400)            /*!&lt; Receive only */</div><div class="line">#define  SPI_CR1_DFF                         ((uint16_t)0x0800)            /*!&lt; Data Frame Format */</div><div class="line">#define  SPI_CR1_CRCNEXT                     ((uint16_t)0x1000)            /*!&lt; Transmit CRC next */</div><div class="line">#define  SPI_CR1_CRCEN                       ((uint16_t)0x2000)            /*!&lt; Hardware CRC calculation enable */</div><div class="line">#define  SPI_CR1_BIDIOE                      ((uint16_t)0x4000)            /*!&lt; Output enable in bidirectional mode */</div><div class="line">#define  SPI_CR1_BIDIMODE                    ((uint16_t)0x8000)            /*!&lt; Bidirectional data mode enable */</div><div class="line"></div><div class="line">/*******************  Bit definition for SPI_CR2 register  ********************/</div><div class="line">#define  SPI_CR2_RXDMAEN                     ((uint8_t)0x01)               /*!&lt; Rx Buffer DMA Enable */</div><div class="line">#define  SPI_CR2_TXDMAEN                     ((uint8_t)0x02)               /*!&lt; Tx Buffer DMA Enable */</div><div class="line">#define  SPI_CR2_SSOE                        ((uint8_t)0x04)               /*!&lt; SS Output Enable */</div><div class="line">#define  SPI_CR2_ERRIE                       ((uint8_t)0x20)               /*!&lt; Error Interrupt Enable */</div><div class="line">#define  SPI_CR2_RXNEIE                      ((uint8_t)0x40)               /*!&lt; RX buffer Not Empty Interrupt Enable */</div><div class="line">#define  SPI_CR2_TXEIE                       ((uint8_t)0x80)               /*!&lt; Tx buffer Empty Interrupt Enable */</div><div class="line"></div><div class="line">/********************  Bit definition for SPI_SR register  ********************/</div><div class="line">#define  SPI_SR_RXNE                         ((uint8_t)0x01)               /*!&lt; Receive buffer Not Empty */</div><div class="line">#define  SPI_SR_TXE                          ((uint8_t)0x02)               /*!&lt; Transmit buffer Empty */</div><div class="line">#define  SPI_SR_CHSIDE                       ((uint8_t)0x04)               /*!&lt; Channel side */</div><div class="line">#define  SPI_SR_UDR                          ((uint8_t)0x08)               /*!&lt; Underrun flag */</div><div class="line">#define  SPI_SR_CRCERR                       ((uint8_t)0x10)               /*!&lt; CRC Error flag */</div><div class="line">#define  SPI_SR_MODF                         ((uint8_t)0x20)               /*!&lt; Mode fault */</div><div class="line">#define  SPI_SR_OVR                          ((uint8_t)0x40)               /*!&lt; Overrun flag */</div><div class="line">#define  SPI_SR_BSY                          ((uint8_t)0x80)               /*!&lt; Busy flag */</div><div class="line"></div><div class="line">/********************  Bit definition for SPI_DR register  ********************/</div><div class="line">#define  SPI_DR_DR                           ((uint16_t)0xFFFF)            /*!&lt; Data Register */</div><div class="line"></div><div class="line">/*******************  Bit definition for SPI_CRCPR register  ******************/</div><div class="line">#define  SPI_CRCPR_CRCPOLY                   ((uint16_t)0xFFFF)            /*!&lt; CRC polynomial register */</div><div class="line"></div><div class="line">/******************  Bit definition for SPI_RXCRCR register  ******************/</div><div class="line">#define  SPI_RXCRCR_RXCRC                    ((uint16_t)0xFFFF)            /*!&lt; Rx CRC Register */</div><div class="line"></div><div class="line">/******************  Bit definition for SPI_TXCRCR register  ******************/</div><div class="line">#define  SPI_TXCRCR_TXCRC                    ((uint16_t)0xFFFF)            /*!&lt; Tx CRC Register */</div><div class="line"></div><div class="line">/******************  Bit definition for SPI_I2SCFGR register  *****************/</div><div class="line">#define  SPI_I2SCFGR_CHLEN                   ((uint16_t)0x0001)            /*!&lt; Channel length (number of bits per audio channel) */</div><div class="line"></div><div class="line">#define  SPI_I2SCFGR_DATLEN                  ((uint16_t)0x0006)            /*!&lt; DATLEN[1:0] bits (Data length to be transferred) */</div><div class="line">#define  SPI_I2SCFGR_DATLEN_0                ((uint16_t)0x0002)            /*!&lt; Bit 0 */</div><div class="line">#define  SPI_I2SCFGR_DATLEN_1                ((uint16_t)0x0004)            /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  SPI_I2SCFGR_CKPOL                   ((uint16_t)0x0008)            /*!&lt; steady state clock polarity */</div><div class="line"></div><div class="line">#define  SPI_I2SCFGR_I2SSTD                  ((uint16_t)0x0030)            /*!&lt; I2SSTD[1:0] bits (I2S standard selection) */</div><div class="line">#define  SPI_I2SCFGR_I2SSTD_0                ((uint16_t)0x0010)            /*!&lt; Bit 0 */</div><div class="line">#define  SPI_I2SCFGR_I2SSTD_1                ((uint16_t)0x0020)            /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  SPI_I2SCFGR_PCMSYNC                 ((uint16_t)0x0080)            /*!&lt; PCM frame synchronization */</div><div class="line"></div><div class="line">#define  SPI_I2SCFGR_I2SCFG                  ((uint16_t)0x0300)            /*!&lt; I2SCFG[1:0] bits (I2S configuration mode) */</div><div class="line">#define  SPI_I2SCFGR_I2SCFG_0                ((uint16_t)0x0100)            /*!&lt; Bit 0 */</div><div class="line">#define  SPI_I2SCFGR_I2SCFG_1                ((uint16_t)0x0200)            /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  SPI_I2SCFGR_I2SE                    ((uint16_t)0x0400)            /*!&lt; I2S Enable */</div><div class="line">#define  SPI_I2SCFGR_I2SMOD                  ((uint16_t)0x0800)            /*!&lt; I2S mode selection */</div><div class="line"></div><div class="line">/******************  Bit definition for SPI_I2SPR register  *******************/</div><div class="line">#define  SPI_I2SPR_I2SDIV                    ((uint16_t)0x00FF)            /*!&lt; I2S Linear prescaler */</div><div class="line">#define  SPI_I2SPR_ODD                       ((uint16_t)0x0100)            /*!&lt; Odd factor for the prescaler */</div><div class="line">#define  SPI_I2SPR_MCKOE                     ((uint16_t)0x0200)            /*!&lt; Master Clock Output Enable */</div><div class="line"></div><div class="line">/******************************************************************************/</div><div class="line">/*                                                                            */</div><div class="line">/*                      Inter-integrated Circuit Interface                    */</div><div class="line">/*                                                                            */</div><div class="line">/******************************************************************************/</div><div class="line"></div><div class="line">/*******************  Bit definition for I2C_CR1 register  ********************/</div><div class="line">#define  I2C_CR1_PE                          ((uint16_t)0x0001)            /*!&lt; Peripheral Enable */</div><div class="line">#define  I2C_CR1_SMBUS                       ((uint16_t)0x0002)            /*!&lt; SMBus Mode */</div><div class="line">#define  I2C_CR1_SMBTYPE                     ((uint16_t)0x0008)            /*!&lt; SMBus Type */</div><div class="line">#define  I2C_CR1_ENARP                       ((uint16_t)0x0010)            /*!&lt; ARP Enable */</div><div class="line">#define  I2C_CR1_ENPEC                       ((uint16_t)0x0020)            /*!&lt; PEC Enable */</div><div class="line">#define  I2C_CR1_ENGC                        ((uint16_t)0x0040)            /*!&lt; General Call Enable */</div><div class="line">#define  I2C_CR1_NOSTRETCH                   ((uint16_t)0x0080)            /*!&lt; Clock Stretching Disable (Slave mode) */</div><div class="line">#define  I2C_CR1_START                       ((uint16_t)0x0100)            /*!&lt; Start Generation */</div><div class="line">#define  I2C_CR1_STOP                        ((uint16_t)0x0200)            /*!&lt; Stop Generation */</div><div class="line">#define  I2C_CR1_ACK                         ((uint16_t)0x0400)            /*!&lt; Acknowledge Enable */</div><div class="line">#define  I2C_CR1_POS                         ((uint16_t)0x0800)            /*!&lt; Acknowledge/PEC Position (for data reception) */</div><div class="line">#define  I2C_CR1_PEC                         ((uint16_t)0x1000)            /*!&lt; Packet Error Checking */</div><div class="line">#define  I2C_CR1_ALERT                       ((uint16_t)0x2000)            /*!&lt; SMBus Alert */</div><div class="line">#define  I2C_CR1_SWRST                       ((uint16_t)0x8000)            /*!&lt; Software Reset */</div><div class="line"></div><div class="line">/*******************  Bit definition for I2C_CR2 register  ********************/</div><div class="line">#define  I2C_CR2_FREQ                        ((uint16_t)0x003F)            /*!&lt; FREQ[5:0] bits (Peripheral Clock Frequency) */</div><div class="line">#define  I2C_CR2_FREQ_0                      ((uint16_t)0x0001)            /*!&lt; Bit 0 */</div><div class="line">#define  I2C_CR2_FREQ_1                      ((uint16_t)0x0002)            /*!&lt; Bit 1 */</div><div class="line">#define  I2C_CR2_FREQ_2                      ((uint16_t)0x0004)            /*!&lt; Bit 2 */</div><div class="line">#define  I2C_CR2_FREQ_3                      ((uint16_t)0x0008)            /*!&lt; Bit 3 */</div><div class="line">#define  I2C_CR2_FREQ_4                      ((uint16_t)0x0010)            /*!&lt; Bit 4 */</div><div class="line">#define  I2C_CR2_FREQ_5                      ((uint16_t)0x0020)            /*!&lt; Bit 5 */</div><div class="line"></div><div class="line">#define  I2C_CR2_ITERREN                     ((uint16_t)0x0100)            /*!&lt; Error Interrupt Enable */</div><div class="line">#define  I2C_CR2_ITEVTEN                     ((uint16_t)0x0200)            /*!&lt; Event Interrupt Enable */</div><div class="line">#define  I2C_CR2_ITBUFEN                     ((uint16_t)0x0400)            /*!&lt; Buffer Interrupt Enable */</div><div class="line">#define  I2C_CR2_DMAEN                       ((uint16_t)0x0800)            /*!&lt; DMA Requests Enable */</div><div class="line">#define  I2C_CR2_LAST                        ((uint16_t)0x1000)            /*!&lt; DMA Last Transfer */</div><div class="line"></div><div class="line">/*******************  Bit definition for I2C_OAR1 register  *******************/</div><div class="line">#define  I2C_OAR1_ADD1_7                     ((uint16_t)0x00FE)            /*!&lt; Interface Address */</div><div class="line">#define  I2C_OAR1_ADD8_9                     ((uint16_t)0x0300)            /*!&lt; Interface Address */</div><div class="line"></div><div class="line">#define  I2C_OAR1_ADD0                       ((uint16_t)0x0001)            /*!&lt; Bit 0 */</div><div class="line">#define  I2C_OAR1_ADD1                       ((uint16_t)0x0002)            /*!&lt; Bit 1 */</div><div class="line">#define  I2C_OAR1_ADD2                       ((uint16_t)0x0004)            /*!&lt; Bit 2 */</div><div class="line">#define  I2C_OAR1_ADD3                       ((uint16_t)0x0008)            /*!&lt; Bit 3 */</div><div class="line">#define  I2C_OAR1_ADD4                       ((uint16_t)0x0010)            /*!&lt; Bit 4 */</div><div class="line">#define  I2C_OAR1_ADD5                       ((uint16_t)0x0020)            /*!&lt; Bit 5 */</div><div class="line">#define  I2C_OAR1_ADD6                       ((uint16_t)0x0040)            /*!&lt; Bit 6 */</div><div class="line">#define  I2C_OAR1_ADD7                       ((uint16_t)0x0080)            /*!&lt; Bit 7 */</div><div class="line">#define  I2C_OAR1_ADD8                       ((uint16_t)0x0100)            /*!&lt; Bit 8 */</div><div class="line">#define  I2C_OAR1_ADD9                       ((uint16_t)0x0200)            /*!&lt; Bit 9 */</div><div class="line"></div><div class="line">#define  I2C_OAR1_ADDMODE                    ((uint16_t)0x8000)            /*!&lt; Addressing Mode (Slave mode) */</div><div class="line"></div><div class="line">/*******************  Bit definition for I2C_OAR2 register  *******************/</div><div class="line">#define  I2C_OAR2_ENDUAL                     ((uint8_t)0x01)               /*!&lt; Dual addressing mode enable */</div><div class="line">#define  I2C_OAR2_ADD2                       ((uint8_t)0xFE)               /*!&lt; Interface address */</div><div class="line"></div><div class="line">/********************  Bit definition for I2C_DR register  ********************/</div><div class="line">#define  I2C_DR_DR                           ((uint8_t)0xFF)               /*!&lt; 8-bit Data Register */</div><div class="line"></div><div class="line">/*******************  Bit definition for I2C_SR1 register  ********************/</div><div class="line">#define  I2C_SR1_SB                          ((uint16_t)0x0001)            /*!&lt; Start Bit (Master mode) */</div><div class="line">#define  I2C_SR1_ADDR                        ((uint16_t)0x0002)            /*!&lt; Address sent (master mode)/matched (slave mode) */</div><div class="line">#define  I2C_SR1_BTF                         ((uint16_t)0x0004)            /*!&lt; Byte Transfer Finished */</div><div class="line">#define  I2C_SR1_ADD10                       ((uint16_t)0x0008)            /*!&lt; 10-bit header sent (Master mode) */</div><div class="line">#define  I2C_SR1_STOPF                       ((uint16_t)0x0010)            /*!&lt; Stop detection (Slave mode) */</div><div class="line">#define  I2C_SR1_RXNE                        ((uint16_t)0x0040)            /*!&lt; Data Register not Empty (receivers) */</div><div class="line">#define  I2C_SR1_TXE                         ((uint16_t)0x0080)            /*!&lt; Data Register Empty (transmitters) */</div><div class="line">#define  I2C_SR1_BERR                        ((uint16_t)0x0100)            /*!&lt; Bus Error */</div><div class="line">#define  I2C_SR1_ARLO                        ((uint16_t)0x0200)            /*!&lt; Arbitration Lost (master mode) */</div><div class="line">#define  I2C_SR1_AF                          ((uint16_t)0x0400)            /*!&lt; Acknowledge Failure */</div><div class="line">#define  I2C_SR1_OVR                         ((uint16_t)0x0800)            /*!&lt; Overrun/Underrun */</div><div class="line">#define  I2C_SR1_PECERR                      ((uint16_t)0x1000)            /*!&lt; PEC Error in reception */</div><div class="line">#define  I2C_SR1_TIMEOUT                     ((uint16_t)0x4000)            /*!&lt; Timeout or Tlow Error */</div><div class="line">#define  I2C_SR1_SMBALERT                    ((uint16_t)0x8000)            /*!&lt; SMBus Alert */</div><div class="line"></div><div class="line">/*******************  Bit definition for I2C_SR2 register  ********************/</div><div class="line">#define  I2C_SR2_MSL                         ((uint16_t)0x0001)            /*!&lt; Master/Slave */</div><div class="line">#define  I2C_SR2_BUSY                        ((uint16_t)0x0002)            /*!&lt; Bus Busy */</div><div class="line">#define  I2C_SR2_TRA                         ((uint16_t)0x0004)            /*!&lt; Transmitter/Receiver */</div><div class="line">#define  I2C_SR2_GENCALL                     ((uint16_t)0x0010)            /*!&lt; General Call Address (Slave mode) */</div><div class="line">#define  I2C_SR2_SMBDEFAULT                  ((uint16_t)0x0020)            /*!&lt; SMBus Device Default Address (Slave mode) */</div><div class="line">#define  I2C_SR2_SMBHOST                     ((uint16_t)0x0040)            /*!&lt; SMBus Host Header (Slave mode) */</div><div class="line">#define  I2C_SR2_DUALF                       ((uint16_t)0x0080)            /*!&lt; Dual Flag (Slave mode) */</div><div class="line">#define  I2C_SR2_PEC                         ((uint16_t)0xFF00)            /*!&lt; Packet Error Checking Register */</div><div class="line"></div><div class="line">/*******************  Bit definition for I2C_CCR register  ********************/</div><div class="line">#define  I2C_CCR_CCR                         ((uint16_t)0x0FFF)            /*!&lt; Clock Control Register in Fast/Standard mode (Master mode) */</div><div class="line">#define  I2C_CCR_DUTY                        ((uint16_t)0x4000)            /*!&lt; Fast Mode Duty Cycle */</div><div class="line">#define  I2C_CCR_FS                          ((uint16_t)0x8000)            /*!&lt; I2C Master Mode Selection */</div><div class="line"></div><div class="line">/******************  Bit definition for I2C_TRISE register  *******************/</div><div class="line">#define  I2C_TRISE_TRISE                     ((uint8_t)0x3F)               /*!&lt; Maximum Rise Time in Fast/Standard mode (Master mode) */</div><div class="line"></div><div class="line">/******************************************************************************/</div><div class="line">/*                                                                            */</div><div class="line">/*         Universal Synchronous Asynchronous Receiver Transmitter            */</div><div class="line">/*                                                                            */</div><div class="line">/******************************************************************************/</div><div class="line"></div><div class="line">/*******************  Bit definition for USART_SR register  *******************/</div><div class="line">#define  USART_SR_PE                         ((uint16_t)0x0001)            /*!&lt; Parity Error */</div><div class="line">#define  USART_SR_FE                         ((uint16_t)0x0002)            /*!&lt; Framing Error */</div><div class="line">#define  USART_SR_NE                         ((uint16_t)0x0004)            /*!&lt; Noise Error Flag */</div><div class="line">#define  USART_SR_ORE                        ((uint16_t)0x0008)            /*!&lt; OverRun Error */</div><div class="line">#define  USART_SR_IDLE                       ((uint16_t)0x0010)            /*!&lt; IDLE line detected */</div><div class="line">#define  USART_SR_RXNE                       ((uint16_t)0x0020)            /*!&lt; Read Data Register Not Empty */</div><div class="line">#define  USART_SR_TC                         ((uint16_t)0x0040)            /*!&lt; Transmission Complete */</div><div class="line">#define  USART_SR_TXE                        ((uint16_t)0x0080)            /*!&lt; Transmit Data Register Empty */</div><div class="line">#define  USART_SR_LBD                        ((uint16_t)0x0100)            /*!&lt; LIN Break Detection Flag */</div><div class="line">#define  USART_SR_CTS                        ((uint16_t)0x0200)            /*!&lt; CTS Flag */</div><div class="line"></div><div class="line">/*******************  Bit definition for USART_DR register  *******************/</div><div class="line">#define  USART_DR_DR                         ((uint16_t)0x01FF)            /*!&lt; Data value */</div><div class="line"></div><div class="line">/******************  Bit definition for USART_BRR register  *******************/</div><div class="line">#define  USART_BRR_DIV_Fraction              ((uint16_t)0x000F)            /*!&lt; Fraction of USARTDIV */</div><div class="line">#define  USART_BRR_DIV_Mantissa              ((uint16_t)0xFFF0)            /*!&lt; Mantissa of USARTDIV */</div><div class="line"></div><div class="line">/******************  Bit definition for USART_CR1 register  *******************/</div><div class="line">#define  USART_CR1_SBK                       ((uint16_t)0x0001)            /*!&lt; Send Break */</div><div class="line">#define  USART_CR1_RWU                       ((uint16_t)0x0002)            /*!&lt; Receiver wakeup */</div><div class="line">#define  USART_CR1_RE                        ((uint16_t)0x0004)            /*!&lt; Receiver Enable */</div><div class="line">#define  USART_CR1_TE                        ((uint16_t)0x0008)            /*!&lt; Transmitter Enable */</div><div class="line">#define  USART_CR1_IDLEIE                    ((uint16_t)0x0010)            /*!&lt; IDLE Interrupt Enable */</div><div class="line">#define  USART_CR1_RXNEIE                    ((uint16_t)0x0020)            /*!&lt; RXNE Interrupt Enable */</div><div class="line">#define  USART_CR1_TCIE                      ((uint16_t)0x0040)            /*!&lt; Transmission Complete Interrupt Enable */</div><div class="line">#define  USART_CR1_TXEIE                     ((uint16_t)0x0080)            /*!&lt; PE Interrupt Enable */</div><div class="line">#define  USART_CR1_PEIE                      ((uint16_t)0x0100)            /*!&lt; PE Interrupt Enable */</div><div class="line">#define  USART_CR1_PS                        ((uint16_t)0x0200)            /*!&lt; Parity Selection */</div><div class="line">#define  USART_CR1_PCE                       ((uint16_t)0x0400)            /*!&lt; Parity Control Enable */</div><div class="line">#define  USART_CR1_WAKE                      ((uint16_t)0x0800)            /*!&lt; Wakeup method */</div><div class="line">#define  USART_CR1_M                         ((uint16_t)0x1000)            /*!&lt; Word length */</div><div class="line">#define  USART_CR1_UE                        ((uint16_t)0x2000)            /*!&lt; USART Enable */</div><div class="line">#define  USART_CR1_OVER8                     ((uint16_t)0x8000)            /*!&lt; USART Oversmapling 8-bits */</div><div class="line"></div><div class="line">/******************  Bit definition for USART_CR2 register  *******************/</div><div class="line">#define  USART_CR2_ADD                       ((uint16_t)0x000F)            /*!&lt; Address of the USART node */</div><div class="line">#define  USART_CR2_LBDL                      ((uint16_t)0x0020)            /*!&lt; LIN Break Detection Length */</div><div class="line">#define  USART_CR2_LBDIE                     ((uint16_t)0x0040)            /*!&lt; LIN Break Detection Interrupt Enable */</div><div class="line">#define  USART_CR2_LBCL                      ((uint16_t)0x0100)            /*!&lt; Last Bit Clock pulse */</div><div class="line">#define  USART_CR2_CPHA                      ((uint16_t)0x0200)            /*!&lt; Clock Phase */</div><div class="line">#define  USART_CR2_CPOL                      ((uint16_t)0x0400)            /*!&lt; Clock Polarity */</div><div class="line">#define  USART_CR2_CLKEN                     ((uint16_t)0x0800)            /*!&lt; Clock Enable */</div><div class="line"></div><div class="line">#define  USART_CR2_STOP                      ((uint16_t)0x3000)            /*!&lt; STOP[1:0] bits (STOP bits) */</div><div class="line">#define  USART_CR2_STOP_0                    ((uint16_t)0x1000)            /*!&lt; Bit 0 */</div><div class="line">#define  USART_CR2_STOP_1                    ((uint16_t)0x2000)            /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  USART_CR2_LINEN                     ((uint16_t)0x4000)            /*!&lt; LIN mode enable */</div><div class="line"></div><div class="line">/******************  Bit definition for USART_CR3 register  *******************/</div><div class="line">#define  USART_CR3_EIE                       ((uint16_t)0x0001)            /*!&lt; Error Interrupt Enable */</div><div class="line">#define  USART_CR3_IREN                      ((uint16_t)0x0002)            /*!&lt; IrDA mode Enable */</div><div class="line">#define  USART_CR3_IRLP                      ((uint16_t)0x0004)            /*!&lt; IrDA Low-Power */</div><div class="line">#define  USART_CR3_HDSEL                     ((uint16_t)0x0008)            /*!&lt; Half-Duplex Selection */</div><div class="line">#define  USART_CR3_NACK                      ((uint16_t)0x0010)            /*!&lt; Smartcard NACK enable */</div><div class="line">#define  USART_CR3_SCEN                      ((uint16_t)0x0020)            /*!&lt; Smartcard mode enable */</div><div class="line">#define  USART_CR3_DMAR                      ((uint16_t)0x0040)            /*!&lt; DMA Enable Receiver */</div><div class="line">#define  USART_CR3_DMAT                      ((uint16_t)0x0080)            /*!&lt; DMA Enable Transmitter */</div><div class="line">#define  USART_CR3_RTSE                      ((uint16_t)0x0100)            /*!&lt; RTS Enable */</div><div class="line">#define  USART_CR3_CTSE                      ((uint16_t)0x0200)            /*!&lt; CTS Enable */</div><div class="line">#define  USART_CR3_CTSIE                     ((uint16_t)0x0400)            /*!&lt; CTS Interrupt Enable */</div><div class="line">#define  USART_CR3_ONEBIT                    ((uint16_t)0x0800)            /*!&lt; One Bit method */</div><div class="line"></div><div class="line">/******************  Bit definition for USART_GTPR register  ******************/</div><div class="line">#define  USART_GTPR_PSC                      ((uint16_t)0x00FF)            /*!&lt; PSC[7:0] bits (Prescaler value) */</div><div class="line">#define  USART_GTPR_PSC_0                    ((uint16_t)0x0001)            /*!&lt; Bit 0 */</div><div class="line">#define  USART_GTPR_PSC_1                    ((uint16_t)0x0002)            /*!&lt; Bit 1 */</div><div class="line">#define  USART_GTPR_PSC_2                    ((uint16_t)0x0004)            /*!&lt; Bit 2 */</div><div class="line">#define  USART_GTPR_PSC_3                    ((uint16_t)0x0008)            /*!&lt; Bit 3 */</div><div class="line">#define  USART_GTPR_PSC_4                    ((uint16_t)0x0010)            /*!&lt; Bit 4 */</div><div class="line">#define  USART_GTPR_PSC_5                    ((uint16_t)0x0020)            /*!&lt; Bit 5 */</div><div class="line">#define  USART_GTPR_PSC_6                    ((uint16_t)0x0040)            /*!&lt; Bit 6 */</div><div class="line">#define  USART_GTPR_PSC_7                    ((uint16_t)0x0080)            /*!&lt; Bit 7 */</div><div class="line"></div><div class="line">#define  USART_GTPR_GT                       ((uint16_t)0xFF00)            /*!&lt; Guard time value */</div><div class="line"></div><div class="line">/******************************************************************************/</div><div class="line">/*                                                                            */</div><div class="line">/*                                 Debug MCU                                  */</div><div class="line">/*                                                                            */</div><div class="line">/******************************************************************************/</div><div class="line"></div><div class="line">/****************  Bit definition for DBGMCU_IDCODE register  *****************/</div><div class="line">#define  DBGMCU_IDCODE_DEV_ID                ((uint32_t)0x00000FFF)        /*!&lt; Device Identifier */</div><div class="line"></div><div class="line">#define  DBGMCU_IDCODE_REV_ID                ((uint32_t)0xFFFF0000)        /*!&lt; REV_ID[15:0] bits (Revision Identifier) */</div><div class="line">#define  DBGMCU_IDCODE_REV_ID_0              ((uint32_t)0x00010000)        /*!&lt; Bit 0 */</div><div class="line">#define  DBGMCU_IDCODE_REV_ID_1              ((uint32_t)0x00020000)        /*!&lt; Bit 1 */</div><div class="line">#define  DBGMCU_IDCODE_REV_ID_2              ((uint32_t)0x00040000)        /*!&lt; Bit 2 */</div><div class="line">#define  DBGMCU_IDCODE_REV_ID_3              ((uint32_t)0x00080000)        /*!&lt; Bit 3 */</div><div class="line">#define  DBGMCU_IDCODE_REV_ID_4              ((uint32_t)0x00100000)        /*!&lt; Bit 4 */</div><div class="line">#define  DBGMCU_IDCODE_REV_ID_5              ((uint32_t)0x00200000)        /*!&lt; Bit 5 */</div><div class="line">#define  DBGMCU_IDCODE_REV_ID_6              ((uint32_t)0x00400000)        /*!&lt; Bit 6 */</div><div class="line">#define  DBGMCU_IDCODE_REV_ID_7              ((uint32_t)0x00800000)        /*!&lt; Bit 7 */</div><div class="line">#define  DBGMCU_IDCODE_REV_ID_8              ((uint32_t)0x01000000)        /*!&lt; Bit 8 */</div><div class="line">#define  DBGMCU_IDCODE_REV_ID_9              ((uint32_t)0x02000000)        /*!&lt; Bit 9 */</div><div class="line">#define  DBGMCU_IDCODE_REV_ID_10             ((uint32_t)0x04000000)        /*!&lt; Bit 10 */</div><div class="line">#define  DBGMCU_IDCODE_REV_ID_11             ((uint32_t)0x08000000)        /*!&lt; Bit 11 */</div><div class="line">#define  DBGMCU_IDCODE_REV_ID_12             ((uint32_t)0x10000000)        /*!&lt; Bit 12 */</div><div class="line">#define  DBGMCU_IDCODE_REV_ID_13             ((uint32_t)0x20000000)        /*!&lt; Bit 13 */</div><div class="line">#define  DBGMCU_IDCODE_REV_ID_14             ((uint32_t)0x40000000)        /*!&lt; Bit 14 */</div><div class="line">#define  DBGMCU_IDCODE_REV_ID_15             ((uint32_t)0x80000000)        /*!&lt; Bit 15 */</div><div class="line"></div><div class="line">/******************  Bit definition for DBGMCU_CR register  *******************/</div><div class="line">#define  DBGMCU_CR_DBG_SLEEP                 ((uint32_t)0x00000001)        /*!&lt; Debug Sleep Mode */</div><div class="line">#define  DBGMCU_CR_DBG_STOP                  ((uint32_t)0x00000002)        /*!&lt; Debug Stop Mode */</div><div class="line">#define  DBGMCU_CR_DBG_STANDBY               ((uint32_t)0x00000004)        /*!&lt; Debug Standby mode */</div><div class="line">#define  DBGMCU_CR_TRACE_IOEN                ((uint32_t)0x00000020)        /*!&lt; Trace Pin Assignment Control */</div><div class="line"></div><div class="line">#define  DBGMCU_CR_TRACE_MODE                ((uint32_t)0x000000C0)        /*!&lt; TRACE_MODE[1:0] bits (Trace Pin Assignment Control) */</div><div class="line">#define  DBGMCU_CR_TRACE_MODE_0              ((uint32_t)0x00000040)        /*!&lt; Bit 0 */</div><div class="line">#define  DBGMCU_CR_TRACE_MODE_1              ((uint32_t)0x00000080)        /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  DBGMCU_CR_DBG_IWDG_STOP             ((uint32_t)0x00000100)        /*!&lt; Debug Independent Watchdog stopped when Core is halted */</div><div class="line">#define  DBGMCU_CR_DBG_WWDG_STOP             ((uint32_t)0x00000200)        /*!&lt; Debug Window Watchdog stopped when Core is halted */</div><div class="line">#define  DBGMCU_CR_DBG_TIM1_STOP             ((uint32_t)0x00000400)        /*!&lt; TIM1 counter stopped when core is halted */</div><div class="line">#define  DBGMCU_CR_DBG_TIM2_STOP             ((uint32_t)0x00000800)        /*!&lt; TIM2 counter stopped when core is halted */</div><div class="line">#define  DBGMCU_CR_DBG_TIM3_STOP             ((uint32_t)0x00001000)        /*!&lt; TIM3 counter stopped when core is halted */</div><div class="line">#define  DBGMCU_CR_DBG_TIM4_STOP             ((uint32_t)0x00002000)        /*!&lt; TIM4 counter stopped when core is halted */</div><div class="line">#define  DBGMCU_CR_DBG_CAN1_STOP             ((uint32_t)0x00004000)        /*!&lt; Debug CAN1 stopped when Core is halted */</div><div class="line">#define  DBGMCU_CR_DBG_I2C1_SMBUS_TIMEOUT    ((uint32_t)0x00008000)        /*!&lt; SMBUS timeout mode stopped when Core is halted */</div><div class="line">#define  DBGMCU_CR_DBG_I2C2_SMBUS_TIMEOUT    ((uint32_t)0x00010000)        /*!&lt; SMBUS timeout mode stopped when Core is halted */</div><div class="line">#define  DBGMCU_CR_DBG_TIM8_STOP             ((uint32_t)0x00020000)        /*!&lt; TIM8 counter stopped when core is halted */</div><div class="line">#define  DBGMCU_CR_DBG_TIM5_STOP             ((uint32_t)0x00040000)        /*!&lt; TIM5 counter stopped when core is halted */</div><div class="line">#define  DBGMCU_CR_DBG_TIM6_STOP             ((uint32_t)0x00080000)        /*!&lt; TIM6 counter stopped when core is halted */</div><div class="line">#define  DBGMCU_CR_DBG_TIM7_STOP             ((uint32_t)0x00100000)        /*!&lt; TIM7 counter stopped when core is halted */</div><div class="line">#define  DBGMCU_CR_DBG_CAN2_STOP             ((uint32_t)0x00200000)        /*!&lt; Debug CAN2 stopped when Core is halted */</div><div class="line">#define  DBGMCU_CR_DBG_TIM15_STOP            ((uint32_t)0x00400000)        /*!&lt; Debug TIM15 stopped when Core is halted */</div><div class="line">#define  DBGMCU_CR_DBG_TIM16_STOP            ((uint32_t)0x00800000)        /*!&lt; Debug TIM16 stopped when Core is halted */</div><div class="line">#define  DBGMCU_CR_DBG_TIM17_STOP            ((uint32_t)0x01000000)        /*!&lt; Debug TIM17 stopped when Core is halted */</div><div class="line">#define  DBGMCU_CR_DBG_TIM12_STOP            ((uint32_t)0x02000000)        /*!&lt; Debug TIM12 stopped when Core is halted */</div><div class="line">#define  DBGMCU_CR_DBG_TIM13_STOP            ((uint32_t)0x04000000)        /*!&lt; Debug TIM13 stopped when Core is halted */</div><div class="line">#define  DBGMCU_CR_DBG_TIM14_STOP            ((uint32_t)0x08000000)        /*!&lt; Debug TIM14 stopped when Core is halted */</div><div class="line">#define  DBGMCU_CR_DBG_TIM9_STOP             ((uint32_t)0x10000000)        /*!&lt; Debug TIM9 stopped when Core is halted */</div><div class="line">#define  DBGMCU_CR_DBG_TIM10_STOP            ((uint32_t)0x20000000)        /*!&lt; Debug TIM10 stopped when Core is halted */</div><div class="line">#define  DBGMCU_CR_DBG_TIM11_STOP            ((uint32_t)0x40000000)        /*!&lt; Debug TIM11 stopped when Core is halted */</div><div class="line"></div><div class="line">/******************************************************************************/</div><div class="line">/*                                                                            */</div><div class="line">/*                      FLASH and Option Bytes Registers                      */</div><div class="line">/*                                                                            */</div><div class="line">/******************************************************************************/</div><div class="line"></div><div class="line">/*******************  Bit definition for FLASH_ACR register  ******************/</div><div class="line">#define  FLASH_ACR_LATENCY                   ((uint8_t)0x03)               /*!&lt; LATENCY[2:0] bits (Latency) */</div><div class="line">#define  FLASH_ACR_LATENCY_0                 ((uint8_t)0x00)               /*!&lt; Bit 0 */</div><div class="line">#define  FLASH_ACR_LATENCY_1                 ((uint8_t)0x01)               /*!&lt; Bit 0 */</div><div class="line">#define  FLASH_ACR_LATENCY_2                 ((uint8_t)0x02)               /*!&lt; Bit 1 */</div><div class="line"></div><div class="line">#define  FLASH_ACR_HLFCYA                    ((uint8_t)0x08)               /*!&lt; Flash Half Cycle Access Enable */</div><div class="line">#define  FLASH_ACR_PRFTBE                    ((uint8_t)0x10)               /*!&lt; Prefetch Buffer Enable */</div><div class="line">#define  FLASH_ACR_PRFTBS                    ((uint8_t)0x20)               /*!&lt; Prefetch Buffer Status */</div><div class="line"></div><div class="line">/******************  Bit definition for FLASH_KEYR register  ******************/</div><div class="line">#define  FLASH_KEYR_FKEYR                    ((uint32_t)0xFFFFFFFF)        /*!&lt; FPEC Key */</div><div class="line"></div><div class="line">/*****************  Bit definition for FLASH_OPTKEYR register  ****************/</div><div class="line">#define  FLASH_OPTKEYR_OPTKEYR               ((uint32_t)0xFFFFFFFF)        /*!&lt; Option Byte Key */</div><div class="line"></div><div class="line">/******************  Bit definition for FLASH_SR register  *******************/</div><div class="line">#define  FLASH_SR_BSY                        ((uint8_t)0x01)               /*!&lt; Busy */</div><div class="line">#define  FLASH_SR_PGERR                      ((uint8_t)0x04)               /*!&lt; Programming Error */</div><div class="line">#define  FLASH_SR_WRPRTERR                   ((uint8_t)0x10)               /*!&lt; Write Protection Error */</div><div class="line">#define  FLASH_SR_EOP                        ((uint8_t)0x20)               /*!&lt; End of operation */</div><div class="line"></div><div class="line">/*******************  Bit definition for FLASH_CR register  *******************/</div><div class="line">#define  FLASH_CR_PG                         ((uint16_t)0x0001)            /*!&lt; Programming */</div><div class="line">#define  FLASH_CR_PER                        ((uint16_t)0x0002)            /*!&lt; Page Erase */</div><div class="line">#define  FLASH_CR_MER                        ((uint16_t)0x0004)            /*!&lt; Mass Erase */</div><div class="line">#define  FLASH_CR_OPTPG                      ((uint16_t)0x0010)            /*!&lt; Option Byte Programming */</div><div class="line">#define  FLASH_CR_OPTER                      ((uint16_t)0x0020)            /*!&lt; Option Byte Erase */</div><div class="line">#define  FLASH_CR_STRT                       ((uint16_t)0x0040)            /*!&lt; Start */</div><div class="line">#define  FLASH_CR_LOCK                       ((uint16_t)0x0080)            /*!&lt; Lock */</div><div class="line">#define  FLASH_CR_OPTWRE                     ((uint16_t)0x0200)            /*!&lt; Option Bytes Write Enable */</div><div class="line">#define  FLASH_CR_ERRIE                      ((uint16_t)0x0400)            /*!&lt; Error Interrupt Enable */</div><div class="line">#define  FLASH_CR_EOPIE                      ((uint16_t)0x1000)            /*!&lt; End of operation interrupt enable */</div><div class="line"></div><div class="line">/*******************  Bit definition for FLASH_AR register  *******************/</div><div class="line">#define  FLASH_AR_FAR                        ((uint32_t)0xFFFFFFFF)        /*!&lt; Flash Address */</div><div class="line"></div><div class="line">/******************  Bit definition for FLASH_OBR register  *******************/</div><div class="line">#define  FLASH_OBR_OPTERR                    ((uint16_t)0x0001)            /*!&lt; Option Byte Error */</div><div class="line">#define  FLASH_OBR_RDPRT                     ((uint16_t)0x0002)            /*!&lt; Read protection */</div><div class="line"></div><div class="line">#define  FLASH_OBR_USER                      ((uint16_t)0x03FC)            /*!&lt; User Option Bytes */</div><div class="line">#define  FLASH_OBR_WDG_SW                    ((uint16_t)0x0004)            /*!&lt; WDG_SW */</div><div class="line">#define  FLASH_OBR_nRST_STOP                 ((uint16_t)0x0008)            /*!&lt; nRST_STOP */</div><div class="line">#define  FLASH_OBR_nRST_STDBY                ((uint16_t)0x0010)            /*!&lt; nRST_STDBY */</div><div class="line">#define  FLASH_OBR_BFB2                      ((uint16_t)0x0020)            /*!&lt; BFB2 */</div><div class="line"></div><div class="line">/******************  Bit definition for FLASH_WRPR register  ******************/</div><div class="line">#define  FLASH_WRPR_WRP                        ((uint32_t)0xFFFFFFFF)        /*!&lt; Write Protect */</div><div class="line"></div><div class="line">/*----------------------------------------------------------------------------*/</div><div class="line"></div><div class="line">/******************  Bit definition for FLASH_RDP register  *******************/</div><div class="line">#define  FLASH_RDP_RDP                       ((uint32_t)0x000000FF)        /*!&lt; Read protection option byte */</div><div class="line">#define  FLASH_RDP_nRDP                      ((uint32_t)0x0000FF00)        /*!&lt; Read protection complemented option byte */</div><div class="line"></div><div class="line">/******************  Bit definition for FLASH_USER register  ******************/</div><div class="line">#define  FLASH_USER_USER                     ((uint32_t)0x00FF0000)        /*!&lt; User option byte */</div><div class="line">#define  FLASH_USER_nUSER                    ((uint32_t)0xFF000000)        /*!&lt; User complemented option byte */</div><div class="line"></div><div class="line">/******************  Bit definition for FLASH_Data0 register  *****************/</div><div class="line">#define  FLASH_Data0_Data0                   ((uint32_t)0x000000FF)        /*!&lt; User data storage option byte */</div><div class="line">#define  FLASH_Data0_nData0                  ((uint32_t)0x0000FF00)        /*!&lt; User data storage complemented option byte */</div><div class="line"></div><div class="line">/******************  Bit definition for FLASH_Data1 register  *****************/</div><div class="line">#define  FLASH_Data1_Data1                   ((uint32_t)0x00FF0000)        /*!&lt; User data storage option byte */</div><div class="line">#define  FLASH_Data1_nData1                  ((uint32_t)0xFF000000)        /*!&lt; User data storage complemented option byte */</div><div class="line"></div><div class="line">/******************  Bit definition for FLASH_WRP0 register  ******************/</div><div class="line">#define  FLASH_WRP0_WRP0                     ((uint32_t)0x000000FF)        /*!&lt; Flash memory write protection option bytes */</div><div class="line">#define  FLASH_WRP0_nWRP0                    ((uint32_t)0x0000FF00)        /*!&lt; Flash memory write protection complemented option bytes */</div><div class="line"></div><div class="line">/******************  Bit definition for FLASH_WRP1 register  ******************/</div><div class="line">#define  FLASH_WRP1_WRP1                     ((uint32_t)0x00FF0000)        /*!&lt; Flash memory write protection option bytes */</div><div class="line">#define  FLASH_WRP1_nWRP1                    ((uint32_t)0xFF000000)        /*!&lt; Flash memory write protection complemented option bytes */</div><div class="line"></div><div class="line">/******************  Bit definition for FLASH_WRP2 register  ******************/</div><div class="line">#define  FLASH_WRP2_WRP2                     ((uint32_t)0x000000FF)        /*!&lt; Flash memory write protection option bytes */</div><div class="line">#define  FLASH_WRP2_nWRP2                    ((uint32_t)0x0000FF00)        /*!&lt; Flash memory write protection complemented option bytes */</div><div class="line"></div><div class="line">/******************  Bit definition for FLASH_WRP3 register  ******************/</div><div class="line">#define  FLASH_WRP3_WRP3                     ((uint32_t)0x00FF0000)        /*!&lt; Flash memory write protection option bytes */</div><div class="line">#define  FLASH_WRP3_nWRP3                    ((uint32_t)0xFF000000)        /*!&lt; Flash memory write protection complemented option bytes */</div><div class="line"></div><div class="line">#ifdef STM32F10X_CL</div><div class="line">/******************************************************************************/</div><div class="line">/*                Ethernet MAC Registers bits definitions                     */</div><div class="line">/******************************************************************************/</div><div class="line">/* Bit definition for Ethernet MAC Control Register register */</div><div class="line">#define ETH_MACCR_WD      ((uint32_t)0x00800000)  /* Watchdog disable */</div><div class="line">#define ETH_MACCR_JD      ((uint32_t)0x00400000)  /* Jabber disable */</div><div class="line">#define ETH_MACCR_IFG     ((uint32_t)0x000E0000)  /* Inter-frame gap */</div><div class="line">  #define ETH_MACCR_IFG_96Bit     ((uint32_t)0x00000000)  /* Minimum IFG between frames during transmission is 96Bit */</div><div class="line">  #define ETH_MACCR_IFG_88Bit     ((uint32_t)0x00020000)  /* Minimum IFG between frames during transmission is 88Bit */</div><div class="line">  #define ETH_MACCR_IFG_80Bit     ((uint32_t)0x00040000)  /* Minimum IFG between frames during transmission is 80Bit */</div><div class="line">  #define ETH_MACCR_IFG_72Bit     ((uint32_t)0x00060000)  /* Minimum IFG between frames during transmission is 72Bit */</div><div class="line">  #define ETH_MACCR_IFG_64Bit     ((uint32_t)0x00080000)  /* Minimum IFG between frames during transmission is 64Bit */        </div><div class="line">  #define ETH_MACCR_IFG_56Bit     ((uint32_t)0x000A0000)  /* Minimum IFG between frames during transmission is 56Bit */</div><div class="line">  #define ETH_MACCR_IFG_48Bit     ((uint32_t)0x000C0000)  /* Minimum IFG between frames during transmission is 48Bit */</div><div class="line">  #define ETH_MACCR_IFG_40Bit     ((uint32_t)0x000E0000)  /* Minimum IFG between frames during transmission is 40Bit */              </div><div class="line">#define ETH_MACCR_CSD     ((uint32_t)0x00010000)  /* Carrier sense disable (during transmission) */</div><div class="line">#define ETH_MACCR_FES     ((uint32_t)0x00004000)  /* Fast ethernet speed */</div><div class="line">#define ETH_MACCR_ROD     ((uint32_t)0x00002000)  /* Receive own disable */</div><div class="line">#define ETH_MACCR_LM      ((uint32_t)0x00001000)  /* loopback mode */</div><div class="line">#define ETH_MACCR_DM      ((uint32_t)0x00000800)  /* Duplex mode */</div><div class="line">#define ETH_MACCR_IPCO    ((uint32_t)0x00000400)  /* IP Checksum offload */</div><div class="line">#define ETH_MACCR_RD      ((uint32_t)0x00000200)  /* Retry disable */</div><div class="line">#define ETH_MACCR_APCS    ((uint32_t)0x00000080)  /* Automatic Pad/CRC stripping */</div><div class="line">#define ETH_MACCR_BL      ((uint32_t)0x00000060)  /* Back-off limit: random integer number (r) of slot time delays before rescheduling</div><div class="line">                                                       a transmission attempt during retries after a collision: 0 =&lt; r &lt;2^k */</div><div class="line">  #define ETH_MACCR_BL_10    ((uint32_t)0x00000000)  /* k = min (n, 10) */</div><div class="line">  #define ETH_MACCR_BL_8     ((uint32_t)0x00000020)  /* k = min (n, 8) */</div><div class="line">  #define ETH_MACCR_BL_4     ((uint32_t)0x00000040)  /* k = min (n, 4) */</div><div class="line">  #define ETH_MACCR_BL_1     ((uint32_t)0x00000060)  /* k = min (n, 1) */ </div><div class="line">#define ETH_MACCR_DC      ((uint32_t)0x00000010)  /* Defferal check */</div><div class="line">#define ETH_MACCR_TE      ((uint32_t)0x00000008)  /* Transmitter enable */</div><div class="line">#define ETH_MACCR_RE      ((uint32_t)0x00000004)  /* Receiver enable */</div><div class="line"></div><div class="line">/* Bit definition for Ethernet MAC Frame Filter Register */</div><div class="line">#define ETH_MACFFR_RA     ((uint32_t)0x80000000)  /* Receive all */ </div><div class="line">#define ETH_MACFFR_HPF    ((uint32_t)0x00000400)  /* Hash or perfect filter */ </div><div class="line">#define ETH_MACFFR_SAF    ((uint32_t)0x00000200)  /* Source address filter enable */ </div><div class="line">#define ETH_MACFFR_SAIF   ((uint32_t)0x00000100)  /* SA inverse filtering */ </div><div class="line">#define ETH_MACFFR_PCF    ((uint32_t)0x000000C0)  /* Pass control frames: 3 cases */</div><div class="line">  #define ETH_MACFFR_PCF_BlockAll                ((uint32_t)0x00000040)  /* MAC filters all control frames from reaching the application */</div><div class="line">  #define ETH_MACFFR_PCF_ForwardAll              ((uint32_t)0x00000080)  /* MAC forwards all control frames to application even if they fail the Address Filter */</div><div class="line">  #define ETH_MACFFR_PCF_ForwardPassedAddrFilter ((uint32_t)0x000000C0)  /* MAC forwards control frames that pass the Address Filter. */ </div><div class="line">#define ETH_MACFFR_BFD    ((uint32_t)0x00000020)  /* Broadcast frame disable */ </div><div class="line">#define ETH_MACFFR_PAM 	  ((uint32_t)0x00000010)  /* Pass all mutlicast */ </div><div class="line">#define ETH_MACFFR_DAIF   ((uint32_t)0x00000008)  /* DA Inverse filtering */ </div><div class="line">#define ETH_MACFFR_HM     ((uint32_t)0x00000004)  /* Hash multicast */ </div><div class="line">#define ETH_MACFFR_HU     ((uint32_t)0x00000002)  /* Hash unicast */</div><div class="line">#define ETH_MACFFR_PM     ((uint32_t)0x00000001)  /* Promiscuous mode */</div><div class="line"></div><div class="line">/* Bit definition for Ethernet MAC Hash Table High Register */</div><div class="line">#define ETH_MACHTHR_HTH   ((uint32_t)0xFFFFFFFF)  /* Hash table high */</div><div class="line"></div><div class="line">/* Bit definition for Ethernet MAC Hash Table Low Register */</div><div class="line">#define ETH_MACHTLR_HTL   ((uint32_t)0xFFFFFFFF)  /* Hash table low */</div><div class="line"></div><div class="line">/* Bit definition for Ethernet MAC MII Address Register */</div><div class="line">#define ETH_MACMIIAR_PA   ((uint32_t)0x0000F800)  /* Physical layer address */ </div><div class="line">#define ETH_MACMIIAR_MR   ((uint32_t)0x000007C0)  /* MII register in the selected PHY */ </div><div class="line">#define ETH_MACMIIAR_CR   ((uint32_t)0x0000001C)  /* CR clock range: 6 cases */ </div><div class="line">  #define ETH_MACMIIAR_CR_Div42   ((uint32_t)0x00000000)  /* HCLK:60-72 MHz; MDC clock= HCLK/42 */</div><div class="line">  #define ETH_MACMIIAR_CR_Div16   ((uint32_t)0x00000008)  /* HCLK:20-35 MHz; MDC clock= HCLK/16 */</div><div class="line">  #define ETH_MACMIIAR_CR_Div26   ((uint32_t)0x0000000C)  /* HCLK:35-60 MHz; MDC clock= HCLK/26 */</div><div class="line">#define ETH_MACMIIAR_MW   ((uint32_t)0x00000002)  /* MII write */ </div><div class="line">#define ETH_MACMIIAR_MB   ((uint32_t)0x00000001)  /* MII busy */ </div><div class="line">  </div><div class="line">/* Bit definition for Ethernet MAC MII Data Register */</div><div class="line">#define ETH_MACMIIDR_MD   ((uint32_t)0x0000FFFF)  /* MII data: read/write data from/to PHY */</div><div class="line"></div><div class="line">/* Bit definition for Ethernet MAC Flow Control Register */</div><div class="line">#define ETH_MACFCR_PT     ((uint32_t)0xFFFF0000)  /* Pause time */</div><div class="line">#define ETH_MACFCR_ZQPD   ((uint32_t)0x00000080)  /* Zero-quanta pause disable */</div><div class="line">#define ETH_MACFCR_PLT    ((uint32_t)0x00000030)  /* Pause low threshold: 4 cases */</div><div class="line">  #define ETH_MACFCR_PLT_Minus4   ((uint32_t)0x00000000)  /* Pause time minus 4 slot times */</div><div class="line">  #define ETH_MACFCR_PLT_Minus28  ((uint32_t)0x00000010)  /* Pause time minus 28 slot times */</div><div class="line">  #define ETH_MACFCR_PLT_Minus144 ((uint32_t)0x00000020)  /* Pause time minus 144 slot times */</div><div class="line">  #define ETH_MACFCR_PLT_Minus256 ((uint32_t)0x00000030)  /* Pause time minus 256 slot times */      </div><div class="line">#define ETH_MACFCR_UPFD   ((uint32_t)0x00000008)  /* Unicast pause frame detect */</div><div class="line">#define ETH_MACFCR_RFCE   ((uint32_t)0x00000004)  /* Receive flow control enable */</div><div class="line">#define ETH_MACFCR_TFCE   ((uint32_t)0x00000002)  /* Transmit flow control enable */</div><div class="line">#define ETH_MACFCR_FCBBPA ((uint32_t)0x00000001)  /* Flow control busy/backpressure activate */</div><div class="line"></div><div class="line">/* Bit definition for Ethernet MAC VLAN Tag Register */</div><div class="line">#define ETH_MACVLANTR_VLANTC ((uint32_t)0x00010000)  /* 12-bit VLAN tag comparison */</div><div class="line">#define ETH_MACVLANTR_VLANTI ((uint32_t)0x0000FFFF)  /* VLAN tag identifier (for receive frames) */</div><div class="line"></div><div class="line">/* Bit definition for Ethernet MAC Remote Wake-UpFrame Filter Register */ </div><div class="line">#define ETH_MACRWUFFR_D   ((uint32_t)0xFFFFFFFF)  /* Wake-up frame filter register data */</div><div class="line">/* Eight sequential Writes to this address (offset 0x28) will write all Wake-UpFrame Filter Registers.</div><div class="line">   Eight sequential Reads from this address (offset 0x28) will read all Wake-UpFrame Filter Registers. */</div><div class="line">/* Wake-UpFrame Filter Reg0 : Filter 0 Byte Mask</div><div class="line">   Wake-UpFrame Filter Reg1 : Filter 1 Byte Mask</div><div class="line">   Wake-UpFrame Filter Reg2 : Filter 2 Byte Mask</div><div class="line">   Wake-UpFrame Filter Reg3 : Filter 3 Byte Mask</div><div class="line">   Wake-UpFrame Filter Reg4 : RSVD - Filter3 Command - RSVD - Filter2 Command - </div><div class="line">                              RSVD - Filter1 Command - RSVD - Filter0 Command</div><div class="line">   Wake-UpFrame Filter Re5 : Filter3 Offset - Filter2 Offset - Filter1 Offset - Filter0 Offset</div><div class="line">   Wake-UpFrame Filter Re6 : Filter1 CRC16 - Filter0 CRC16</div><div class="line">   Wake-UpFrame Filter Re7 : Filter3 CRC16 - Filter2 CRC16 */</div><div class="line"></div><div class="line">/* Bit definition for Ethernet MAC PMT Control and Status Register */ </div><div class="line">#define ETH_MACPMTCSR_WFFRPR ((uint32_t)0x80000000)  /* Wake-Up Frame Filter Register Pointer Reset */</div><div class="line">#define ETH_MACPMTCSR_GU     ((uint32_t)0x00000200)  /* Global Unicast */</div><div class="line">#define ETH_MACPMTCSR_WFR    ((uint32_t)0x00000040)  /* Wake-Up Frame Received */</div><div class="line">#define ETH_MACPMTCSR_MPR    ((uint32_t)0x00000020)  /* Magic Packet Received */</div><div class="line">#define ETH_MACPMTCSR_WFE    ((uint32_t)0x00000004)  /* Wake-Up Frame Enable */</div><div class="line">#define ETH_MACPMTCSR_MPE    ((uint32_t)0x00000002)  /* Magic Packet Enable */</div><div class="line">#define ETH_MACPMTCSR_PD     ((uint32_t)0x00000001)  /* Power Down */</div><div class="line"></div><div class="line">/* Bit definition for Ethernet MAC Status Register */</div><div class="line">#define ETH_MACSR_TSTS      ((uint32_t)0x00000200)  /* Time stamp trigger status */</div><div class="line">#define ETH_MACSR_MMCTS     ((uint32_t)0x00000040)  /* MMC transmit status */</div><div class="line">#define ETH_MACSR_MMMCRS    ((uint32_t)0x00000020)  /* MMC receive status */</div><div class="line">#define ETH_MACSR_MMCS      ((uint32_t)0x00000010)  /* MMC status */</div><div class="line">#define ETH_MACSR_PMTS      ((uint32_t)0x00000008)  /* PMT status */</div><div class="line"></div><div class="line">/* Bit definition for Ethernet MAC Interrupt Mask Register */</div><div class="line">#define ETH_MACIMR_TSTIM     ((uint32_t)0x00000200)  /* Time stamp trigger interrupt mask */</div><div class="line">#define ETH_MACIMR_PMTIM     ((uint32_t)0x00000008)  /* PMT interrupt mask */</div><div class="line"></div><div class="line">/* Bit definition for Ethernet MAC Address0 High Register */</div><div class="line">#define ETH_MACA0HR_MACA0H   ((uint32_t)0x0000FFFF)  /* MAC address0 high */</div><div class="line"></div><div class="line">/* Bit definition for Ethernet MAC Address0 Low Register */</div><div class="line">#define ETH_MACA0LR_MACA0L   ((uint32_t)0xFFFFFFFF)  /* MAC address0 low */</div><div class="line"></div><div class="line">/* Bit definition for Ethernet MAC Address1 High Register */</div><div class="line">#define ETH_MACA1HR_AE       ((uint32_t)0x80000000)  /* Address enable */</div><div class="line">#define ETH_MACA1HR_SA       ((uint32_t)0x40000000)  /* Source address */</div><div class="line">#define ETH_MACA1HR_MBC      ((uint32_t)0x3F000000)  /* Mask byte control: bits to mask for comparison of the MAC Address bytes */</div><div class="line">  #define ETH_MACA1HR_MBC_HBits15_8    ((uint32_t)0x20000000)  /* Mask MAC Address high reg bits [15:8] */</div><div class="line">  #define ETH_MACA1HR_MBC_HBits7_0     ((uint32_t)0x10000000)  /* Mask MAC Address high reg bits [7:0] */</div><div class="line">  #define ETH_MACA1HR_MBC_LBits31_24   ((uint32_t)0x08000000)  /* Mask MAC Address low reg bits [31:24] */</div><div class="line">  #define ETH_MACA1HR_MBC_LBits23_16   ((uint32_t)0x04000000)  /* Mask MAC Address low reg bits [23:16] */</div><div class="line">  #define ETH_MACA1HR_MBC_LBits15_8    ((uint32_t)0x02000000)  /* Mask MAC Address low reg bits [15:8] */</div><div class="line">  #define ETH_MACA1HR_MBC_LBits7_0     ((uint32_t)0x01000000)  /* Mask MAC Address low reg bits [7:0] */ </div><div class="line">#define ETH_MACA1HR_MACA1H   ((uint32_t)0x0000FFFF)  /* MAC address1 high */</div><div class="line"></div><div class="line">/* Bit definition for Ethernet MAC Address1 Low Register */</div><div class="line">#define ETH_MACA1LR_MACA1L   ((uint32_t)0xFFFFFFFF)  /* MAC address1 low */</div><div class="line"></div><div class="line">/* Bit definition for Ethernet MAC Address2 High Register */</div><div class="line">#define ETH_MACA2HR_AE       ((uint32_t)0x80000000)  /* Address enable */</div><div class="line">#define ETH_MACA2HR_SA       ((uint32_t)0x40000000)  /* Source address */</div><div class="line">#define ETH_MACA2HR_MBC      ((uint32_t)0x3F000000)  /* Mask byte control */</div><div class="line">  #define ETH_MACA2HR_MBC_HBits15_8    ((uint32_t)0x20000000)  /* Mask MAC Address high reg bits [15:8] */</div><div class="line">  #define ETH_MACA2HR_MBC_HBits7_0     ((uint32_t)0x10000000)  /* Mask MAC Address high reg bits [7:0] */</div><div class="line">  #define ETH_MACA2HR_MBC_LBits31_24   ((uint32_t)0x08000000)  /* Mask MAC Address low reg bits [31:24] */</div><div class="line">  #define ETH_MACA2HR_MBC_LBits23_16   ((uint32_t)0x04000000)  /* Mask MAC Address low reg bits [23:16] */</div><div class="line">  #define ETH_MACA2HR_MBC_LBits15_8    ((uint32_t)0x02000000)  /* Mask MAC Address low reg bits [15:8] */</div><div class="line">  #define ETH_MACA2HR_MBC_LBits7_0     ((uint32_t)0x01000000)  /* Mask MAC Address low reg bits [70] */</div><div class="line">#define ETH_MACA2HR_MACA2H   ((uint32_t)0x0000FFFF)  /* MAC address1 high */</div><div class="line"></div><div class="line">/* Bit definition for Ethernet MAC Address2 Low Register */</div><div class="line">#define ETH_MACA2LR_MACA2L   ((uint32_t)0xFFFFFFFF)  /* MAC address2 low */</div><div class="line"></div><div class="line">/* Bit definition for Ethernet MAC Address3 High Register */</div><div class="line">#define ETH_MACA3HR_AE       ((uint32_t)0x80000000)  /* Address enable */</div><div class="line">#define ETH_MACA3HR_SA       ((uint32_t)0x40000000)  /* Source address */</div><div class="line">#define ETH_MACA3HR_MBC      ((uint32_t)0x3F000000)  /* Mask byte control */</div><div class="line">  #define ETH_MACA3HR_MBC_HBits15_8    ((uint32_t)0x20000000)  /* Mask MAC Address high reg bits [15:8] */</div><div class="line">  #define ETH_MACA3HR_MBC_HBits7_0     ((uint32_t)0x10000000)  /* Mask MAC Address high reg bits [7:0] */</div><div class="line">  #define ETH_MACA3HR_MBC_LBits31_24   ((uint32_t)0x08000000)  /* Mask MAC Address low reg bits [31:24] */</div><div class="line">  #define ETH_MACA3HR_MBC_LBits23_16   ((uint32_t)0x04000000)  /* Mask MAC Address low reg bits [23:16] */</div><div class="line">  #define ETH_MACA3HR_MBC_LBits15_8    ((uint32_t)0x02000000)  /* Mask MAC Address low reg bits [15:8] */</div><div class="line">  #define ETH_MACA3HR_MBC_LBits7_0     ((uint32_t)0x01000000)  /* Mask MAC Address low reg bits [70] */</div><div class="line">#define ETH_MACA3HR_MACA3H   ((uint32_t)0x0000FFFF)  /* MAC address3 high */</div><div class="line"></div><div class="line">/* Bit definition for Ethernet MAC Address3 Low Register */</div><div class="line">#define ETH_MACA3LR_MACA3L   ((uint32_t)0xFFFFFFFF)  /* MAC address3 low */</div><div class="line"></div><div class="line">/******************************************************************************/</div><div class="line">/*                Ethernet MMC Registers bits definition                      */</div><div class="line">/******************************************************************************/</div><div class="line"></div><div class="line">/* Bit definition for Ethernet MMC Contol Register */</div><div class="line">#define ETH_MMCCR_MCF        ((uint32_t)0x00000008)  /* MMC Counter Freeze */</div><div class="line">#define ETH_MMCCR_ROR        ((uint32_t)0x00000004)  /* Reset on Read */</div><div class="line">#define ETH_MMCCR_CSR        ((uint32_t)0x00000002)  /* Counter Stop Rollover */</div><div class="line">#define ETH_MMCCR_CR         ((uint32_t)0x00000001)  /* Counters Reset */</div><div class="line"></div><div class="line">/* Bit definition for Ethernet MMC Receive Interrupt Register */</div><div class="line">#define ETH_MMCRIR_RGUFS     ((uint32_t)0x00020000)  /* Set when Rx good unicast frames counter reaches half the maximum value */</div><div class="line">#define ETH_MMCRIR_RFAES     ((uint32_t)0x00000040)  /* Set when Rx alignment error counter reaches half the maximum value */</div><div class="line">#define ETH_MMCRIR_RFCES     ((uint32_t)0x00000020)  /* Set when Rx crc error counter reaches half the maximum value */</div><div class="line"></div><div class="line">/* Bit definition for Ethernet MMC Transmit Interrupt Register */</div><div class="line">#define ETH_MMCTIR_TGFS      ((uint32_t)0x00200000)  /* Set when Tx good frame count counter reaches half the maximum value */</div><div class="line">#define ETH_MMCTIR_TGFMSCS   ((uint32_t)0x00008000)  /* Set when Tx good multi col counter reaches half the maximum value */</div><div class="line">#define ETH_MMCTIR_TGFSCS    ((uint32_t)0x00004000)  /* Set when Tx good single col counter reaches half the maximum value */</div><div class="line"></div><div class="line">/* Bit definition for Ethernet MMC Receive Interrupt Mask Register */</div><div class="line">#define ETH_MMCRIMR_RGUFM    ((uint32_t)0x00020000)  /* Mask the interrupt when Rx good unicast frames counter reaches half the maximum value */</div><div class="line">#define ETH_MMCRIMR_RFAEM    ((uint32_t)0x00000040)  /* Mask the interrupt when when Rx alignment error counter reaches half the maximum value */</div><div class="line">#define ETH_MMCRIMR_RFCEM    ((uint32_t)0x00000020)  /* Mask the interrupt when Rx crc error counter reaches half the maximum value */</div><div class="line"></div><div class="line">/* Bit definition for Ethernet MMC Transmit Interrupt Mask Register */</div><div class="line">#define ETH_MMCTIMR_TGFM     ((uint32_t)0x00200000)  /* Mask the interrupt when Tx good frame count counter reaches half the maximum value */</div><div class="line">#define ETH_MMCTIMR_TGFMSCM  ((uint32_t)0x00008000)  /* Mask the interrupt when Tx good multi col counter reaches half the maximum value */</div><div class="line">#define ETH_MMCTIMR_TGFSCM   ((uint32_t)0x00004000)  /* Mask the interrupt when Tx good single col counter reaches half the maximum value */</div><div class="line"></div><div class="line">/* Bit definition for Ethernet MMC Transmitted Good Frames after Single Collision Counter Register */</div><div class="line">#define ETH_MMCTGFSCCR_TGFSCC     ((uint32_t)0xFFFFFFFF)  /* Number of successfully transmitted frames after a single collision in Half-duplex mode. */</div><div class="line"></div><div class="line">/* Bit definition for Ethernet MMC Transmitted Good Frames after More than a Single Collision Counter Register */</div><div class="line">#define ETH_MMCTGFMSCCR_TGFMSCC   ((uint32_t)0xFFFFFFFF)  /* Number of successfully transmitted frames after more than a single collision in Half-duplex mode. */</div><div class="line"></div><div class="line">/* Bit definition for Ethernet MMC Transmitted Good Frames Counter Register */</div><div class="line">#define ETH_MMCTGFCR_TGFC    ((uint32_t)0xFFFFFFFF)  /* Number of good frames transmitted. */</div><div class="line"></div><div class="line">/* Bit definition for Ethernet MMC Received Frames with CRC Error Counter Register */</div><div class="line">#define ETH_MMCRFCECR_RFCEC  ((uint32_t)0xFFFFFFFF)  /* Number of frames received with CRC error. */</div><div class="line"></div><div class="line">/* Bit definition for Ethernet MMC Received Frames with Alignement Error Counter Register */</div><div class="line">#define ETH_MMCRFAECR_RFAEC  ((uint32_t)0xFFFFFFFF)  /* Number of frames received with alignment (dribble) error */</div><div class="line"></div><div class="line">/* Bit definition for Ethernet MMC Received Good Unicast Frames Counter Register */</div><div class="line">#define ETH_MMCRGUFCR_RGUFC  ((uint32_t)0xFFFFFFFF)  /* Number of good unicast frames received. */</div><div class="line"></div><div class="line">/******************************************************************************/</div><div class="line">/*               Ethernet PTP Registers bits definition                       */</div><div class="line">/******************************************************************************/</div><div class="line"></div><div class="line">/* Bit definition for Ethernet PTP Time Stamp Contol Register */</div><div class="line">#define ETH_PTPTSCR_TSARU    ((uint32_t)0x00000020)  /* Addend register update */</div><div class="line">#define ETH_PTPTSCR_TSITE    ((uint32_t)0x00000010)  /* Time stamp interrupt trigger enable */</div><div class="line">#define ETH_PTPTSCR_TSSTU    ((uint32_t)0x00000008)  /* Time stamp update */</div><div class="line">#define ETH_PTPTSCR_TSSTI    ((uint32_t)0x00000004)  /* Time stamp initialize */</div><div class="line">#define ETH_PTPTSCR_TSFCU    ((uint32_t)0x00000002)  /* Time stamp fine or coarse update */</div><div class="line">#define ETH_PTPTSCR_TSE      ((uint32_t)0x00000001)  /* Time stamp enable */</div><div class="line"></div><div class="line">/* Bit definition for Ethernet PTP Sub-Second Increment Register */</div><div class="line">#define ETH_PTPSSIR_STSSI    ((uint32_t)0x000000FF)  /* System time Sub-second increment value */</div><div class="line"></div><div class="line">/* Bit definition for Ethernet PTP Time Stamp High Register */</div><div class="line">#define ETH_PTPTSHR_STS      ((uint32_t)0xFFFFFFFF)  /* System Time second */</div><div class="line"></div><div class="line">/* Bit definition for Ethernet PTP Time Stamp Low Register */</div><div class="line">#define ETH_PTPTSLR_STPNS    ((uint32_t)0x80000000)  /* System Time Positive or negative time */</div><div class="line">#define ETH_PTPTSLR_STSS     ((uint32_t)0x7FFFFFFF)  /* System Time sub-seconds */</div><div class="line"></div><div class="line">/* Bit definition for Ethernet PTP Time Stamp High Update Register */</div><div class="line">#define ETH_PTPTSHUR_TSUS    ((uint32_t)0xFFFFFFFF)  /* Time stamp update seconds */</div><div class="line"></div><div class="line">/* Bit definition for Ethernet PTP Time Stamp Low Update Register */</div><div class="line">#define ETH_PTPTSLUR_TSUPNS  ((uint32_t)0x80000000)  /* Time stamp update Positive or negative time */</div><div class="line">#define ETH_PTPTSLUR_TSUSS   ((uint32_t)0x7FFFFFFF)  /* Time stamp update sub-seconds */</div><div class="line"></div><div class="line">/* Bit definition for Ethernet PTP Time Stamp Addend Register */</div><div class="line">#define ETH_PTPTSAR_TSA      ((uint32_t)0xFFFFFFFF)  /* Time stamp addend */</div><div class="line"></div><div class="line">/* Bit definition for Ethernet PTP Target Time High Register */</div><div class="line">#define ETH_PTPTTHR_TTSH     ((uint32_t)0xFFFFFFFF)  /* Target time stamp high */</div><div class="line"></div><div class="line">/* Bit definition for Ethernet PTP Target Time Low Register */</div><div class="line">#define ETH_PTPTTLR_TTSL     ((uint32_t)0xFFFFFFFF)  /* Target time stamp low */</div><div class="line"></div><div class="line">/******************************************************************************/</div><div class="line">/*                 Ethernet DMA Registers bits definition                     */</div><div class="line">/******************************************************************************/</div><div class="line"></div><div class="line">/* Bit definition for Ethernet DMA Bus Mode Register */</div><div class="line">#define ETH_DMABMR_AAB       ((uint32_t)0x02000000)  /* Address-Aligned beats */</div><div class="line">#define ETH_DMABMR_FPM        ((uint32_t)0x01000000)  /* 4xPBL mode */</div><div class="line">#define ETH_DMABMR_USP       ((uint32_t)0x00800000)  /* Use separate PBL */</div><div class="line">#define ETH_DMABMR_RDP       ((uint32_t)0x007E0000)  /* RxDMA PBL */</div><div class="line">  #define ETH_DMABMR_RDP_1Beat    ((uint32_t)0x00020000)  /* maximum number of beats to be transferred in one RxDMA transaction is 1 */</div><div class="line">  #define ETH_DMABMR_RDP_2Beat    ((uint32_t)0x00040000)  /* maximum number of beats to be transferred in one RxDMA transaction is 2 */</div><div class="line">  #define ETH_DMABMR_RDP_4Beat    ((uint32_t)0x00080000)  /* maximum number of beats to be transferred in one RxDMA transaction is 4 */</div><div class="line">  #define ETH_DMABMR_RDP_8Beat    ((uint32_t)0x00100000)  /* maximum number of beats to be transferred in one RxDMA transaction is 8 */</div><div class="line">  #define ETH_DMABMR_RDP_16Beat   ((uint32_t)0x00200000)  /* maximum number of beats to be transferred in one RxDMA transaction is 16 */</div><div class="line">  #define ETH_DMABMR_RDP_32Beat   ((uint32_t)0x00400000)  /* maximum number of beats to be transferred in one RxDMA transaction is 32 */                </div><div class="line">  #define ETH_DMABMR_RDP_4xPBL_4Beat   ((uint32_t)0x01020000)  /* maximum number of beats to be transferred in one RxDMA transaction is 4 */</div><div class="line">  #define ETH_DMABMR_RDP_4xPBL_8Beat   ((uint32_t)0x01040000)  /* maximum number of beats to be transferred in one RxDMA transaction is 8 */</div><div class="line">  #define ETH_DMABMR_RDP_4xPBL_16Beat  ((uint32_t)0x01080000)  /* maximum number of beats to be transferred in one RxDMA transaction is 16 */</div><div class="line">  #define ETH_DMABMR_RDP_4xPBL_32Beat  ((uint32_t)0x01100000)  /* maximum number of beats to be transferred in one RxDMA transaction is 32 */</div><div class="line">  #define ETH_DMABMR_RDP_4xPBL_64Beat  ((uint32_t)0x01200000)  /* maximum number of beats to be transferred in one RxDMA transaction is 64 */</div><div class="line">  #define ETH_DMABMR_RDP_4xPBL_128Beat ((uint32_t)0x01400000)  /* maximum number of beats to be transferred in one RxDMA transaction is 128 */  </div><div class="line">#define ETH_DMABMR_FB        ((uint32_t)0x00010000)  /* Fixed Burst */</div><div class="line">#define ETH_DMABMR_RTPR      ((uint32_t)0x0000C000)  /* Rx Tx priority ratio */</div><div class="line">  #define ETH_DMABMR_RTPR_1_1     ((uint32_t)0x00000000)  /* Rx Tx priority ratio */</div><div class="line">  #define ETH_DMABMR_RTPR_2_1     ((uint32_t)0x00004000)  /* Rx Tx priority ratio */</div><div class="line">  #define ETH_DMABMR_RTPR_3_1     ((uint32_t)0x00008000)  /* Rx Tx priority ratio */</div><div class="line">  #define ETH_DMABMR_RTPR_4_1     ((uint32_t)0x0000C000)  /* Rx Tx priority ratio */  </div><div class="line">#define ETH_DMABMR_PBL    ((uint32_t)0x00003F00)  /* Programmable burst length */</div><div class="line">  #define ETH_DMABMR_PBL_1Beat    ((uint32_t)0x00000100)  /* maximum number of beats to be transferred in one TxDMA (or both) transaction is 1 */</div><div class="line">  #define ETH_DMABMR_PBL_2Beat    ((uint32_t)0x00000200)  /* maximum number of beats to be transferred in one TxDMA (or both) transaction is 2 */</div><div class="line">  #define ETH_DMABMR_PBL_4Beat    ((uint32_t)0x00000400)  /* maximum number of beats to be transferred in one TxDMA (or both) transaction is 4 */</div><div class="line">  #define ETH_DMABMR_PBL_8Beat    ((uint32_t)0x00000800)  /* maximum number of beats to be transferred in one TxDMA (or both) transaction is 8 */</div><div class="line">  #define ETH_DMABMR_PBL_16Beat   ((uint32_t)0x00001000)  /* maximum number of beats to be transferred in one TxDMA (or both) transaction is 16 */</div><div class="line">  #define ETH_DMABMR_PBL_32Beat   ((uint32_t)0x00002000)  /* maximum number of beats to be transferred in one TxDMA (or both) transaction is 32 */                </div><div class="line">  #define ETH_DMABMR_PBL_4xPBL_4Beat   ((uint32_t)0x01000100)  /* maximum number of beats to be transferred in one TxDMA (or both) transaction is 4 */</div><div class="line">  #define ETH_DMABMR_PBL_4xPBL_8Beat   ((uint32_t)0x01000200)  /* maximum number of beats to be transferred in one TxDMA (or both) transaction is 8 */</div><div class="line">  #define ETH_DMABMR_PBL_4xPBL_16Beat  ((uint32_t)0x01000400)  /* maximum number of beats to be transferred in one TxDMA (or both) transaction is 16 */</div><div class="line">  #define ETH_DMABMR_PBL_4xPBL_32Beat  ((uint32_t)0x01000800)  /* maximum number of beats to be transferred in one TxDMA (or both) transaction is 32 */</div><div class="line">  #define ETH_DMABMR_PBL_4xPBL_64Beat  ((uint32_t)0x01001000)  /* maximum number of beats to be transferred in one TxDMA (or both) transaction is 64 */</div><div class="line">  #define ETH_DMABMR_PBL_4xPBL_128Beat ((uint32_t)0x01002000)  /* maximum number of beats to be transferred in one TxDMA (or both) transaction is 128 */</div><div class="line">#define ETH_DMABMR_DSL       ((uint32_t)0x0000007C)  /* Descriptor Skip Length */</div><div class="line">#define ETH_DMABMR_DA        ((uint32_t)0x00000002)  /* DMA arbitration scheme */</div><div class="line">#define ETH_DMABMR_SR        ((uint32_t)0x00000001)  /* Software reset */</div><div class="line"></div><div class="line">/* Bit definition for Ethernet DMA Transmit Poll Demand Register */</div><div class="line">#define ETH_DMATPDR_TPD      ((uint32_t)0xFFFFFFFF)  /* Transmit poll demand */</div><div class="line"></div><div class="line">/* Bit definition for Ethernet DMA Receive Poll Demand Register */</div><div class="line">#define ETH_DMARPDR_RPD      ((uint32_t)0xFFFFFFFF)  /* Receive poll demand  */</div><div class="line"></div><div class="line">/* Bit definition for Ethernet DMA Receive Descriptor List Address Register */</div><div class="line">#define ETH_DMARDLAR_SRL     ((uint32_t)0xFFFFFFFF)  /* Start of receive list */</div><div class="line"></div><div class="line">/* Bit definition for Ethernet DMA Transmit Descriptor List Address Register */</div><div class="line">#define ETH_DMATDLAR_STL     ((uint32_t)0xFFFFFFFF)  /* Start of transmit list */</div><div class="line"></div><div class="line">/* Bit definition for Ethernet DMA Status Register */</div><div class="line">#define ETH_DMASR_TSTS       ((uint32_t)0x20000000)  /* Time-stamp trigger status */</div><div class="line">#define ETH_DMASR_PMTS       ((uint32_t)0x10000000)  /* PMT status */</div><div class="line">#define ETH_DMASR_MMCS       ((uint32_t)0x08000000)  /* MMC status */</div><div class="line">#define ETH_DMASR_EBS        ((uint32_t)0x03800000)  /* Error bits status */</div><div class="line">  /* combination with EBS[2:0] for GetFlagStatus function */</div><div class="line">  #define ETH_DMASR_EBS_DescAccess      ((uint32_t)0x02000000)  /* Error bits 0-data buffer, 1-desc. access */</div><div class="line">  #define ETH_DMASR_EBS_ReadTransf      ((uint32_t)0x01000000)  /* Error bits 0-write trnsf, 1-read transfr */</div><div class="line">  #define ETH_DMASR_EBS_DataTransfTx    ((uint32_t)0x00800000)  /* Error bits 0-Rx DMA, 1-Tx DMA */</div><div class="line">#define ETH_DMASR_TPS         ((uint32_t)0x00700000)  /* Transmit process state */</div><div class="line">  #define ETH_DMASR_TPS_Stopped         ((uint32_t)0x00000000)  /* Stopped - Reset or Stop Tx Command issued  */</div><div class="line">  #define ETH_DMASR_TPS_Fetching        ((uint32_t)0x00100000)  /* Running - fetching the Tx descriptor */</div><div class="line">  #define ETH_DMASR_TPS_Waiting         ((uint32_t)0x00200000)  /* Running - waiting for status */</div><div class="line">  #define ETH_DMASR_TPS_Reading         ((uint32_t)0x00300000)  /* Running - reading the data from host memory */</div><div class="line">  #define ETH_DMASR_TPS_Suspended       ((uint32_t)0x00600000)  /* Suspended - Tx Descriptor unavailabe */</div><div class="line">  #define ETH_DMASR_TPS_Closing         ((uint32_t)0x00700000)  /* Running - closing Rx descriptor */</div><div class="line">#define ETH_DMASR_RPS         ((uint32_t)0x000E0000)  /* Receive process state */</div><div class="line">  #define ETH_DMASR_RPS_Stopped         ((uint32_t)0x00000000)  /* Stopped - Reset or Stop Rx Command issued */</div><div class="line">  #define ETH_DMASR_RPS_Fetching        ((uint32_t)0x00020000)  /* Running - fetching the Rx descriptor */</div><div class="line">  #define ETH_DMASR_RPS_Waiting         ((uint32_t)0x00060000)  /* Running - waiting for packet */</div><div class="line">  #define ETH_DMASR_RPS_Suspended       ((uint32_t)0x00080000)  /* Suspended - Rx Descriptor unavailable */</div><div class="line">  #define ETH_DMASR_RPS_Closing         ((uint32_t)0x000A0000)  /* Running - closing descriptor */</div><div class="line">  #define ETH_DMASR_RPS_Queuing         ((uint32_t)0x000E0000)  /* Running - queuing the recieve frame into host memory */</div><div class="line">#define ETH_DMASR_NIS        ((uint32_t)0x00010000)  /* Normal interrupt summary */</div><div class="line">#define ETH_DMASR_AIS        ((uint32_t)0x00008000)  /* Abnormal interrupt summary */</div><div class="line">#define ETH_DMASR_ERS        ((uint32_t)0x00004000)  /* Early receive status */</div><div class="line">#define ETH_DMASR_FBES       ((uint32_t)0x00002000)  /* Fatal bus error status */</div><div class="line">#define ETH_DMASR_ETS        ((uint32_t)0x00000400)  /* Early transmit status */</div><div class="line">#define ETH_DMASR_RWTS       ((uint32_t)0x00000200)  /* Receive watchdog timeout status */</div><div class="line">#define ETH_DMASR_RPSS       ((uint32_t)0x00000100)  /* Receive process stopped status */</div><div class="line">#define ETH_DMASR_RBUS       ((uint32_t)0x00000080)  /* Receive buffer unavailable status */</div><div class="line">#define ETH_DMASR_RS         ((uint32_t)0x00000040)  /* Receive status */</div><div class="line">#define ETH_DMASR_TUS        ((uint32_t)0x00000020)  /* Transmit underflow status */</div><div class="line">#define ETH_DMASR_ROS        ((uint32_t)0x00000010)  /* Receive overflow status */</div><div class="line">#define ETH_DMASR_TJTS       ((uint32_t)0x00000008)  /* Transmit jabber timeout status */</div><div class="line">#define ETH_DMASR_TBUS       ((uint32_t)0x00000004)  /* Transmit buffer unavailable status */</div><div class="line">#define ETH_DMASR_TPSS       ((uint32_t)0x00000002)  /* Transmit process stopped status */</div><div class="line">#define ETH_DMASR_TS         ((uint32_t)0x00000001)  /* Transmit status */</div><div class="line"></div><div class="line">/* Bit definition for Ethernet DMA Operation Mode Register */</div><div class="line">#define ETH_DMAOMR_DTCEFD    ((uint32_t)0x04000000)  /* Disable Dropping of TCP/IP checksum error frames */</div><div class="line">#define ETH_DMAOMR_RSF       ((uint32_t)0x02000000)  /* Receive store and forward */</div><div class="line">#define ETH_DMAOMR_DFRF      ((uint32_t)0x01000000)  /* Disable flushing of received frames */</div><div class="line">#define ETH_DMAOMR_TSF       ((uint32_t)0x00200000)  /* Transmit store and forward */</div><div class="line">#define ETH_DMAOMR_FTF       ((uint32_t)0x00100000)  /* Flush transmit FIFO */</div><div class="line">#define ETH_DMAOMR_TTC       ((uint32_t)0x0001C000)  /* Transmit threshold control */</div><div class="line">  #define ETH_DMAOMR_TTC_64Bytes       ((uint32_t)0x00000000)  /* threshold level of the MTL Transmit FIFO is 64 Bytes */</div><div class="line">  #define ETH_DMAOMR_TTC_128Bytes      ((uint32_t)0x00004000)  /* threshold level of the MTL Transmit FIFO is 128 Bytes */</div><div class="line">  #define ETH_DMAOMR_TTC_192Bytes      ((uint32_t)0x00008000)  /* threshold level of the MTL Transmit FIFO is 192 Bytes */</div><div class="line">  #define ETH_DMAOMR_TTC_256Bytes      ((uint32_t)0x0000C000)  /* threshold level of the MTL Transmit FIFO is 256 Bytes */</div><div class="line">  #define ETH_DMAOMR_TTC_40Bytes       ((uint32_t)0x00010000)  /* threshold level of the MTL Transmit FIFO is 40 Bytes */</div><div class="line">  #define ETH_DMAOMR_TTC_32Bytes       ((uint32_t)0x00014000)  /* threshold level of the MTL Transmit FIFO is 32 Bytes */</div><div class="line">  #define ETH_DMAOMR_TTC_24Bytes       ((uint32_t)0x00018000)  /* threshold level of the MTL Transmit FIFO is 24 Bytes */</div><div class="line">  #define ETH_DMAOMR_TTC_16Bytes       ((uint32_t)0x0001C000)  /* threshold level of the MTL Transmit FIFO is 16 Bytes */</div><div class="line">#define ETH_DMAOMR_ST        ((uint32_t)0x00002000)  /* Start/stop transmission command */</div><div class="line">#define ETH_DMAOMR_FEF       ((uint32_t)0x00000080)  /* Forward error frames */</div><div class="line">#define ETH_DMAOMR_FUGF      ((uint32_t)0x00000040)  /* Forward undersized good frames */</div><div class="line">#define ETH_DMAOMR_RTC       ((uint32_t)0x00000018)  /* receive threshold control */</div><div class="line">  #define ETH_DMAOMR_RTC_64Bytes       ((uint32_t)0x00000000)  /* threshold level of the MTL Receive FIFO is 64 Bytes */</div><div class="line">  #define ETH_DMAOMR_RTC_32Bytes       ((uint32_t)0x00000008)  /* threshold level of the MTL Receive FIFO is 32 Bytes */</div><div class="line">  #define ETH_DMAOMR_RTC_96Bytes       ((uint32_t)0x00000010)  /* threshold level of the MTL Receive FIFO is 96 Bytes */</div><div class="line">  #define ETH_DMAOMR_RTC_128Bytes      ((uint32_t)0x00000018)  /* threshold level of the MTL Receive FIFO is 128 Bytes */</div><div class="line">#define ETH_DMAOMR_OSF       ((uint32_t)0x00000004)  /* operate on second frame */</div><div class="line">#define ETH_DMAOMR_SR        ((uint32_t)0x00000002)  /* Start/stop receive */</div><div class="line"></div><div class="line">/* Bit definition for Ethernet DMA Interrupt Enable Register */</div><div class="line">#define ETH_DMAIER_NISE      ((uint32_t)0x00010000)  /* Normal interrupt summary enable */</div><div class="line">#define ETH_DMAIER_AISE      ((uint32_t)0x00008000)  /* Abnormal interrupt summary enable */</div><div class="line">#define ETH_DMAIER_ERIE      ((uint32_t)0x00004000)  /* Early receive interrupt enable */</div><div class="line">#define ETH_DMAIER_FBEIE     ((uint32_t)0x00002000)  /* Fatal bus error interrupt enable */</div><div class="line">#define ETH_DMAIER_ETIE      ((uint32_t)0x00000400)  /* Early transmit interrupt enable */</div><div class="line">#define ETH_DMAIER_RWTIE     ((uint32_t)0x00000200)  /* Receive watchdog timeout interrupt enable */</div><div class="line">#define ETH_DMAIER_RPSIE     ((uint32_t)0x00000100)  /* Receive process stopped interrupt enable */</div><div class="line">#define ETH_DMAIER_RBUIE     ((uint32_t)0x00000080)  /* Receive buffer unavailable interrupt enable */</div><div class="line">#define ETH_DMAIER_RIE       ((uint32_t)0x00000040)  /* Receive interrupt enable */</div><div class="line">#define ETH_DMAIER_TUIE      ((uint32_t)0x00000020)  /* Transmit Underflow interrupt enable */</div><div class="line">#define ETH_DMAIER_ROIE      ((uint32_t)0x00000010)  /* Receive Overflow interrupt enable */</div><div class="line">#define ETH_DMAIER_TJTIE     ((uint32_t)0x00000008)  /* Transmit jabber timeout interrupt enable */</div><div class="line">#define ETH_DMAIER_TBUIE     ((uint32_t)0x00000004)  /* Transmit buffer unavailable interrupt enable */</div><div class="line">#define ETH_DMAIER_TPSIE     ((uint32_t)0x00000002)  /* Transmit process stopped interrupt enable */</div><div class="line">#define ETH_DMAIER_TIE       ((uint32_t)0x00000001)  /* Transmit interrupt enable */</div><div class="line"></div><div class="line">/* Bit definition for Ethernet DMA Missed Frame and Buffer Overflow Counter Register */</div><div class="line">#define ETH_DMAMFBOCR_OFOC   ((uint32_t)0x10000000)  /* Overflow bit for FIFO overflow counter */</div><div class="line">#define ETH_DMAMFBOCR_MFA    ((uint32_t)0x0FFE0000)  /* Number of frames missed by the application */</div><div class="line">#define ETH_DMAMFBOCR_OMFC   ((uint32_t)0x00010000)  /* Overflow bit for missed frame counter */</div><div class="line">#define ETH_DMAMFBOCR_MFC    ((uint32_t)0x0000FFFF)  /* Number of frames missed by the controller */</div><div class="line"></div><div class="line">/* Bit definition for Ethernet DMA Current Host Transmit Descriptor Register */</div><div class="line">#define ETH_DMACHTDR_HTDAP   ((uint32_t)0xFFFFFFFF)  /* Host transmit descriptor address pointer */</div><div class="line"></div><div class="line">/* Bit definition for Ethernet DMA Current Host Receive Descriptor Register */</div><div class="line">#define ETH_DMACHRDR_HRDAP   ((uint32_t)0xFFFFFFFF)  /* Host receive descriptor address pointer */</div><div class="line"></div><div class="line">/* Bit definition for Ethernet DMA Current Host Transmit Buffer Address Register */</div><div class="line">#define ETH_DMACHTBAR_HTBAP  ((uint32_t)0xFFFFFFFF)  /* Host transmit buffer address pointer */</div><div class="line"></div><div class="line">/* Bit definition for Ethernet DMA Current Host Receive Buffer Address Register */</div><div class="line">#define ETH_DMACHRBAR_HRBAP  ((uint32_t)0xFFFFFFFF)  /* Host receive buffer address pointer */</div><div class="line">#endif /* STM32F10X_CL */</div><div class="line"></div><div class="line">/**</div><div class="line">  * @&#125;</div><div class="line">  */</div><div class="line"></div><div class="line"> /**</div><div class="line">  * @&#125;</div><div class="line">  */ </div><div class="line"></div><div class="line">#ifdef USE_STDPERIPH_DRIVER</div><div class="line">  #include "stm32f10x_conf.h"</div><div class="line">#endif</div><div class="line"></div><div class="line">/** @addtogroup Exported_macro</div><div class="line">  * @&#123;</div><div class="line">  */</div><div class="line"></div><div class="line">#define SET_BIT(REG, BIT)     ((REG) |= (BIT))</div><div class="line"></div><div class="line">#define CLEAR_BIT(REG, BIT)   ((REG) &amp;= ~(BIT))</div><div class="line"></div><div class="line">#define READ_BIT(REG, BIT)    ((REG) &amp; (BIT))</div><div class="line"></div><div class="line">#define CLEAR_REG(REG)        ((REG) = (0x0))</div><div class="line"></div><div class="line">#define WRITE_REG(REG, VAL)   ((REG) = (VAL))</div><div class="line"></div><div class="line">#define READ_REG(REG)         ((REG))</div><div class="line"></div><div class="line">#define MODIFY_REG(REG, CLEARMASK, SETMASK)  WRITE_REG((REG), (((READ_REG(REG)) &amp; (~(CLEARMASK))) | (SETMASK)))</div><div class="line"></div><div class="line">/**</div><div class="line">  * @&#125;</div><div class="line">  */</div><div class="line"></div><div class="line">#ifdef __cplusplus</div><div class="line">&#125;</div><div class="line">#endif</div><div class="line"></div><div class="line">#endif /* __STM32F10x_H */</div><div class="line"></div><div class="line">/**</div><div class="line">  * @&#125;</div><div class="line">  */</div><div class="line"></div><div class="line">  /**</div><div class="line">  * @&#125;</div><div class="line">  */</div><div class="line"></div><div class="line">/******************* (C) COPYRIGHT 2011 STMicroelectronics *****END OF FILE****/</div></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> 嵌入式 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> stm32 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[mathjax]]></title>
      <url>https://ygcaicn.github.io/Linux/mathjax.html</url>
      <content type="html"><![CDATA[<p>$$\sum_{i=0}^n i^2 = \frac{(n^2+n)(2n+1)}{6}$$</p>
<a id="more"></a>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[【Machine Learning】机器学习：简明入门指南]]></title>
      <url>https://ygcaicn.github.io/Machine-Learning/Mechine-Learning.html</url>
      <content type="html"><![CDATA[<blockquote>
<p>本文是一篇转载自<a href="http://blog.jobbole.com/67616/" target="_blank" rel="external"><strong>伯乐在线的译文</strong></a>，英文原文是这里：<a href="https://medium.com/code-poet/80ea3ec3c471" target="_blank" rel="external"><strong>Machine Learning is Fun!</strong> — by Adam Geitgey</a></p>
</blockquote>
<p>在听到人们谈论机器学习的时候，你是不是对它的涵义只有几个模糊的认识呢？你是不是已经厌倦了在和同事交谈时只能一直点头？让我们改变一下吧！</p>
<p>本指南的读者对象是所有对机器学习有求知欲但却不知道如何开头的朋友。我猜很多人已经读过了<a href="https://en.wikipedia.org/wiki/Machine_learning" target="_blank" rel="external">“机器学习” ——维基百科词条</a>，倍感挫折，以为没人能给出一个高层次的解释。本文就是你们想要的东西。</p>
<p>本文目标在于平易近人，这意味着文中有大量的概括。但是谁在乎这些呢？只要能让读者对于ML更感兴趣，任务也就完成了。</p>
<a id="more"></a>
<h3 id="何为机器学习？"><a href="#何为机器学习？" class="headerlink" title="何为机器学习？"></a><strong>何为机器学习？</strong></h3><p>机器学习这个概念认为，对于待解问题，你无需编写任何专门的程序代码，遗传算法（generic algorithms）能够在数据集上为你得出有趣的答案。对于遗传算法，不用编码，而是将数据输入，它将在数据之上建立起它自己的逻辑。</p>
<p>举个例子，有一类算法称为分类算法，它可以将数据划分为不同的组别。一个用来识别手写数字的分类算法，不用修改一行代码，就可以用来将电子邮件分为垃圾邮件和普通邮件。算法没变，但是输入的训练数据变了，因此它得出了不同的分类逻辑。</p>
<p><img src="http://img.blog.csdn.net/20160814170910665" alt="机器学习算法是个黑盒，可以重用来解决很多不同的分类问题。"><br><em>机器学习算法是个黑盒，可以重用来解决很多不同的分类问题。</em></p>
<p>“机器学习”是一个涵盖性术语，覆盖了大量类似的遗传算法。</p>
<h3 id="两类机器学习算法"><a href="#两类机器学习算法" class="headerlink" title="两类机器学习算法"></a><strong>两类机器学习算法</strong></h3><p>你可以认为机器学习算法分为两大类：<strong>监督式学习</strong>（Supervised Learning）和<strong>非监督式学习</strong>（Unsupervised Learning）。两者区别很简单，但却非常重要。</p>
<h4 id="监督式学习"><a href="#监督式学习" class="headerlink" title="监督式学习"></a><strong>监督式学习</strong></h4><p>假设你是一名房产经纪，生意越做越大，因此你雇了一批实习生来帮你。但是问题来了——你可以看一眼房子就知道它到底值多少钱，实习生没有经验，不知道如何估价。</p>
<p>为了帮助你的实习生（也许是为了解放你自己去度个假），你决定写个小软件，可以根据房屋大小、地段以及类似房屋的成交价等因素来评估你所在地区房屋的价值。</p>
<p>你把3个月来城里每笔房屋交易都写了下来，每一单你都记录了一长串的细节——卧室数量、房屋大小、地段等等。但最重要的是，你写下了最终的成交价：</p>
<p>这是我们的“训练数据”:<br><img src="http://img.blog.csdn.net/20160814171156602" alt=""></p>
<p>我们要利用这些训练数据来编写一个程序来估算该地区其他房屋的价值：</p>
<p><img src="http://img.blog.csdn.net/20160814171239543" alt=""></p>
<p>这就称为<strong>监督式学习</strong>。你已经知道每一栋房屋的售价，换句话说，你知道问题的答案，并可以反向找出解题的逻辑。</p>
<p>为了编写软件，你将包含每一套房产的训练数据输入你的机器学习算法。算法尝试找出应该使用何种运算来得出价格数字。</p>
<p>这就像是算术练习题，算式中的运算符号都被擦去了：<br><img src="http://img.blog.csdn.net/20160814171313166" alt=""><br><em>天哪！一个阴险的学生将老师答案上的算术符号全擦去了。</em></p>
<p>看了这些题，你能明白这些测验里面是什么样的数学问题吗？你知道，你应该对算式左边的数字“做些什么”以得出算式右边的答案。</p>
<p>在监督式学习中，你是让计算机为你算出数字间的关系。而一旦你知道了解决这类特定问题所需要的数学方法后，你就可以解答同类的其它问题了。</p>
<h4 id="非监督式学习"><a href="#非监督式学习" class="headerlink" title="非监督式学习"></a><strong>非监督式学习</strong></h4><p>让我们回到开头那个房地产经纪的例子。要是你不知道每栋房子的售价怎么办？即使你所知道的只是房屋的大小、位置等信息，你也可以搞出很酷的花样。这就是所谓的非监督式学习。</p>
<p><img src="http://img.blog.csdn.net/20160814171439231" alt="即使你不是想去预测未知的数据（如价格），你也可以运用机器学习完成一些有意思的事。"><br><em>即使你不是想去预测未知的数据（如价格），你也可以运用机器学习完成一些有意思的事。</em></p>
<p>这就有点像有人给你一张纸，上面列出了很多数字，然后对你说:“我不知道这些数字有什么意义，也许你能从中找出规律或是能将它们分类，或是其它什么-祝你好运！”</p>
<p>你该怎么处理这些数据呢？首先，你可以用个算法自动地从数据中划分出不同的细分市场。也许你会发现大学附近的买房者喜欢户型小但卧室多的房子，而郊区的买房者偏好三卧室的大户型。这些信息可以直接帮助你的营销。</p>
<p>你还可以作件很酷的事，自动找出房价的离群数据，即与其它数据迥异的值。这些鹤立鸡群的房产也许是高楼大厦，而你可以将最优秀的推销员集中在这些地区，因为他们的佣金更高。</p>
<p>本文余下部分我们主要讨论监督式学习，但这并不是因为非监督式学习用处不大或是索然无味。实际上，随着算法改良，不用将数据和正确答案联系在一起，因此非监督式学习正变得越来越重要。</p>
<p>老学究请看:还有很多其它种类的机器学习算法。但初学时这样理解不错了。</p>
<h3 id="太酷了，但是评估房价真能被看作“学习”吗？"><a href="#太酷了，但是评估房价真能被看作“学习”吗？" class="headerlink" title="太酷了，但是评估房价真能被看作“学习”吗？"></a><strong>太酷了，但是评估房价真能被看作“学习”吗？</strong></h3><p>作为人类的一员，你的大脑可以应付绝大多数情况，并且没有任何明确指令也能够学习如何处理这些情况。如果你做房产经纪时间很长，你对于房产的合适定价、它的最佳营销方式以及哪些客户会感兴趣等等都会有一种本能般的“感觉”。强人工智能（Strong AI）研究的目标就是要能够用计算机复制这种能力。</p>
<p>但是目前的机器学习算法还没有那么好——它们只能专注于非常特定的、有限的问题。也许在这种情况下，“学习”更贴切的定义是“在少量范例数据的基础上找出一个等式来解决特定的问题”。</p>
<p>不幸的是，“机器在少量范例数据的基础上找出一个等式来解决特定的问题”这个名字太烂了。所以最后我们用“机器学习”取而代之。</p>
<p>当然，要是你是在50年之后来读这篇文章，那时我们已经得出了强人工智能算法，而本文看起来就像个老古董。未来的人类，你还是别读了，叫你的机器仆人给你做份三明治吧。</p>
<h3 id="让我们写代码吧"><a href="#让我们写代码吧" class="headerlink" title="让我们写代码吧!"></a><strong>让我们写代码吧!</strong></h3><p>前面例子中评估房价的程序，你打算怎么写呢？往下看之前，先思考一下吧。</p>
<p>如果你对机器学习一无所知，很有可能你会尝试写出一些基本规则来评估房价，如下：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">estimate_house_sales_price</span><span class="params">(num_of_bedrooms, sqft, neighborhood)</span>:</span></div><div class="line">  price = <span class="number">0</span></div><div class="line"></div><div class="line">  <span class="comment"># In my area, the average house costs $200 per sqft</span></div><div class="line">  price_per_sqft = <span class="number">200</span></div><div class="line"></div><div class="line">  <span class="keyword">if</span> neighborhood == <span class="string">"hipsterton"</span>:</div><div class="line">    <span class="comment"># but some areas cost a bit more</span></div><div class="line">    price_per_sqft = <span class="number">400</span></div><div class="line"></div><div class="line">  <span class="keyword">elif</span> neighborhood == <span class="string">"skid row"</span>:</div><div class="line">    <span class="comment"># and some areas cost less</span></div><div class="line">    price_per_sqft = <span class="number">100</span></div><div class="line"></div><div class="line">  <span class="comment"># start with a base price estimate based on how big the place is</span></div><div class="line">  price = price_per_sqft * sqft</div><div class="line"></div><div class="line">  <span class="comment"># now adjust our estimate based on the number of bedrooms</span></div><div class="line">  <span class="keyword">if</span> num_of_bedrooms == <span class="number">0</span>:</div><div class="line">    <span class="comment"># Studio apartments are cheap</span></div><div class="line">    price = price — <span class="number">20000</span></div><div class="line">  <span class="keyword">else</span>:</div><div class="line">    <span class="comment"># places with more bedrooms are usually</span></div><div class="line">    <span class="comment"># more valuable</span></div><div class="line">    price = price + (num_of_bedrooms * <span class="number">1000</span>)</div><div class="line"></div><div class="line"> <span class="keyword">return</span> price</div></pre></td></tr></table></figure>
<p>假如你像这样瞎忙几个小时，也许会取得一点成效，但是你的程序永不会完美，而且当价格变化时很难维护。</p>
<p>如果能让计算机找出实现上述函数功能的办法，这样岂不更好？只要返回的房价数字正确，谁会在乎函数具体干了些什么呢？</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">estimate_house_sales_price</span><span class="params">(num_of_bedrooms, sqft, neighborhood)</span>:</span></div><div class="line">  price = &lt;computer, plz do some math <span class="keyword">for</span> me&gt;</div><div class="line"></div><div class="line">  <span class="keyword">return</span> price</div></pre></td></tr></table></figure>
<p>考虑这个问题的一种角度是将房价看做一碗美味的汤，而汤中成分就是卧室数、面积和地段。如果你能算出每种成分对最终的价格有多大影响，也许就能得到各种成分混合起来形成最终价格的具体比例。</p>
<p>这样可以将你最初的程序（全是疯狂的if else语句）简化成类似如下的样子：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">estimate_house_sales_price</span><span class="params">(num_of_bedrooms, sqft, neighborhood)</span>:</span></div><div class="line"> price = <span class="number">0</span></div><div class="line"></div><div class="line"> <span class="comment"># a little pinch of this</span></div><div class="line"> price += num_of_bedrooms * <span class="number">.841231951398213</span></div><div class="line"></div><div class="line"> <span class="comment"># and a big pinch of that</span></div><div class="line"> price += sqft * <span class="number">1231.1231231</span></div><div class="line"></div><div class="line"> <span class="comment"># maybe a handful of this</span></div><div class="line"> price += neighborhood * <span class="number">2.3242341421</span></div><div class="line"></div><div class="line"> <span class="comment"># and finally, just a little extra salt for good measure</span></div><div class="line"> price += <span class="number">201.23432095</span></div><div class="line"></div><div class="line"> <span class="keyword">return</span> price</div></pre></td></tr></table></figure>
<p>请注意那些用粗体标注的神奇数字——<strong>.841231951398213</strong>, <strong>1231.1231231</strong>,<strong>2.3242341421</strong>, 和<strong>201.23432095</strong>。它们称为权重。如果我们能找出对每栋房子都适用的完美权重，我们的函数就能预测所有的房价！</p>
<p>找出最佳权重的一种笨办法如下所示：</p>
<h4 id="步骤1："><a href="#步骤1：" class="headerlink" title="步骤1："></a><strong>步骤1：</strong></h4><p>首先，将每个权重都设为1.0：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">estimate_house_sales_price</span><span class="params">(num_of_bedrooms, sqft, neighborhood)</span>:</span></div><div class="line">  price = <span class="number">0</span></div><div class="line"></div><div class="line">  <span class="comment"># a little pinch of this</span></div><div class="line">  price += num_of_bedrooms * <span class="number">1.0</span></div><div class="line"></div><div class="line">  <span class="comment"># and a big pinch of that</span></div><div class="line">  price += sqft * <span class="number">1.0</span></div><div class="line"></div><div class="line">  <span class="comment"># maybe a handful of this</span></div><div class="line">  price += neighborhood * <span class="number">1.0</span></div><div class="line"></div><div class="line">  <span class="comment"># and finally, just a little extra salt for good measure</span></div><div class="line">  price += <span class="number">1.0</span></div><div class="line"></div><div class="line">  <span class="keyword">return</span> price</div></pre></td></tr></table></figure>
<h4 id="步骤2："><a href="#步骤2：" class="headerlink" title="步骤2："></a><strong>步骤2：</strong></h4><p>将每栋房产带入你的函数运算，检验估算值与正确价格的偏离程度：</p>
<p><img src="http://img.blog.csdn.net/20160814172040052" alt="运用你的程序预测房屋价格。"><br><em>运用你的程序预测房屋价格。</em></p>
<p>例如：上表中第一套房产实际成交价为25万美元，你的函数估价为17.8万，这一套房产你就差了7.2万。</p>
<p>再将你的数据集中的每套房产估价偏离值平方后求和。假设数据集中有500套房产交易，估价偏离值平方求和总计为86,123,373美元。这就反映了你的函数现在的“正确”程度。</p>
<p>现在，将总计值除以500，得到每套房产的估价偏离平均值。将这个平均误差值称为你函数的代价。</p>
<p>如果你能调整权重使得这个代价变为0，你的函数就完美了。它意味着，根据输入的数据，你的程序对每一笔房产交易的估价都是分毫不差。而这就是我们的目标——尝试不同的权重值以使代价尽可能的低。</p>
<h4 id="步骤3："><a href="#步骤3：" class="headerlink" title="步骤3："></a><strong>步骤3：</strong></h4><p>不断重复步骤2，尝试<strong>所有可能的权重值组合</strong>。哪一个组合使得代价最接近于0，它就是你要使用的，你只要找到了这样的组合，问题就得到了解决!</p>
<h3 id="思想扰动时间"><a href="#思想扰动时间" class="headerlink" title="思想扰动时间"></a><strong>思想扰动时间</strong></h3><p>这太简单了，对吧？想一想刚才你做了些什么。你取得了一些数据，将它们输入至三个通用的简单步骤中，最后你得到了一个可以对你所在区域的房屋进行估价的函数。房价网，要当心咯！<br>但是下面的事实可能会扰乱你的思想：</p>
<p>1.过去40年来，很多领域（如语言学/翻译学）的研究表明，这种通用的“搅动数据汤”（我编造的词）式的学习算法已经胜过了需要利用真人明确规则的方法。机器学习的“笨”办法最终打败了人类专家。</p>
<p>2.你最后写出的函数真是笨，它甚至不知道什么是“面积”和“卧室数”。它知道的只是搅动，改变数字来得到正确的答案。</p>
<p>3.很可能你都不知道为何一组特殊的权重值能起效。所以你只是写出了一个你实际上并不理解却能证明的函数。</p>
<p>4.试想一下，你的程序里没有类似“面积”和“卧室数”这样的参数，而是接受了一组数字。假设每个数字代表了你车顶安装的摄像头捕捉的画面中的一个像素，再将预测的输出不称为“价格”而是叫做“方向盘转动度数”，这样你就得到了一个程序可以自动操纵你的汽车了！</p>
<p>太疯狂了，对吧？</p>
<h3 id="步骤3中的“尝试每个数字”怎么回事？"><a href="#步骤3中的“尝试每个数字”怎么回事？" class="headerlink" title="步骤3中的“尝试每个数字”怎么回事？"></a><strong>步骤3中的“尝试每个数字”怎么回事？</strong></h3><p>好吧，当然你不可能尝试所有可能的权重值来找到效果最好的组合。那可真要花很长时间，因为要尝试的数字可能无穷无尽。</p>
<p>为避免这种情况，数学家们找到了很多聪明的办法（比如<a href="https://en.wikipedia.org/wiki/Gradient_descent" target="_blank" rel="external"><strong>Gradient descent算法</strong></a>）来快速找到优秀的权重值，而不需要尝试过多。下面是其中一种：</p>
<p>首先，写出一个简单的等式表示前述步骤2，这是你的代价函数：</p>
<p><img src="http://img.blog.csdn.net/20160814172434798" alt=""></p>
<p>接着，让我们将这同一个等式用机器学习的数学术语（现在你可以忽略它们）进行重写：</p>
<p><img src="http://img.blog.csdn.net/20160814172527111" alt=""><br><em>θ表示当前的权重值。 J(θ) 意为“当前权重值对应的代价”。</em></p>
<p>这个等式表示我们的估价程序在当前权重值下偏离程度的大小。<br>如果将所有赋给卧室数和面积的可能权重值以图形形式显示，我们会得到类似下图的图表：</p>
<p><img src="http://img.blog.csdn.net/20160814172601908" alt=""><br><em>代价函数的图形像一支碗。纵轴表示代价。</em></p>
<p>图中蓝色的最低点就是代价最低的地方——即我们的程序偏离最小。最高点意味着偏离最大。所以，如果我们能找到一组权重值带领我们到达图中的最低点，我们就找到了答案！</p>
<p><img src="http://img.blog.csdn.net/20160814172634361" alt=""></p>
<p>因此，我们只需要调整权重值使我们在图上能向着最低点“走下坡路”。如果对于权重的细小调节能一直使我们保持向最低点移动，那么最终我们不用尝试太多权重值就能到达那里。</p>
<p>如果你还记得一点微积分的话，你也许记得如果你对一个函数求导，结果会告诉你函数在任一点的斜率。换句话说，对于图上给定一点，它告诉我们那条路是下坡路。我们可以利用这一点朝底部进发。</p>
<p>所以，如果我们对代价函数关于每一个权重求偏导，那么我们就可以从每一个权重中减去该值。这样可以让我们更加接近山底。一直这样做，最终我们将到达底部，得到权重的最优值。（读不懂？不用担心，接着往下读）。</p>
<p>这种找出最佳权重的办法被称为<strong>批量梯度下降</strong>，上面是对它的高度概括。如果想搞懂细节，不要害怕，继续深入下去吧。</p>
<p>当你使用机器学习算法库来解决实际问题，所有这些都已经为你准备好了。但明白一些具体细节总是有用的。</p>
<h3 id="还有什么你随便就略过了？"><a href="#还有什么你随便就略过了？" class="headerlink" title="还有什么你随便就略过了？"></a><strong>还有什么你随便就略过了？</strong></h3><p>上面我描述的三步算法被称为<strong>多元线性回归</strong>。你估算等式是在求一条能够拟合所有房价数据点的直线。然后，你再根据房价在你的直线上可能出现的位置用这个等式来估算从未见过的房屋的价格。这个想法威力强大，可以用它来解决“实际”问题。</p>
<p>但是，我为你展示的这种方法可能在简单的情况下有效，它不会在所有情况下都有用。原因之一是因为房价不会一直那么简单地跟随一条连续直线。</p>
<p>但是，幸运的是，有很多办法来处理这种情况。对于非线性数据，很多其他类型的机器学习算法可以处理（如神经网络或有核向量机）。还有很多方法运用线性回归更灵活，想到了用更复杂的线条来拟合。在所有的情况中，寻找最优权重值这一基本思路依然适用。</p>
<p>还有，我忽略了<strong>过拟合</strong>的概念。很容易碰上这样一组权重值，它们对于你原始数据集中的房价都能完美预测，但对于原始数据集之外的任何新房屋都预测不准。这种情况的解决之道也有不少（如正则化以及使用交叉验证数据集）。学会如何处理这一问题对于顺利应用机器学习至关重要。</p>
<p>换言之，基本概念非常简单，要想运用机器学习得到有用的结果还需要一些技巧和经验。但是，这是每个开发者都能学会的技巧。</p>
<h3 id="机器学习法力无边吗？"><a href="#机器学习法力无边吗？" class="headerlink" title="机器学习法力无边吗？"></a><strong>机器学习法力无边吗？</strong></h3><p>一旦你开始明白机器学习技术很容易应用于解决貌似很困难的问题（如手写识别），你心中会有一种感觉，只要有足够的数据，你就能够用机器学习解决任何问题。只需要将数据输入进去，就能看到计算机变戏法一样找出拟合数据的等式。</p>
<p>但是很重要的一点你要记住，机器学习只能对用你占有的数据实际可解的问题才适用。</p>
<p>例如，如果你建立了一个模型来根据每套房屋内盆栽数量来预测房价，它就永远不会成功。房屋内盆栽数量和房价之间没有任何的关系。所以，无论它怎么去尝试，计算机也推导不出两者之间的关系。</p>
<p><img src="http://img.blog.csdn.net/20160814172839065" alt=""><br><em>你只能对实际存在的关系建模。</em></p>
<h3 id="怎样深入学习机器学习"><a href="#怎样深入学习机器学习" class="headerlink" title="怎样深入学习机器学习"></a><strong>怎样深入学习机器学习</strong></h3><p>我认为，当前机器学习的最大问题是它主要活跃于学术界和商业研究组织中。对于圈外想要有个大体了解而不是想成为专家的人们，简单易懂的学习资料不多。但是这一情况每一天都在改善。</p>
<p>吴恩达教授（Andrew Ng）在<a href="https://www.coursera.org/learn/machine-learning" target="_blank" rel="external"><strong>Coursera上的机器学习免费课程</strong></a>非常不错。我强烈建议由此入门。任何拥有计算机科学学位、还能记住一点点数学的人应该都能理解。</p>
<p>另外，你还可以下载安装<a href="http://scikit-learn.org/stable/" target="_blank" rel="external"><code>SciKit-Learn</code></a>，用它来试验成千上万的机器学习算法。它是一个python框架，对于所有的标准算法都有“黑盒”版本。</p>
]]></content>
      
        <categories>
            
            <category> Machine Learning </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Machine Learning </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[python基础]]></title>
      <url>https://ygcaicn.github.io/Python/python%E5%9F%BA%E7%A1%80.html</url>
      <content type="html"><![CDATA[<h1 id="Strings"><a href="#Strings" class="headerlink" title="Strings"></a>Strings</h1><blockquote>
<p>A string is a sequence of values that represent Unicode code points. All the code points in the range U+0000 - U+10FFFF can be represented in a string. Python doesn’t have a char type; instead, every code point in the string is represented as a string object with length 1. The built-in function ord() converts a code point from its string form to an integer in the range 0 - 10FFFF; chr() converts an integer in the range 0 - 10FFFF to the corresponding length 1 string object. <code>str.encode()</code> can be used to convert a str to bytes using the given text encoding, and <code>bytes.decode()</code> can be used to achieve the opposite.</p>
</blockquote>
<a id="more"></a>
<figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#str-&gt;bytes  </span></div><div class="line">str.encode(encoding=<span class="string">'UTF-8'</span>)</div><div class="line"></div><div class="line"><span class="comment">#bytes-&gt;str  </span></div><div class="line">bytes.decode(encoding=<span class="string">'UTF-8'</span>)</div></pre></td></tr></table></figure>
<p>document <a href="https://docs.python.org/" target="_blank" rel="external">https://docs.python.org/</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">urllib  </div><div class="line">     urllib.error Exception classes raised by urllib.request. </div><div class="line">     urllib.parse Parse URLs into or assemble them from components. </div><div class="line">     urllib.request Extensible library for opening URLs. </div><div class="line">     urllib.response Response classes used by urllib. </div><div class="line">     urllib.robotparser Load a robots.txt file and answer questions about fetchability of other URLs.</div></pre></td></tr></table></figure>
<h1 id="标准数据类型"><a href="#标准数据类型" class="headerlink" title="标准数据类型"></a>标准数据类型</h1><ul>
<li>Python3 中有六个标准的数据类型：</li>
<li>Number（数字）    123</li>
<li>String（字符串）  ‘abc’/“abc”</li>
<li>List（列表）      []</li>
<li>Tuple（元组）     ()</li>
<li>Sets（集合）      ({})</li>
<li>Dictionary（字典）{key:value}</li>
<li></li>
</ul>
<blockquote>
<p>I have a tuple of tuples from a MySQL query like this:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">T1 = ((&apos;13&apos;, &apos;17&apos;, &apos;18&apos;, &apos;21&apos;, &apos;32&apos;),</div><div class="line">      (&apos;07&apos;, &apos;11&apos;, &apos;13&apos;, &apos;14&apos;, &apos;28&apos;),</div><div class="line">      (&apos;01&apos;, &apos;05&apos;, &apos;06&apos;, &apos;08&apos;, &apos;15&apos;, &apos;16&apos;))</div></pre></td></tr></table></figure></p>
</blockquote>
<p>I’d like to convert all the string elements into integers and put it back nicely to list of lists this time:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">T2 = [[13, 17, 18, 21, 32], [7, 11, 13, 14, 28], [1, 5, 6, 8, 15, 16]]</div></pre></td></tr></table></figure></p>
<p>I tried to achieve it with eval but didn’t get any decent result yet.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[[int(column) for column in row] for row in T1]</div></pre></td></tr></table></figure></p>
<h1 id="一张图看Python"><a href="#一张图看Python" class="headerlink" title="一张图看Python"></a>一张图看Python</h1><p><img src="http://i.imgur.com/gAdiDlB.png" alt="Imgur"></p>
<h1 id="Python网络编程-百度语音接口实例"><a href="#Python网络编程-百度语音接口实例" class="headerlink" title="Python网络编程-百度语音接口实例"></a>Python网络编程-百度语音接口实例</h1><figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#</span></div><div class="line">  <span class="number">1</span> <span class="comment">#!/usr/bin/python3</span></div><div class="line">  <span class="number">2</span> </div><div class="line">  <span class="number">3</span> <span class="keyword">import</span> urllib</div><div class="line">  <span class="number">4</span> <span class="keyword">import</span> urllib.request</div><div class="line">  <span class="number">5</span> <span class="keyword">import</span> urllib.parse</div><div class="line">  <span class="number">6</span> <span class="keyword">import</span> json</div><div class="line">  <span class="number">7</span> <span class="keyword">import</span> os</div><div class="line">  <span class="number">8</span> <span class="keyword">import</span> sys</div><div class="line">  <span class="number">9</span> <span class="keyword">import</span> hashlib</div><div class="line"> <span class="number">10</span> <span class="keyword">import</span> uuid</div><div class="line"> <span class="number">11</span> <span class="keyword">import</span> base64</div><div class="line"> <span class="number">12</span> </div><div class="line"> <span class="number">13</span> <span class="class"><span class="keyword">class</span> <span class="title">BaiduRest</span>:</span></div><div class="line"> <span class="number">14</span>         <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,cu_id,api_key,api_secret)</span>:</span></div><div class="line"> <span class="number">15</span>                 self.toKen_url = <span class="string">"https://openapi.baidu.com/oauth/2.0/token?grant_type=client_credentials&amp;client_id=%s&amp;client_secret=%s&amp;"</span></div><div class="line"> <span class="number">16</span>                 self.getVoice_url = <span class="string">"http://tsn.baidu.com/text2audio"</span></div><div class="line"> <span class="number">17</span>                 self.upVoice_url = <span class="string">'http://vop.baidu.com/server_api'</span></div><div class="line"> <span class="number">18</span>                 self.cu_id = cu_id</div><div class="line"> <span class="number">19</span>                 self.api_key = api_key</div><div class="line"> <span class="number">20</span>                 self.api_secret = api_secret</div><div class="line"> <span class="number">21</span>                 <span class="keyword">if</span> <span class="keyword">not</span>  os.path.isdir(<span class="string">"./cache/"</span>):</div><div class="line"> <span class="number">22</span>                         os.mkdir(<span class="string">"./cache/"</span>)</div><div class="line"> <span class="number">23</span>                         os.mkdir(<span class="string">"./cache/audio"</span>)</div><div class="line"> <span class="number">24</span>                 <span class="keyword">if</span> <span class="keyword">not</span>  os.path.isdir(<span class="string">"./cache/audio"</span>):</div><div class="line"> <span class="number">25</span>                         os.mkdir(<span class="string">"./cache/audio"</span>)</div><div class="line"> <span class="number">26</span>                 <span class="keyword">try</span>:</div><div class="line"> <span class="number">27</span>                         file_toKen = open(<span class="string">"./cache/access_toKen"</span>,<span class="string">'r'</span>)</div><div class="line"> <span class="number">28</span>                         self.toKen = file_toKen.read()</div><div class="line"> <span class="number">29</span>                 <span class="keyword">except</span> FileNotFoundError:</div><div class="line"> <span class="number">30</span>                         self.getToKen(api_key,api_secret)</div><div class="line"> <span class="number">31</span>                 <span class="keyword">pass</span></div><div class="line"> <span class="number">32</span> </div><div class="line"> <span class="number">33</span> </div><div class="line"> <span class="number">34</span>         <span class="function"><span class="keyword">def</span> <span class="title">getToKen</span><span class="params">(self,api_key,api_secret)</span>:</span></div><div class="line"> <span class="number">35</span>                 self.toKen_url = self.toKen_url % (api_key,api_secret)</div><div class="line"> <span class="number">36</span>                 r_str = urllib.request.urlopen(self.toKen_url).read()</div><div class="line"> <span class="number">37</span>                 r_str = r_str.decode(encoding=<span class="string">"UTF-8"</span>)</div><div class="line"> <span class="number">38</span>                 r_json = json.loads(r_str)</div><div class="line"> <span class="number">39</span>                 self.toKen = r_json[<span class="string">"access_token"</span>]</div><div class="line"> <span class="number">40</span>                 file_toKen = open(<span class="string">"./cache/access_toKen"</span>,<span class="string">"w"</span>)</div><div class="line"> <span class="number">41</span>                 file_toKen.write(self.toKen)</div><div class="line"> <span class="number">42</span>                 file_toKen.close()</div><div class="line"> <span class="number">43</span>                 <span class="keyword">pass</span></div><div class="line"> <span class="number">44</span> </div><div class="line"> <span class="number">45</span>         <span class="function"><span class="keyword">def</span> <span class="title">getVoice</span><span class="params">(self,text,filename)</span>:</span></div><div class="line"> <span class="number">46</span>                 <span class="comment">#POST</span></div><div class="line"> <span class="number">47</span>                 params = urllib.parse.urlencode(&#123;<span class="string">'tex'</span>:urllib.parse.quote(text),<span class="string">'lan'</span>:<span class="string">'zh'</span>,<span class="string">'cuid'</span>:self.cu_id,<span class="string">'ctp'</span>:<span class="number">1</span>,<span class="string">'tok'</span>:urllib.parse.quote(self.toKen)&#125;)</div><div class="line"> <span class="number">48</span>                 real_url = urllib.request.Request(self.getVoice_url,params.encode(<span class="string">"utf-8"</span>))</div><div class="line"> <span class="number">49</span>                 httpResponse = urllib.request.urlopen(real_url)</div><div class="line"> <span class="number">50</span>                 <span class="keyword">if</span> httpResponse.getheader(<span class="string">'Content-type'</span>) == <span class="string">'audio/mp3'</span>:</div><div class="line"> <span class="number">51</span>                         <span class="comment">#print("toKen successful!")</span></div><div class="line"> <span class="number">52</span>                         <span class="comment">#os.system('date')</span></div><div class="line"> <span class="number">53</span>                         file_mp3 = open(filename,<span class="string">"wb+"</span>)</div><div class="line"> <span class="number">54</span>                         file_mp3.write(httpResponse.read())</div><div class="line"> <span class="number">55</span>                         file_mp3.close()</div><div class="line"> <span class="number">56</span>                 <span class="keyword">else</span>:</div><div class="line"> <span class="number">57</span>                         self.getToKen(self.api_key,self.api_secret)</div><div class="line"> <span class="number">39</span>                 self.toKen = r_json[<span class="string">"access_token"</span>]</div><div class="line"> <span class="number">40</span>                 file_toKen = open(<span class="string">"./cache/access_toKen"</span>,<span class="string">"w"</span>)</div><div class="line"> <span class="number">41</span>                 file_toKen.write(self.toKen)</div><div class="line"> <span class="number">42</span>                 file_toKen.close()</div><div class="line"> <span class="number">43</span>                 <span class="keyword">pass</span></div><div class="line"> <span class="number">44</span> </div><div class="line"> <span class="number">45</span>         <span class="function"><span class="keyword">def</span> <span class="title">getVoice</span><span class="params">(self,text,filename)</span>:</span></div><div class="line"> <span class="number">46</span>                 <span class="comment">#POST</span></div><div class="line"> <span class="number">47</span>                 params = urllib.parse.urlencode(&#123;<span class="string">'tex'</span>:urllib.parse.quote(text),<span class="string">'lan'</span>:<span class="string">'zh'</span>,<span class="string">'cuid'</span>:self.cu_id,<span class="string">'ctp'</span>:<span class="number">1</span>,<span class="string">'tok'</span>:urllib.parse.quote(self.toKen)&#125;)</div><div class="line"> <span class="number">48</span>                 real_url = urllib.request.Request(self.getVoice_url,params.encode(<span class="string">"utf-8"</span>))</div><div class="line"> <span class="number">49</span>                 httpResponse = urllib.request.urlopen(real_url)</div><div class="line"> <span class="number">50</span>                 <span class="keyword">if</span> httpResponse.getheader(<span class="string">'Content-type'</span>) == <span class="string">'audio/mp3'</span>:</div><div class="line"> <span class="number">51</span>                         <span class="comment">#print("toKen successful!")</span></div><div class="line"> <span class="number">52</span>                         <span class="comment">#os.system('date')</span></div><div class="line"> <span class="number">53</span>                         file_mp3 = open(filename,<span class="string">"wb+"</span>)</div><div class="line"> <span class="number">54</span>                         file_mp3.write(httpResponse.read())</div><div class="line"> <span class="number">55</span>                         file_mp3.close()</div><div class="line"> <span class="number">56</span>                 <span class="keyword">else</span>:</div><div class="line"> <span class="number">57</span>                         self.getToKen(self.api_key,self.api_secret)</div><div class="line"> <span class="number">54</span>                         file_mp3.write(httpResponse.read())</div><div class="line"> <span class="number">54</span>                         file_mp3.write(httpResponse.read())</div><div class="line"> <span class="number">54</span>                         file_mp3.write(httpResponse.read())</div><div class="line"> <span class="number">55</span>                         file_mp3.close()</div><div class="line"> <span class="number">56</span>                 <span class="keyword">else</span>:</div><div class="line"> <span class="number">57</span>                         self.getToKen(self.api_key,self.api_secret)</div><div class="line"> <span class="number">58</span>                         self.getVoice(text,filename)</div><div class="line"> <span class="number">59</span> </div><div class="line"> <span class="number">60</span>                 <span class="keyword">pass</span></div><div class="line"> <span class="number">61</span>         <span class="function"><span class="keyword">def</span> <span class="title">getText</span><span class="params">(self, filename)</span>:</span></div><div class="line"> <span class="number">62</span>                 data = &#123;&#125;</div><div class="line"> <span class="number">63</span>                 data[<span class="string">'format'</span>] = <span class="string">'wav'</span></div><div class="line"> <span class="number">64</span>                 data[<span class="string">'rate'</span>] = <span class="number">16000</span></div><div class="line"> <span class="number">65</span>                 data[<span class="string">'channel'</span>] = <span class="number">1</span></div><div class="line">  <span class="number">6</span>                 data[<span class="string">'cuid'</span>] = self.cu_id</div><div class="line"> <span class="number">67</span>                 data[<span class="string">'token'</span>] = self.toKen</div><div class="line"> <span class="number">68</span>                 wav_fp = open(filename,<span class="string">'rb'</span>)</div><div class="line"> <span class="number">69</span>                 voice_data = wav_fp.read()</div><div class="line"> <span class="number">70</span>                 data[<span class="string">'len'</span>] = len(voice_data)</div><div class="line"> <span class="number">71</span>                 data[<span class="string">'speech'</span>] = base64.b64encode(voice_data).decode(<span class="string">'utf-8'</span>)</div><div class="line"> <span class="number">72</span>                 post_data = json.dumps(data)</div><div class="line"> <span class="number">73</span>                 reque = urllib.request.Request(self.upVoice_url,post_data.encode(encoding=<span class="string">"UTF-8"</span>))</div><div class="line"> <span class="number">74</span>                 r_data = urllib.request.urlopen(reque).read()</div><div class="line"> <span class="number">75</span>                 <span class="comment"># 3.处理返回数据</span></div><div class="line"> <span class="number">76</span>                 r_json = json.loads(r_data.decode(encoding=<span class="string">'utf-8'</span>))</div><div class="line"> <span class="number">77</span>                 <span class="keyword">if</span> <span class="string">'result'</span> <span class="keyword">in</span> r_json:</div><div class="line"> <span class="number">78</span>                         <span class="keyword">return</span>  r_json[<span class="string">'result'</span>]</div><div class="line"> <span class="number">79</span>                 <span class="keyword">else</span>:</div><div class="line"> <span class="number">80</span>                         print(r_json)</div><div class="line"> <span class="number">81</span>                         <span class="keyword">return</span> r_json[<span class="string">'err_no'</span>]</div><div class="line"> <span class="number">82</span> </div><div class="line"> <span class="number">83</span> <span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</div><div class="line"> <span class="number">84</span>         os.system(<span class="string">'date'</span>)</div><div class="line"> <span class="number">85</span>         api_key = <span class="string">"6PPBMVeF1BIWbXmNuUfEivK3"</span></div><div class="line"> <span class="number">86</span>         api_secret = <span class="string">"0c5ee6597954b09bee9083624ff3d9a4"</span></div><div class="line"> <span class="number">87</span>         text = sys.argv[<span class="number">1</span>]</div><div class="line"> <span class="number">88</span>         tmpname_wav = hashlib.md5(text.encode(encoding=<span class="string">"UTF-8"</span>)).hexdigest() + <span class="string">'.wav'</span></div><div class="line"> <span class="number">89</span>         tmpname_wav = <span class="string">'./cache/audio/'</span> + tmpname_wav</div><div class="line"> <span class="number">90</span>         <span class="keyword">if</span> os.path.isfile(tmpname_wav):</div><div class="line"> <span class="number">91</span>                 print(<span class="string">"exist!"</span>)</div><div class="line"> <span class="number">92</span>                 os.system(<span class="string">"omxplayer --loop \""</span> + tmpname_wav + <span class="string">'\"'</span>)</div><div class="line"> <span class="number">93</span>         <span class="keyword">else</span>:</div><div class="line"> <span class="number">94</span>                 mac = uuid.UUID(int = uuid.getnode()).hex[<span class="number">-12</span>:]</div><div class="line"> <span class="number">95</span>                 mac = <span class="string">":"</span>.join([mac[e:e+<span class="number">2</span>] <span class="keyword">for</span> e <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">11</span>,<span class="number">2</span>)])</div><div class="line"> <span class="number">96</span>                 baiduVoice = BaiduRest(mac,api_key,api_secret)</div><div class="line"> <span class="number">97</span>                 baiduVoice.getVoice(text,tmpname_wav)</div><div class="line"> <span class="number">98</span>                 os.system(<span class="string">'date'</span>)</div><div class="line"> <span class="number">99</span>                 <span class="comment">#os.system("omxplayer --loop \"" + tmpname_wav + "\"")</span></div><div class="line"><span class="number">100</span>                 print(baiduVoice.getText(tmpname_wav))</div><div class="line"><span class="number">101</span> </div><div class="line"><span class="number">102</span></div></pre></td></tr></table></figure>
<h1 id="urllib-request"><a href="#urllib-request" class="headerlink" title="urllib.request"></a>urllib.request</h1><h2 id="get"><a href="#get" class="headerlink" title="get"></a>get</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">from urllib import request, parse</div><div class="line"># Base URL being accessed</div><div class="line">url = &apos;http://httpbin.org/get&apos;</div><div class="line"># Dictionary of query parameters (if any)</div><div class="line">parms = &#123;</div><div class="line">&apos;name1&apos; : &apos;value1&apos;,</div><div class="line">&apos;name2&apos; : &apos;value2&apos;</div><div class="line">&#125;</div><div class="line"># Encode the query string</div><div class="line">querystring = parse.urlencode(parms)</div><div class="line"># Make a GET request and read the response</div><div class="line">u = request.urlopen(url+&apos;?&apos; + querystring)</div><div class="line">resp_bytes = u.read()</div></pre></td></tr></table></figure>
<h2 id="post"><a href="#post" class="headerlink" title="post"></a>post</h2><h3 id="post-stand-fomer"><a href="#post-stand-fomer" class="headerlink" title="post stand fomer"></a>post stand fomer</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">from urllib import request, parse</div><div class="line"># Base URL being accessed</div><div class="line">url = &apos;http://httpbin.org/post&apos;</div><div class="line"># Dictionary of query parameters (if any)</div><div class="line">parms = &#123;</div><div class="line">&apos;name1&apos; : &apos;value1&apos;,</div><div class="line">&apos;name2&apos; : &apos;value2&apos;</div><div class="line">&#125;</div><div class="line"># Encode the query string</div><div class="line">querystring = parse.urlencode(parms)</div><div class="line"># Make a POST request and read the response</div><div class="line">res = request.urlopen(url, querystring.encode(encoding = &apos;utf-8&apos;))</div><div class="line">html_str = res.read()</div></pre></td></tr></table></figure>
<h3 id="post-json"><a href="#post-json" class="headerlink" title="post json"></a>post json</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">parms = &#123;</div><div class="line">&apos;name1&apos; : &apos;value1&apos;,</div><div class="line">&apos;name2&apos; : &apos;value2&apos;</div><div class="line">&#125;</div><div class="line">post_data = json.dumps(parms)</div><div class="line">res = urllib.request.urlopen(url,post_data.encod(encoding=&quot;utf-8&quot;))</div><div class="line">html_str =res.read()</div></pre></td></tr></table></figure>
<h2 id="header"><a href="#header" class="headerlink" title="header"></a>header</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">from urllib import request, parse</div><div class="line"></div><div class="line"># Extra headers</div><div class="line">headers = &#123;</div><div class="line">&apos;User-agent&apos; : &apos;none/ofyourbusiness&apos;,</div><div class="line">&apos;Spam&apos; : &apos;Eggs&apos;</div><div class="line">&#125;</div><div class="line">req = request.Request(url, querystring.encode(&apos;ascii&apos;), headers=headers)</div><div class="line"># Make a request and read the response</div><div class="line">res = request.urlopen(req)</div><div class="line">html_str = res.read()</div></pre></td></tr></table></figure>
<h3 id="header-example"><a href="#header-example" class="headerlink" title="header example"></a>header example</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">headers=&#123;</div><div class="line">&apos;Connection&apos;: &apos;keep-alive&apos;,</div><div class="line">&apos;Cache-Control&apos;: &apos;max-age=0&apos;,</div><div class="line">&apos;Upgrade-Insecure-Requests&apos;: 1,</div><div class="line">&apos;User-Agent&apos;: &apos;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36&apos;,</div><div class="line">&apos;Accept&apos;: &apos;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8&apos;,</div><div class="line">&apos;Accept-Encoding&apos;: &apos;gzip, deflate, sdch&apos;,</div><div class="line">&apos;Accept-Language&apos;: &apos;zh-CN,zh;q=0.8,en;q=0.6&apos;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Content-Type: application/x-www-form-urlencoded</div><div class="line">Content-Type: application/json</div></pre></td></tr></table></figure>
<h2 id="Request"><a href="#Request" class="headerlink" title="Request"></a>Request</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">GET / HTTP/1.1</div><div class="line">Host: ip.cn</div><div class="line">Connection: keep-alive</div><div class="line">Upgrade-Insecure-Requests: 1</div><div class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36</div><div class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</div><div class="line">Accept-Encoding: gzip, deflate, sdch</div><div class="line">Accept-Language: zh-CN,zh;q=0.8,en;q=0.6</div><div class="line">Cookie: UM_distinctid=15ae0d3744b437-0ebcb4eece40e4-57e1b3c-100200-15ae0d3744c42b; CNZZDATA123770=cnzz_eid%3D646344926-1484393339-%26ntime%3D1489830206</div></pre></td></tr></table></figure>
<h2 id="Response"><a href="#Response" class="headerlink" title="Response"></a>Response</h2><p>encoding:gzip</p>
<p><img src="http://i.imgur.com/gNVZvxJ.png" alt="Imgur"></p>
<p>when unzip the body,we can see:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">HTTP/1.1 200 OK</div><div class="line">Server: nginx/1.8.0</div><div class="line">Date: Sat, 18 Mar 2017 10:54:28 GMT</div><div class="line">Content-Type: text/html; charset=UTF-8</div><div class="line">Connection: keep-alive</div><div class="line">Vary: Accept-Encoding</div><div class="line">X-Powered-By: PHP/5.6.30-1~dotdeb+7.1</div><div class="line">Content-Length: 3189</div><div class="line"></div><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html&gt;</div><div class="line">&lt;head&gt;</div><div class="line">&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;</div><div class="line">&lt;link href=&quot;http://s.ip-cdn.com&quot; rel=&quot;dns-prefetch&quot; /&gt;</div><div class="line">&lt;title&gt;IP.cn - IP 地址查询 | 地理位置 | 手机归属地&lt;/title&gt;</div><div class="line">&lt;meta name=&quot;robots&quot; content=&quot;all&quot; /&gt;</div><div class="line">&lt;meta name=&quot;Keywords&quot; content=&quot;ip,ip查询,手机ip,本机ip,外网ip,ip地址查询,手机号,归属地&quot;&gt;</div><div class="line">&lt;meta name=&quot;Description&quot; content=&quot;专业本机 IP 地址查询、手机 IP 地址、地理位置查询、IP 数据库、手机号归属地查询、电话号码黄页查询，可查广告、骚扰、快递、银行、保险、房地产、中介电话。&quot;&gt;</div><div class="line">&lt;link href=&apos;http://s.ip-cdn.com/css/bootstrap.min.css&apos; rel=&apos;stylesheet&apos; type=&apos;text/css&apos;&gt;</div><div class="line">&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, minimum-scale=0.5&quot;&gt;</div><div class="line">&lt;meta name=&quot;format-detection&quot; content=&quot;telephone=no&quot;&gt;</div><div class="line">&lt;!--[if lt IE 8]&gt;</div><div class="line">&lt;script src=&quot;http://s.ip-cdn.com/js/ie8.js&quot;&gt;&lt;/script&gt;</div><div class="line">&lt;![endif]--&gt;</div><div class="line">&lt;link href=&apos;http://s.ip-cdn.com/css/main.css&apos; rel=&apos;stylesheet&apos; type=&apos;text/css&apos;&gt;</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body onLoad=&quot;document.fs.ip.focus()&quot;&gt;</div><div class="line">.</div><div class="line">.</div><div class="line">.</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><h2 id="入门"><a href="#入门" class="headerlink" title="入门"></a>入门</h2><p><a href="http://www.runoob.com/python3/python3-tutorial.html" target="_blank" rel="external">Python3教程</a></p>
<h2 id="进阶技巧"><a href="#进阶技巧" class="headerlink" title="进阶技巧"></a>进阶技巧</h2><p><a href="https://github.com/yidao620c/python3-cookbook" target="_blank" rel="external">python3-cookbook</a><br><a href="http://docspy3zh.readthedocs.io/en/latest/index.html" target="_blank" rel="external">readthedocs</a><br><a href="http://cn.python-requests.org/zh_CN/latest/" target="_blank" rel="external">python-requests</a></p>
<p>httbin.org</p>
]]></content>
      
        <categories>
            
            <category> Python </category>
            
        </categories>
        
        
        <tags>
            
            <tag> python </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[GPT(GUID partition table)]]></title>
      <url>https://ygcaicn.github.io/Linux/GPT.html</url>
      <content type="html"><![CDATA[<p>GPT 磁盘分区表：</p>
<p>LBA – Logical Block Adress</p>
<p>size of  LBA :512bytes(0.5KB)</p>
<p>LBA0~LBA33: GUID partition table(GPT)</p>
<p>LBA(end-33)~LBA(end): Backup GPT</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">Disk /dev/sdb: 33021952 sectors, 15.7 GiB</div><div class="line">Logical sector size: 512 bytes</div><div class="line">Disk identifier (GUID): 2A7B560E-11D2-48FE-9A16-A54069811BF4</div><div class="line">Partition table holds up to 128 entries</div><div class="line">First usable sector is 34, last usable sector is 33021918</div><div class="line">Partitions will be aligned on 2048-sector boundaries</div><div class="line">Total free space is 2014 sectors (1007.0 KiB)</div><div class="line"></div><div class="line">Number  Start (sector)    End (sector)  Size       Code  Name</div><div class="line">   1            2048        33021918   15.7 GiB    8300  Linux filesystem</div></pre></td></tr></table></figure>
<h1 id="gdisk"><a href="#gdisk" class="headerlink" title="gdisk"></a>gdisk</h1><h2 id="Command"><a href="#Command" class="headerlink" title="Command"></a>Command</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">Command (? for help): ?</div><div class="line">b	back up GPT data to a file</div><div class="line">c	change a partition&apos;s name</div><div class="line">d	delete a partition</div><div class="line">i	show detailed information on a partition</div><div class="line">l	list known partition types</div><div class="line">n	add a new partition</div><div class="line">o	create a new empty GUID partition table (GPT)</div><div class="line">p	print the partition table</div><div class="line">q	quit without saving changes</div><div class="line">r	recovery and transformation options (experts only)</div><div class="line">s	sort partitions</div><div class="line">t	change a partition&apos;s type code</div><div class="line">v	verify disk</div><div class="line">w	write table to disk and exit</div><div class="line">x	extra functionality (experts only)</div><div class="line">?	print this menu</div></pre></td></tr></table></figure>
<h2 id="Recovery-transformation"><a href="#Recovery-transformation" class="headerlink" title="Recovery/transformation"></a>Recovery/transformation</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">Recovery/transformation command (? for help): ?</div><div class="line">b	use backup GPT header (rebuilding main)</div><div class="line">c	load backup partition table from disk (rebuilding main)</div><div class="line">d	use main GPT header (rebuilding backup)</div><div class="line">e	load main partition table from disk (rebuilding backup)</div><div class="line">f	load MBR and build fresh GPT from it</div><div class="line">g	convert GPT into MBR and exit</div><div class="line">h	make hybrid MBR</div><div class="line">i	show detailed information on a partition</div><div class="line">l	load partition data from a backup file</div><div class="line">m	return to main menu</div><div class="line">o	print protective MBR data</div><div class="line">p	print the partition table</div><div class="line">q	quit without saving changes</div><div class="line">t	transform BSD disklabel partition</div><div class="line">v	verify disk</div><div class="line">w	write table to disk and exit</div><div class="line">x	extra functionality (experts only)</div><div class="line">?	print this menu</div></pre></td></tr></table></figure>
<h2 id="Expert"><a href="#Expert" class="headerlink" title="Expert"></a>Expert</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">Expert command (? for help): ?</div><div class="line">a	set attributes</div><div class="line">c	change partition GUID</div><div class="line">d	display the sector alignment value</div><div class="line">e	relocate backup data structures to the end of the disk</div><div class="line">g	change disk GUID</div><div class="line">h	recompute CHS values in protective/hybrid MBR</div><div class="line">i	show detailed information on a partition</div><div class="line">l	set the sector alignment value</div><div class="line">m	return to main menu</div><div class="line">n	create a new protective MBR</div><div class="line">o	print protective MBR data</div><div class="line">p	print the partition table</div><div class="line">q	quit without saving changes</div><div class="line">r	recovery and transformation options (experts only)</div><div class="line">s	resize partition table</div><div class="line">t	transpose two partition table entries</div><div class="line">u	replicate partition table on new device</div><div class="line">v	verify disk</div><div class="line">w	write table to disk and exit</div><div class="line">z	zap (destroy) GPT data structures and exit</div><div class="line">?	print this menu</div></pre></td></tr></table></figure>
<h1 id="partition’s-type-code"><a href="#partition’s-type-code" class="headerlink" title="partition’s type code"></a>partition’s type code</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">0700 Microsoft basic data  0c01 Microsoft reserved    2700 Windows RE          </div><div class="line">3000 ONIE boot             3001 ONIE config           3900 Plan 9              </div><div class="line">4100 PowerPC PReP boot     4200 Windows LDM data      4201 Windows LDM metadata</div><div class="line">4202 Windows Storage Spac  7501 IBM GPFS              7f00 ChromeOS kernel     </div><div class="line">7f01 ChromeOS root         7f02 ChromeOS reserved     8200 Linux swap          </div><div class="line">8300 Linux filesystem      8301 Linux reserved        8302 Linux /home         </div><div class="line">8303 Linux x86 root (/)    8304 Linux x86-64 root (/  8305 Linux ARM64 root (/)</div><div class="line">8306 Linux /srv            8307 Linux ARM32 root (/)  8400 Intel Rapid Start   </div><div class="line">8e00 Linux LVM             a500 FreeBSD disklabel     a501 FreeBSD boot        </div><div class="line">a502 FreeBSD swap          a503 FreeBSD UFS           a504 FreeBSD ZFS         </div><div class="line">a505 FreeBSD Vinum/RAID    a580 Midnight BSD data     a581 Midnight BSD boot   </div><div class="line">a582 Midnight BSD swap     a583 Midnight BSD UFS      a584 Midnight BSD ZFS    </div><div class="line">a585 Midnight BSD Vinum    a600 OpenBSD disklabel     a800 Apple UFS           </div><div class="line">a901 NetBSD swap           a902 NetBSD FFS            a903 NetBSD LFS          </div><div class="line">a904 NetBSD concatenated   a905 NetBSD encrypted      a906 NetBSD RAID         </div><div class="line">ab00 Recovery HD           af00 Apple HFS/HFS+        af01 Apple RAID          </div><div class="line">af02 Apple RAID offline    af03 Apple label           af04 AppleTV recovery    </div><div class="line">af05 Apple Core Storage    bc00 Acronis Secure Zone   be00 Solaris boot        </div><div class="line">bf00 Solaris root          bf01 Solaris /usr &amp; Mac Z  bf02 Solaris swap        </div><div class="line">bf03 Solaris backup        bf04 Solaris /var          bf05 Solaris /home       </div><div class="line">bf06 Solaris alternate se  bf07 Solaris Reserved 1    bf08 Solaris Reserved 2  </div><div class="line">bf09 Solaris Reserved 3    bf0a Solaris Reserved 4    bf0b Solaris Reserved 5  </div><div class="line">c001 HP-UX data            c002 HP-UX service         ea00 Freedesktop $BOOT   </div><div class="line">eb00 Haiku BFS             ed00 Sony system partitio  ed01 Lenovo system partit</div><div class="line">ef00 EFI System            ef01 MBR partition scheme  ef02 BIOS boot partition</div><div class="line">f800 Ceph OSD              f801 Ceph dm-crypt OSD     f802 Ceph journal        </div><div class="line">f803 Ceph dm-crypt journa  f804 Ceph disk in creatio  f805 Ceph dm-crypt disk i</div><div class="line">fb00 VMWare VMFS           fb01 VMWare reserved       fc00 VMWare kcore crash p</div><div class="line">fd00 Linux RAID</div></pre></td></tr></table></figure>
<h1 id="刻录iso镜像到U盘"><a href="#刻录iso镜像到U盘" class="headerlink" title="刻录iso镜像到U盘"></a>刻录iso镜像到U盘</h1><p><strong>必须先change a partition’s type code -&gt;EF00</strong>再 ‘dd’</p>
<h1 id="Example-disk’s-GPT"><a href="#Example-disk’s-GPT" class="headerlink" title="Example disk’s GPT"></a>Example disk’s GPT</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">Disk /dev/sda: 468862128 sectors, 223.6 GiB</div><div class="line">Logical sector size: 512 bytes</div><div class="line">Disk identifier (GUID): 4F2B2F55-48AC-4CC8-A745-605404C6BDF7</div><div class="line">Partition table holds up to 128 entries</div><div class="line">First usable sector is 34, last usable sector is 468862094</div><div class="line">Partitions will be aligned on 2048-sector boundaries</div><div class="line">Total free space is 13745 sectors (6.7 MiB)</div><div class="line"></div><div class="line">Number  Start (sector)    End (sector)  Size       Code  Name</div><div class="line">   1            4096          204799   98.0 MiB    EF00  EFI system partition</div><div class="line">   2          208896       229904940   109.5 GiB   0700  Basic data partition</div><div class="line">   3       229906432       230897663   484.0 MiB   2700  </div><div class="line">   4       230899712       426919054   93.5 GiB    0700  Basic data partition</div><div class="line">   5       426919936       427309055   190.0 MiB   8300  </div><div class="line">   6       427309056       428285951   477.0 MiB   8200  </div><div class="line">   7       428285952       468860927   19.3 GiB    8300</div></pre></td></tr></table></figure>
<h1 id="details-infomation-on-a-partition"><a href="#details-infomation-on-a-partition" class="headerlink" title="details infomation on a partition"></a>details infomation on a partition</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">Partition GUID code: C12A7328-F81F-11D2-BA4B-00A0C93EC93B (EFI System)</div><div class="line">Partition unique GUID: 00772A36-9423-43A9-B1A1-0BE031102BFB</div><div class="line">First sector: 4096 (at 2.0 MiB)</div><div class="line">Last sector: 204799 (at 100.0 MiB)</div><div class="line">Partition size: 200704 sectors (98.0 MiB)</div><div class="line">Attribute flags: 0000000000000000</div><div class="line">Partition name: &apos;EFI system partition&apos;</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 磁盘 </tag>
            
            <tag> Linux </tag>
            
            <tag> 分区 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Python3 实现代理IP,伪装IP]]></title>
      <url>https://ygcaicn.github.io/Python3/proxy-python3.html</url>
      <content type="html"><![CDATA[<p>实现抓取代理服务器，建立ipPool,伪装外网ip</p>
<a id="more"></a>
<h1 id="Proxy"><a href="#Proxy" class="headerlink" title="Proxy"></a>Proxy</h1><figure class="highlight py"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/python3</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> urllib.request</div><div class="line"><span class="keyword">import</span> re</div><div class="line"><span class="keyword">import</span> gzip</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">ungzip</span><span class="params">(data)</span>:</span></div><div class="line">    <span class="keyword">try</span>:        <span class="comment"># try decompress</span></div><div class="line">        print(<span class="string">'compressing.....'</span>)</div><div class="line">        data = gzip.decompress(data)</div><div class="line">        print(<span class="string">'dcompress done!'</span>)</div><div class="line">    <span class="keyword">except</span>:</div><div class="line">        print(<span class="string">'without compress!'</span>)</div><div class="line">    <span class="keyword">return</span> data</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Proxy</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,url=<span class="string">'http://www.xicidaili.com/'</span>)</span>:</span></div><div class="line">        self.ipPool=[]</div><div class="line">        self.url=url</div><div class="line">        self.getipPool();</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getipPool</span><span class="params">(self)</span>:</span>     </div><div class="line">        <span class="comment">#get proxy Ip address pool from http://www.xicidaili.com/</span></div><div class="line">        <span class="comment"># Base URL being accessed</span></div><div class="line">        headers=&#123;</div><div class="line">        <span class="string">'Connection'</span>: <span class="string">'keep-alive'</span>,</div><div class="line">        <span class="string">'Cache-Control'</span>: <span class="string">'max-age=0'</span>,</div><div class="line">        <span class="string">'Upgrade-Insecure-Requests'</span>: <span class="string">'1'</span>,</div><div class="line">        <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36'</span>,</div><div class="line">        <span class="string">'Accept'</span>: <span class="string">'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8'</span>,</div><div class="line">        <span class="string">'Accept-Encoding'</span>: <span class="string">'gzip, deflate, sdch'</span>,</div><div class="line">        <span class="string">'Accept-Language'</span>: <span class="string">'zh-CN,zh;q=0.8,en;q=0.6'</span>,</div><div class="line">        &#125;</div><div class="line">        <span class="comment"># Make a GET request and read the response</span></div><div class="line">        req = urllib.request.Request(self.url,headers=headers)</div><div class="line">        response = urllib.request.urlopen(req)</div><div class="line">        res_bytes = ungzip(response.read())</div><div class="line">        html_str = res_bytes.decode(encoding=<span class="string">'utf-8'</span>)</div><div class="line"></div><div class="line">        <span class="comment"># the pattern(Regular expression) is depend on the response data from your url</span></div><div class="line">        pattern = <span class="string">r'\s*&lt;td&gt;(((2[0-4]\d|25[0-5]|[01]?\d\d?)\.)&#123;3&#125;(2[0-4]\d|25[0-5]|[01]?\d\d?))&lt;/td&gt;\s*\n\s*&lt;td&gt;(\d&#123;2,5&#125;)&lt;/td&gt;\s*\n\s*&lt;td&gt;(\w+)&lt;/td&gt;\s*\n\s*&lt;td class="country"&gt;透明&lt;/td&gt;\s*\n\s*&lt;td&gt;(HTTP|HTTPS)&lt;/td&gt;'</span></div><div class="line">        regex = re.compile(pattern)</div><div class="line">        s = regex.findall(html_str)</div><div class="line">        <span class="comment">#s = [('221.204.103.145', '103.', '103', '145', '9797', '山西太原', 'HTTP'), ...]</span></div><div class="line">        <span class="keyword">for</span> host <span class="keyword">in</span> s:</div><div class="line">            hostdict = &#123;<span class="string">'host'</span>:host[<span class="number">0</span>],<span class="string">'port'</span>:host[<span class="number">4</span>],<span class="string">'country'</span>:host[<span class="number">5</span>],<span class="string">'protocol'</span>:host[<span class="number">-1</span>]&#125;</div><div class="line">            self.ipPool.append(hostdict)</div><div class="line">        <span class="keyword">return</span> self.ipPool</div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">startProxy</span><span class="params">(self)</span>:</span></div><div class="line"></div><div class="line">        self.printIpPool();</div><div class="line">        host_num = input(<span class="string">'Please select a host:'</span>)</div><div class="line">        host_num = int(host_num.strip())        </div><div class="line">        proxy = &#123;<span class="string">'http'</span>:self.ipPool[host_num][<span class="string">'host'</span>]+<span class="string">':'</span>+self.ipPool[host_num][<span class="string">'port'</span>]&#125;</div><div class="line">        <span class="comment">#creat ProxyHandler</span></div><div class="line">        proxy_support = urllib.request.ProxyHandler(proxy)</div><div class="line">        <span class="comment">#creat Opener</span></div><div class="line">        opener = urllib.request.build_opener(proxy_support)</div><div class="line">        <span class="comment">#creat User Angent</span></div><div class="line">        <span class="comment">#opener.addheaders = [('User-Agent','Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36')]</span></div><div class="line">        <span class="comment">#install OPener</span></div><div class="line">        urllib.request.install_opener(opener)</div><div class="line">        <span class="comment">#start Opener</span></div><div class="line">        <span class="keyword">pass</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">printIpPool</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(self.ipPool)):</div><div class="line">            print(i,<span class="string">":"</span>,self.ipPool[i])</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line"></div><div class="line">    url = <span class="string">"http://ip.cn/"</span></div><div class="line">    headers=&#123;</div><div class="line">    <span class="string">'Connection'</span>: <span class="string">'keep-alive'</span>,</div><div class="line">    <span class="string">'Cache-Control'</span>: <span class="string">'max-age=0'</span>,</div><div class="line">    <span class="string">'Upgrade-Insecure-Requests'</span>: <span class="string">'1'</span>,</div><div class="line">    <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36'</span>,</div><div class="line">    <span class="string">'Accept'</span>: <span class="string">'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8'</span>,</div><div class="line">    <span class="string">'Accept-Encoding'</span>: <span class="string">'gzip, deflate, sdch'</span>,</div><div class="line">    <span class="string">'Accept-Language'</span>: <span class="string">'zh-CN,zh;q=0.8,en;q=0.6'</span>,</div><div class="line">    <span class="comment">#'Cookie': 'UM_distinctid=15ae0d3744b437-0ebcb4eece40e4-57e1b3c-100200-15ae0d3744c42b; CNZZDATA123770=cnzz_eid%3D646344926-1484393339-%26ntime%3D1489830206'</span></div><div class="line">    &#125;</div><div class="line">    proxyhost = Proxy()</div><div class="line">    proxyhost.startProxy()</div><div class="line"></div><div class="line">    req = urllib.request.Request(url,headers=headers)</div><div class="line">    response = urllib.request.urlopen(req)</div><div class="line">    res_bytes = ungzip(response.read())</div><div class="line"></div><div class="line">    html_str = res_bytes.decode(encoding=<span class="string">'utf-8'</span>)</div><div class="line">    file_html = open(<span class="string">"proxy.html"</span>,<span class="string">'w'</span>,encoding = <span class="string">"utf-8"</span>)</div><div class="line">    file_html.write(html_str)</div><div class="line">    file_html.close()</div><div class="line"></div><div class="line">    <span class="comment"># the pattern(Regular expression) is depend on the response data from your url</span></div><div class="line">    <span class="comment">#pattern = r'((\d&#123;1,3&#125;\.)&#123;3&#125;\d&#123;1,3&#125;)'</span></div><div class="line">    pattern = <span class="string">r'&lt;code&gt;(((2[0-4]\d|25[0-5]|[01]?\d\d?)\.)&#123;3&#125;(2[0-4]\d|25[0-5]|[01]?\d\d?))&lt;/code&gt;'</span></div><div class="line"></div><div class="line">    pattern2 = <span class="string">r'所在地理位置：&lt;code&gt;([\s\w]*)&lt;/code&gt;'</span></div><div class="line">    my_locate = re.findall(pattern2,html_str)</div><div class="line">    my_locate = my_locate[<span class="number">0</span>]</div><div class="line">    my_ip = re.findall(pattern,html_str)</div><div class="line">    my_ip = my_ip[<span class="number">0</span>][<span class="number">0</span>]</div><div class="line">    <span class="comment">#print(html_str)</span></div><div class="line">    print(<span class="string">'my locate:'</span>,my_locate)</div><div class="line">    print(<span class="string">'my ip:'</span>,my_ip)</div></pre></td></tr></table></figure>
<h1 id="get-proxy-Ip-address-pool-from-http-www-xicidaili-com"><a href="#get-proxy-Ip-address-pool-from-http-www-xicidaili-com" class="headerlink" title="get proxy Ip address pool from http://www.xicidaili.com/"></a>get proxy Ip address pool from <a href="http://www.xicidaili.com/" target="_blank" rel="external">http://www.xicidaili.com/</a></h1><p>直接get得到主页以后，主要是写正则表达式，match得到我们需要的数据。</p>
<p>得到的html数据：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">"subtitle"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">th</span> <span class="attr">class</span>=<span class="string">"country"</span>&gt;</span>国家<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span>代理IP地址<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span>端口<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">th</span> <span class="attr">width</span>=<span class="string">"20%"</span>&gt;</span>服务器地址<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">th</span> <span class="attr">class</span>=<span class="string">"country"</span>&gt;</span>是否匿名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span>类型<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">          <span class="tag">&lt;<span class="name">th</span> <span class="attr">width</span>=<span class="string">"11%"</span>&gt;</span>存活时间<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">th</span> <span class="attr">width</span>=<span class="string">"12%"</span>&gt;</span>验证时间<span class="tag">&lt;/<span class="name">th</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">"odd"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"country"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"http://fs.xicidaili.com/images/flag/cn.png"</span> <span class="attr">alt</span>=<span class="string">"Cn"</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>115.231.175.68<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>8081<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>浙江杭州<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"country"</span>&gt;</span>透明<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>HTTP<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>74天<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>不到1分钟<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">""</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"country"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"http://fs.xicidaili.com/images/flag/cn.png"</span> <span class="attr">alt</span>=<span class="string">"Cn"</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>220.191.1.130<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>8118<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>浙江杭州<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"country"</span>&gt;</span>透明<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>HTTP<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>16小时<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>1分钟前<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">"odd"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"country"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"http://fs.xicidaili.com/images/flag/cn.png"</span> <span class="attr">alt</span>=<span class="string">"Cn"</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>124.88.67.54<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>80<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>新疆乌鲁木齐<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"country"</span>&gt;</span>透明<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>HTTP<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>723天<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>13分钟前<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">""</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"country"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"http://fs.xicidaili.com/images/flag/cn.png"</span> <span class="attr">alt</span>=<span class="string">"Cn"</span> /&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>58.221.59.210<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>63000<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>江苏南通<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"country"</span>&gt;</span>透明<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>HTTP<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>362天<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>1小时前<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div></pre></td></tr></table></figure>
<p><img src="http://i.imgur.com/7h07pqS.png" alt="Imgur"></p>
<p>我们这里匹配出主机ip（host），port，country和protocol，利用<a href="http://deerchao.net/" target="_blank" rel="external">deerchao的正则表达式测试器</a>很设计出下面的正则表达式：</p>
<p><code>#the pattern(Regular expression) is depend on the response data from your url</code></p>
<p><code>pattern = r&#39;\s*&lt;td&gt;(((2[0-4]\d|25[0-5]|[01]?\d\d?)\.){3}(2[0-4]\d|25[0-5]|[01]?\d\d?))&lt;/td&gt;\s*\n\s*&lt;td&gt;(\d{2,5})&lt;/td&gt;\s*\n\s*&lt;td&gt;(\w+)&lt;/td&gt;\s*\n\s*&lt;td class=&quot;country&quot;&gt;透明&lt;/td&gt;\s*\n\s*&lt;td&gt;(HTTP|HTTPS)&lt;/td&gt;&#39;</code></p>
<p>最终的效果：<br>    运行程序，会提示我们选择一个代理服务器，程序然后会去访问<a href="http://ip.cn" target="_blank" rel="external">ip.cn</a>,通过返回的数据我们解析得到外网IP，会发现这和我们选择的代理服务器信息是一致的而不是我们自己的外网地址。ip伪装成功。</p>
<p><img src="http://i.imgur.com/XIxBJUK.png" alt="Imgur"></p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>正则表达式：<a href="http://deerchao.net/tutorials/regex/regex.htm" target="_blank" rel="external">http://deerchao.net/tutorials/regex/regex.htm</a></p>
]]></content>
      
        <categories>
            
            <category> Python3 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Python3 </tag>
            
            <tag> 正则表达式 </tag>
            
            <tag> IP伪装 </tag>
            
            <tag> 代理 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[LEDE-Mt7620a-newifiY1]]></title>
      <url>https://ygcaicn.github.io/%E5%B5%8C%E5%85%A5%E5%BC%8F/LEDE-Mt7620a-newifiY1.html</url>
      <content type="html"><![CDATA[<p>LEDE:<br><a href="https://downloads.lede-project.org" target="_blank" rel="external">https://downloads.lede-project.org</a></p>
<p>LEDE Packages(mipsel_24kc):<a href="http://openwrt-dist.sourceforge.net/packages/LEDE/base/mipsel_24kc/" target="_blank" rel="external">http://openwrt-dist.sourceforge.net/packages/LEDE/base/mipsel_24kc/</a></p>
<a id="more"></a>
<hr>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">root@LEDE:/tmp# opkg install libudns_0.4-1_mipsel_24kc.ipk</div><div class="line">Installing libudns (0.4-1) to root...</div><div class="line">Configuring libudns.</div><div class="line">root@LEDE:/tmp# opkg install shadowsocks-libev_3.0.3-1_mipsel_24kc.ipk luci-app-shadowsocks_1.6.2-1_all.ipk</div><div class="line">Installing shadowsocks-libev (3.0.3-1) to root...</div><div class="line">Installing libev (4.22-1) to root...</div><div class="line">Downloading http://downloads.lede-project.org/releases/17.01.0/packages/mipsel_24kc/packages/libev_4.22-1_mipsel_24kc.ipk</div><div class="line">Installing libpcre (8.40-1) to root...</div><div class="line">Downloading http://downloads.lede-project.org/releases/17.01.0/packages/mipsel_24kc/packages/libpcre_8.40-1_mipsel_24kc.ipk</div><div class="line">Installing libsodium (1.0.11-2) to root...</div><div class="line">Downloading http://downloads.lede-project.org/releases/17.01.0/packages/mipsel_24kc/packages/libsodium_1.0.11-2_mipsel_24kc.ipk</div><div class="line">Installing libmbedtls (2.4.0-2) to root...</div><div class="line">Downloading http://downloads.lede-project.org/releases/17.01.0/packages/mipsel_24kc/base/libmbedtls_2.4.0-2_mipsel_24kc.ipk</div><div class="line">Installing luci-app-shadowsocks (1.6.2-1) to root...</div><div class="line">Configuring libev.</div><div class="line">Configuring libpcre.</div><div class="line">Configuring libsodium.</div><div class="line">Configuring libmbedtls.</div><div class="line">Configuring shadowsocks-libev.</div><div class="line">Configuring luci-app-shadowsocks.</div></pre></td></tr></table></figure>
<hr>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">root@LEDE:/tmp# opkg install ChinaDNS_1.3.2-4_mipsel_24kc.ipk luci-app-chinadns_1.6.0-1_all.ipk</div><div class="line">Installing ChinaDNS (1.3.2-4) to root...</div><div class="line">Installing luci-app-chinadns (1.6.0-1) to root...</div><div class="line">Configuring ChinaDNS.</div><div class="line">Configuring luci-app-chinadns.</div></pre></td></tr></table></figure>
<hr>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">root@LEDE:/tmp# opkg install dns-forwarder_1.1.1-1_mipsel_24kc.ipk luci-app-dns-forwarder_1.6.0-1_all.ipk</div><div class="line">Installing dns-forwarder (1.1.1-1) to root...</div><div class="line">Installing luci-app-dns-forwarder (1.6.0-1) to root...</div><div class="line">Configuring dns-forwarder.</div><div class="line">Configuring luci-app-dns-forwarder.</div></pre></td></tr></table></figure>
<hr>
<h1 id="Kcptun-Shadowsocks"><a href="#Kcptun-Shadowsocks" class="headerlink" title="Kcptun+Shadowsocks"></a>Kcptun+Shadowsocks</h1><p>open source Project：</p>
<ul>
<li>openwrt kcptun <a href="https://github.com/bettermanbao/openwrt-kcptun" target="_blank" rel="external">https://github.com/bettermanbao/openwrt-kcptun</a></li>
<li>More details please refer to <a href="https://github.com/xtaci/kcptun" target="_blank" rel="external">https://github.com/xtaci/kcptun</a></li>
<li>luci-app-kcptun please refer to <a href="https://github.com/kuoruan/luci-app-kcptun" target="_blank" rel="external">https://github.com/kuoruan/luci-app-kcptun</a></li>
<li>GUI for KCPTun windows client <a href="https://github.com/dfdragon/kcptun_gclient" target="_blank" rel="external">https://github.com/dfdragon/kcptun_gclient</a></li>
<li>Kcptun for Android <a href="https://github.com/shadowsocks/kcptun-android" target="_blank" rel="external">https://github.com/shadowsocks/kcptun-android</a></li>
</ul>
<blockquote>
<p>两端参数必须一致的有:</p>
<p>datashard –前向纠错<br>  parityshard –前向纠错\<br>  nocomp –压缩\<br>  key –密钥\<br>  crypt –加密算法\<br>  其余为两边可独立设定的参数</p>
</blockquote>
<hr>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nocomp;mtu=1200;parityshard=0;key=waggywn@10000 dscp=46;mode=fast;crypt=salsa20;sndwnd=1024;rcvwnd=2048</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 嵌入式 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux </tag>
            
            <tag> openwrt </tag>
            
            <tag> 路由器 </tag>
            
            <tag> 翻墙 </tag>
            
            <tag> LEDE </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[help-linux]]></title>
      <url>https://ygcaicn.github.io/Linux/help-linux.html</url>
      <content type="html"><![CDATA[<h1 id="Help-Linux"><a href="#Help-Linux" class="headerlink" title="Help Linux"></a>Help Linux</h1><h2 id="Ubuntu"><a href="#Ubuntu" class="headerlink" title="Ubuntu"></a><em>Ubuntu</em></h2><h3 id="发行版列表WIKI"><a href="#发行版列表WIKI" class="headerlink" title="发行版列表WIKI"></a><a href="https://zh.wikipedia.org/wiki/Ubuntu%E5%8F%91%E8%A1%8C%E7%89%88%E5%88%97%E8%A1%A8" target="_blank" rel="external">发行版列表WIKI</a></h3><p>Ubuntu版本的命名规则是根据正式版发行的年月命名，Ubuntu 8.10也就意味着2008年10月发行的Ubuntu，研发人员与使用者可从版本号码就知道正式发布的时间。Ubuntu是基于Debian开发的Linux发行版，Debian的开发代号来自于电影玩具总动员，不过，Ubuntu各版本的代号却固定是形容词加上动物名称，而且这2个词的英文首字母一定是相同的。从Ubuntu 6.06开始，两个词的首字母按照英文字母表的排列顺序取用</p>
<p><img src="http://i.imgur.com/ApYN4RB.png" alt="Imgur"></p>
<a id="more"></a>
<h3 id="manpage"><a href="#manpage" class="headerlink" title="manpage"></a><a href="http://manpages.ubuntu.com/manpages/" target="_blank" rel="external">manpage</a></h3><p>按照开发代号分类了各个版本的man,也可以通过Toolsbar的版本号直接选择相应的版本。</p>
<p><a href="http://manpages.ubuntu.com/manpages/" target="_blank" rel="external"><img src="http://i.imgur.com/m0Qbhj5.png" alt="Imgur"></a><br><a href="http://manpages.ubuntu.com/manpages/" target="_blank" rel="external"><img src="http://i.imgur.com/YrRlIc8.png" alt="Imgur"></a></p>
<h3 id="help-Ubuntu"><a href="#help-Ubuntu" class="headerlink" title="help Ubuntu"></a><a href="https://help.ubuntu.com/" target="_blank" rel="external">help Ubuntu</a></h3><p>同样按照版本号和开发代号进行了分类，同时文档的类型分为Desktop，Server，InstallGuide。</p>
<p><a href="https://help.ubuntu.com/" target="_blank" rel="external"><img src="http://i.imgur.com/HvItDsN.png" alt="Imgur"></a></p>
<h2 id="Debian"><a href="#Debian" class="headerlink" title="Debian"></a><em>Debian</em></h2><p><a href="https://www.debian.org/" target="_blank" rel="external">Debian</a></p>
<p><a href="https://www.debian.org/doc/manuals/debian-reference/" target="_blank" rel="external">Debian 中文参考手册</a></p>
<h2 id="Raspberry"><a href="#Raspberry" class="headerlink" title="Raspberry"></a><em>Raspberry</em></h2><p><a href="https://www.raspberrypi.org/documentation/raspbian/" target="_blank" rel="external">Raspbian</a></p>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> linux </tag>
            
            <tag> ubuntu </tag>
            
            <tag> debian </tag>
            
            <tag> raspberry </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[hello.md]]></title>
      <url>https://ygcaicn.github.io/%E8%AF%AD%E8%A8%80/hello-md.html</url>
      <content type="html"><![CDATA[<p>MarkDown 文本编辑器：  </p>
<ul>
<li>MarkdownPad（我使用的是Markdownpad2）</li>
<li>Sublime</li>
<li>Atom</li>
<li>有道云笔记（直接存入云笔记很方便）</li>
<li>任何有文本编辑功能的软件都可以书写markdown</li>
</ul>
<a id="more"></a>
<h2 id="Hello-word！"><a href="#Hello-word！" class="headerlink" title="Hello word！"></a>Hello word！</h2><p>打开Markdown编辑器，新建Hello.md文件，写入下面的内容：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Hello world!</div><div class="line">===</div><div class="line"></div><div class="line">I love [Google](http://www.google.com)!</div></pre></td></tr></table></figure>
<p>可视化以后的效果：</p>
<h1 id="Hello-world"><a href="#Hello-world" class="headerlink" title="Hello world!"></a>Hello world!</h1><p>I love <a href="http://www.google.com" target="_blank" rel="external">Google</a>!</p>
<hr>
<h1 id="关于MarkdownPad2"><a href="#关于MarkdownPad2" class="headerlink" title="关于MarkdownPad2"></a>关于MarkdownPad2</h1><ul>
<li>官方<a href="https://markdownpad.com/" target="_blank" rel="external">MarkdownPad2</a>,可以下载Pro版本。</li>
<li>破解<a href="http://www.jianshu.com/p/fa7c4387dc62" target="_blank" rel="external">注册码</a><blockquote>
<p>邮箱：<br>Soar360@live.com<br>授权秘钥：<br>GBPduHjWfJU1mZqcPM3BikjYKF6xKhlKIys3i1MU2eJHqWGImDHzWdD6xhMNLGVpbP2M5SN6bnxn2kSE8qHqNY5QaaRxmO3YSMHxlv2EYpjdwLcPwfeTG7kUdnhKE0vVy4RidP6Y2wZ0q74f47fzsZo45JE2hfQBFi2O9Jldjp1mW8HUpTtLA2a5/sQytXJUQl/QKO0jUQY4pa5CCx20sV1ClOTZtAGngSOJtIOFXK599sBr5aIEFyH0K7H4BoNMiiDMnxt1rD8Vb/ikJdhGMMQr0R4B+L3nWU97eaVPTRKfWGDE8/eAgKzpGwrQQoDh+nzX1xoVQ8NAuH+s4UcSeQ==</p>
</blockquote>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 语言 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Markdown 基础语法]]></title>
      <url>https://ygcaicn.github.io/%E8%AF%AD%E8%A8%80/markdown.html</url>
      <content type="html"><![CDATA[<p>JOHN GRUBER定义的<a href="http://daringfireball.net/projects/markdown/syntax" target="_blank" rel="external">markdown语法</a>。</p>
<a id="more"></a>
<h1 id="段落与换行"><a href="#段落与换行" class="headerlink" title="段落与换行"></a>段落与换行</h1><p>1.段落的前后必须空行：空行指的是什么内容都没有，或者只有空白符（空格或制表符）</p>
<p>相邻两行文本，如果中间没有空行会显示在一行中（换行符被转换成为空格）</p>
<p>2.如果需要在段落内加入换行（<code>&lt;br/&gt;</code>）<br>可以在前一行的末尾加入至少两个空格，然后换行写其他的文字</p>
<p>3.Markdown中的多数区域都需要在两个空行之间</p>
<h1 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h1><h2 id="Setext格式"><a href="#Setext格式" class="headerlink" title="Setext格式"></a>Setext格式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">H1</div><div class="line">====</div><div class="line"></div><div class="line">H2</div><div class="line">----</div></pre></td></tr></table></figure>
<p>渲染效果：（不包含上下的分隔线）</p>
<hr>
<h1 id="H1"><a href="#H1" class="headerlink" title="H1"></a>H1</h1><h2 id="H2"><a href="#H2" class="headerlink" title="H2"></a>H2</h2><hr>
<h2 id="atx格式"><a href="#atx格式" class="headerlink" title="atx格式"></a>atx格式</h2><ul>
<li>可以使用对称的<code>#</code>包括文本：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">## H2 ##</div><div class="line"></div><div class="line">### H3 ###</div></pre></td></tr></table></figure>
<p><del>对于有道云笔记文本和<code>#</code>之间必须有空格。</del> 标准语法就是这样的。</p>
<p>渲染效果：</p>
<hr>
<h2 id="H2-1"><a href="#H2-1" class="headerlink" title="H2"></a>H2</h2><h3 id="H3"><a href="#H3" class="headerlink" title="H3"></a>H3</h3><hr>
<ul>
<li>也可以只在左边使用<code>#</code>:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">### H3</div><div class="line"></div><div class="line">#### H4</div></pre></td></tr></table></figure>
<p>渲染效果：</p>
<hr>
<h3 id="H3-1"><a href="#H3-1" class="headerlink" title="H3"></a>H3</h3><h4 id="H4"><a href="#H4" class="headerlink" title="H4"></a>H4</h4><hr>
<p>JOHN’s <a href="http://daringfireball.net/projects/markdown/syntax#header" target="_blank" rel="external">Heaser</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">HEADERS</div><div class="line"></div><div class="line">Markdown supports two styles of headers, Setext and atx.</div><div class="line"></div><div class="line">Setext-style headers are “underlined” using equal signs (for first-level headers) and dashes (for second-level headers). For example:</div><div class="line"></div><div class="line">This is an H1</div><div class="line">=============</div><div class="line"></div><div class="line">This is an H2</div><div class="line">-------------</div><div class="line">Any number of underlining =’s or -’s will work.</div><div class="line"></div><div class="line">Atx-style headers use 1-6 hash characters at the start of the line, corresponding to header levels 1-6. For example:</div><div class="line"></div><div class="line"># This is an H1</div><div class="line"></div><div class="line">## This is an H2</div><div class="line"></div><div class="line">###### This is an H6</div><div class="line">Optionally, you may “close” atx-style headers. This is purely cosmetic — you can use this if you think it looks better. The closing hashes don’t even need to match the number of hashes used to open the header. (The number of opening hashes determines the header level.) :</div><div class="line"></div><div class="line"># This is an H1 #</div><div class="line"></div><div class="line">## This is an H2 ##</div><div class="line"></div><div class="line">### This is an H3 ######</div></pre></td></tr></table></figure>
<p>各种Markdown软件的渲染结果可能会有一些差别，但是了解一下标准的语法是没坏处的。</p>
<h1 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h1><h2 id="1-引用内容"><a href="#1-引用内容" class="headerlink" title="1.引用内容"></a>1.引用内容</h2><p>在段落或者内容前使用<code>&gt;</code>符号，就可以将这段内容标记为‘引用’的内容（<code>&lt;blockquote&gt;</code>）:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&gt;引用内容</div></pre></td></tr></table></figure>
<p>渲染效果：</p>
<hr>
<blockquote>
<p>引用内容</p>
</blockquote>
<hr>
<h2 id="2-多行引用"><a href="#2-多行引用" class="headerlink" title="2.多行引用"></a>2.多行引用</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&gt;多行引用</div><div class="line">&gt;可以在每一行前加`&gt;`符号</div></pre></td></tr></table></figure>
<p>渲染效果：</p>
<hr>
<blockquote>
<p>多行引用<br>可以在每一行前加<code>&gt;</code>符号</p>
</blockquote>
<hr>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&gt;如果仅在第一行使用`&gt;`,</div><div class="line">后面相邻的行即使省略`&gt;`，也会变成引用内容</div></pre></td></tr></table></figure>
<p>渲染效果：</p>
<hr>
<blockquote>
<p>如果仅在第一行使用<code>&gt;</code>,<br>后面相邻的行即使省略<code>&gt;</code>，也会变成引用内容</p>
</blockquote>
<hr>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&gt;如果引用的内容需要换行，  </div><div class="line">&gt;可以在行尾添加两个空格</div><div class="line">&gt;</div><div class="line">&gt;或者在引用内容中加一个空行</div></pre></td></tr></table></figure>
<p>渲染效果：</p>
<hr>
<blockquote>
<p>如果引用的内容需要换行，<br>可以在行尾添加两个空格</p>
<p>或者在引用内容中加一个空行</p>
</blockquote>
<hr>
<h2 id="3-嵌套引用"><a href="#3-嵌套引用" class="headerlink" title="3.嵌套引用"></a>3.嵌套引用</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&gt;也可以在引用中</div><div class="line">&gt;&gt;使用嵌套的引用</div></pre></td></tr></table></figure>
<p>渲染效果：</p>
<hr>
<blockquote>
<p>也可以在引用中</p>
<blockquote>
<p>使用嵌套的引用</p>
</blockquote>
</blockquote>
<hr>
<h2 id="4-其它Markdown"><a href="#4-其它Markdown" class="headerlink" title="4.其它Markdown"></a>4.其它Markdown</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&gt;在引用中可以使用其它任何*Markdown*语法</div></pre></td></tr></table></figure>
<p>渲染效果：</p>
<hr>
<blockquote>
<p>在引用中可以使用其它任何<em>Markdown</em>语法</p>
</blockquote>
<hr>
<h1 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h1><h2 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">* 可以使用`*`作为标记</div><div class="line">- 也可以使用`-`</div><div class="line">+ 或者`+`</div></pre></td></tr></table></figure>
<p>渲染效果：</p>
<hr>
<ul>
<li>可以使用<code>*</code>作为标记</li>
</ul>
<ul>
<li>也可以使用<code>-</code></li>
</ul>
<ul>
<li>或者<code>+</code></li>
</ul>
<hr>
<h2 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">1. 有序列表以数字和`.`开始；</div><div class="line">2. 数字的序列并不会影响生成列表的序列；</div><div class="line">4. 但是仍然推荐按照自然顺序（1.2.3...）编写</div></pre></td></tr></table></figure>
<p>渲染效果：</p>
<hr>
<ol>
<li>有序列表以数字和<code>.</code>开始；</li>
<li>数字的序列并不会影响生成列表的序列；</li>
<li>但是仍然推荐按照自然顺序（1.2.3…）编写</li>
</ol>
<hr>
<h2 id="嵌套的列表"><a href="#嵌套的列表" class="headerlink" title="嵌套的列表"></a>嵌套的列表</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">1. 第一层</div><div class="line">    + 1-1</div><div class="line">    + 1-2</div><div class="line">    + 1-3</div><div class="line">2. 无序列表和有序列表可以随意相互嵌套</div><div class="line">    1. 2-1</div><div class="line">    2. 2-2</div><div class="line">    3. 2-3</div></pre></td></tr></table></figure>
<p>渲染效果：</p>
<hr>
<ol>
<li>第一层<ul>
<li>1-1</li>
<li>1-2</li>
<li>1-3</li>
</ul>
</li>
<li>无序列表和有序列表可以随意相互嵌套<ol>
<li>2-1</li>
<li>2-2</li>
<li>2-3</li>
</ol>
</li>
</ol>
<hr>
<h2 id="语法和用法"><a href="#语法和用法" class="headerlink" title="语法和用法"></a>语法和用法</h2><ol>
<li>无序列表项的开始是：符号 空格；</li>
<li>有序列表项的开始是：数字 <code>.</code> 空格；</li>
<li>空格至少为一个，多个空格将被解析为一个；</li>
<li>如果仅需要在行前显示数字和<code>.</code>:  </li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">05\. 可以使用：数字\. 来取消显示为列表</div></pre></td></tr></table></figure>
<p>05. 可以使用：数字\. 来取消显示为列表</p>
<h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><h2 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h2><p>可以使用缩进来插入代码块：</p>
<pre><code>&lt;html&gt;
    &lt;title&gt;&lt;/title&gt;
&lt;/html&gt;
</code></pre><p>代码块前后至少有一个空行，切每行代码前至少有一个Tab或者四个空格；</p>
<h2 id="行内代码"><a href="#行内代码" class="headerlink" title="行内代码"></a>行内代码</h2><p>通过<code>`，插入行内代码（</code>是Tab键上边、数字<code>1</code>键左侧的按键）；</p>
<p>例如<code>&lt;title&gt;Markdown&lt;/title&gt;</code></p>
<h2 id="转换规则"><a href="#转换规则" class="headerlink" title="转换规则"></a>转换规则</h2><p>代码块中的文本（包括Markdown语法）都会显示为原始内容，而特殊字符会被转换为HTML<a href="https://zh.wikipedia.org/wiki/XML%E4%B8%8EHTML%E5%AD%97%E7%AC%A6%E5%AE%9E%E4%BD%93%E5%BC%95%E7%94%A8%E5%88%97%E8%A1%A8" target="_blank" rel="external">字符实体</a></p>
<h1 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h1><ol>
<li>可以在一行中使用三个或更多的<code>*</code>,<code>-</code>或<code>_</code>来添加分隔线(<hr>):</li>
<li>多个字符之间可以有空格（空白符），但不能有其它字符：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">***</div><div class="line">------</div><div class="line">_____</div><div class="line"></div><div class="line">*   *   *</div><div class="line">_ _ _</div></pre></td></tr></table></figure>
<p>渲染效果：</p>
<h2 id=""><a href="#" class="headerlink" title="*"></a><em>*</em></h2><hr>
<hr>
<hr>
<h1 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h1><h2 id="行内式"><a href="#行内式" class="headerlink" title="行内式"></a>行内式</h2><p>格式为：<code>[link text](URL  &quot;title text&quot;)</code></p>
<p><code>[Google](http://www.google.com)</code><br><a href="http://www.google.com" target="_blank" rel="external">Google</a></p>
<p><code>[icon](./images/icon.png)</code><br><a href="./images/icon.png">icon</a></p>
<p>超链接的title就是鼠标放上去（不是点击）时就弹出来的提示：</p>
<p><code>[Google](http://www.google.com &quot;Google Title&quot;)</code></p>
<p>注：title text使用’或者”都是可以的。</p>
<p><a href="http://www.google.com" title="Google Title" target="_blank" rel="external">Google</a></p>
<h2 id="参考式"><a href="#参考式" class="headerlink" title="参考式"></a>参考式</h2><p>参考式链接的写法相当于行内式拆分成两部分，并通过一个识别符连链接两部分。参考式能尽量保持文章的结构简单，也方便统一管理URL</p>
<ol>
<li>链接格式</li>
</ol>
<p>第一个方括号为链接文本，第二个方括号为 链接独有的标识符，可以是字母、数字、空格或标点符号。<strong>标识符是不区分大小写的</strong></p>
<p><code>[link text][link-sign]</code></p>
<ol>
<li>链接内容</li>
</ol>
<p>其中URL可以使用&lt;&gt;包起来，title可以使用’’、””、 ()包括（考虑到兼容性，建议使用引号），title部分也可以换行来写；</p>
<p>链接内容的定义可以放在同一个文件的任意位置；</p>
<ol>
<li>备注</li>
</ol>
<p>可以省略标识符，直接使用link text作为标识符。</p>
<p>这种情况下第二个方括号可以为空或者直接省略第二个方括号。</p>
<p>参考格式的优点在于可以在多个不同的位置引用同一个URL。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">[Google][google-link]  </div><div class="line">[Baidu][baidu-link]  </div><div class="line">[QQ][]  </div><div class="line">[Amazon]</div><div class="line"></div><div class="line">[google-link]: http://www.google.com &quot;Google Title&quot;</div><div class="line">[baidu-link]: http://www.baidu.com &quot;Baidu Title&quot;</div><div class="line">[QQ]: http://www.qq.com &quot;QQ Title&quot;</div><div class="line">[Amazon]: http://www.amazon.com &quot;amazon title&quot;</div></pre></td></tr></table></figure>
<p>渲染效果：</p>
<hr>
<p><a href="http://www.google.com" title="Google Title" target="_blank" rel="external">Google</a><br><a href="http://www.baidu.com" title="Baidu Title" target="_blank" rel="external">Baidu</a><br><a href="http://www.qq.com" title="QQ Title" target="_blank" rel="external">QQ</a><br><a href="http://www.amazon.com" title="amazon title" target="_blank" rel="external">Amazon</a></p>
<hr>
<h2 id="自动链接"><a href="#自动链接" class="headerlink" title="自动链接"></a>自动链接</h2><p>使用<code>&lt;&gt;</code>包括的URL或者邮箱地址会被自动的转换为超链接：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;http://www.google.com&gt;   </div><div class="line">&lt;123@email.com&gt;</div></pre></td></tr></table></figure>
<p>渲染效果：</p>
<p><a href="http://www.google.com" target="_blank" rel="external">http://www.google.com</a><br><a href="&#x6d;&#x61;&#x69;&#108;&#116;&#x6f;&#58;&#49;&#50;&#x33;&#64;&#x65;&#x6d;&#x61;&#x69;&#x6c;&#x2e;&#x63;&#x6f;&#109;">&#49;&#50;&#x33;&#64;&#x65;&#x6d;&#x61;&#x69;&#x6c;&#x2e;&#x63;&#x6f;&#109;</a></p>
<p>这种方式适合行内较短的链接，会使用URL作为超链接文章，邮箱地址会自动编码，以逃避抓取机器人。</p>
<h1 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h1><p>插入图片的语法和插入超链接的语法基本一致，只是在最前面多一个<code>!</code>。也分为行内式和参考式两种。</p>
<h2 id="行内式-1"><a href="#行内式-1" class="headerlink" title="行内式"></a>行内式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">![Imgur](http://i.imgur.com/YACdsVS.jpg)</div></pre></td></tr></table></figure>
<p><img src="http://i.imgur.com/YACdsVS.jpg" alt="Imgur" title="rosse"></p>
<p>方括号部分是图片的替代文本，括号中的’title’部分和连接是一样的，是可选的。</p>
<h2 id="参考式-1"><a href="#参考式-1" class="headerlink" title="参考式"></a>参考式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">![Imgur][rosse]</div><div class="line"></div><div class="line">[rosse]: http://i.imgur.com/YACdsVS.jpg &quot;rosse&quot;</div></pre></td></tr></table></figure>
<p><img src="http://i.imgur.com/YACdsVS.jpg" alt="Imgur" title="rosse"></p>
<h2 id="指定图片的大小"><a href="#指定图片的大小" class="headerlink" title="指定图片的大小"></a>指定图片的大小</h2><p>Markdown不支持指定图片的大小，不过可以通过直接插入<img>标签来指定相关属性：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;img src=&quot;http://i.imgur.com/YACdsVS.jpg&quot; alt=&quot;rosse&quot; title=&quot;rosse&quot; width=&quot;50&quot; height=&quot;30&quot;/&gt;</div></pre></td></tr></table></figure>
<p><img src="http://i.imgur.com/YACdsVS.jpg" alt="rosse" title="rosse" width="50" height="30"></p>
<p>注：这在有道云笔记里是不支持的！</p>
<h1 id="强调"><a href="#强调" class="headerlink" title="强调"></a>强调</h1><ol>
<li>使用<code>* *</code>或<code>_ _</code>包括的文本会被转换为<em></em>,通常表现为斜体。</li>
<li>使用<code>** **</code>或<code>__ __</code>包括的文本会被转换为<strong></strong>,通常表现为加粗。</li>
<li>用来包括文本的<em>或_内侧不能有空白，否则</em> _将不会被转换。</li>
<li>如果需要在文本中成对显示*或者_，可以在符号前加入<code>\</code>即可。</li>
<li>强调的特殊符号必须成对使用。</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">*Hello world!*  </div><div class="line">_Hello world!_  </div><div class="line">**Hello world!**  </div><div class="line">__Hello world!__  </div><div class="line">\*Hello world!\*  </div><div class="line">\_Hello world!\_</div></pre></td></tr></table></figure>
<p><em>Hello world!</em><br><em>Hello world!</em><br><strong>Hello world!</strong><br><strong>Hello world!</strong><br>*Hello world!*<br>_Hello world!_  </p>
<h1 id="字符转义"><a href="#字符转义" class="headerlink" title="字符转义"></a>字符转义</h1><p>反斜线 <code>\</code>用于插入在Markdown语法中有特殊作用的字符。</p>
<p>这些字符包括：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">\  </div><div class="line">`  </div><div class="line">_  </div><div class="line">&#123;&#125;  </div><div class="line">[]  </div><div class="line">()  </div><div class="line">#  </div><div class="line">+  </div><div class="line">-  </div><div class="line">_  </div><div class="line">&apos;  </div><div class="line">.  </div><div class="line">!</div></pre></td></tr></table></figure>
<h1 id="Markdown-扩展语法"><a href="#Markdown-扩展语法" class="headerlink" title="Markdown 扩展语法"></a>Markdown 扩展语法</h1><p>Markdown标准 本身包含的功能有限，所以产生了许多第三方的扩展语法，如<a href="https://help.github.com/categories/writing-on-github/" target="_blank" rel="external">Github Flavored Markdown</a>。</p>
<h1 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h1><p>用<code>~~ ~~</code>包括的内容将以删除线的形式展现。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">~~删除线~~</div></pre></td></tr></table></figure>
<p><del>删除线</del></p>
<h1 id="代码块和语法高亮"><a href="#代码块和语法高亮" class="headerlink" title="代码块和语法高亮"></a>代码块和语法高亮</h1><h2 id="代码块-1"><a href="#代码块-1" class="headerlink" title="代码块"></a>代码块</h2><ol>
<li>与缩进添加代码块不同，这里使用 \<figure class="highlight plain"><figcaption><span>来包含多行代码。```需要单独占一行。</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">2. 在第一组```之后添加代码的语言，如&apos;javascript&apos;或者&apos;js&apos;，即可以将代码标记为Javascript。</div><div class="line"></div><div class="line"></div><div class="line">    ```c++</div><div class="line">    include&lt;iostream&gt;</div><div class="line">    using namespace std;</div><div class="line"></div><div class="line">    int main(void)</div><div class="line">    &#123;</div><div class="line">        cout &lt;&lt; &quot;Hello world!&quot;;</div><div class="line">        return 0;</div><div class="line">    &#125;</div></pre></td></tr></table></figure></li>
</ol>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">include&lt;iostream&gt;</div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"Hello world!"</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<pre><code><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">window</span>.addEventListener(<span class="string">'load'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;<span class="built_in">console</span>.log(<span class="string">'window loaded'</span>);&#125;);</div></pre></td></tr></table></figure>
</code></pre><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">window</span>.addEventListener(<span class="string">'load'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;<span class="built_in">console</span>.log(<span class="string">'window loaded'</span>);&#125;);</div></pre></td></tr></table></figure>
<h1 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h1><h2 id="单元格和表头"><a href="#单元格和表头" class="headerlink" title="单元格和表头"></a>单元格和表头</h2><ol>
<li>使用<code>|</code>来分隔不同的单元格，使用来分隔表头和其它行。</li>
<li>为了美观，可以使用空格对齐不同的单元格，并在左右两侧都使用 <code>|</code>来标记单元格边界。</li>
<li>在表头下方的分隔线中加入 <code>:</code>，即可标记下方单元格内容的对齐方式。单元格内容默认为左对齐，表头内容会一直居中对齐。</li>
<li>表格中可以插入其它Markdown内容的行内标记，比如超链接等。</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">| name      |   age     |</div><div class="line">|---------- |-----------|</div><div class="line">|LearnShare |   12      |</div><div class="line">|Mike       |   20      |</div></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>name</th>
<th>age</th>
</tr>
</thead>
<tbody>
<tr>
<td>LearnShare</td>
<td>12</td>
</tr>
<tr>
<td>Mike</td>
<td>20</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th style="text-align:right">name</th>
<th>age</th>
<th>blog</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:right">LearnShare</td>
<td>12</td>
<td><a href="http://www.blog.cumtpn.com" target="_blank" rel="external">Learn</a></td>
</tr>
<tr>
<td style="text-align:right">Mike</td>
<td>20</td>
<td><img src="http://i.imgur.com/YACdsVS.jpg" alt="Imgur" title="rosse"></td>
</tr>
</tbody>
</table>
<h1 id="Task-list"><a href="#Task-list" class="headerlink" title="Task list"></a>Task list</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">- [ ] Eat</div><div class="line">- [x] Code</div><div class="line">    - [x] HTML</div><div class="line">    - [X] CSS</div><div class="line">    - [ ] Javascipt</div><div class="line">- [ ]Sleep</div></pre></td></tr></table></figure>
<ul>
<li>[ ] Eat</li>
<li>[x] Code<ul>
<li>[x] HTML</li>
<li>[x] CSS</li>
<li>[ ] Javascipt</li>
</ul>
</li>
<li>[ ]Sleep</li>
</ul>
<h1 id="编辑器与扩展"><a href="#编辑器与扩展" class="headerlink" title="编辑器与扩展"></a>编辑器与扩展</h1><p>这部分给大家介绍一些可以用来书写、编辑Markdown的工具，包括独立客户端、编辑器/IDE插件，以及WEB的工具，排名不分先后。</p>
<p>也欢迎你来推荐自己喜欢的工具和插件。</p>
<ul>
<li><a href="https://markdownpad.com" target="_blank" rel="external">MarkdownPad</a> Windows</li>
<li><a href="http://www.texts.io/" target="_blank" rel="external">Text</a> Windows OSX</li>
<li><a href="http://code52.org/DownmarkerWPF/" target="_blank" rel="external">MarkPad</a> Windows</li>
<li><a href="http://www.mdcharm.com/" target="_blank" rel="external">MdCharm</a> Windows Linux</li>
<li><a href="http://mike-ward.net/markdownedit/" target="_blank" rel="external">Mardown Edit</a> Windows</li>
<li><a href="https://cloose.github.io/CuteMarkEd/" target="_blank" rel="external">CuteMarkEd</a>Windows Linux</li>
<li><a href="http://pad.haroopress.com/" target="_blank" rel="external">Haroopad</a> Windows OSX Linux</li>
<li><a href="http://25.io/mou/" target="_blank" rel="external">Mou</a> OSX</li>
<li><a href="http://macdown.uranusjr.com/" target="_blank" rel="external">MacDown</a> OSX</li>
<li><a href="http://www.markdownpro.com/" target="_blank" rel="external">Markdown Pro</a> OSX</li>
<li><a href="http://sourceforge.net/projects/retext/" target="_blank" rel="external">ReText</a>Linux</li>
<li><a href="https://github.com/jonschlinkert/sublime-markdown-extended" target="_blank" rel="external">sublime-markdown-extended</a>Sublime Text</li>
<li><a href="https://github.com/atom/markdown-preview" target="_blank" rel="external">Atom Markdown Preview</a>Atom</li>
<li><a href="https://github.com/nicoulaj/idea-markdown" target="_blank" rel="external">IDEA Markdown</a>IDEA</li>
<li><a href="https://www.zybuluo.com/cmd/" target="_blank" rel="external">cmd Markdown</a>Windows OSX Linux web</li>
<li><a href="https://stackedit.io" target="_blank" rel="external">StactEdit</a>Web</li>
<li><a href="http://dillinger.io" target="_blank" rel="external">Dillinger</a>Web</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 语言 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CentOS下载及版本选择--Linux版本，下载]]></title>
      <url>https://ygcaicn.github.io/Linux/CentOS%E4%B8%8B%E8%BD%BD%E5%8F%8A%E7%89%88%E6%9C%AC%E9%80%89%E6%8B%A9-Linux%E7%89%88%E6%9C%AC%EF%BC%8C%E4%B8%8B%E8%BD%BD.html</url>
      <content type="html"><![CDATA[<p>CentOS 是一个企业级的 Linux 发行版本，它源于 Red Hat 1 免费公开的源代码。<br>CentOS 完全遵守 Red Hat 的再发行政策，并且以功能上的兼容性为目标。CentOS 对组件的修改主要是去除上游供应商的商标及美工。</p>
<a id="more"></a>
<h1 id="镜像目录结构："><a href="#镜像目录结构：" class="headerlink" title="镜像目录结构："></a>镜像目录结构：</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">0_README.txt                                       22-May-2016 13:52    2210</div><div class="line">CentOS-6.8-x86_64-LiveCD.iso                       22-May-2016 22:18    702M</div><div class="line">CentOS-6.8-x86_64-LiveCD.torrent                   25-May-2016 18:01     28K</div><div class="line">CentOS-6.8-x86_64-LiveDVD.iso                      22-May-2016 21:38      2G</div><div class="line">CentOS-6.8-x86_64-LiveDVD.torrent                  25-May-2016 18:01     76K</div><div class="line">CentOS-6.8-x86_64-bin-DVD1.iso                     23-May-2016 07:53      4G</div><div class="line">CentOS-6.8-x86_64-bin-DVD1to2.torrent              25-May-2016 18:01    229K</div><div class="line">CentOS-6.8-x86_64-bin-DVD2.iso                     23-May-2016 07:53      2G</div><div class="line">CentOS-6.8-x86_64-minimal.iso                      24-May-2016 00:37    447M</div><div class="line">CentOS-6.8-x86_64-minimal.torrent                  25-May-2016 18:01     18K</div><div class="line">CentOS-6.8-x86_64-netinstall.iso                   22-May-2016 14:07    228M</div><div class="line">CentOS-6.8-x86_64-netinstall.torrent               25-May-2016 18:01    9799</div><div class="line">README.txt                                         22-May-2016 13:52    2210</div><div class="line">md5sum.txt                                         24-May-2016 00:41     388</div><div class="line">md5sum.txt.asc                                     25-May-2016 17:57    1271</div><div class="line">sha1sum.txt                                        24-May-2016 00:41     436</div><div class="line">sha1sum.txt.asc                                    25-May-2016 17:57    1319</div><div class="line">sha256sum.txt                                      24-May-2016 00:41     580</div><div class="line">sha256sum.txt.asc                                  25-May-2016 17:58    1463</div></pre></td></tr></table></figure>
<h1 id="README-txt有说明"><a href="#README-txt有说明" class="headerlink" title="README.txt有说明"></a>README.txt有说明</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">What images are in this directory</div><div class="line"></div><div class="line">CentOS-6.8-x86_64-netinstall.iso</div><div class="line">  This is the network install and rescue image.</div><div class="line">  This image is designed to be burned onto a CD. You then boot your computer off the CD.</div><div class="line"></div><div class="line">CentOS-6.8-x86_64-minimal.iso</div><div class="line">  The aim of this image is to install a very basic CentOS 6.8 system, with the minimum of packages needed to have a functional system.</div><div class="line">  Please burn this image onto a CD and boot your computer off it. A preselected set of packages will be installed on your system. Everything else needs to be installed using yum.</div><div class="line">  Please read http://wiki.centos.org/Manuals/ReleaseNotes/CentOSMinimalCD6.8 for more details about this image.</div><div class="line">  The set of packages installed by this image is identical to the one installed when choosing the group named &quot;Minimal&quot; from the full DVD image.</div><div class="line"></div><div class="line">CentOS-6.8-x86_64-bin-DVD1.iso</div><div class="line">CentOS-6.8-x86_64-bin-DVD2.iso</div><div class="line">  These two dvd images contain the entire base distribution.</div><div class="line">  Please burn DVD1 onto a DVD and boot your computer off it.</div><div class="line">  A basic install will not need DVD2.</div><div class="line">  After the installation is complete, please run &quot;yum update&quot; in order to update your system.</div><div class="line"></div><div class="line">CentOS-6.8-x86_64-LiveCD.iso</div><div class="line">  This is a CD live image of CentOS 6.8 designed to be burned onto a CD. You then boot your computer using that CD.</div><div class="line">  Please read http://wiki.centos.org/Manuals/ReleaseNotes/CentOSLiveCD6.8 for more details about this image.</div><div class="line">  The disk can also be used to install CentOS 6.8 onto your computer but without offering any package selection options at install time.</div><div class="line"></div><div class="line">CentOS-6.8-x86_64-LiveDVD.iso</div><div class="line">  This is a DVD live image of CentOS 6.8 designed to be burned onto a DVD. You then boot your computer using that DVD.</div><div class="line">  Please read http://wiki.centos.org/Manuals/ReleaseNotes/CentOSLiveDVD6.8 for more details about this image.</div><div class="line">  The disk can also be used to install CentOS 6.8 onto your computer but without offering any package selection options at install time.</div><div class="line"></div><div class="line"> Remember that in order to be able to partition your disk you will need to run the GUI installer which in turns needs enough RAM. The same is true for the network setup step.</div><div class="line"> The release notes ( http://wiki.centos.org/Manuals/ReleaseNotes/CentOS6.8 ) provide more details about these aspects.</div></pre></td></tr></table></figure>
<h1 id="LiveDVD-LiveCD-DVD"><a href="#LiveDVD-LiveCD-DVD" class="headerlink" title="LiveDVD-LiveCD-DVD"></a>LiveDVD-LiveCD-DVD</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">CentOS-6.8-x86_64-LiveCD.iso</div><div class="line"></div><div class="line">CentOS-6.8-x86_64-LiveDVD.iso</div></pre></td></tr></table></figure>
<p>这两个live版不许要安装到硬盘，可以直接从介质启动系统。<br>LiveCD版——相比LiveDVD是个精简的光盘CentOS系统。体积更小，便于维护使用。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">CentOS-6.8-x86_64-bin-DVD1.iso</div><div class="line"></div><div class="line">CentOS-6.8-x86_64-bin-DVD2.iso</div></pre></td></tr></table></figure>
<p>这两个镜像是系统安装的镜像，需要安装到硬盘才能使用。DVD1用与基础安装，DVD2为附加RPM包，安装系统时只需要用到DVD1。<br>另外这两个镜像可以作为本地yum源使用。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">CentOS-6.8-x86_64-minimal.iso</div></pre></td></tr></table></figure>
<p>最小化安装镜像，very basic CentOS 6.8 system。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">CentOS-6.8-x86_64-netinstall.iso</div></pre></td></tr></table></figure>
<p>网络安装镜像，需要联网才能进行安装。</p>
<h2 id="参考文档：https-wiki-centos-org-zh-Manuals-ReleaseNotes-CentOS6-8"><a href="#参考文档：https-wiki-centos-org-zh-Manuals-ReleaseNotes-CentOS6-8" class="headerlink" title="参考文档：https://wiki.centos.org/zh/Manuals/ReleaseNotes/CentOS6.8"></a>参考文档：<a href="https://wiki.centos.org/zh/Manuals/ReleaseNotes/CentOS6.8" target="_blank" rel="external">https://wiki.centos.org/zh/Manuals/ReleaseNotes/CentOS6.8</a></h2><p>#Linux下载开源镜像站：</p>
<h2 id="1-企业贡献："><a href="#1-企业贡献：" class="headerlink" title="1.企业贡献："></a>1.企业贡献：</h2><p>　　搜狐开源镜像站：<a href="http://mirrors.sohu.com/" target="_blank" rel="external">http://mirrors.sohu.com/</a></p>
<p>　　网易开源镜像站：<a href="http://mirrors.163.com/" target="_blank" rel="external">http://mirrors.163.com/</a></p>
<h2 id="2-大学教学："><a href="#2-大学教学：" class="headerlink" title="2.大学教学："></a>2.大学教学：</h2><p>　　北京理工大学：</p>
<p>　　<a href="http://mirror.bit.edu.cn" target="_blank" rel="external">http://mirror.bit.edu.cn</a> (IPv4 only)</p>
<p>　　<a href="http://mirror.bit6.edu.cn" target="_blank" rel="external">http://mirror.bit6.edu.cn</a> (IPv6 only)</p>
<p>　　北京交通大学：</p>
<p>　　<a href="http://mirror.bjtu.edu.cn" target="_blank" rel="external">http://mirror.bjtu.edu.cn</a> (IPv4 only)</p>
<p>　　<a href="http://mirror6.bjtu.edu.cn" target="_blank" rel="external">http://mirror6.bjtu.edu.cn</a> (IPv6 only)</p>
<p>　　<a href="http://debian.bjtu.edu.cn" target="_blank" rel="external">http://debian.bjtu.edu.cn</a> (IPv4+IPv6)</p>
<p>　　兰州大学：<a href="http://mirror.lzu.edu.cn/" target="_blank" rel="external">http://mirror.lzu.edu.cn/</a></p>
<p>　　厦门大学：<a href="http://mirrors.xmu.edu.cn/" target="_blank" rel="external">http://mirrors.xmu.edu.cn/</a></p>
<p>　　上海交通大学：</p>
<p>　　<a href="http://ftp.sjtu.edu.cn/" target="_blank" rel="external">http://ftp.sjtu.edu.cn/</a> (IPv4 only)</p>
<p>　　<a href="http://ftp6.sjtu.edu.cn" target="_blank" rel="external">http://ftp6.sjtu.edu.cn</a> (IPv6 only)</p>
<p>　　清华大学：</p>
<p>　　<a href="http://mirrors.tuna.tsinghua.edu.cn/" target="_blank" rel="external">http://mirrors.tuna.tsinghua.edu.cn/</a> (IPv4+IPv6)</p>
<p>　　<a href="http://mirrors.6.tuna.tsinghua.edu.cn/" target="_blank" rel="external">http://mirrors.6.tuna.tsinghua.edu.cn/</a> (IPv6 only)</p>
<p>　　<a href="http://mirrors.4.tuna.tsinghua.edu.cn/" target="_blank" rel="external">http://mirrors.4.tuna.tsinghua.edu.cn/</a> (IPv4 only)</p>
<p>　　天津大学：<a href="http://mirror.tju.edu.cn/" target="_blank" rel="external">http://mirror.tju.edu.cn/</a></p>
<p>　　中国科学技术大学：</p>
<p>　　<a href="http://mirrors.ustc.edu.cn/" target="_blank" rel="external">http://mirrors.ustc.edu.cn/</a> (IPv4+IPv6)</p>
<p>　　<a href="http://mirrors4.ustc.edu.cn/" target="_blank" rel="external">http://mirrors4.ustc.edu.cn/</a></p>
<p>　　<a href="http://mirrors6.ustc.edu.cn/" target="_blank" rel="external">http://mirrors6.ustc.edu.cn/</a></p>
<p>　　西南大学：<a href="http://linux.swu.edu.cn/swudownload/Distributions/" target="_blank" rel="external">http://linux.swu.edu.cn/swudownload/Distributions/</a></p>
<p>　　东北大学：</p>
<p>　　<a href="http://mirror.neu.edu.cn/" target="_blank" rel="external">http://mirror.neu.edu.cn/</a> (IPv4 only)</p>
<p>　　<a href="http://mirror.neu6.edu.cn/" target="_blank" rel="external">http://mirror.neu6.edu.cn/</a> (IPv6 only)</p>
<p>　　电子科技大学：</p>
<p>　　<a href="http://ubuntu.uestc.edu.cn/" target="_blank" rel="external">http://ubuntu.uestc.edu.cn/</a></p>
<p>　　青岛大学：<a href="http://mirror.qdu.edu.cn/" target="_blank" rel="external">http://mirror.qdu.edu.cn/</a></p>
]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux版本 </tag>
            
            <tag> Linux下载 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[UEFI 启动：实际工作原理]]></title>
      <url>https://ygcaicn.github.io/uncategorized/grub2-1.html</url>
      <content type="html"><![CDATA[<p>（译）<a href="http://blog.woodelf.org/2014/05/28/uefi-boot-how-it-works.html" target="_blank" rel="external">转</a> UEFI 启动：实际工作原理 2014.05.28</p>
<p>本文是我翻译自国外技术博客的一篇文章，其中讲述了 UEFI 的一些基本概念和细节。</p>
<p>本文的原始链接位于：，<a href="https://www.happyassassin.net/2014/01/25/uefi-boot-how-does-that-actually-work-then/" target="_blank" rel="external">https://www.happyassassin.net/2014/01/25/uefi-boot-how-does-that-actually-work-then/</a></p>
<p>本人的翻译水平有限，难免多有疏漏。废话不多说，请看正文：</p>
<p>又到 AdamW 的讲课时间了，如果你不想听我的长篇大论，那么请出门右拐。</p>
<p>Kamil Paral 说我有写作癖，知道自己的坏习惯也是件好事。</p>
<p>可能你已经在互联网上阅读过有关 UEFI 的大量资料。但是有一些重要事项需要了解：这些资料中的 95% 都毫无价值。如果你认为你已经对 UEFI 有所了解，但是如果你的知识来源并不可靠，那么所掌握的知识就不过是一堆误解、谬论、一己之见、信口开河和弥天大谎。先把这些都忘了吧。如果想真正了解有关 UEFI 的权威知识，不妨访问 UEFI 规范、mjg59 的博客、其他靠谱一点的文章/权威人士——包括 Rod Smith、Peter Jones、Chris Murphy，或者阅读一些小众操作系统的文档，前提是这些操作系统的开发人员确实了解 UEFI。</p>
<a id="more"></a>
<p>好，准备工作做完了。我主要想讨论启动加载，因为对于大多数用户而言，固件在其中扮演着重要角色，同时，不少网站也针对这一过程喋喋不休，由此产生不少误解。</p>
<h1 id="术语"><a href="#术语" class="headerlink" title="术语"></a>术语</h1><p>首先，我们了解一些术语。BIOS 和 UEFI 都是计算机的固件类型。BIOS 固件（主要）用于 IBM PC 兼容计算机。UEFI 的通用性更强，可用在非“IBM PC 兼容”系列的计算机上。</p>
<p>不存在“UEFI BIOS”。没有任何一台计算机会有“UEFI BIOS”。请不要再说“UEFI BIOS”。BIOS 不是所有 PC 固件的通用术语，它只是 PC 固件的一种特定类型。计算机中包含固件。如果你有一台 IBM PC 兼容计算机，那么固件几乎肯定就是 BIOS 或 UEFI。如果你运行的是 Coreboot，那么恭喜，你是个例外，引以为傲吧。</p>
<p>安全启动 (Secure Boot) 与 UEFI 不是同一个概念。请不要将这些术语混淆使用。安全启动 (Secure Boot) 实际上是 UEFI 规范的一项可选功能，于 UEFI 规范版本 2.2 引入。我们稍后会详细讨论安全启动 (Secure Boot) 到底是什么，但是目前而言，只需要记住它和 UEFI 不同即可。你需要区分安全启动 (Secure Boot) 和 UEFI 的差异，在任何场合，你都应当了解你实际上讨论的是其中哪一个。我们首先讨论 UEFI，然后我们将把安全启动 (Secure Boot) 作为 UEFI 的一项“扩展”来进行讨论，因为这就是安全启动 (Secure Boot) 的本质。</p>
<p>注释：UEFI 不是由微软开发的，也从来不受微软控制。它的前身和基础——EFI，是由 Intel 开发和发布的。UEFI 由 UEFI 论坛进行管理。微软是 UEFI 论坛的成员之一。Red Hat、Apple、几乎所有主要 PC 制造商、Intel（显然）、AMD 和一大批其他主要和次要硬件、软件和固件公司及组织也都是 UEFI 论坛的成员。UEFI 是一套业已达成广泛共识的规范，其中当然也包含各种混乱（我们稍后会专门讨论其中一部分）。UEFI 并不由任何一家公司独裁掌控。</p>
<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p>如果想真正了解 UEFI，阅读 UEFI 规范是个不错的方法。这件事并不难，也不需要什么代价。阅读 UEFI 规范相当枯燥乏味，但是会让你受益匪浅。你可以从官方 UEFI 网站下载 UEFI 规范。尽管下载 UEFI 规范需要先同意某些条款和条件，但是不会带来损失。在我撰写本文时，UEFI 规范的最新版本是 2.4 Errata A（译者注：现在更新到了 2.4 Errata B），本文所写内容也基于这一版本。</p>
<p>BIOS 没有制定相应规范。BIOS 本身就是一项事实标准，从 20 世纪 80 年代开始，BIOS 的工作方式就一成不变。这也是诞生 UEFI 的原因之一。</p>
<p>简单起见，我们可以把 BIOS 和 UEFI 看成两种不同的组合。其中一种是 UEFI和 GPT （我们稍后会讨论 GPT）产生之前，IBM PC 兼容计算机（以下称为 PC）所广泛采用的组合。大部分人可能对这种组合非常熟悉，对其中的细节了如指掌。那么我们就先来讨论在具有 BIOS 固件的 PC 上，启动是如何工作的。</p>
<h1 id="BIOS-启动"><a href="#BIOS-启动" class="headerlink" title="BIOS 启动"></a>BIOS 启动</h1><p>事实上，BIOS 启动的工作原理非常非常简单。在老式 BIOS PC 上，装有一个或多个磁盘，每个磁盘中包含 MBR。MBR 是另一套事实标准；大体而言，磁盘起始位置以特定格式描述磁盘上的分区，并包含“启动装载程序 (boot loader)”，BIOS 固件知道如何执行这一小段启动装载程序代码。启动装载程序的职责是启动操作系统（现代启动装载程序的大小通常超出了 MBR 空间所能容纳的范围，因此必须采用多阶段设计，其中 MBR 部分只知道如何从其他位置加载下一阶段，我们现在先不着重讨论这一过程）。</p>
<p>在启动系统的过程中，BIOS 固件只能识别系统包含的磁盘。而作为 BIOS 计算机的拥有者，你可以告诉 BIOS 固件你想从哪个磁盘启动系统。而固件本身并不知道其他细节，它只会执行在指定磁盘的 MBR 部分所发现的启动装载程序，就这么回事。在执行启动装载程序之后，固件本身就不再参与启动。</p>
<p>在 BIOS 组合中，所有的多重启动形式都肯定是在固件层上进行处理的。固件层无法真正识别启动装载程序或操作系统，甚至连分区都无法识别。固件所能执行的操作只是从磁盘的 MBR 中运行启动装载程序。你无法从固件外部配置启动过程。</p>
<h1 id="UEFI-启动：背景"><a href="#UEFI-启动：背景" class="headerlink" title="UEFI 启动：背景"></a>UEFI 启动：背景</h1><p>好，BIOS 组合的背景知识已经明确了。我们现在来看看 UEFI 计算机上的启动原理。即使未掌握本文的细节，也请记住这一点：UEFI 与 BIOS 完全不同。UEFI 启动原理与 BIOS 绝对不同。你不能把 BIOS 启动的原理直接套用到原生 UEFI 启动上。你不能把专为 BIOS 启动设计的工具应用到原生 UEFI 启动的系统上。记住，UEFI 组合完全不同。</p>
<p>还需要了解一个重点：许多 UEFI 固件实现了某种 BIOS 兼容模式（有时候称为 CSM）。许多 UEFI 固件可以像 BIOS 固件一样启动系统，它们可以查找磁盘上的 MBR，然后从 MBR 中执行启动装载程序，接着将后续工作完全交给启动装载程序。有时候，其他人误将此功能称为“禁用 UEFI”，从语言学角度而言，这种说法是荒谬的。系统固件是无法“禁用”的。这种说法很愚蠢，不要采用这种说法。但是在其他人这么说的时候，应该了解他们真正想表达什么。他们讨论的是通过 UEFI 固件的一项功能，以“BIOS 风格”启动系统，而不是采用原生 UEFI 方式启动系统。</p>
<p>我想解释一下原生 UEFI 启动。如果你有一台基于 UEFI 的计算机，其固件具有 BIOS 兼容功能，并且你打算一直使用这项兼容功能，在启动过程中，你的计算机看起来就是基于 BIOS 的。你只需要像 BIOS 启动一样进行所需操作即可。如果你确实有此打算，那么就不要中途变卦。对于你日常使用的操作系统，强烈建议不要混合使用原生 UEFI 启动和 BIOS 兼容启动，尤其不要在同一块磁盘上混用。这么做的话，你会痛不欲生。如果你决定混合使用原生 UEFI 启动和 BIOS 兼容启动，到时候就别找我哭诉。</p>
<p>为了理清头绪，我将假设磁盘采用 GPT，并且包含用于 EFI 的 FAT32 EFI 系统分区 (ESP)。根据你对这些知识的深入程度，你可能发现，在进行原生 UEFI 启动时，GPT 磁盘和 EFI FAT32 ESP 并不是必要条件。但是 UEFI 规范和 GPT 磁盘以及 EFI FAT32 ESP 的联系程度相当密切。在99%的情况下，你要处理的也正是这样的组合。除非你在使用 Mac（老实说，Mac 混乱不堪）。</p>
<p>编辑说明：以下章节（到缺陷为止）在 2014 年 1 月 26 日（本文发布的几小时后）根据 Peter Jones 的反馈进行了大量修订。本文可视为 v2.0 版本。早期版本的写作方式不够严谨，而且内容可能会产生误解。</p>
<h1 id="UEFI-原生启动：实际工作原理——背景"><a href="#UEFI-原生启动：实际工作原理——背景" class="headerlink" title="UEFI 原生启动：实际工作原理——背景"></a>UEFI 原生启动：实际工作原理——背景</h1><p>言归正传。本节将解释原生 UEFI 启动的实际工作原理。如果已掌握一定程度的背景知识，可能更容易深入理解本节内容。</p>
<p>在固件层，UEFI 的基础架构更丰富，可用于处理系统启动。UEFI 远不像BIOS 那么简单。与 BIOS 不同，UEFI 确实可以（不同程度上）理解“磁盘分区”、“启动装载程序”以及“操作系统”的概念。</p>
<p>你可以稍微看看 BIOS 启动过程，然后再看看 UEFI 启动过程，了解 UEFI 启动过程如何采用多种措施来解决特定问题。</p>
<p>在思考启动过程时，你会发现 BIOS/MBR 查找启动装载程序的方法实在不怎么样。BIOS/MBR 非常奇葩：位于磁盘起始位置的这一小段空间包含神奇代码 (magic code)，而这段神奇代码只作用于系统固件和写入此神奇代码的工具。这种方法有许多问题。</p>
<ul>
<li><p>处理不便——你需要特殊工具来写入 MBR，如果要查看 MBR 中包含的内容，唯一的方法几乎就是把 MBR dd 出来，然后进行检查。</p>
</li>
<li><p>如上所述，MBR 本身不足以容纳许多现代启动装载程序。这些启动装载程序会将自身的一小部分安装在 MBR 中，而将其他部分安装到磁盘上的可用空间中。这段可用空间位于常规 MBR 末尾和第一个分区的起始位置之间。这就会造成很大的问题（其实这整个设计就是个大问题，不过无所谓）。对于第一个分区的起始位置，并没有成文的可靠规定，因此难以确保空间足够。只有一件事情是肯定的：这段空间不足以容纳某些启动装载程序的配置。</p>
</li>
<li><p>如果要选择其他启动目标（除磁盘以外），这种设计没有提供任何标准化层或标准化机制，但是用户希望选择除磁盘以外的启动目标。也就是说，他们希望实现多重可启动对象——通常是操作系统。在 BIOS/MBR 组合中，实现这种目的的唯一方法是由启动装载程序进行处理；至于如何实现，并没有进行获得广泛认可的规定。虽然实现的方法非常多，但是它们无法彼此协作，而且也都不是获得广泛认可的标准或规定。而在操作系统/操作系统安装层编写工具的难度很大，无法干净利落地处理多重启动。因此这种设计非常混乱。</p>
</li>
<li><p>这种设计没有提供标准方法，让用户可以从除磁盘以外的目标进行启动。本文不会就此问题进行详细讨论，但是请注意，UEFI 启动的另一优势为：它提供了进行启动（例如，从远程服务器进行启动）的标准方法。</p>
</li>
<li><p>固件层以上的其他层无法配置固件的启动行为，BIOS 没有提供相应机制。</p>
</li>
</ul>
<p>可以想象，在 UEFI 设计之初，开发人员思考过这些问题，并最终提出解决方案。UEFI 固件并不仅仅可以识别磁盘，它也知道启动装载程序代码在每个磁盘上所处的位置，而且在固件层，UEFI 的基础架构更丰富，可用于处理启动装载。接下来，我们讨论下 UEFI 规范中定义的相关内容。</p>
<h1 id="EFI-可执行文件"><a href="#EFI-可执行文件" class="headerlink" title="EFI 可执行文件"></a>EFI 可执行文件</h1><p>UEFI 规范定义了一种可执行文件格式，并要求所有 UEFI 固件能够执行此格式的代码。当开发人员为原生 UEFI 编写启动装载程序时，就必须按照这种格式编写。这种设计非常简洁直观，也无需进一步解释：对于固件可以执行的代码，固件规范真正定义了其通用格式，这是件好事。</p>
<h1 id="GPT（GUID-分区表）格式"><a href="#GPT（GUID-分区表）格式" class="headerlink" title="GPT（GUID 分区表）格式"></a>GPT（GUID 分区表）格式</h1><p>GUID 分区表格式与 UEFI 规范具有密切联系，而且，它并不特别复杂，无需多加解释。GPT 是 UEFI 规范提供的良好基础架构之一。GPT 仅仅是分区表的一种标准——磁盘起始位置的信息定义了磁盘所包含的分区。相比 MBR/MS-DOS 分区表，这种分区表对分区的定义要好得多，并且 UEFI 规范要求 UEFI 兼容固件必须能识别 GPT（也要求固件能识别 MBR，以保证向后兼容）。所有这些规范都是相当实用的基础架构： UEFI 规范正建立某些功能，固件层上的一切都可依靠固件本身来实现这些功能。</p>
<h1 id="EFI-系统分区"><a href="#EFI-系统分区" class="headerlink" title="EFI 系统分区"></a>EFI 系统分区</h1><p>在修订本文时，我才真正思考 EFI 系统分区的概念，让我有如醍醐灌顶。实际上，“EFI 系统分区”的概念可以解决“奇葩”的 MBR 空间所产生的问题。在磁盘起始位置留出自由空间，用于存放启动装载程序代码，但又不定义其容量，这种设计糟糕透顶。这一点在上文已经讨论过了。EFI 系统分区是 UEFI 用于解决这种问题的解决方案。1</p>
<p>具体的解决方案如下：我们要求固件层能够读取某些特定的文件系统类型。UEFI 规范要求兼容固件必须能读取 FAT 格式的变种（包括 FAT12、FAT16 和 FAT32）。UEFI 规范实际扮演的角色就是编纂整理 FAT 文件系统格式的现有解释，确保在采用 UEFI 时可以使用那些格式，并规定 UEFI 兼容固件必须能够读取那些格式。UEFI 规范针对这方面的具体规定如下：</p>
<p>“可扩展固件接口 (EFI) 支持的文件系统基于 FAT 文件系统。EFI 定义了可以明确记录和测试的具体 FAT 版本。FAT 的唯一定义必须符合 EFI 规范及关联参考文档，对 FAT 唯一定义的实现必须支持 EFI。为区分 EFI 文件系统与纯 FAT，定义了新的分区文件系统类型。”</p>
<p>“EFI 系统分区”是采用 FAT 变种（UEFI 规范定义的变种之一）格式化的任意分区，该分区被赋予特定 GPT 分区类型，以帮助固件识别该分区。此分区的目的如上所述：固件层确实可以读取“普通”磁盘分区中的数据。希望我已明确解释为何这种设计更佳：操作系统可以创建、格式化和挂载分区（采用广泛理解的格式），并将启动装载程序的代码和固件可能需要读取的所有其他内容放到这个分区中，而不用像 MBR 磁盘一样，将启动装载程序的代码写入磁盘的起始位置空间。</p>
<p>刚开始的时候，对我而言，整个 ESP 的设计看起来有点匪夷所思且令人困惑，因此我希望本节可以解释为何 ESP 实际上是非常优秀的设计——真正匪夷所思和令人困惑的设计是 BIOS/MBR。若要从操作系统层写入某些内容，唯一的方法是将这些内容写入磁盘起始位置的某部分（但不知道是多少）空间，而并没有具体规定其中的具体实现。如果回过头再看，这种设计并不明智，且难以理解。</p>
<p>正如我们稍后会强调的那样，UEFI 规范试图采用更直观严格的方法——它很少禁止固件执行其他操作。UEFI 规范并不反对编写固件，用于执行以其他格式写成的代码、读取其他类型的分区表，以及读取用UEFI 变种文件系统（非 FAT）格式化的分区。但是 UEFI 兼容固件必须至少能够实现执行 EFI 可执行文件、读取 GPT 分区表、以及读取 ESP，因此如果你正编写操作系统或其他东西，并且想要在 UEFI 兼容固件上运行的话，你也得遵循 UEFI 规范，这就是 EFI 系统分区的概念非常重要的原因：它允许（至少理论上）将 EFI 可执行文件放在以 UEFI FAT 格式化且 GPT 分区类型正确无误的分区上，另外，系统固件要能够读取该分区。这种机制非常严谨，等价于 BIOS 中的“固件能够执行放置在 MBR 空间中的启动装载程序代码”。</p>
<h1 id="UEFI-规范"><a href="#UEFI-规范" class="headerlink" title="UEFI 规范"></a>UEFI 规范</h1><p>UEFI 规范为我们提供了三大重要基础，这些重要基础是上层架构正常运行的立足之本：</p>
<ul>
<li><p>读取分区表</p>
</li>
<li><p>访问某些特定文件系统中的文件</p>
</li>
<li><p>执行特定格式的代码</p>
</li>
</ul>
<p>相比 BIOS 固件所提供的功能，UEFI 的功能要丰富得多。但是，为了完成固件层可以处理多重目标（而不仅仅是磁盘）启动的愿景，我们需要其他基础：需要建立一种机制，通过这种机制，固件可以查找各种可能的启动目标，并提供相应的配置方法。</p>
<h1 id="UEFI-启动管理器"><a href="#UEFI-启动管理器" class="headerlink" title="UEFI 启动管理器"></a>UEFI 启动管理器</h1><p>UEFI 规范定义了名为 UEFI 启动管理器的一项功能（Linux发行版包含名为efibootmgr 的工具，可用于更改 UEFI 启动管理器的配置）。如果你确实阅读过 UEFI 规范，那么就会发现，UEFI 规范对 UEFI 启动管理器作出了如下规定：</p>
<p>“UEFI 启动管理器是一种固件策略引擎，可通过修改固件架构中定义的全局NVRAM 变量来进行配置。启动管理器将尝试按全局 NVRAM 变量定义的顺序依次加载 UEFI 驱动和 UEFI 应用程序（包括 UEFI 操作系统启动装载程序）。”</p>
<p>好，既然已经明确了这一概念，那我们就继续吧。不，先等等。我来先把那一项规定解释清楚，便于理解。简单来说，你可以把 UEFI 启动管理器视为启动菜单。在 BIOS 固件上，固件层的“启动菜单”（当然）是，启动时连接到计算机的各个磁盘——不多不少。但是对于 UEFI 固件而言，情况有所不同。</p>
<p>UEFI 启动管理器可以进行配置——简言之，你可以向“启动菜单”添加项或者从中删除项。固件也可以（事实上， UEFI 规范也有此要求）根据连接到计算机的磁盘或根据某些固件配置，在此启动菜单中“生成”有效项。你也可以检查启动菜单，确保正确无误。</p>
<p>UEFI 提供了一种非常优秀的机制，可以从上层架构执行此操作：你可以从已启动的操作系统中配置系统启动行为。如果已通过 UEFI 启动 Linux，就可以使用 efibootmgr 工具来完成所有这些操作。Windows 也有相应的工具，但是我对 Windows 下的工具非常不熟悉。我们不妨看一些典型的 efibootmgr 输出，这些是我从 Fedora 论坛转过来的，稍微进行了调整：</p>
<p>[root@system directory]# efibootmgr -v<br>BootCurrent: 0002<br>Timeout: 3 seconds<br>BootOrder: 0003,0002,0000,0004<br>Boot0000<em> CD/DVD Drive  BIOS(3,0,00)<br>Boot0001</em> Hard Drive    HD(2,0,00)<br>Boot0002<em> Fedora        HD(1,800,61800,6d98f360-cb3e-4727-8fed-5ce0c040365d)File(\EFI\fedora\grubx64.efi)<br>Boot0003</em> opensuse      HD(1,800,61800,6d98f360-cb3e-4727-8fed-5ce0c040365d)File(\EFI\opensuse\grubx64.efi)<br>Boot0004* Hard Drive    BIOS(2,0,00)P0: ST1500DM003-9YN16G        .<br>[root@system directory]#</p>
<p>这个示例非常清晰。我们可以从中观察细节。</p>
<p>第一行表示，目前你从“启动菜单”的哪个项进行了启动。第二行非常明显（如果固件的 UEFI 启动管理器显示了类似启动菜单的界面，那么这一行表示继续启动默认项之前的超时）。BootOrder 是列表中启动项的尝试顺序。其余输出显示了实际的启动项。我们稍后会说明每一个启动项具体作用。</p>
<p>如果完全正常启动 UEFI 固件，而不进行任何调整（我们稍后会讨论），UEFI 固件将按照BootOrder 中列出的顺序，尝试从“启动菜单”中的每个“项”进行启动。因此，在这台计算机上，UEFI 固件将尝试启动名为“opensuse”的项，如果启动失败，然后再尝试启动名为“Fedora”的项，然后再是“CD/DVD Drive”，接着是第二项“Hard Drive”。</p>
<h1 id="UEFI原生启动：实际工作原理——启动管理器项"><a href="#UEFI原生启动：实际工作原理——启动管理器项" class="headerlink" title="UEFI原生启动：实际工作原理——启动管理器项"></a>UEFI原生启动：实际工作原理——启动管理器项</h1><p>那么，这些项的实际含义是什么？实际上，UEFI 规范之所以显得复杂，很大程度上是因为其中的不确定因素太多。如果你正在阅读 UEFI 规范，那么先做好心理准备，然后前往 EFI_DEVICE_PATH_PROTOCOL 一节。但是请注意，这个协议是通用的，虽然这个协议不涉及启动过程，但是有其他作用——这实际上就是 UEFI 官方的设备标识方法，这种标识方法可用于启动管理器项以及各种其他用途。出于各种原因，并不是每一种潜在的 EFI 设备都像 UEFI 启动管理器项一样起作用（如果你想从视频适配器启动，很可能不会成功）。但是启动菜单中显然可以包含指向 PXE 服务器（而不是磁盘分区）的项。UEFI 规范进行了多项规定，可以向 UEFI 启动管理器配置中添加除磁盘以外的启动目标。</p>
<p>但是对我们而言，只需要考虑连接到计算机的一般磁盘即可。既然这样，我们来讨论下可能遇到的三种启动项类型。</p>
<h2 id="BIOS-兼容启动项"><a href="#BIOS-兼容启动项" class="headerlink" title="BIOS 兼容启动项"></a>BIOS 兼容启动项</h2><p>在本示例中，Boot0000 和 Boot0004 实际上是 BIOS 兼容模式启动项，而不是原生 UEFI 启动项。这些启动项不是通过外部工具添加到 UEFI 启动管理器配置中的，而是由固件本身生成的——这也是 UEFI 固件实现 BIOS 兼容启动的常见方式，通过生成 UEFI 启动管理器项，可触发指定设备的 BIOS 启动。至于 UEFI 启动管理器如何呈现给用户，这是另一个问题，我们稍后讨论。根据具体固件及其配置，其中有些项可能无法显示。每一项只会具有一个名称（“CD/DVD Drive”、“Hard Drive”），这表示“如果选中此项，那么就以 BIOS 兼容模式启动本磁盘”（其中，对于 Boot0000，“本磁盘”为 3,0,00，对于 Boot0004，“本磁盘”为 2,0,00）。</p>
<h2 id="“回退路径-Fallback-path-”UEFI-原生启动项"><a href="#“回退路径-Fallback-path-”UEFI-原生启动项" class="headerlink" title="“回退路径 (Fallback path)”UEFI 原生启动项"></a>“回退路径 (Fallback path)”UEFI 原生启动项</h2><p>Boot0001 项（我虚构的，实际操作中可能不存在，这里只是为了举例说明）用于通知固件尝试从特定磁盘启动（以 UEFI 模式而不是 BIOS 兼容模式），但是并没有向固件提供其他信息。它没有指定磁盘上的具体启动目标，而只是让固件启动磁盘。</p>
<p>UEFI 规范定义了一种“回退”路径 (Fallback path)，用于启动此类启动管理器项，其工作原理类似于 BIOS 驱动器启动：它会在标准位置查找某些启动装载程序代码。但是其中的细节和 BIOS 不同。</p>
<p>当尝试以这种方式启动时，固件真正执行的操作相当简单。固件会遍历磁盘上的每个 EFI 系统分区（按照磁盘上的分区顺序）。在 ESP 内，固件将查找位于特定位置的具有特定名称的文件。在 x86-64 PC 上，固件会查找文件 \EFI\BOOT\BOOTx64.EFI。固件实际查找的是 \EFI\BOOT\BOOT{计算机类型简称}.EFI，其中，“x64”是 x86-64 PC 的“计算机类型简称”。文件名还有可能是 BOOTIA32.EFI (x86-32)、BOOTIA64.EFI (Itanium)、BOOTARM.EFI（AArch32，即32位ARM）和 BOOTAA64.EFI（AArch64，即64位ARM）。然后，固件将执行找到的第一个有效文件（当然，文件需要符合UEFI规范中定义的可执行格式）。</p>
<p>这种机制的设计目的不在于启动日常使用的操作系统。它的设计目的更像是为了启动可热插拔、与设备无关的介质（如 Live 映像和操作系统介质）。这也是这种机制的常见用途。如果查看 Linux 或其他操作系统的 UEFI 兼容 Live 或安装介质，你会发现其中包含 GPT，以及位于（或靠近）设备起始位置的 FAT 分区，该分区的 GPT 分区类型标识为 EFI 系统分区。在那个分区中，会有一个 \EFI\BOOT 目录，目录中至少包含上述特殊命名的文件之一。当以原生 UEFI 模式启动 Fedora Live 或安装介质时，就会采用这种机制。BOOTx64.EFI（或其他）文件将处理剩余启动过程，从而启动介质上包含的真正操作系统。</p>
<h2 id="完全原生-UEFI-启动项"><a href="#完全原生-UEFI-启动项" class="headerlink" title="完全原生 UEFI 启动项"></a>完全原生 UEFI 启动项</h2><p>Boot0002 和 Boot0003 是存储设备上所安装操作系统的“典型”项。这些项显示了 UEFI 启动机制的全部优势，不仅仅是“从此磁盘启动”，而是“启动此特定磁盘上此特定位置中的这一特定启动装载程序”。</p>
<p>Boot0002 是由原生 UEFI Fedora 安装生成的启动项。Boot0003 是由原生 UEFI OpenSUSE安装生成的启动项。按照字面意思，这些启动项表示“从此分区加载这一文件”。分区指的是 HD(1,800,61800,6d98f360-cb3e-4727-8fed-5ce0c040365d) 这个东西：表示某一特定分区（使用 EFI_DEVICE_PATH_PROTOCOL，我不打算对此进行详细介绍。如果你通过固件界面和 efibootmgr 与启动管理器进行交互，你也不需要知道其中的细节）。文件指的是 (\EFI\opensuse\grubx64.efi) 这个东西：它仅表示“加载所述分区上此位置中的文件”。这里所指的分区基本上始终指的就是充当 EFI 系统分区的那个分区，因此：可以放心地让固件访问 EFI 系统分区。</p>
<p>UEFI 规范提供这一机制，以便操作系统可启动：操作系统将启动装载程序（作用为加载操作系统内核等）安装到 EFI 系统分区中，并使用某一名称（显然，这一名称通常来源于操作系统名称）以及启动装载程序（EFI 可执行格式，用于加载操作系统）的位置向 UEFI 启动管理器配置中添加启动项。</p>
<p>Linux发行版使用 efibootmgr 工具处理 UEFI 启动管理器。进行原生 UEFI 安装时，有关启动装载方面，Linux 发行版实际进行的操作相当简单：它会创建一个 EFI 系统分区（如果不存在此分区），使用相应配置将 EFI 启动装载程序（通常为 grub2-efi，但是也有例外）安装到 EFI 系统分区中的正确路径下，然后调用 efibootmgr 添加相应的 UEFI 启动管理器项（指向其启动装载程序）。如果已存在 EFI 系统分区，大部分发行版会使用现有分区（尽管完全可以创建新的 EFI 系统分区并使用这个新分区）：我们已经提到过，UEFI 是一种宽松规范，只要在逻辑上遵循其设计，那么有多少个 EFI 系统分区都没问题。</p>
<h1 id="配置启动过程（固件-UI）"><a href="#配置启动过程（固件-UI）" class="headerlink" title="配置启动过程（固件 UI）"></a>配置启动过程（固件 UI）</h1><p>上文描述了 UEFI 规范定义的基本机制，用于管理 UEFI 启动过程。固件用户界面可能不会明确遵循这一机制，了解这一点非常重要。不幸的是，UEFI 规范有意未限制启动过程的呈现方式或用户配置启动过程的方式，这表示——由于我们也从事固件工程——每个固件会有不同的实现方法，并且其中某些固件的实现方法较疯狂。</p>
<p>许多固件的启动配置界面较直观。优秀的固件设计至少会显示启动顺序以及其中的各个启动项，允许用户添加/删除项、更改启动顺序或在某次特定启动中忽略原有启动顺序（仅针对那次启动生效，或直接让固件启动特定菜单项，甚至可以选择让固件以 BIOS 兼容模式或 UEFI“回退 (Fallback)”模式“启动这块磁盘”，我的固件就可以这么操作）。此类界面通常可以仅按名称显示完整的原生 UEFI 启动项（例如我们上文提到的 Fedora 和 OpenSUSE 示例）；你需要检查 efibootmgr –v 的输出，以详细了解在调用这些项时，它们具体会尝试并执行哪些操作。</p>
<p>某些固件会尝试对配置进行抽象和简化，最终结果良莠不齐。例如，如果可以选择“启用或禁用”BIOS 兼容模式，固件很有可能会为已连接驱动器的 UEFI 启动管理器配置添加或删除 BIOS 兼容项。如果可以选择“启用或禁用”原生 UEFI 启动，那么在用户“禁用”原生 UEFI 启动时，固件很有可能更改 UEFI 启动管理器配置，从 BootOrder 中删除所有原生UEFI启动项。</p>
<p>请谨记，固件界面中的所有配置选项所执行的操作就是在后台配置 UEFI 启动管理器的行为。如果你能理解以上所有内容，那么当你更改固件界面中的选项时，你会更容易理解其背后的本质。</p>
<p>在 BIOS 中，系统不会始终尝试优先从可移动驱动器（CD、USB）进行启动，然后再从驱动器启动。根据实际情况，结果可能有所不同。有些 BIOS 固件会优先尝试从 CD 启动，然后再尝试从硬盘启动（而不是 USB）。试图安装新的操作系统时，用户已习惯于时常检查 BIOS 配置，以确保启动顺序“正确无误”。</p>
<p>UEFI 也是如此，但是由于 UEFI 启动管理器机制的灵活性/复杂性，这一过程看起来可能显得陌生而可怕。</p>
<p>在系统尝试启动固定启动项之前，如果想要确保系统使用“回退(Fallback)”机制优先从可移动设备启动（例如，在安装 Fedora 时），需要将可移动设备作为固件的默认启动项，或需要相应设置固件。根据具体固件界面，可能发现每个连接的可移动设备都有对应的“菜单项”，你只需要调整启动顺序，把你想要的可移动设备放在首位即可，有时候你也会发现可以直接请求“对此特定磁盘进行 UEFI 恢复启动”，另外你还可能发现固件会尝试将配置进行抽象。我们不知道具体的固件界面是什么样，因此难以编写说明。但是既然你已了解背后的工作原理，那么就可能更容易理解固件用户界面配置的含义。</p>
<h1 id="配置启动过程（通过操作系统）"><a href="#配置启动过程（通过操作系统）" class="headerlink" title="配置启动过程（通过操作系统）"></a>配置启动过程（通过操作系统）</h1><p>如上所述，与 BIOS 机制不同，你可以从操作系统层面配置 UEFI 启动过程。如果你的固件比较令人恶心，你可能需要执行此操作才能达成目的。</p>
<p>你可以使用之前提过的 efibootmgr 工具来添加、删除和修改 UEFI 启动管理器配置中的项，这一工具也具有其他丰富功能。你可以更改启动顺序。你可以更改下次启动时的首要启动项，而不需要使用 BootOrder 列表（如果你或其他某些工具已经进行过配置，efibootmgr –v 的输出将包括 BootNext 项，说明下一次启动将加载的菜单项）。Windows 下也有类似的工具。因此如果你难以从固件界面配置 UEFI 启动，但是你可以启动某种原生 UEFI 操作系统，那么你可以考虑从操作系统（而不是固件 UI）进行启动配置。</p>
<h1 id="结论："><a href="#结论：" class="headerlink" title="结论："></a>结论：</h1><ul>
<li><p>UEFI固件包含某些非常类似于启动菜单的内容。</p>
</li>
<li><p>可以使用 efibootmgr –v 从任何原生 UEFI 启动的 Linux 操作系统中查询 UEFI 启动配置，也可以使用 efibootmgr 更改配置（有关详细信息，请参阅 man 页面）。</p>
</li>
<li>“启动菜单”可以包含表示“以 BIOS 兼容模式启动此磁盘”，“通过回退路径 (Fallback path) 以原生 UEFI 模式启动此磁盘”（将使用上文所述的“寻找 BOOT(某字符串).EFI”方式），或“启动此特定位置（几乎始终为 EFI 系统分区）中的特定 EFI 格式的可执行文件”等含义的项。</li>
<li><p>UEFI 规范尝试一种优秀、简洁的设计，让所有操作系统都将其自身的启动装载程序安装到 EFI 系统分区中，然后在“启动菜单”中添加指向这些启动装载程序的项，同时不得干涉其他目标的启动过程。</p>
</li>
<li><p>你的固件 UI 可以自由实现此机制，虽然具体的实现结果良莠不齐。</p>
</li>
</ul>
<p>在 UEFI 计算机上安装操作系统</p>
<p>我们快速浏览下上文中与在 UEFI 计算机上安装操作系统相关的具体结果。</p>
<p>原生 UEFI 启动和 BIOS 兼容启动</p>
<h2 id="用户有时会忽略以下事项："><a href="#用户有时会忽略以下事项：" class="headerlink" title="用户有时会忽略以下事项："></a>用户有时会忽略以下事项：</h2><ul>
<li><p>如果以“原生 UEFI”模式启动安装介质，安装介质将以原生 UEFI 模式安装操作系统：它将尝试向 EFI 系统分区写入 EFI 格式的启动装载程序，并尝试向 UEFI 启动管理器的“启动菜单”中添加启动项，用于启动该启动装载程序。</p>
</li>
<li><p>如果以“BIOS 兼容”模式启动安装介质，安装介质将以 BIOS 兼容模式安装操作系统：它将尝试向磁盘上的 MBR 空间写入 MBR 类型的启动装载程序。</p>
</li>
</ul>
<p>这适用于（现在暂时忽略其中的无关警告）我接触过的所有操作系统。因此你可能确实想了解，如何在固件层选择以原生 UEFI 模式启动可移动设备，以及如何在固件层选择以 BIOS 兼容模式启动可移动设备，确保在安装时可以随意选择需要使用的模式。</p>
<p>如果以 BIOS 兼容模式启动安装介质，那么你绝对无法成功进行操作系统的原生 UEFI 安装，因为安装程序无法配置 UEFI 启动管理器（除非以原生 UEFI 模式启动安装介质）。</p>
<p>理论上，在以原生 UEFI 模式启动之后，操作系统的安装程序可通过 BIOS 模式安装该操作系统，即，将启动装载程序写入磁盘 MBR，但是大部分安装程序无法执行此操作，这种做法比较可取。</p>
<h2 id="确定启动模式"><a href="#确定启动模式" class="headerlink" title="确定启动模式"></a>确定启动模式</h2><p>有时候，在启动操作系统安装程序之后，你不确定启动模式为原生 UEFI 模式还是 BIOS 兼容模式。别担心。有几种简单方法可以确定启动模式。最简单的方法之一是尝试读取 UEFI 启动管理器。如果你启动了 Linux 安装程序或环境，并且可以运行 shell（例如，在 Fedora 安装程序中是 Ctrl-Alt-F2），请运行 efibootmgr –v。如果你启动的是原生 UEFI 模式，那么就可以看到上文所示的 UEFI启动管理器配置。如果你启动的是 BIOS 兼容模式，那么会看到类似以下内容：</p>
<p>Fatal: Couldn’t open either sysfs or procfs directories for accessing EFI variables.<br>Try ‘modprobe efivars’ as root.</p>
<p>如果启动了其他操作系统，你可以尝试运行该操作系统的内置实用程序，读取 UEFI 启动管理器，并查看是否显示了明确输出或类似错误。或者你可以检查系统日志并搜索“efi”和/或“uefi”，从中可能发现蛛丝马迹。</p>
<h2 id="启用原生-UEFI-启动"><a href="#启用原生-UEFI-启动" class="headerlink" title="启用原生 UEFI 启动"></a>启用原生 UEFI 启动</h2><p>若要启用原生 UEFI 模式的启动，那么操作系统安装介质必须明确符合我们刚刚说明的所有规范：具有 GUID 分区表，和 EFI 系统分区，启动装载程序位于正确的“回退”路径 (Fallback path) 中—\EFI\BOOT\BOOTx64.EFI（其他平台可能会有其他名称）。如果无法以原生 UEFI 模式启动安装介质，并且无法查出原因，那么请检查安装介质是否满足上述条件。显然，当使用 livecd-iso-to-disk 工具将 Fedora 映像写入 USB 存储器时，你必须传递 –efi 参数，才能将存储器配置为可用 UEFI 模式启动。</p>
<h2 id="强制使用-BIOS-兼容启动"><a href="#强制使用-BIOS-兼容启动" class="headerlink" title="强制使用 BIOS 兼容启动"></a>强制使用 BIOS 兼容启动</h2><p>如果你的固件难以通过 BIOS 兼容模式从可移动介质启动，但是你又确实想通过这种方式启动，那么可以使用一些小把戏：完全禁用该介质的原生 UEFI 启动模式。可以通过清除所有 EFI 系统分区来轻松执行此操作（或者，如果使用 livecd-iso-to-disk 从 Fedora 映像创建 USB存储器，那么只需去掉 –efi 参数，存储器就会变为不可通过 UEFI 模式启动）。如果执行完此操作以后，你的固件仍然无法以 BIOS 兼容模式启动介质，那么就去吐槽你的固件供应商吧（如果还没吐槽过）。</p>
<p>磁盘格式（MBR vs. GPT）</p>
<h1 id="其他注意事项如下："><a href="#其他注意事项如下：" class="headerlink" title="其他注意事项如下："></a>其他注意事项如下：</h1><ul>
<li><p>如果想执行“BIOS 兼容”类型的安装，那么需要安装到 MBR 格式的磁盘。</p>
</li>
<li><p>如果想执行原生 UEFI 安装，那么需要安装到 GPT 格式的磁盘。</p>
</li>
</ul>
<p>当然，为了给用户找不自在，许多固件可以通过 BIOS 模式从 GPT 格式的磁盘启动。事实上，从技术层面而言，也要求 UEFI 固件能从 MBR 格式的磁盘以 UEFI 模式启动（虽然无法保证）。但是你应当尽可能避免这种情况。这些注意事项非常重要，因为许多用户都曾深受其害。例如，以原生 UEFI 模式启动操作系统安装程序，然后试图直接安装到 MBR 格式的磁盘是非常不明智的。很有可能失败。多数现代操作系统安装程序将把磁盘自动重新格式化为正确格式（如果你允许安装程序彻底清除磁盘数据），但是，如果你尝试让安装程序“对此 MBR 格式的磁盘执行原生 UEFI 安装，并且不要重新格式化这块磁盘，因为上面有重要数据”，那么就很有可能失败，尽管技术层面而言，UEFI 规范提到了这种配置。具体而言，至少 Windows 和 Fedora 会明确禁止这种配置。</p>
<h2 id="检查磁盘格式"><a href="#检查磁盘格式" class="headerlink" title="检查磁盘格式"></a>检查磁盘格式</h2><p>你可以使用 parted 实用程序检查给定磁盘的格式：</p>
<p>[adamw@adam Downloads]$ sudo parted /dev/sda<br>GNU Parted 3.1<br>Using /dev/sda<br>Welcome to GNU Parted! Type ‘help’ to view a list of commands.<br>(parted) p<br>Model: ATA C300-CTFDDAC128M (scsi)<br>Disk /dev/sda: 128GB<br>Sector size (logical/physical): 512B/512B<br>Partition Table: msdos<br>Disk Flags:</p>
<p>Number  Start  End    Size  Type    File system  Flags<br>1      1049kB  525MB  524MB  primary  ext4        boot<br>2      525MB  128GB  128GB  primary              lvm</p>
<p>(parted)</p>
<p>注意到 Partition table: msdos 那一行了吗？这是一块 MBR/MS-DOS 格式的磁盘。如果是 GPT 格式的磁盘，会显示 gpt。你可以从 parted 中通过执行 mklabel gpt 或 mklabel msdos 将磁盘重新格式化为其他类型分区表。这会破坏磁盘内容。</p>
<p>对于多数操作系统的安装程序而言，如果你采用的磁盘配置会清空目标磁盘的所有内容，那么根据执行的安装类型，安装程序就会自动使用最合适的配置重新格式化磁盘。但是如果你想使用现有磁盘而不格式化，那么你需要检查该磁盘的格式并三思而后行。</p>
<h2 id="执行手动分区时处理-EFI-系统分区"><a href="#执行手动分区时处理-EFI-系统分区" class="headerlink" title="执行手动分区时处理 EFI 系统分区"></a>执行手动分区时处理 EFI 系统分区</h2><p>我只能针对 Fedora 给出权威建议，但是其中的主要内容可能也适用于其他发行版/操作系统。</p>
<p>执行原生 UEFI 安装，并且采用 GPT 格式的磁盘时，或者允许 Fedora 重新格式化磁盘（通过删除所有现有分区）时，如果允许 Fedora 自动处理分区，那么 Fedora 就会自动处理 EFI 系统分区。</p>
<p>但是，如果使用自定义分区，Fedora 会要求指定 EFI 系统分区，以供安装程序使用。如果不执行此步骤，安装程序会报错（错误消息的含义不明）并拒绝启动安装。</p>
<p>因此，如果执行原生 UEFI 安装并使用自定义分区，需要确保类型为“EFI 系统分区”的分区已挂载到 /boot/efi（这是 Fedora 查找 EFI 系统分区的路径）。如果系统上存在现有 EFI 系统分区，那么仅需将其挂载点设置为 /boot/efi 即可。如果还没有 EFI 系统分区，那么请创建一个分区，将其类型设置为 EFI 系统分区，大小至少为 200MB（建议 500MB），然后将其挂载点设置为 /boot/efi。</p>
<h1 id="具体示例"><a href="#具体示例" class="headerlink" title="具体示例"></a>具体示例</h1><p>总结：如果购买了 Windows 8 或更高版本的操作系统，那么你的 Windows 基本上肯定是通过原生 UEFI 安装到 GPT 格式磁盘的。这表示如果你想安装其他操作系统，并与 Windows 共存，那么需要通过原生 UEFI 方式安装操作系统。如果你不喜欢 UEFI，并且想要用回老掉牙的 BIOS，那么恐怕就得清空整个原生 UEFI 的 Windows，而且需要重新将磁盘格式化为 MBR。</p>
<h1 id="缺陷"><a href="#缺陷" class="headerlink" title="缺陷"></a>缺陷</h1><p>上文解释了 UEFI 的启动原理(至少解释得差不多了)。我这种描述方法应该还可以吧？</p>
<p>但是，UEFI 并不完美，也有许多问题。</p>
<p>细心的读者可能已经留意，我曾经提到过，UEFI 规范提供了一种机制。这种说法很严谨，也很重要。由于 UEFI 规范是一种“广泛共识”，因此其主要缺点之一（就特定方面而言）是并未提供具体实现。</p>
<p>如果仔细阅读 UEFI 规范，就会发现 UEFI 规范的基本方式是定义 UEFI 兼容固件必须支持的一系列功能。但是 UEFI 规范并没有严格规定这些功能的具体实现方法。</p>
<p>因此，UEFI 规范只要求系统固件必须遵循其中描述的所有内容，以便满足 UEFI 兼容固件的要求。但是，规范本身未规定操作系统“应该”或“必须”怎么做，并且 UEFI 规范也没有规定固件不得支持（或者不期望支持）的功能。换言之，在制定 UEFI 固件时，需要支持 GPT 格式的磁盘和 FAT 格式的 EFI 系统分区，并且必须以标准格式读取 UEFI 启动管理器项等等——但是也可以随意添加其他未规定的功能。</p>
<p>从 UEFI 规范中不难发现其中的隐喻——UEFI 规范仔细设置了一种良好机制，用于在固件层处理操作系统（或其他启动项）选择。但是 UEFI 规范并不要求一定要这么做，其他广受赞誉的规范也没有类似规定。</p>
<p>因此，在实际使用时，我们可能遇到各种复杂情况。例如，Apple Mac 的 HFS+ 分区中随附了某些启动装载程序。UEFI 规范提到，UEFI 兼容固件必须支持特定 GPT 分区类型的 UEFI FAT 分区（标识为“EFI 系统分区”），但是 UEFI 规范并没有提到固件不能识别其他文件系统类型并从中加载启动装载程序。（此类分区是否应视为“EFI 系统分区”，这很难回答，在此不做探讨。）</p>
<p>要是所有厂商都能按照 UEFI 规范严格使用 EFI 系统分区，那就不会有这么多问题了。但是 Apple 毕竟是 Apple，它的产品设计领先于其他厂商，率先设计出了可以从 HFS+ 分区读取和加载代码的固件，导致现在其他厂商不得不紧随 Apple 的脚步，除非他们不打算支持 Mac。在启动过程设计中，Apple 进行的工作远超出 UEFI 规范的范围，因此，如果你想让其他操作系统以美观的图标或其他形式显示在 Mac 的图形启动菜单上，你所要做的操作将超出 UEFI 规范的建议范围。</p>
<p>还有各种类似的极端状况，使人烦不胜烦，但是我们先不管了。这篇文章够长的了。</p>
<p>另外，就像之前提到过的，UEFI 规范并没有对机制的具体呈现方式进行约束。因此，如果一些软件公司设计的操作系统符合 UEFI 规范，并且可以安装 EFI 启动装载程序，并明确命名 EFI 启动管理器项（例如，Fedora 和 Windows），那么如果要向用户提供某种相对辨识度较高的漂亮界面，让用户可以从中选择启动 Windows 或 Fedora，就得看固件本身设计得怎么样。固件设计得越糟糕，操作系统工程师就越不会遵守 UEFI 规范，他们越可能在固件层上另起炉灶。</p>
<p>说句公道话，我们可以在操作系统层实现更多功能。我们可以用更整洁直观的方式实现 efibootmgr 的所有功能——例如，我们可以采用“无视下一次启动时的启动顺序，直接启动此项”，同时将“重新启动到 Windows”作为选项之一。如果开发人员能够用更直观的方式展现 efibootmgr 的所有功能，那将会非常不错。Windows 8 系统在一定程度上采用了这种方式——例如，用户可以从 Windows 8 设置菜单中将系统重新启动到固件 UI。但是这还不够。</p>
<p>这些实在令人欲哭无泪，因为 UEFI 本来可以更好地进行统一。对于多重启动，BIOS 不提供任何类型的规范或标准，因此完全需要在固件层上处理多重启动。我们（这一行业）已经提出了某种处理多重启动的规范，但是我们从未将其付诸实施，因此最终不了了之。而每种操作系统都采用自己的多重启动方法，大量开发人员也自己写了启动装载程序，试图包揽所有操作系统。而所有操作系统和独立的启动装载程序难以互相兼容。我想说的是，在 UEFI 诞生之前，多重启动的实现方式一团混乱。</p>
<p>如果 UEFI——或者基于 UEFI 的某种规范——要求所有厂商遵循 UEFI 提出的规范，并要求固件提供直观的用户界面，那将会终结现阶段的混乱情况。但是现实不如人意，因此 UEFI 的情况完全可能比 BIOS 更糟糕。如果大量固件没有为 UEFI 启动管理器机制提供良好的 UI，那么操作系统供应商可能放弃 UEFI 启动管理器机制（或选择性地进行支持），转而在 UEFI 中重现 BIOS 多重启动的混乱情况——如此一来，我们就得收拾所有烂摊子，外加 UEFI 启动管理器层的其他影响。在整个 UEFI 启动管理器机制上，用户可能装有多个启动装载程序，互相争抢装载多个操作系统的控制权，而 UEFI 启动管理器机制只会机械地处理各种变量，而无法解决这种混乱情况。</p>
<p>这不是某人灵光闪现的荒唐想法，而是可能实际发生的真实情形。</p>
<p>另外，在这方面产生的 UEFI 缺陷是由一时疏忽引起的——这些缺陷不受委员会控制，也不是某人故意为之的结果。如果你的系统固件很坑爹，无法让你轻松访问 UEFI 启动管理器，那么你的发泄对象不应该是 UEFI 论坛或微软，当然也不是 Fedora 或者我。你应该归咎于系统/主板制造商和他们雇用的傻逼固件开发人员。凡是大脑健全的人，都能看出来，UEFI 规范已经明确说明，为 UEFI 启动管理器提供某种直观的用户界面是非常有益的，所有反人类的固件都是一堆垃圾代码。的确，UEFI 论坛已经意识到固件工程师难以脱离现有约束重新学习新规范，但是，固件工程师最终还是应该与时俱进。</p>
<p>简单来说，“所有固件都是垃圾代码”。这句话通常非常准确。</p>
<h1 id="安全启动-Secure-Boot"><a href="#安全启动-Secure-Boot" class="headerlink" title="安全启动 (Secure Boot)"></a>安全启动 (Secure Boot)</h1><p>我们最后要介绍的，就是安全启动 (Secure Boot)。</p>
<p>安全启动 (Secure Boot) 并不神奇，也不复杂。才怪。安全启动 (Secure Boot) 复杂得要命，但是其理论并不复杂。安全启动 (Secure Boot) 本身也并不邪恶。事实就是如此，你也应当认同这一事实，除非你认为GPG也有恶意。</p>
<p>在 UEFI 规范（2.4A 版本）的第 28 章对安全启动 (Secure Boot) 进行了定义。这种机制事实上非常明智。但是其原理却非常简单。UEFI 规范规定固件可以包含一系列签名，并拒绝运行未签名或签名与固件中包含的签名不一致的 EFI 可执行文件。</p>
<p>就这么简单?当然不是了，这只是一种简单概括。安全问题很复杂，因此才会产生通过安全启动 (Secure Boot) 来实现真正安全启动链的各种方法。mjg59 可以进行详细介绍，或者你可以完整阅读第 28 章。但是其中只涉及了基本概念。</p>
<p>使用公开密钥加密来验证某个文件完整性的方法很难判断其好坏。几乎所有 Linux 发行版都依赖这种加密方法——我们为软件包签名，在尝试安装未使用我们的密钥之一签名的软件包时，软件包管理器将发出警告。这不是我们的错，我也不认为会有人因为以这种方式使用公开密钥加密进行签名而归咎于操作系统本身。从字面上看，安全启动 (Secure Boot) 与这种广泛认可的机制完全相同，只不过安全启动 (Secure Boot) 适用于启动链。由于一撮媒体人找错了槽点，并揪着不放，导致大众受到了广泛误导，认为安全启动 (Secure Boot) 是洪水猛兽。</p>
<p>UEFI 规范中定义的安全启动 (Secure Boot) 并没有对固件所信任的密钥形式及其来源作出规定，我也不打算介绍所有细节，因为过于枯燥乏味，而且本文已经挺长了。但是总的来说，UEFI 规范只对执行启动链的加密验证进行了定义。UEFI 规范甚至没有涉及用于执行这一过程的策略可能产生的问题。这本来并没有错，因为这样可以保证其灵活性，并且 UEFI 规范允许在多个层面配置涉及的所有机制。UEFI 规范中未提及微软，也没有和微软互相勾结。如果你不信，那么你可以阅读 UEFI 规范。我已经提供了所有说明。字面上来说，对于那些反对在固件规范中将启动装载程序加密验证机制作为可选功能的人，我不予置评。</p>
<h2 id="实际使用安全启动-Secure-Boot"><a href="#实际使用安全启动-Secure-Boot" class="headerlink" title="实际使用安全启动 (Secure Boot)"></a>实际使用安全启动 (Secure Boot)</h2><p>有关安全启动 (Secure Boot) 的所有不满并不针对安全启动 (Secure Boot) 机制本身——虽然发出这些不满的人可能不这么认为——而是针对安全启动 (Secure Boot) 在实际操作中的特定实现方式。</p>
<p>我们唯一在意的是，对于预装 Windows 8 或更高版本 Windows 的 PC 而言，安全启动 (Secure Boot) 是默认开启的。</p>
<p>微软将这些称为“Windows 硬件认证要求”。这些要求并不是什么绝密内容，所有人都可以在互联网上阅读。</p>
<p>如果想从微软那里以低廉的价格获得预装 Windows 的批量许可，并在机箱上贴有“微软认证”标签，那么你必须符合这些认证要求。微软的约束力有限：他们不是美国或其他国家/地区的法律制定者，无论其他人怎么想。即使你销售的 PC 不符合这些要求，比尔•盖茨也不会拿你怎么样，前提是你不需要预装廉价的 Windows 副本和那张“微软认证”标签。对于不符合微软许可计划的在售 PC，事实上并不要求如何配置安全启动 (Secure Boot)，甚至根本不需要提供安全启动 (Secure Boot) 功能。具有 UEFI 2.2 或更高版本兼容固件的 PC 必须提供安全启动 (Secure Boot) 功能，但是并没有规定具体的实现方法（包括关闭安全启动 (Secure Boot) 的方法）。</p>
<p>如果你对安全启动 (Secure Boot) 意见很大，那么就别找借口了，马上去读读微软认证要求吧。你可以搜索“Secure Boot”来阅读相关内容。从“System.Fundamentals.Firmware.UEFISecureBoot”一节开始。</p>
<p>你最好读一遍，但是我对其内容进行了总结。</p>
<p>符合微软认证要求的计算机必须满足以下条件：</p>
<ul>
<li><p>默认启用安全启动 (Secure Boot)（服务器除外）</p>
</li>
<li><p>在其信任密钥列表中包含微软的密钥</p>
</li>
<li><p>启用安全启动 (Secure Boot) 时，必须禁用 BIOS 兼容模式（如果没记错的话，UEFI 规范也有此要求）</p>
</li>
<li><p>支持签名黑名单</p>
</li>
</ul>
<p>符合微软认证要求的 x86 计算机还必须满足以下附加条件：</p>
<ul>
<li><p>允许自然人禁用安全启动 (Secure Boot)</p>
</li>
<li><p>允许自然人启用自定义模式，以及修改固件的信任密钥列表</p>
</li>
</ul>
<p>符合微软认证要求的 ARM 计算机还必须满足以下附加条件：</p>
<ul>
<li><p>不允许自然人禁用安全启动 (Secure Boot)</p>
</li>
<li><p>不允许自然人启用自定义模式，以及修改固件的信任密钥列表</p>
</li>
</ul>
<p>是的，你没看错。对于 x86 计算机，微软认证要求明确规定了自然人用户应当能够完全控制安全启动 (Secure Boot)（启用或禁用），或完全控制安全启动 (Secure Boot) 的信任密钥列表。另一个重点是，尽管认证要求规定，信任密钥列表必须包括微软的密钥，但是其中没有规定不允许包括其他密钥。微软认证要求也明确允许系统包含其他任意数量的信任密钥。</p>
<p>这些要求并不完全出于微软的好意，之所以作出这些规定，是因为如果不这么做的话，微软将面临大量诉讼2。真正了解 UEFI 和安全启动 (Secure Boot) 的用户可能不会曲解微软认证要求，这些要求非常清晰明确。这些要求旨在确保认证系统的所有者能完全控制安全启动 (Secure Boot)，事实上这些要求也确实成功确保了这一条件。</p>
<p>如果你有包含 Windows 认证的 x86 系统，但是不允许你禁用安全启动 (Secure Boot)，那么这就直接违反了认证要求，你应该马上投诉。如果市面上存在大量这类系统，那么我们肯定会有麻烦，可能要给那些巨头厂商提起诉讼了。但是目前为止，事实并非如此。在我见过的所有 x86 Windows 认证系统中，其固件都有“禁用安全启动 (Secure Boot)”选项。</p>
<p>对于 ARM 计算机，认证要求显然更变态：其中的规定和 x86 完全相反，不允许禁用安全启动 (Secure Boot)，也不允许系统所有者更改信任密钥。非常糟糕且不合理。这使得微软认证 ARM 系统成为了一个封闭的环境。值得注意的是，其他主要 ARM 平台甚至更糟糕。Apple 在所有 iDevice 上锁定了启动装载程序，而且大部分 Android 设备的启动装载程序也是锁定的。</p>
<p>如果你计划购买微软认证 ARM 设备，请注意这一问题，你将无法控制设备上的启动项。如果你对此反感，那就不要购买这样的设备，也不要购买 iDevice 或启动装载程序处于锁定状态的 Android 设备（你可以购买启动装载程序未锁定或无法锁定的 Android 设备，但是需要事先进行调查研究）。</p>
<p>目前，就 x86 设备本身而言，微软的认证要求实际上明确保障了用户自由启动系统的权利。这是件好事。</p>
<h1 id="建议"><a href="#建议" class="headerlink" title="建议"></a>建议</h1><p>以下内容是我在管理系统启动方面的一般建议，不保证其准确性、可靠性或安全性。</p>
<ul>
<li><p>如果可以的话，每台计算机只安装一个操作系统。如果你需要一个以上操作系统，那就多买几台计算机，或使用虚拟机。这么做的话，事情就简单多了，而且无论你的固件是 BIOS 或 UEFI，或在 UEFI 系统上使用 BIOS 兼容启动，都没什么关系了。你在使用计算机时也会轻松许多。</p>
</li>
<li><p>如果你确实需要在每台计算机上安装多个操作系统，那么请在每块磁盘上至少安装一个操作系统。如果你比较熟悉 BIOS 启动，而且也不需要安全启动 (Secure Boot) 功能，在这种情况下，对于 UEFI 系统，请优先使用 BIOS 兼容启动。这样一来，可能不会有那么多麻烦，也不会造成数据丢失。如果每块磁盘只安装一个操作系统，那么你也可以混合使用原生 UEFI 和 BIOS 兼容模式。</p>
</li>
<li><p>如果你坚持要在每块磁盘上安装多个操作系统，那么请先理解本文所写内容。这么做无异于自作孽，不可活，出了问题可别责怪操作系统供应商。另外，在这种情况下，也不要混用原生 UEFI 和 BIOS 兼容模式，否则就是雪上加霜。</p>
</li>
<li><p>如果你在使用 UEFI 原生启动，并且不打算自己编译内核/内核模块或在 Linux 上使用 NVIDIA/ATI 私有驱动程序，那么最好启用安全启动 (Secure Boot)。这不会有什么副作用，反而可以带来额外的安全性，用以应对某些卑鄙的攻击类型（尽管目前很少被利用）。</p>
</li>
<li><p>如果打算编译内核/内核模块或使用 NVIDIA/ATI 私有驱动程序，那就最好禁用安全启动 (Secure Boot)。或者你可以启用安全启动 (Secure Boot)，然后阅读有关配置信任链和对内核/内核模块签名的说明。但是这一过程至少需要好几天。</p>
</li>
<li><p>不要在 MBR 格式的磁盘上进行原生 UEFI 安装，也不要在 GPT 格式的磁盘上进行 BIOS 兼容安装（如果没记错的话，除非你的磁盘大小大于 2.2TB，因为 MBR 格式无法识别那么大的磁盘。如果想在那么大的磁盘上进行 BIOS 兼容安装，那么你可能会卡在 BIOS+GPT 的组合上。虽然这种组合可以正常运行，但是有点不靠谱，而且会牵涉到臭名昭著的“BIOS Boot 分区”）。</p>
</li>
<li><p>相信 mjg59 及其他权威人士，包括我。</p>
</li>
<li><p>这一整节都是简化过的内容——当启动已安装的操作系统时，无论启动装载程序是否安装在“ESP”上，对固件都没有影响；固件只会读取启动管理器项，然后尝试访问特定分区并执行特定可执行文件，具体请参阅 pjones 的说明。但是一般会使用 ESP 来进行启动过程，因为 UEFI 规范中有相应规定，而且这个分区也很方便，固件可以读取其文件系统。理论上来说，在固件执行可移动介质/回退路径 (Fallback path) 启动时，ESP 将不起作用。</p>
</li>
<li><p>注意，这只是我的个人推断。在整个规范的制定过程中，我都没有参与，也没人告诉我这些内容。但是根据已知事实，明显可以得出这一推断。</p>
</li>
</ul>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[收集整理各高校ACM OJ网站，欢迎补充修正]]></title>
      <url>https://ygcaicn.github.io/%E6%9D%82%E9%A1%B9/acmurl.html</url>
      <content type="html"><![CDATA[<p>搜集的各大高校的ACM网站…</p>
<a id="more"></a>
<h1 id="中国：-China"><a href="#中国：-China" class="headerlink" title="中国：(China)"></a>中国：(China)</h1><h1 id="华东地区："><a href="#华东地区：" class="headerlink" title="华东地区："></a>华东地区：</h1><h2 id="浙江："><a href="#浙江：" class="headerlink" title="浙江："></a>浙江：</h2><p>杭州电子科技大学(HDU)：<a href="http://acm.hdu.edu.cn/" target="_blank" rel="external">http://acm.hdu.edu.cn/</a></p>
<p>浙江大学（ZJU）：<a href="http://acm.zju.edu.cn/" target="_blank" rel="external">http://acm.zju.edu.cn/</a></p>
<p>浙江工业大学（ZJUT）：<a href="http://acm.zjut.edu.cn/" target="_blank" rel="external">http://acm.zjut.edu.cn/</a></p>
<p>浙江师范大学（ZJNU）：<a href="http://acm.zjnu.cn/" target="_blank" rel="external">http://acm.zjnu.cn/</a></p>
<p>浙江工商（ZJGSU）：<a href="http://acm.zjgsu.edu.cn/" target="_blank" rel="external">http://acm.zjgsu.edu.cn/</a></p>
<p>宁波理工（NIT）：<a href="http://acm.nit.net.cn/" target="_blank" rel="external">http://acm.nit.net.cn/</a></p>
<h2 id="上海："><a href="#上海：" class="headerlink" title="上海："></a>上海：</h2><p>华东师范大学（ECNU）：<a href="http://acm.cs.ecnu.edu.cn/" target="_blank" rel="external">http://acm.cs.ecnu.edu.cn/</a></p>
<p>华东理工大学（ECUST）：<a href="http://acm.ecust.edu.cn/" target="_blank" rel="external">http://acm.ecust.edu.cn/</a></p>
<p>同济大学（TJU）：<a href="http://acm.tongji.edu.cn/" target="_blank" rel="external">http://acm.tongji.edu.cn/</a></p>
<h2 id="江苏："><a href="#江苏：" class="headerlink" title="江苏："></a>江苏：</h2><p>中国矿业大学（CUMT）： <a href="http://219.219.62.238" target="_blank" rel="external">http://219.219.62.238</a> (我也不懂为啥连个域名都没有)<br>南京航空航天大学： <a href="http://acm.nuaa.edu.cn/" target="_blank" rel="external">http://acm.nuaa.edu.cn/</a></p>
<h2 id="福建："><a href="#福建：" class="headerlink" title="福建："></a>福建：</h2><p>福州大学（FZU）：<a href="http://acm.fzu.edu.cn/" target="_blank" rel="external">http://acm.fzu.edu.cn/</a></p>
<p>厦门大学（XMU）：<a href="http://acm.xmu.edu.cn/" target="_blank" rel="external">http://acm.xmu.edu.cn/</a></p>
<p>福建师范大学（FJNU）：<a href="http://acm.fjnu.edu.cn/" target="_blank" rel="external">http://acm.fjnu.edu.cn/</a></p>
<h2 id="安徽："><a href="#安徽：" class="headerlink" title="安徽："></a>安徽：</h2><p>中国科技大学（USTC）：<a href="http://acm.ustc.edu.cn/" target="_blank" rel="external">http://acm.ustc.edu.cn/</a></p>
<p>华北地区：</p>
<h2 id="北京："><a href="#北京：" class="headerlink" title="北京："></a>北京：</h2><p>北京交大（BJTU）：<a href="http://acm.bjtu.edu.cn/" target="_blank" rel="external">http://acm.bjtu.edu.cn/</a></p>
<p>北京大学（PKU）：<a href="http://acm.pku.edu.cn/" target="_blank" rel="external">http://acm.pku.edu.cn/</a></p>
<h2 id="天津："><a href="#天津：" class="headerlink" title="天津："></a>天津：</h2><p>南开大学（NAIKAI）：<a href="http://acm.nankai.edu.cn/" target="_blank" rel="external">http://acm.nankai.edu.cn/</a></p>
<p>天津大学（TJU）：<a href="http://acm.tju.edu.cn/toj/" target="_blank" rel="external">http://acm.tju.edu.cn/toj/</a></p>
<h1 id="东北地区："><a href="#东北地区：" class="headerlink" title="东北地区："></a>东北地区：</h1><h2 id="黑龙江："><a href="#黑龙江：" class="headerlink" title="黑龙江："></a>黑龙江：</h2><p>哈尔滨工程大学（HRBEU）：<a href="http://acm.hrbeu.edu.cn/" target="_blank" rel="external">http://acm.hrbeu.edu.cn/</a></p>
<h1 id="华南地区："><a href="#华南地区：" class="headerlink" title="华南地区："></a>华南地区：</h1><h2 id="广东："><a href="#广东：" class="headerlink" title="广东："></a>广东：</h2><h2 id="中山大学（ZSU）：http-acm-zsu-edu-cn"><a href="#中山大学（ZSU）：http-acm-zsu-edu-cn" class="headerlink" title="中山大学（ZSU）：http://acm.zsu.edu.cn/"></a>中山大学（ZSU）：<a href="http://acm.zsu.edu.cn/" target="_blank" rel="external">http://acm.zsu.edu.cn/</a></h2><h1 id="西南地区："><a href="#西南地区：" class="headerlink" title="西南地区："></a>西南地区：</h1><h2 id="四川："><a href="#四川：" class="headerlink" title="四川："></a>四川：</h2><p>西南民大（SWUN）：<a href="http://acm.swun.edu.cn/" target="_blank" rel="external">http://acm.swun.edu.cn/</a></p>
<h1 id="华中地区："><a href="#华中地区：" class="headerlink" title="华中地区："></a>华中地区：</h1><h2 id="湖北："><a href="#湖北：" class="headerlink" title="湖北："></a>湖北：</h2><p>华中科技大学（HUST）：<a href="http://acm.hust.edu.cn/JudgeOnline/" target="_blank" rel="external">http://acm.hust.edu.cn/JudgeOnline/</a></p>
<p>武汉大学（WHU）：<a href="http://acm.whu.edu.cn/" target="_blank" rel="external">http://acm.whu.edu.cn/</a></p>
<h1 id="港澳台地区："><a href="#港澳台地区：" class="headerlink" title="港澳台地区："></a>港澳台地区：</h1><h2 id="香港："><a href="#香港：" class="headerlink" title="香港："></a>香港：</h2><p>香港大学(HKOI)：<a href="http://judge.hkoi.org/" target="_blank" rel="external">http://judge.hkoi.org/</a></p>
<p>俄罗斯：(Russia)</p>
<p>乌拉尔大学（URAL）：<a href="http://acm.timus.ru/" target="_blank" rel="external">http://acm.timus.ru/</a></p>
<p>萨拉托夫大学（SGU）：<a href="http://acm.sgu.ru/" target="_blank" rel="external">http://acm.sgu.ru/</a></p>
<p>(vallod) ：<a href="http://acm.uva.es/" target="_blank" rel="external">http://acm.uva.es/</a></p>
<p>EL Judge(MIPT):：<a href="http://acm.mipt.ru/judge/problems.pl" target="_blank" rel="external">http://acm.mipt.ru/judge/problems.pl</a></p>
<p>西班牙：(Spanish)</p>
<p>瓦拉杜利德大学（UVA）：<a href="http://acm.uva.es/" target="_blank" rel="external">http://acm.uva.es/</a></p>
<h1 id="美国：-America"><a href="#美国：-America" class="headerlink" title="美国：(America)"></a>美国：(America)</h1><p>USACO: <a href="http://train.usaco.org/usacogate" target="_blank" rel="external">http://train.usaco.org/usacogate</a></p>
<p>波兰：(Poland)</p>
<p>SPOJ：<a href="http://www.spoj.pl/" target="_blank" rel="external">http://www.spoj.pl/</a></p>
<p>吉尔吉斯斯坦:：(Kirgizstan)</p>
<p>KRSU: <a href="http://www.olymp.krsu.edu.kg/GeneralProblemset.aspx" target="_blank" rel="external">http://www.olymp.krsu.edu.kg/GeneralProblemset.aspx</a></p>
<h1 id="中国各大高校BBS"><a href="#中国各大高校BBS" class="headerlink" title="中国各大高校BBS:"></a>中国各大高校BBS:</h1><p><a href="http://acm.hdu.edu.cn/forum/（杭电）" target="_blank" rel="external">http://acm.hdu.edu.cn/forum/（杭电）</a></p>
<p><a href="http://www.hdubbs.com/（杭电）" target="_blank" rel="external">http://www.hdubbs.com/（杭电）</a></p>
<p><a href="http://www.freecity.cn/（浙大）" target="_blank" rel="external">http://www.freecity.cn/（浙大）</a></p>
<p><a href="http://bbs.freecity.cn/(浙大" target="_blank" rel="external">http://bbs.freecity.cn/(浙大</a>)</p>
<p>Others：</p>
<p>Topcoder：<a href="http://www.topcoder.com/tc" target="_blank" rel="external">http://www.topcoder.com/tc</a></p>
<p>ACM-ICPC：<a href="http://icpc.baylor.edu/icpc/" target="_blank" rel="external">http://icpc.baylor.edu/icpc/</a></p>
<p>美国信息学奥林匹克竞赛官方网站：<a href="http://www.usaco.org/" target="_blank" rel="external">http://www.usaco.org/</a></p>
<p>全美计算机奥林匹克竞赛：<a href="http://ace.delos.com/usacogate" target="_blank" rel="external">http://ace.delos.com/usacogate</a></p>
<p>信息学初学者之家：<a href="http://oibh.ioiforum.org/" target="_blank" rel="external">http://oibh.ioiforum.org/</a></p>
<p>中国教育曙光网：<a href="http://www.chinaschool.org/aosai/" target="_blank" rel="external">http://www.chinaschool.org/aosai/</a></p>
<p>福建信息学奥林匹克：<a href="http://www.cfcs.com.cn/fjas/index.htm" target="_blank" rel="external">http://www.cfcs.com.cn/fjas/index.htm</a></p>
<p>IOI：<a href="http://olympiads.win.tue.nl/ioi/" target="_blank" rel="external">http://olympiads.win.tue.nl/ioi/</a></p>
<p>高效信息学在线判题系统（VIJOS）：<a href="http://www.vijos.cn/" target="_blank" rel="external">http://www.vijos.cn/</a></p>
<p>ACM的例程和测试数据：<a href="http://www.karrels.org/Ed/ACM/" target="_blank" rel="external">http://www.karrels.org/Ed/ACM/</a></p>
<p>ACM社区：<a href="http://www.608088.com/" target="_blank" rel="external">http://www.608088.com/</a></p>
]]></content>
      
        <categories>
            
            <category> 杂项 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Acm </tag>
            
            <tag> 编程 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[C++练习笔记（持续更新）]]></title>
      <url>https://ygcaicn.github.io/C/cpplianxi.html</url>
      <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>由于近一年来学习嵌入式大多接触的都是纯C语言，直到看到学校搞了一个程序设计大赛，才发现自己的C++的基础遗忘了好多。<br>不过这也是正常的，毕竟三天不练手生，学习其他知识的同时不要忘记基础！！将练习记录写在博客中一来方便以后查阅，而来和大家一起学习！</p>
<p>查了查以前囤下的C++API手册发现是C++98的，这有点让我不开心了，于是上网搜寻了一番，发现没有找到好的本地手册，oschina的手册做的不能再垃圾，连个search都没有。去一些<a href="http://www.cplusplus.com/" target="_blank" rel="external">cpp的权威网站</a>当然是英文的，但是发现不怎么活跃。这怎么能满足我这种完美主义的程序爱好者呢。。。最后搜寻了一番终于找到了满意的手册，不过美中不足的是不能本地化。不过这也没什么这说明网站更新活跃嘛！下面附上链接，欢迎各位<code>Ctrl+D</code>:</p>
<p><a href="http://zh.cppreference.com/w/%E9%A6%96%E9%A1%B5" target="_blank" rel="external">Cpp编程手册</a></p>
<p><a href="http://www.cplusplus.com/reference/" target="_blank" rel="external">cplusplus reference</a></p>
<a id="more"></a>
<p><em>本文程序大多基于C++11特性，除非特别声明！！</em></p>
<h1 id="输入不定量数据，求和"><a href="#输入不定量数据，求和" class="headerlink" title="输入不定量数据，求和"></a>输入不定量数据，求和</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line"><span class="keyword">int</span> sum = <span class="number">0</span>, val = <span class="number">0</span>;</div><div class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"输入一组数据，以Ctrl+Z结束,Enter 计算"</span> &lt;&lt; <span class="built_in">endl</span>;</div><div class="line"><span class="keyword">while</span> (<span class="built_in">cin</span> &gt;&gt; val)</div><div class="line">sum += val;</div><div class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"sum="</span> &lt;&lt;sum&lt;&lt; <span class="built_in">endl</span>;</div><div class="line">system(<span class="string">"pause"</span>);</div><div class="line">  <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="将字符串的小写转换为大写，统计字符串等"><a href="#将字符串的小写转换为大写，统计字符串等" class="headerlink" title="将字符串的小写转换为大写，统计字符串等"></a>将字符串的小写转换为大写，统计字符串等</h1><p>string 引用</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdafx.h"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"cctype"</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line"><span class="built_in">string</span> str;</div><div class="line">getline(<span class="built_in">cin</span>, str);</div><div class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> &amp;c : str)</div><div class="line">&#123;</div><div class="line"><span class="comment">//if(c&gt;='a'&amp;&amp;c&lt;='z')</span></div><div class="line"><span class="keyword">if</span>(<span class="built_in">islower</span>(c))</div><div class="line">&#123;</div><div class="line">c = c - <span class="string">'a'</span> + <span class="string">'A'</span>;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"><span class="built_in">cout</span> &lt;&lt; str&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">system(<span class="string">"pause"</span>);</div><div class="line">  <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="A-B-probles的一道Acm题"><a href="#A-B-probles的一道Acm题" class="headerlink" title="A+B probles的一道Acm题"></a>A+B probles的一道Acm题</h1><pre><code>Description
Calculate a + b
Input
The input will consist of a series of pairs of integers a and b,separated by a space, one pair of integers per line.
Output
For each pair of input integers a and b you should output the sum of a and b in one line,and with one line of output for each line in input.
Sample Input
1 2
3 4

Sample Output
3
7
</code></pre><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdafx.h"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line"><span class="keyword">int</span> a, b;</div><div class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; slove;</div><div class="line"><span class="keyword">int</span> tmp;</div><div class="line"></div><div class="line"><span class="keyword">while</span> (<span class="built_in">cin</span> &gt;&gt; a&amp;&amp;<span class="built_in">cin</span> &gt;&gt; b)</div><div class="line">&#123;</div><div class="line">tmp= (a + b);</div><div class="line">slove.push_back(tmp);</div><div class="line">&#125;</div><div class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> i:slove)</div><div class="line"><span class="built_in">cout</span> &lt;&lt; (<span class="keyword">int</span>)i &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">system(<span class="string">"pause"</span>);</div><div class="line">  <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><del>无奈这么写上传之后直接编译不通过。。。看来acm的系统是不支持C++11特性的。。</del>明天再写C++98的吧。。</p>
<p>看来是我太不了解OJ了，回头好好学习一下OJ的基本输入和输出。下面附上正确的程序：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">int</span> a, b;</div><div class="line">	<span class="keyword">while</span> (<span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b)</div><div class="line">	&#123;</div><div class="line">		<span class="built_in">cout</span> &lt;&lt; a + b &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="char-数组的遍历操作"><a href="#char-数组的遍历操作" class="headerlink" title="char * 数组的遍历操作"></a>char * 数组的遍历操作</h1><blockquote>
<p>输入字符串若满足：首字母大写，后面全为小写返回1，否则返回0。如Hello满足条件</p>
</blockquote>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">fun</span><span class="params">(<span class="keyword">char</span> *str)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">if</span> ((*str)&gt;<span class="string">'A'</span> &amp;&amp; (*str)&lt;<span class="string">'Z'</span>)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">while</span> (*(++str))</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span> ((*str)&lt;<span class="string">'a'</span> || (*str)&gt;<span class="string">'z'</span>)</div><div class="line">			&#123;</div><div class="line">				<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">return</span> <span class="number">1</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<blockquote>
<p>将输入的字符串中的字符全部变为ASCII码表中的下一个字符.</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun</span><span class="params">(<span class="keyword">char</span> *str)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">int</span> i = <span class="number">0</span>;</div><div class="line">		<span class="keyword">while</span> (*(str+i))</div><div class="line">		&#123;</div><div class="line">			(*(str + i))++;</div><div class="line">			i++;</div><div class="line">		&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<blockquote>
<p>寻找两个字符串第一个不同的位置,下标从0开始，如果全部相同返回-1</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">fun</span><span class="params">(<span class="keyword">char</span> *str1, <span class="keyword">char</span> *str2)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">size_t</span> length = <span class="built_in">strlen</span>(str1);</div><div class="line">	<span class="keyword">size_t</span> length2 = <span class="built_in">strlen</span>(str2);</div><div class="line">	length = length &lt; length2 ? length:length2;</div><div class="line">	<span class="keyword">int</span> i;</div><div class="line">	<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; length; i++)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">char</span> c1 = str1[i], c2 = str2[i];</div><div class="line"></div><div class="line">		<span class="keyword">if</span> (c1 &gt; <span class="string">'a'</span>&amp;&amp;c1 &lt; <span class="string">'z'</span>)</div><div class="line">			c1 = c1 - (<span class="string">'a'</span> - <span class="string">'A'</span>);</div><div class="line">		<span class="keyword">if</span> (c2 &gt;= <span class="string">'a'</span>&amp;&amp;c2 &lt;= <span class="string">'z'</span>)</div><div class="line">			c2 = c2 - (<span class="string">'a'</span> - <span class="string">'A'</span>);</div><div class="line">		<span class="keyword">if</span> (c1!=c2)</div><div class="line">			<span class="keyword">break</span>;</div><div class="line">	&#125;</div><div class="line">  <span class="keyword">if</span> (i == length)</div><div class="line">      <span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">	<span class="keyword">return</span> i;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="检索出字符串中出现最多的字符，并返回该字符"><a href="#检索出字符串中出现最多的字符，并返回该字符" class="headerlink" title="检索出字符串中出现最多的字符，并返回该字符"></a>检索出字符串中出现最多的字符，并返回该字符</h1><blockquote>
<p>ASCII共定义了256个代码(从0-255)，从0-32位为控制字符(33个)(ASCII control characters)，从33-127位为可打印字符(95个)(ASCII printable characters)。从0-127是标准的ASCII编码，从128-255是扩展的ASCII编码。</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdafx.h"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="comment">//检索出字符串中出现最多的字符，并返回该字符</span></div><div class="line"><span class="function"><span class="keyword">char</span> <span class="title">fun</span><span class="params">(<span class="keyword">char</span> *str)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">char</span> *tstr = str;</div><div class="line">	<span class="keyword">int</span> tmp[<span class="number">100</span>] = &#123;<span class="number">0</span>&#125;;</div><div class="line">	<span class="keyword">while</span> (*tstr)</div><div class="line">	&#123;</div><div class="line">		<span class="comment">//相对首个可打印字符位置</span></div><div class="line">		tmp[<span class="keyword">int</span>(*tstr)<span class="number">-32</span>]++;</div><div class="line">		tstr++;</div><div class="line">	&#125;</div><div class="line">	<span class="comment">//去除大小写差异</span></div><div class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="string">'A'</span><span class="number">-32</span>;i&lt;=<span class="string">'Z'</span><span class="number">-32</span>; i++)</div><div class="line">	&#123;</div><div class="line">		tmp[i] += tmp[i + <span class="string">'a'</span> - <span class="string">'A'</span>];</div><div class="line">	<span class="comment">//	tmp[i + 'a' - 'A']=tmp[i];</span></div><div class="line">	&#125;</div><div class="line">	<span class="comment">//找到最大的</span></div><div class="line">	<span class="keyword">char</span> maxstr = <span class="number">0</span>;</div><div class="line">	<span class="keyword">int</span> maxnum = <span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">if</span> (tmp[i] &gt; maxnum)</div><div class="line">		&#123;</div><div class="line">			maxnum = tmp[i];</div><div class="line">			maxstr = i;</div><div class="line">		&#125;		</div><div class="line">	&#125;</div><div class="line">	<span class="comment">//判断是否只出现大写或只出现小写</span></div><div class="line">	<span class="comment">//大小写同时出现返回大写</span></div><div class="line">	<span class="keyword">if</span> (tmp[maxstr] &gt; tmp[maxstr + <span class="string">'a'</span> - <span class="string">'A'</span>])</div><div class="line">		maxstr += <span class="number">32</span>;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	maxstr += <span class="number">32</span>+<span class="string">'a'</span> - <span class="string">'A'</span>;</div><div class="line">	<span class="keyword">return</span> maxstr;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">char</span> str[<span class="number">100</span>];</div><div class="line">	<span class="built_in">cin</span> &gt;&gt; str;</div><div class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">"次数最多的是："</span> &lt;&lt; fun(str) &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">	system(<span class="string">"pause"</span>);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>同样的要求，一位大神给出的程序，让我看到了差距：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">char</span> <span class="title">fun</span><span class="params">(<span class="keyword">char</span> *str)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">char</span> o = <span class="string">'a'</span> - <span class="string">'A'</span>;</div><div class="line">	<span class="keyword">char</span> c = <span class="string">'\0'</span>;</div><div class="line">	<span class="comment">//存储ASCII256个字符的的出现次数</span></div><div class="line">	<span class="keyword">int</span> data[<span class="number">256</span>];</div><div class="line">	<span class="built_in">memset</span>(data, <span class="number">0</span>, <span class="number">256</span> * <span class="keyword">sizeof</span>(<span class="keyword">int</span>));</div><div class="line">	<span class="keyword">size_t</span> length = <span class="built_in">strlen</span>(str);</div><div class="line">	<span class="comment">//遍历字符串</span></div><div class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;length; i++)</div><div class="line">	&#123;</div><div class="line">		c = str[i];</div><div class="line">		data[c]++;</div><div class="line">		<span class="keyword">if</span> (c &gt;= <span class="string">'A'</span> &amp;&amp; c &lt;= <span class="string">'Z'</span> &amp;&amp; data[c + o] &gt; <span class="number">0</span>)</div><div class="line">		&#123;</div><div class="line">			data[c + o]++;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span> (c &gt;= <span class="string">'a'</span> &amp;&amp; c &lt;= <span class="string">'z'</span> &amp;&amp; data[c - o] &gt; <span class="number">0</span>)</div><div class="line">		&#123;</div><div class="line">			data[c - o]++;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">//找出最大的</span></div><div class="line">	<span class="keyword">char</span> result = <span class="string">'\0'</span>;</div><div class="line">	<span class="keyword">int</span> maxNumber = <span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;<span class="number">256</span>; i++)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">int</span> number = data[i];</div><div class="line">		<span class="keyword">if</span> (number &gt; maxNumber)</div><div class="line">		&#123;</div><div class="line">			result = i;</div><div class="line">			maxNumber = number;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> result;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="getline获取一行输入，以回车符触发getline结束，且不保存最后的回车符"><a href="#getline获取一行输入，以回车符触发getline结束，且不保存最后的回车符" class="headerlink" title="getline获取一行输入，以回车符触发getline结束，且不保存最后的回车符"></a>getline获取一行输入，以回车符触发getline结束，且不保存最后的回车符</h1><p>空行结束输入，（注意与文件尾EOF结束的区别）</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdafx.h"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">     <span class="built_in">string</span> str;</div><div class="line">     <span class="built_in">vector</span> &lt;<span class="built_in">string</span>&gt; vec;</div><div class="line"><span class="keyword">while</span> (getline(<span class="built_in">cin</span>,str)&amp;&amp;!str.empty())</div><div class="line">&#123;</div><div class="line">     vec.push_back(str);</div><div class="line">&#125;</div><div class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> i : vec)</div><div class="line">&#123;</div><div class="line">     <span class="built_in">cout</span> &lt;&lt; i&lt;&lt; <span class="built_in">endl</span>;</div><div class="line">&#125;</div><div class="line">system(<span class="string">"pause"</span>);</div><div class="line"><span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="vector列表初始化，元素引用"><a href="#vector列表初始化，元素引用" class="headerlink" title="vector列表初始化，元素引用"></a>vector列表初始化，元素引用</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdafx.h"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">	<span class="comment">//构造函数初始化</span></div><div class="line">	<span class="comment">//vector &lt;int&gt; vec(10,1);</span></div><div class="line">	<span class="comment">//列表初始化</span></div><div class="line">	<span class="built_in">vector</span> &lt;<span class="keyword">int</span>&gt; vec = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>&#125;;</div><div class="line"></div><div class="line">	<span class="keyword">for</span> (<span class="keyword">auto</span> &amp;i : vec)</div><div class="line">	&#123;</div><div class="line">		i = i*i;</div><div class="line">		<span class="built_in">cout</span> &lt;&lt; i&lt;&lt; <span class="string">'\t'</span>;</div><div class="line">	&#125;</div><div class="line">	system(<span class="string">"pause"</span>);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="vector常用操作"><a href="#vector常用操作" class="headerlink" title="vector常用操作"></a><a href="http://zh.cppreference.com/w/cpp/container/vector" target="_blank" rel="external">vector常用操作</a></h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">vec.empty()  <span class="comment">//如果vec不含有任何元素返回真，否则返回假</span></div><div class="line">vec.size()  <span class="comment">//返回元素的个数</span></div><div class="line">vec.push_back()  <span class="comment">//添加元素</span></div><div class="line">vex.pop_back()   <span class="comment">//删除元素</span></div><div class="line"><span class="comment">//……更多参见[cppreference](http://zh.cppreference.com/w/cpp/container/vector)</span></div></pre></td></tr></table></figure>
<h1 id="迭代器"><a href="#迭代器" class="headerlink" title="迭代器"></a>迭代器</h1><p>迭代器类似于指针类型，提供了我们间接访问对象的方法。我们利用指针可以访问各种数据类型的内容，采用的是 * 符进行</p>
<h1 id="每天进步一点点"><a href="#每天进步一点点" class="headerlink" title="每天进步一点点!!!"></a>每天进步一点点!!!</h1><h2 id="impossible-is-I’m-possible"><a href="#impossible-is-I’m-possible" class="headerlink" title="impossible is I’m possible!!!"></a><strong>impossible is I’m possible!!!</strong></h2>]]></content>
      
        <categories>
            
            <category> C++ </category>
            
        </categories>
        
        
        <tags>
            
            <tag> C++ </tag>
            
            <tag> 练习 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[lamp服务器搭建-centos7+Apache2.4+MariaDB+php5.6+phpmyadmin]]></title>
      <url>https://ygcaicn.github.io/Linux/lamp-centos7.html</url>
      <content type="html"><![CDATA[<p>centos7 下yum搭建服务器以及数据库的流程。</p>
<a id="more"></a>
<h1 id="安装httpd"><a href="#安装httpd" class="headerlink" title="安装httpd"></a>安装httpd</h1><p>直接yum源安装就可以，centos7的yum源是Apache2.4</p>
<p>  <code>yum install httpd</code></p>
<h2 id="apache常用指令"><a href="#apache常用指令" class="headerlink" title="apache常用指令"></a>apache常用指令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">systemctl start httpd      #启动apache</div><div class="line">systemctl stop httpd       #停止apache</div><div class="line">systemctl restart httpd    #重启apache</div><div class="line">systemctl enable httpd     #设置apache开机启动</div></pre></td></tr></table></figure>
<h1 id="配置两个扩展yum源"><a href="#配置两个扩展yum源" class="headerlink" title="配置两个扩展yum源"></a>配置两个扩展yum源</h1><pre><code>yum install epel-release
rpm -Uvh http://rpms.famillecollet.com/enterprise/remi-release-7.rpm
</code></pre><p>因为centos7默认的yum源php是5.4的，有点跟不上时代的脚步啊。。。所以使用扩展yum源进行安装。</p>
<!--more-->
<h1 id="php相关模块"><a href="#php相关模块" class="headerlink" title="php相关模块"></a>php相关模块</h1><pre><code>yum --enablerepo=remi-php56 install php php-cli php-pear php-pdo php-mysqlnd php-gd php-mbstring php-mcrypt php-xml
</code></pre><h1 id="phpmyadmin"><a href="#phpmyadmin" class="headerlink" title="phpmyadmin"></a>phpmyadmin</h1><pre><code>yum --enablerepo=remi-php56 install phpmyadmin
</code></pre><p>这里指定php的版本是必须的，有很多教程就是这里出了问题。。。</p>
<h2 id="phpmyadmin配置："><a href="#phpmyadmin配置：" class="headerlink" title="phpmyadmin配置："></a>phpmyadmin配置：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">#打开phpmyadmin的配置文件</div><div class="line">vim /etc/httpd/conf.d/phpMyAdmin.conf</div><div class="line"></div><div class="line">将Allow from 127.0.0.1</div><div class="line">Allow from ::1</div><div class="line">改为： Require all granted</div><div class="line">systemctl restart httpd  #重启apache</div></pre></td></tr></table></figure>
<h1 id="安装MariaDB"><a href="#安装MariaDB" class="headerlink" title="安装MariaDB"></a>安装MariaDB</h1><p>CentOS 7.0中，已经使用MariaDB替代了MySQL数据库</p>
<h2 id="安装MariaDB-1"><a href="#安装MariaDB-1" class="headerlink" title="安装MariaDB"></a>安装MariaDB</h2><pre><code>yum install mariadb mariadb-server #询问是否要安装，输入Y即可自动安装,直到安装完成
</code></pre><h2 id="常用MariaDB指令"><a href="#常用MariaDB指令" class="headerlink" title="常用MariaDB指令"></a>常用MariaDB指令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">systemctl start mariadb.service #启动MariaDB</div><div class="line">systemctl stop mariadb.service #停止MariaDB</div><div class="line">systemctl restart mariadb.service #重启MariaDB</div><div class="line">systemctl enable mariadb.service #设置开机启动</div><div class="line">cp /usr/share/mysql/my-huge.cnf /etc/my.cnf #拷贝配置文件（注意：如果/etc目录下面默认有一个my.cnf，直接覆盖即可）</div></pre></td></tr></table></figure>
<h2 id="为root账户设置密码"><a href="#为root账户设置密码" class="headerlink" title="为root账户设置密码"></a>为root账户设置密码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">mysql_secure_installation</div><div class="line">#回车，根据提示输入Y</div><div class="line">#输入2次密码，回车</div><div class="line">#根据提示一路输入Y</div><div class="line">#最后出现：Thanks for using MySQL!</div><div class="line">#MySql密码设置完成，重新启动 MySQL：</div><div class="line">systemctl restart mariadb.service #重启MariaDB</div></pre></td></tr></table></figure>
<h2 id="新建数据库账户"><a href="#新建数据库账户" class="headerlink" title="新建数据库账户"></a>新建数据库账户</h2><h2 id="进入数据库"><a href="#进入数据库" class="headerlink" title="进入数据库"></a>进入数据库</h2><p>mysql -u root -p</p>
<blockquote>
<p>show databases</p>
</blockquote>
<p>最后开启相应的端口就可以外网访问了，关于firewalld的相关操作请参考<a href="http://blog.cumtpn.com/2016/10/22/firewalld-centos7/" target="_blank" rel="external"><em>CentOS7使用firewalld管理防火墙与端口</em></a></p>
<h1 id="每天进步一点点"><a href="#每天进步一点点" class="headerlink" title="每天进步一点点!!!"></a>每天进步一点点!!!</h1><h2 id="impossible-is-I’m-possible"><a href="#impossible-is-I’m-possible" class="headerlink" title="impossible is I’m possible!!!"></a><strong>impossible is I’m possible!!!</strong></h2>]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 服务器 </tag>
            
            <tag> 数据库 </tag>
            
            <tag> LAMP </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CentOS7使用firewalld管理防火墙与端口]]></title>
      <url>https://ygcaicn.github.io/Linux/firewalld-centos7.html</url>
      <content type="html"><![CDATA[<p>CentOS7使用firewalld打开关闭防火墙与端口</p>
<h2 id="1、firewalld的基本使用"><a href="#1、firewalld的基本使用" class="headerlink" title="1、firewalld的基本使用"></a>1、firewalld的基本使用</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">启动： systemctl start firewalld</div><div class="line">查看状态： systemctl status firewalld</div><div class="line">停止： systemctl disable firewalld</div><div class="line">禁用： systemctl stop firewalld</div><div class="line">systemctl list-unit-files | grep firewalld #查看是否加入开机启</div></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="2-systemctl是CentOS7的服务管理工具中主要的工具，它融合之前service和chkconfig的功能于一体。"><a href="#2-systemctl是CentOS7的服务管理工具中主要的工具，它融合之前service和chkconfig的功能于一体。" class="headerlink" title="2.systemctl是CentOS7的服务管理工具中主要的工具，它融合之前service和chkconfig的功能于一体。"></a>2.systemctl是CentOS7的服务管理工具中主要的工具，它融合之前service和chkconfig的功能于一体。</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">启动一个服务：systemctl start firewalld.service</div><div class="line">关闭一个服务：systemctl stop firewalld.service</div><div class="line">重启一个服务：systemctl restart firewalld.service</div><div class="line">显示一个服务的状态：systemctl status firewalld.service</div><div class="line">在开机时启用一个服务：systemctl enable firewalld.service</div><div class="line">在开机时禁用一个服务：systemctl disable firewalld.service</div><div class="line">查看服务是否开机启动：systemctl is-enabled firewalld.service</div><div class="line">查看已启动的服务列表：systemctl list-unit-files|grep enabled</div><div class="line">查看启动失败的服务列表：systemctl --failed</div></pre></td></tr></table></figure>
<h2 id="3-配置firewalld-cmd"><a href="#3-配置firewalld-cmd" class="headerlink" title="3.配置firewalld-cmd"></a>3.配置firewalld-cmd</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">查看版本： firewall-cmd --version</div><div class="line">查看帮助： firewall-cmd --help</div><div class="line">显示状态： firewall-cmd --state</div><div class="line">查看所有打开的端口： firewall-cmd --zone=public --list-ports</div><div class="line">更新防火墙规则： firewall-cmd --reload</div><div class="line">查看区域信息:  firewall-cmd --get-active-zones</div><div class="line">查看指定接口所属区域： firewall-cmd --get-zone-of-interface=eth0</div><div class="line">拒绝所有包：firewall-cmd --panic-on</div><div class="line">取消拒绝状态： firewall-cmd --panic-off</div><div class="line">查看是否拒绝： firewall-cmd --query-panic</div></pre></td></tr></table></figure>
<h2 id="开启一个端口"><a href="#开启一个端口" class="headerlink" title="开启一个端口"></a>开启一个端口</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">在vim /etc/firewalld/zones/public.xml 加入端口或者服务</div><div class="line">    &lt;service name=&quot;http&quot;/&gt;</div><div class="line">    &lt;service name=&quot;https&quot;/&gt;</div><div class="line">    &lt;port protocol=&quot;tcp&quot; port=&quot;8080&quot;/&gt;</div><div class="line"></div><div class="line">    或者</div><div class="line">    firewall-cmd --zone=public --add-port=8080/tcp --permanent</div><div class="line">    firewall-cmd --zone=public --add-service=http  --permanent</div><div class="line">    firewall-cmd --zone=public --add-service=https --permanent</div><div class="line">    命令含义：</div><div class="line">    --zone #作用域</div><div class="line">    --add-port=80/tcp #添加端口，格式为：端口/通讯协议</div><div class="line">    firewall-cmd --zone=public --add-port=8001/tcp</div><div class="line">    --permanent #永久生效，没有此参数重启后失效</div><div class="line"></div><div class="line">    查看是否启用：</div><div class="line">    firewall-cmd --permanent --zone=public --query-port=8080/tcp</div><div class="line">    firewall-cmd --permanent --zone=public --query-service=http</div><div class="line"></div><div class="line">    删除端口或者服务：</div><div class="line">    firewall-cmd --zone=public --remove-service=http  --permanent</div><div class="line">    firewall-cmd --zone=public --remove-port=8080/tcp  --permanent</div><div class="line"></div><div class="line">开启连续多个端口：</div><div class="line">firewall-cmd --zone=public --add-port=1000-1500/tcp --permanent</div></pre></td></tr></table></figure>
<h2 id="每天进步一点点"><a href="#每天进步一点点" class="headerlink" title="每天进步一点点!!!"></a>每天进步一点点!!!</h2><h3 id="impossible-is-I’m-possible"><a href="#impossible-is-I’m-possible" class="headerlink" title="impossible is I’m possible!!!"></a><strong>impossible is I’m possible!!!</strong></h3>]]></content>
      
        <categories>
            
            <category> Linux </category>
            
        </categories>
        
        
        <tags>
            
            <tag> CentOS7 </tag>
            
            <tag> 防火墙 </tag>
            
            <tag> firewall </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[科学上网]]></title>
      <url>https://ygcaicn.github.io/shadowsocks/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91.html</url>
      <content type="html"><![CDATA[<h2 id="持续更新，Shadowsocks下载-2016最新版（影梭，小飞机客户端）"><a href="#持续更新，Shadowsocks下载-2016最新版（影梭，小飞机客户端）" class="headerlink" title="持续更新，Shadowsocks下载 2016最新版（影梭，小飞机客户端）"></a>持续更新，Shadowsocks下载 2016最新版（影梭，小飞机客户端）</h2><p><img src="http://pubcdn.cumtpn.com/Shadowsocks.jpg-blog" alt=""><br>Shadowsocks（中文名称：影梭）是一个安全的socks5代理，用于保护网络流量，是一个开源项目。</p>
<h3 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h3><p>快速（异步I/O和事件驱动程序）<br>安全（所有的流量都经过加密算法加密，支持自定义算法）<br>支持移动客户端（专为移动设备和无线网络优化）<br>跨平台（可运行于包括PC，Mac，手机（Android和iOS）和路由器（OpenWrt）在内的多种平台上）</p>
<h3 id="开源"><a href="#开源" class="headerlink" title="开源"></a>开源</h3><h3 id="易于维护"><a href="#易于维护" class="headerlink" title="易于维护"></a>易于维护</h3><h2 id="按下Ctrl点击-gt-github地址"><a href="#按下Ctrl点击-gt-github地址" class="headerlink" title="按下Ctrl点击-&gt;github地址"></a><a href="https://github.com/shadowsocks" target="_blank" rel="external"><code>按下Ctrl点击-&gt;</code>github地址</a></h2><a id="more"></a>
<h2 id="下载地址："><a href="#下载地址：" class="headerlink" title="下载地址："></a>下载地址：</h2><h3 id="按下Ctrl点击-gt-shadowsocks官网"><a href="#按下Ctrl点击-gt-shadowsocks官网" class="headerlink" title="按下Ctrl点击-&gt;shadowsocks官网"></a><a href="https://shadowsocks.org/" target="_blank" rel="external"><code>按下Ctrl点击-&gt;</code>shadowsocks官网</a></h3><h3 id="本站下载："><a href="#本站下载：" class="headerlink" title="本站下载："></a>本站下载：</h3><p><a href="https://shadowsocks.org/en/download/clients.html" target="_blank" rel="external"><code>按下Ctrl点击-&gt;</code>官方下载地址</a></p>
<p><a href="http://pan.baidu.com/s/1eQhLCTO" target="_blank" rel="external"><code>按下Ctrl点击-&gt;</code>windows百度网盘下载</a> 密码: 7w8y<br>|<a href="http://pubcdn.cumtpn.com/Shadowsocks-3.3.3.zip" target="_blank" rel="external"><code>本地下载</code></a></p>
<p><code>按下Ctrl点击-&gt;</code>Android客户端：<a href=""><code>Google Play</code></a> |<br><a href=""><code>百度网盘</code></a> 密码: | <a href="https://github.com/shadowsocks/shadowsocks-android/releases/download/v3.2.6/shadowsocks-nightly-3.2.6.apk" target="_blank" rel="external"><code>Ggithub</code></a></p>
<p><a href=""><code>按下Ctrl点击-&gt;</code> <code>Linux 客户端:shadowsocks-gui</code></a></p>
<p>[<code>按下Ctrl点击-&gt;</code>] iOS 客户端:shadowsocks-iOS | MobileShadowSocks</p>
<p><strong>本页持续更</strong></p>
]]></content>
      
        <categories>
            
            <category> shadowsocks </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 科学上网 </tag>
            
            <tag> shadowsocks </tag>
            
            <tag> 资源下载 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[免费设置QQ空间音乐记 qzone music]]></title>
      <url>https://ygcaicn.github.io/%E6%9D%82%E9%A1%B9/qzonemusic.html</url>
      <content type="html"><![CDATA[<p>如今有了智能终端，Web QQ空间好像越来越冷落。可是QQ空间的背景音乐仍然是要收费的，奈我何，发现了腾讯还是给屌丝们留了一条活路！！！</p>
<p>按照以下步骤免费获得QQ空间背景音乐。</p>
<h2 id="a-进入QQ空间"><a href="#a-进入QQ空间" class="headerlink" title="a.进入QQ空间"></a>a.进入QQ空间</h2><p><img src="http://pubcdn.cumtpn.com/SDfXASCFDXASCRXF2.png-blog" alt=""></p>
<a id="more"></a>
<h2 id="b-点击背景音乐，进入背景音乐设置的页面"><a href="#b-点击背景音乐，进入背景音乐设置的页面" class="headerlink" title="b.点击背景音乐，进入背景音乐设置的页面"></a>b.点击背景音乐，进入背景音乐设置的页面</h2><p><img src="http://pubcdn.cumtpn.com/DSACSXdSFDGCSDFDASDXSD.png-blog" alt=""></p>
<h2 id="c-然后点击-添加网络音乐"><a href="#c-然后点击-添加网络音乐" class="headerlink" title="c.然后点击-添加网络音乐"></a>c.然后点击-添加网络音乐</h2><p><img src="http://pubcdn.cumtpn.com/afsdxfadx4.png-blog" alt=""></p>
<p>有三个选项要填：</p>
<ul>
<li><p>歌曲链接 最重要的就是这个，这里需要一个MP3外链</p>
<pre><code>http://pubcdn.cumtpn.com/G.E.M.%20%E9%82%93%E7%B4%AB%E6%A3%8B%20-%20%E7%94%BB%20%28Live%20Piano%20Session%20II%29.mp3
</code></pre><p>这是邓紫棋-画的外链</p>
</li>
<li><p>歌曲名  随便填就是啦</p>
</li>
<li>歌手名 随便填就是啦</li>
</ul>
<p>填完点击添加就是了。就是这么简单你会发现你已经添加上啦！</p>
<h2 id="添加成功"><a href="#添加成功" class="headerlink" title="添加成功"></a>添加成功</h2><p>添加成功刷新QQ空间就能直接播放额。这是添加成功的图：</p>
<p><img src="http://pubcdn.cumtpn.com/XFFAXSS3.png-blog" alt=""></p>
<p>不过不幸的是网络上的mp3外链不好找，像什么 <code>百度音乐</code>、<code>QQ音乐</code>、<code>天天动听</code>之类的是不会轻易放出外链的。</p>
<h2 id="下面是我在我的七牛CDN公开的外链："><a href="#下面是我在我的七牛CDN公开的外链：" class="headerlink" title="下面是我在我的七牛CDN公开的外链："></a>下面是我在我的七牛CDN公开的外链：</h2><p>  孙露-怎样遇见你：</p>
<pre><code>http://pubcdn.cumtpn.com/%E5%AD%99%E9%9C%B2%20-%20%E6%80%8E%E6%A0%B7%E9%81%87%E8%A7%81%E4%BD%A0.mp3
</code></pre><p>  邓紫棋-画：</p>
<pre><code>http://pubcdn.cumtpn.com/G.E.M.%20%E9%82%93%E7%B4%AB%E6%A3%8B%20-%20%E7%94%BB%20%28Live%20Piano%20Session%20II%29.mp3
</code></pre><p>有需要的欢迎留言歌曲名+歌手，我免费为大家添加外链！！！</p>
]]></content>
      
        <categories>
            
            <category> 杂项 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> skill </tag>
            
            <tag> 免费 </tag>
            
            <tag> QQ空间 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Markdown Syntax Tutorial]]></title>
      <url>https://ygcaicn.github.io/%E8%AF%AD%E8%A8%80/Syntax.html</url>
      <content type="html"><![CDATA[<h2 id="MarkDown语法简明"><a href="#MarkDown语法简明" class="headerlink" title="MarkDown语法简明"></a>MarkDown语法简明</h2><h1 id="Title"><a href="#Title" class="headerlink" title="Title"></a>Title</h1><p>This is first paragraph!</p>
<p>This is second paragraph!</p>
<p>1.段落的前后必须有一个空行，否则换行符会被替换为空格<br>2.行内要换行的话，必须在上一行的最后空上至少两个空格<br>或者加入<code>&lt;br/&gt;</code><br>实现换行.</p>
<p>3. Markdown 中的多数区块都需要在两个空行之间。</p>
<a id="more"></a>
<h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><h2 id="我在左侧加了空格"><a href="#我在左侧加了空格" class="headerlink" title="我在左侧加了空格"></a>我在左侧加了空格</h2><h1 id="一级标题的另一种写法H1"><a href="#一级标题的另一种写法H1" class="headerlink" title="一级标题的另一种写法H1"></a>一级标题的另一种写法H1</h1><h2 id="二级标题H2"><a href="#二级标题H2" class="headerlink" title="二级标题H2"></a>二级标题H2</h2><blockquote>
<p>引用的内容（blockquote）<br>引用内容<br>引用的嵌套</p>
<blockquote>
<p>内部的quote<br>内部的引用</p>
</blockquote>
</blockquote>
<h2 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h2><p>1.第一条<br>2.第二条<br>4.第三条  </p>
<h2 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h2><ul>
<li>第一条  </li>
</ul>
<ul>
<li>第二条  </li>
</ul>
<ul>
<li>第三条</li>
</ul>
<h2 id="嵌套的列表"><a href="#嵌套的列表" class="headerlink" title="嵌套的列表"></a>嵌套的列表</h2><ol>
<li>第一条  <ul>
<li>第一例  </li>
<li>第二例</li>
</ul>
</li>
<li>第二条  <ol>
<li>第二例</li>
<li>第二例</li>
<li>第三例</li>
</ol>
</li>
<li>第三条  </li>
</ol>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><pre><code>#include&lt;iostream&gt;
#using namespce std;
int main()
{
    cout&lt;&lt;&quot;Hello world&quot;&lt;&lt;end;
    return 0;
}
</code></pre><p>通过前面的Table来写代码块</p>
<p><code>#include&lt;iostream&gt;</code><br><code>#using namespce std;</code><br><code>int main()</code><br><code>{</code><br><code>cout&lt;&lt;&quot;Hello world&quot;&lt;&lt;end;</code><br><code>return 0;</code><br><code>}</code>  </p>
<p>另一种形式</p>
<p>##分割线</p>
<p>两种形式</p>
<hr>
<hr>
<p>都必须单独占一个段落，每个分割符为一个区块，前后必须空行，中间无所谓</p>
<h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h2><p><a href="url">text</a></p>
<ul>
<li>行内式</li>
</ul>
<p>网页链接：</p>
<p>I like <a href="www.google.com">Google</a></p>
<p>This is my <a href="www.cumtpn.com">homepage</a></p>
<p>文件连接：</p>
<p><a href="./calcu.png">icon</a></p>
<p>包含Title的连接</p>
<p><a href="www.google.com" title="Google">google</a></p>
<ul>
<li>参考式</li>
</ul>
<p><a href="www.google.com" title="Google">Google</a></p>
<p><a href="www.baidu.com" title="baidu">Baidu</a></p>
<p><a href="www.github.com" title="GitHub">GitHub</a></p>
<ul>
<li>自动链接</li>
</ul>
<p>www.google.com</p>
<www.google.com>

<p><a href="http://www.google.com" target="_blank" rel="external">http://www.google.com</a></p>
<p><a href="http://www.google.com" target="_blank" rel="external">http://www.google.com</a></p>
<p>name@gmail.com</p>
<p><a href="&#109;&#97;&#105;&#108;&#116;&#111;&#58;&#110;&#97;&#x6d;&#101;&#64;&#x67;&#x6d;&#x61;&#105;&#108;&#46;&#x63;&#x6f;&#x6d;">&#110;&#97;&#x6d;&#101;&#64;&#x67;&#x6d;&#x61;&#105;&#108;&#46;&#x63;&#x6f;&#x6d;</a></p>
<h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p><img src="./calcu.png" alt="icon"></p>
<p>嵌入Html</p>
<p><img src="/img/calcu.png" alt="This is a calcular" title="calcular" width="100" length="100"></p>
<h2 id="强调"><a href="#强调" class="headerlink" title="强调"></a>强调</h2><p><em>斜体强调</em></p>
<p><strong>粗体强调</strong></p>
<p>*<em>粗体强调*</em></p>
<h2 id="字符转义"><a href="#字符转义" class="headerlink" title="字符转义"></a>字符转义</h2><p>例如  </p>
<p>#标题</p>
<p>*<em>粗体强调*</em></p>
<p>##删除线</p>
<p>~删除线删除这些文字~</p>
<p>##多行代码</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>  </span></div><div class="line">&#123;     </div><div class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="string">"Hello world!"</span>&lt;&lt;<span class="built_in">endl</span>;  </div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;   </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="TaskList"><a href="#TaskList" class="headerlink" title="TaskList"></a>TaskList</h2><ul>
<li>[ ] Eat</li>
<li>[x] Code<ul>
<li>[x] HTML</li>
<li>[x] CSS</li>
<li>[x] JavaScript</li>
</ul>
</li>
<li>[ ] Sleep</li>
</ul>
<h2 id="Graphy"><a href="#Graphy" class="headerlink" title="Graphy"></a>Graphy</h2><table>
<thead>
<tr>
<th>name</th>
<th>age</th>
</tr>
</thead>
<tbody>
<tr>
<td>LearnShare</td>
<td>12</td>
</tr>
<tr>
<td>Mike</td>
<td>32</td>
</tr>
</tbody>
</table>
</www.google.com>]]></content>
      
        <categories>
            
            <category> 语言 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> MarkDown </tag>
            
            <tag> github </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[socks5,socks4,http,vpn 代理是怎么回事]]></title>
      <url>https://ygcaicn.github.io/%E7%BD%91%E7%BB%9C/proxy.html</url>
      <content type="html"><![CDATA[<h1 id="一、什么是代理服务器？"><a href="#一、什么是代理服务器？" class="headerlink" title="一、什么是代理服务器？"></a>一、什么是代理服务器？</h1><p> 代理服务器英文全称是Proxy Server，其功能就是代理网络用户去取得网络信息。形象的说：它是网络信息的中转站。 在一般情况下，我们使用网络浏览器直接去连接其他Internet站点取得网络信息时，需送出Request信号来得到回答，然后对方再把信息以bit方式传送回来。代理服务器是介于浏览器和Web服务器之间的一台服务器，有了它之后，浏览器不是直接到Web服务器去取回网页而是向代理服务器发出请求， Request信号会先送到代理服务器，由代理服务器来取回浏览器所需要的信息并传送给你的浏览器。而且，大部分代理服务器都具有缓冲的功能，就好象一个大的Cache，它有很大的存储空间，它不断将新取得数据储存到它本机的存储器上，如果浏览器所请求的数据在它本机的存储器上已经存在而且是最新的，那么它就不重新从Web服务器取数据，而直接将存储器上的数据传送给用户的浏览器，这样就能显著提高浏览速度和效率。 更重要的是：Proxy Server (代理服务器)是 Internet链路级网关所提供的一种重要的安全功能，它的工作主要在开放系统互联 (OSI) 模型的对话层。</p>
<a id="more"></a>
<h1 id="二、代理服务器的分类"><a href="#二、代理服务器的分类" class="headerlink" title="二、代理服务器的分类"></a>二、代理服务器的分类</h1><h2 id="1-HTTP代理按匿名功能分类。"><a href="#1-HTTP代理按匿名功能分类。" class="headerlink" title="1. HTTP代理按匿名功能分类。"></a>1. HTTP代理按匿名功能分类。</h2><p> 是否具有隐藏IP的功能。 非匿名代理：不具有匿名功能。 匿名代理。使用此种代理时，虽然被访问的网站不能知道你的IP地址，但仍然可以知道你在使用代理，有些侦测IP的网页也仍然可以查到你的IP。 高度匿名代理：使用此种代理时，被访问的网站不知道你的IP地址，也不知道你在使用代理进行访问。此种代理的隐藏IP地址的功能最强。</p>
<h2 id="2-按请求信息的安全性分类"><a href="#2-按请求信息的安全性分类" class="headerlink" title="2. 按请求信息的安全性分类"></a>2. 按请求信息的安全性分类</h2><ul>
<li>全匿名代理：不改变你的request fields（报文），使服务器端看来就像有个真正的客户浏览器在访问它。当然，你的真实IP是隐藏起来的。服务器的网管不会认为你使用了代理。 </li>
<li>普通匿名代理：能隐藏你的真实IP，但会更改你的request fields，有可能会被认为使用了代理，但仅仅是可能，一般说来是没问题的。不过不要受它的名字的误导，其安全性可能比全匿名代理更高，有的代理会剥离你的部分信息（就好比防火墙的stealth mode），使服务器端探测不到你的操作系统版本和浏览器版本。 </li>
<li>elite代理：匿名隐藏性更高，可隐藏系统及浏览器资料信息等。此种代理安全性特强。 </li>
<li>透明代理（简单代理）：透明代理的意思是客户端根本不需要知道有代理服务器的存在，它改编你的request fields（报文），并会传送真实IP。</li>
<li>注意，加密的透明代理则是属于匿名代理，意思是不用设置使用代理了，例如Garden 2程序。</li>
</ul>
<h2 id="3-按代理服务器的用途分类"><a href="#3-按代理服务器的用途分类" class="headerlink" title="3. 按代理服务器的用途分类"></a>3. 按代理服务器的用途分类</h2><h3 id="1-Http代理："><a href="#1-Http代理：" class="headerlink" title="1. Http代理："></a>1. Http代理：</h3><p>代理客户机的http访问，主要代理浏览器访问网页，它的端口一般为80、8080、3128等。</p>
<h3 id="2-SSL代理"><a href="#2-SSL代理" class="headerlink" title="2. SSL代理:"></a>2. SSL代理:</h3><p>支持最高128位加密强度的http代理，可以作为访问加密网站的代理。加密网站是指以<a href="https://开始的网站。ssl的标" target="_blank" rel="external">https://开始的网站。ssl的标</a>         准端口为443。</p>
<h3 id="3-HTTP-CONNECT代理："><a href="#3-HTTP-CONNECT代理：" class="headerlink" title="3. HTTP CONNECT代理："></a>3. HTTP CONNECT代理：</h3><p>允许用户建立TCP连接到任何端口的代理服务器，这种代理不仅可用于HTTP，还包括FTP、IRC、         RM流服务等。</p>
<h3 id="4-FTP代理："><a href="#4-FTP代理：" class="headerlink" title="4. FTP代理："></a>4. FTP代理：</h3><p>代理客户机上的ftp软件访问ftp服务器，其端口一般为21、2121。</p>
<h3 id="5-POP3代理："><a href="#5-POP3代理：" class="headerlink" title="5. POP3代理："></a>5. POP3代理：</h3><p>代理客户机上的邮件软件用pop3方式收邮件，其端口一般为110。</p>
<h3 id="6-Telnet代理："><a href="#6-Telnet代理：" class="headerlink" title="6. Telnet代理："></a>6. Telnet代理：</h3><p>能够代理通信机的telnet，用于远程控制，入侵时经常使用。其端口一般为23。</p>
<h3 id="7-Socks代理："><a href="#7-Socks代理：" class="headerlink" title="7. Socks代理："></a>7. Socks代理：</h3><p>是全能代理，就像有很多跳线的转接板，它只是简单地将一端的系统连接到另外一端。支持多种协议，包括http、ftp请求及其它类型的请求。它分socks 4 和socks 5两种类型，socks 4只支持TCP协议而socks 5支持TCP/UDP协议，还支持各种身份验证机制等协议。其标准端口为1080。 socks代理相应的采用socks协议的代理服务器就是SOCKS服务器，是一种通用的代理服务器。Socks是个电路级的底层网关，是 DavidKoblas在1990年开发的，此后就一直作为Internet RFC标准的开放标准。Socks不要求应用程序遵循特定的操作系统平台，Socks 代理与应用层代理、 HTTP 层代理不同，Socks代理只是简单地传递数据包，而不必关心是何种应用协议（比如FTP、HTTP和NNTP请求）。所以，Socks代理比其他应用层代理要快得多。它通常绑定在代理服务器的1080端口上。如果您在企业网或校园网上，需要透过防火墙或通过代理服务器访问Internet就可能需要使用 SOCKS。一般情况下，对于拨号上网用户都不需要使用它。注意，浏览网页时常用的代理服务器通常是专门的http代理，它和SOCKS是不同的。因此，您能浏览网页不等于您一定可以通过SOCKS访问Internet。常用的防火墙，或代理软件都支持SOCKS，但需要其管理员打开这一功能。如果您不确信您是否需要SOCKS或是否有SOCKS可用，请与您的网络管理员联系。</p>
<hr>
<blockquote>
<p>为了使用socks，您需要了解一下内容:    </p>
</blockquote>
<ul>
<li>SOCKS服务器的IP地址</li>
<li>SOCKS服务所在的端口</li>
<li>这个SOCKS服务是否需要用户认证？如果需要，您要向您的网络管理员申请一个用户和口令 知道了上述信息，您就可以把这些信息填入“网络配置”中，或者在第一次登记时填入，您就可以使用socks代理了。 在实际应用中SOCKS代理可以用作为：电子邮件、新闻组软件、网络传呼ICQ、网络聊天MIRC和使用代理服务器上联众打游戏等等各种游戏应用软件当中。</li>
</ul>
<hr>
<h3 id="8-TUNNEL代理："><a href="#8-TUNNEL代理：" class="headerlink" title="8. TUNNEL代理："></a>8. TUNNEL代理：</h3><p>经HTTPTunnet程序转换的数据包封装成http请求（Request）来穿透防火墙，允许利用HTTP服务器做任何TCP可以做的事情，功能相当于Socks5。</p>
<h3 id="9-文献代理："><a href="#9-文献代理：" class="headerlink" title="9. 文献代理："></a>9. 文献代理：</h3><p>可以用来查询数据库的代理，通过这些代理，可以获得互联网的相关科研学术的数据库资源，例如查询Sciencedirect网站（简称SD）、Academic Press、IEEE，SPRINGER等数据库。</p>
<h3 id="10-教育网代理："><a href="#10-教育网代理：" class="headerlink" title="10. 教育网代理："></a>10. 教育网代理：</h3><p>指学术教育机构局域网通过特定的代理服务器可使无出国权限或无访问某IP段权限的计算机访问相关资源。 </p>
<h3 id="11-跳板代理："><a href="#11-跳板代理：" class="headerlink" title="11. 跳板代理："></a>11. 跳板代理：</h3><p>应用于跳板程序，可以看作一种具有动态加密的特殊socks5代理，，也可直接用于PSD软件。其端口一般为1813。</p>
<h3 id="12-Ssso代理："><a href="#12-Ssso代理：" class="headerlink" title="12. Ssso代理："></a>12. Ssso代理：</h3><p>代理客户机上的ssso程序访问远程网站，具有SSL加密强度的超级代理，支持socks。</p>
<h3 id="13-Flat代理："><a href="#13-Flat代理：" class="headerlink" title="13. Flat代理："></a>13. Flat代理：</h3><p>代理客户机上的flatsurfer程序访问远程网站，具有高强度加密数据流的特殊代理，支持socks，最大可设置三次级联，可以设置穿越代理。其端口一般为6700。</p>
<h3 id="14-SoftE代理："><a href="#14-SoftE代理：" class="headerlink" title="14. SoftE代理："></a>14. SoftE代理：</h3><p>代理客户机上的SoftEther程序访问远程网站，应用虚拟集线器HUB和虚拟网卡技术，具备VPN功能及多种认证方式的代理，符合https协议。</p>
<h1 id="三、代理服务器的主要功能-代理服务器一般来讲，对于普通的网民的作用有以下几个（撇开一些高深的用处不谈，因为未必会用到）："><a href="#三、代理服务器的主要功能-代理服务器一般来讲，对于普通的网民的作用有以下几个（撇开一些高深的用处不谈，因为未必会用到）：" class="headerlink" title="三、代理服务器的主要功能 代理服务器一般来讲，对于普通的网民的作用有以下几个（撇开一些高深的用处不谈，因为未必会用到）："></a>三、代理服务器的主要功能 代理服务器一般来讲，对于普通的网民的作用有以下几个（撇开一些高深的用处不谈，因为未必会用到）：</h1><ol>
<li><p>连接Internet与Intranet 充当firewall（防火墙）：因为所有内部网的用户通过代理服务器访问外界时，只映射为一个IP地址，所以外界不能直接访问到内部网；同时可以设置 IP地址过滤，限制内部网对外部的访问权限；另外，两个没有互联的内部网，也可以通过第三方的代理服务器进行互联来交换信息。</p>
</li>
<li><p>节省IP开销：如前面所讲，所有用户对外只占用一个IP，所以不必租用过多的IP地址，降低网络的维护成本。这样，局域局内没有与外网相连的众多机器就可以通过内网的一台代理服务器连接到外网，大大减少费用。当然也有它不利的一面，如许多网络黑客通过这种方法隐藏自己的真实IP地址，而逃过监视。</p>
</li>
<li><p>通过它来加快我们浏览某些网站的速度：有时候我们访问一些国外或者港台网站，速度慢得像蜗牛一样，但只要你正确的选用代理服务器，速度就可以得到提升，有时候这些速度的提升可是很明显的哦！本身带宽较小，通过带宽较大的proxy与目标主机连接。而且通常代理服务器都设置一个较大的硬盘缓冲区（可能高达几个GB或更大），当有外界的信息通过时，同时也将其保存到缓冲区中，当其他用户再访问相同的信息时，则直接由缓冲区中取出信息，传给用户，从而达到提高访问速度的目的。</p>
</li>
</ol>
]]></content>
      
        <categories>
            
            <category> 网络 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 代理 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hexo搭建个人博客及NexT主题配置与优化]]></title>
      <url>https://ygcaicn.github.io/%E6%9D%82%E9%A1%B9/hexo-blog.html</url>
      <content type="html"><![CDATA[<a id="more"></a>
<h1 id="命令行帮助"><a href="#命令行帮助" class="headerlink" title="命令行帮助"></a>命令行帮助</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">D:\Github\blog-hexo&gt;hexo -help</div><div class="line">Usage: hexo &lt;command&gt;</div><div class="line"></div><div class="line">Commands:</div><div class="line">  clean     Removed generated files and cache.</div><div class="line">  config    Get or set configurations.</div><div class="line">  deploy    Deploy your website.</div><div class="line">  generate  Generate static files.</div><div class="line">  help      Get help on a command.</div><div class="line">  init      Create a new Hexo folder.</div><div class="line">  list      List the information of the site</div><div class="line">  migrate   Migrate your site from other system to Hexo.</div><div class="line">  new       Create a new post.</div><div class="line">  publish   Moves a draft post from _drafts to _posts folder.</div><div class="line">  render    Render files with renderer plugins.</div><div class="line">  server    Start the server.</div><div class="line">  version   Display version information.</div><div class="line"></div><div class="line">Global Options:</div><div class="line">  --config  Specify config file instead of using _config.yml</div><div class="line">  --cwd     Specify the CWD</div><div class="line">  --debug   Display all verbose messages in the terminal</div><div class="line">  --draft   Display draft posts</div><div class="line">  --safe    Disable all plugins and scripts</div><div class="line">  --silent  Hide output on console</div><div class="line"></div><div class="line">For more help, you can use &apos;hexo help [command]&apos; for the detailed information</div><div class="line">or you can check the docs: http://hexo.io/docs/</div></pre></td></tr></table></figure>
<ul>
<li><h2 id="常用命令："><a href="#常用命令：" class="headerlink" title="常用命令："></a>常用命令：</h2><pre><code>hexo help #查看帮助
hexo init #初始化一个目录
hexo new &quot;postName&quot; #新建文章
hexo new page &quot;pageName&quot; #新建页面
hexo generate #生成网页，可以在 public 目录查看整个网站的文件
hexo server #本地预览，&apos;Ctrl+C&apos;关闭
hexo deploy #部署.deploy目录
hexo clean #清除缓存，强烈建议每次执行命令前先清理缓存，每次部署前先删除 .deploy 文件夹

简写：
hexo n == hexo new
hexo g == hexo generate
hexo s == hexo server
hexo d == hexo deploy
</code></pre></li>
</ul>
<p>直接在命令行中操作出现一下错误：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">D:\Github\blog-hexo&gt;hexo d</div><div class="line">INFO  Deploying: git</div><div class="line">INFO  Clearing .deploy_git folder...</div><div class="line">INFO  Copying files from public folder...</div><div class="line">&apos;git&apos; �����ڲ����ⲿ���Ҳ���ǿ����еĳ���</div><div class="line">�������ļ�</div><div class="line">FATAL Something&apos;s wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.html</div><div class="line">Error: spawn git ENOENT</div><div class="line">    at notFoundError (D:\Github\blog-hexo\node_modules\hexo-deployer-git\node_modules\hexo-util\node_modules\cross-spawn\lib\enoent.js:11:11)</div><div class="line">    at verifyENOENT (D:\Github\blog-hexo\node_modules\hexo-deployer-git\node_modules\hexo-util\node_modules\cross-spawn\lib\enoent.js:46:16)</div><div class="line">    at ChildProcess.cp.emit (D:\Github\blog-hexo\node_modules\hexo-deployer-git\node_modules\hexo-util\node_modules\cross-spawn\lib\enoent.js:33:19)</div><div class="line">    at Process.ChildProcess._handle.onexit (internal/child_process.js:200:12)</div><div class="line">FATAL spawn git ENOENT</div><div class="line">Error: spawn git ENOENT</div><div class="line">    at notFoundError (D:\Github\blog-hexo\node_modules\hexo-deployer-git\node_modules\hexo-util\node_modules\cross-spawn\lib\enoent.js:11:11)</div><div class="line">    at verifyENOENT (D:\Github\blog-hexo\node_modules\hexo-deployer-git\node_modules\hexo-util\node_modules\cross-spawn\lib\enoent.js:46:16)</div><div class="line">    at ChildProcess.cp.emit (D:\Github\blog-hexo\node_modules\hexo-deployer-git\node_modules\hexo-util\node_modules\cross-spawn\lib\enoent.js:33:19)</div><div class="line">    at Process.ChildProcess._handle.onexit (internal/child_process.js:200:12)</div></pre></td></tr></table></figure></p>
<p>原因是：git的执行目录没有加入系统环境变量。解决方案：1.将git加入环境变量Path中。2.直接在git shell中进行操作。我更习惯于方式2。</p>
<p>环境搭建好以后，常用到的就是增加新的博客然后提交git。以下操作均在git shell中操作</p>
<p>操作目录：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">YGC@YGC  /d/Github</div><div class="line">$ cd blog-hexo/</div><div class="line"></div><div class="line">YGC@YGC  /d/Github/blog-hexo</div><div class="line">$ pwd</div><div class="line">/d/Github/blog-hexo</div><div class="line"></div><div class="line">YGC@YGC  /d/Github/blog-hexo</div><div class="line">$ ls</div><div class="line">_config.yml  node_modules/  public/    scaffolds/  themes/</div><div class="line">db.json      package.json   readme.md  source/     upload.bat</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">hexo n &quot;Linux基础&quot;</div><div class="line">hexo clean</div><div class="line">hexo s -p 5500</div><div class="line">hexo d -g</div></pre></td></tr></table></figure>
<ul>
<li><h2 id="Error-message-“Filename-too-long”"><a href="#Error-message-“Filename-too-long”" class="headerlink" title="Error message “Filename too long”"></a>Error message “Filename too long”</h2><pre><code>git config --system core.longpaths true
</code></pre></li>
</ul>
<!--more-->
]]></content>
      
        <categories>
            
            <category> 杂项 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> github </tag>
            
            <tag> hexo </tag>
            
            <tag> 博客 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[GitHub入门记 Go Git!!!]]></title>
      <url>https://ygcaicn.github.io/%E5%BB%BA%E7%AB%99/git.html</url>
      <content type="html"><![CDATA[<h1 id="git-install-and-config"><a href="#git-install-and-config" class="headerlink" title="git install and config"></a>git install and config</h1><ul>
<li><p>install Linux:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">shell 界面输入 ``sudo  apt-get install git-core`` 回车输入密码</div></pre></td></tr></table></figure>
</li>
<li><p>Windows：下载</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[git-for-windows](https://github.com/git-for-windows/git/releases/tag/v2.6.3.windows.1)</div><div class="line"></div><div class="line">[github-windows](https://github-windows.s3.amazonaws.com/GitHubSetup.exe)</div><div class="line"></div><div class="line">安装就不用说了，上面两个的区别自己去琢磨吧！</div></pre></td></tr></table></figure>
</li>
<li><p>Mac：terminal : brew install git</p>
</li>
</ul>
<p>完成上面的步骤就算安装好环境了，你离git已经很近了，下面是怎么配置。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">#配置全局用户名和邮箱</div><div class="line">#Linux: shell ，Windows: Git Bash ，Mac:terminal 命令如下：</div><div class="line">git config --global user.name &quot;yourname&quot;</div><div class="line">git config --global user.email &quot;Youremail@gmail</div><div class="line"></div><div class="line">#查看是否配置成功：</div><div class="line">git config --global user.name</div><div class="line">git config --global user.email</div></pre></td></tr></table></figure>
<a id="more"></a>
<h1 id="creat-local-repository-connect-remote"><a href="#creat-local-repository-connect-remote" class="headerlink" title="creat local repository connect remote"></a>creat local repository connect remote</h1><p>首先你要在本地创建一个仓库，也就是repository（creat a local repository）：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">#cd 到你要建仓库的文件夹，建的仓库会在该文件夹下生成一个和仓库同名的文件夹</div><div class="line">#所以你不必自己建立一个和仓库同名的文件夹</div><div class="line">#假如你的仓库都要放在D:/GitHub/下</div><div class="line">cd D:/GitHub</div><div class="line">git init mygit</div></pre></td></tr></table></figure></p>
<p>就是这么简单仓库就建好了，你会发现在<code>D:/GitHub</code>下生成了一个mygit文件夹，同时文件夹内有一个<code>.git</code>隐藏文件。那么现在<code>D:/GitHub/mygit/</code>就是你的本地仓库了。如果你不想让你的代码发布到网络的话，在这里你完全可以使用git的所有功能。不过我们要做的还是想要他发布到网上，那就是GitHub了。</p>
<h1 id="建立一个远程仓库（creat-a-remote-repository）"><a href="#建立一个远程仓库（creat-a-remote-repository）" class="headerlink" title="建立一个远程仓库（creat a remote repository）"></a>建立一个远程仓库（creat a remote repository）</h1><p>在<a href="http://git.hub.com" target="_blank" rel="external">git.hub.com</a>创建一个新的仓库，一定要是空的。当然你要先登录你的帐号，如果连账号都搞不定我想你可以<code>Ctrl+W</code>了。当然了你可以<a href="https://www.baidu.com/s?ie=utf-8&amp;f=8&amp;rsv_bp=0&amp;rsv_idx=1&amp;tn=baidu&amp;wd=github%20%E6%B3%A8%E5%86%8C&amp;rsv_pq=91be8521000285f6&amp;rsv_t=897aSDBktemvsQZDFO9grrqOtZxbYL0XvZH6kedqhDzayC9fY%2F73YTwP7VY&amp;rqlang=cn&amp;rsv_enter=1&amp;rsv_sug3=14&amp;rsv_sug1=4&amp;rsv_sug7=100" target="_blank" rel="external">百度–</a>。</p>
<p><img src="/img/markdown-img-paste-20161016161851265.png" alt=""><br><img src="/img/markdown-img-paste-20161016162035764.png" alt=""></p>
<p>完成以后你的远程仓库也就建好了。不过你还需要将刚才建立的本地仓库与远程的仓库建立连接。那么你就需要你的远程仓库地址</p>
<p><img src="/img/markdown-img-paste-20161016162352701.png" alt=""><br>连接支持HTTPs和SSH两种协议，推荐使用ＳＳＨ连接。</p>
<p>我的连接是<a href="&#x6d;&#97;&#105;&#108;&#116;&#111;&#58;&#x67;&#105;&#x74;&#x40;&#x67;&#105;&#x74;&#x68;&#117;&#98;&#46;&#99;&#111;&#x6d;&#58;&#121;&#x67;&#99;&#97;&#105;&#99;&#110;&#x2f;&#109;&#121;&#103;&#x69;&#x74;&#x2e;&#103;&#105;&#116;">&#x67;&#105;&#x74;&#x40;&#x67;&#105;&#x74;&#x68;&#117;&#98;&#46;&#99;&#111;&#x6d;&#58;&#121;&#x67;&#99;&#97;&#105;&#99;&#110;&#x2f;&#109;&#121;&#103;&#x69;&#x74;&#x2e;&#103;&#105;&#116;</a>, （这用的是SSH连接地址）</p>
<h1 id="本地仓库与远程仓库连接-connect-a-remote-repository"><a href="#本地仓库与远程仓库连接-connect-a-remote-repository" class="headerlink" title="本地仓库与远程仓库连接( connect a remote repository )"></a>本地仓库与远程仓库连接( connect a remote repository )</h1><pre><code>#打开git shell
cd D:/github/mygit
git remote add origin git@github.com:ygcaicn/mygit.git
</code></pre><blockquote>
<h1 id="Quick-setup-—-if-you’ve-done-this-kind-of-thing-before"><a href="#Quick-setup-—-if-you’ve-done-this-kind-of-thing-before" class="headerlink" title="Quick setup — if you’ve done this kind of thing before"></a>Quick setup — if you’ve done this kind of thing before</h1><h2 id="…or-create-a-new-repository-on-the-command-line"><a href="#…or-create-a-new-repository-on-the-command-line" class="headerlink" title="…or create a new repository on the command line"></a>…or create a new repository on the command line</h2><pre><code>echo &quot;# test&quot; &gt;&gt; README.md
 git init
 git add README.md
 git commit -m &quot;first commit&quot;
 git remote add origin git@github.com:ygcaicn/test.git
 git push -u origin master
</code></pre><h2 id="…or-push-an-existing-repository-from-the-command-line"><a href="#…or-push-an-existing-repository-from-the-command-line" class="headerlink" title="…or push an existing repository from the command line"></a>…or push an existing repository from the command line</h2><p>   git remote add origin</p>
<pre><code>git@github.com:ygcaicn/test.git
 git push -u origin master
</code></pre><h2 id="…or-import-code-from-another-repository"><a href="#…or-import-code-from-another-repository" class="headerlink" title="…or import code from another repository"></a>…or import code from another repository</h2><p>You can initialize this repository with code from a Subversion, Mercurial, or TFS project.</p>
</blockquote>
<p>上面是建立完仓库官方给出的Quick setup.</p>
<h2 id="上传本地仓库-Update"><a href="#上传本地仓库-Update" class="headerlink" title="上传本地仓库 Update"></a>上传本地仓库 Update</h2><p>建立远程连接更新本地的改动到云端</p>
<pre><code>git add -A
git commit -m &quot;first commit&quot;
git push -u origin master  //由于第一次push加-u
</code></pre><p>后来的push不需要加-u参数。到此你已经可以简单的使用git了。不过git远不只这么多东西，它没这么简单。</p>
<hr>
<h1 id="下面介绍一些Github常用的skill"><a href="#下面介绍一些Github常用的skill" class="headerlink" title="下面介绍一些Github常用的skill"></a>下面介绍一些Github常用的skill</h1><h2 id="creat-remote-repository-clone-to-local"><a href="#creat-remote-repository-clone-to-local" class="headerlink" title="creat remote repository clone to local"></a>creat remote repository clone to local</h2><p>将代码仓库clone到本地，其实就是将代码复制到你的机器里，并交由Git来管理：<br>    git clone git@github.com:ygcaicn/mygit.git</p>
<h2 id="git常用的命令-git-scm官方文档"><a href="#git常用的命令-git-scm官方文档" class="headerlink" title="git常用的命令:git-scm官方文档"></a>git常用的命令:<a href="https://git-scm.com/doc" target="_blank" rel="external">git-scm官方文档</a></h2><p>关于git-scm是什么和git的区别，<a href="http://blog.csdn.net/iamluole/article/details/42148091" target="_blank" rel="external">请按下<code>Ctrl</code>点击</a></p>
<ul>
<li><code>git add</code>：把要提交的代码添加进来，可以认为到一个缓冲中<strong>[重要]</strong> <a href="https://git-scm.com/docs/git-add" target="_blank" rel="external">官方文档</a></li>
</ul>
<p>提交文件test.c：</p>
<pre><code>git add test.c
</code></pre><p>提交目录test ：</p>
<pre><code>git add test
</code></pre><p>添加删除后的所有文件：</p>
<pre><code>git add .
</code></pre><p><del>或者：</del></p>
<pre><code>~~git add -A~~
</code></pre><p>添加所有文件（和上面的区别我也不知道）</p>
<pre><code>#一定要是大A强调一下，Shell下的所有操作都是区分大小写的
#不过Windows下还有区别，因为~~万恶的Windows~~是不区分文件的大小写的
git add -A
</code></pre><p>上面的add添加操作相当于把文件写入到了一个仓库的缓存区，但是还没有真正的写入到仓库的磁盘中</p>
<ul>
<li><p><code>git commit</code>本地提交commit：add完成后，真正的代码提交<strong>[重要]</strong> <a href="https://git-scm.com/docs/git-commit" target="_blank" rel="external">官方文档</a></p>
<p>  git commit -m “commit” // -m 描述信息，不能为空</p>
</li>
</ul>
<p>本地提交就是将缓存区的文件改动写入仓库的磁盘。</p>
<ul>
<li><p>git status: 查看上次提交后文件修改的列表</p>
<pre><code>git status
</code></pre></li>
<li><p>git diff：查看文件修改的内容，-号代表删除部分，+号代表添加部分</p>
<pre><code>git diff TestB.java // 查看TestB.java修改的内容
</code></pre></li>
<li><p>checkout：撤销未提交的修改（未执行add操作）</p>
<pre><code>git checkout TestB.java // 撤销TestB.java的修改
</code></pre></li>
<li><p>reset：取消add状态</p>
<p>  git reset HEAD TestB.java // 取消TestB.java的add状态</p>
</li>
<li><p>log：查看提交记录（内容包含提交id,提交人，提交日期，描述信息）</p>
<pre><code>git log // 所有记录
git log xxxxx(id) -1 // 查看当前id的记录，-1表示一行记录
git log xxxxx(id) -1 -p // 查看当前id提交记录的修改
</code></pre></li>
</ul>
<pre><code>+ `.gitignore`文件:

git会检查是否存在该文件，存在就读取该文件内容，将配置文件或者目录排除在版本之外，文件和目录可以使用“\*”通配符。可以手动创建在文件。
</code></pre><hr>
<pre><code><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">#Compiled Object files</div><div class="line">*.slo</div><div class="line">*.lo</div><div class="line">*.o</div><div class="line">*.obj</div><div class="line"></div><div class="line"># Precompiled Headers</div><div class="line">*.gch</div><div class="line">*.pch</div><div class="line"></div><div class="line"># Compiled Dynamic libraries</div><div class="line">*.so</div><div class="line">*.dylib</div><div class="line">*.dll</div><div class="line"></div><div class="line"># Fortran module files</div><div class="line">*.mod</div><div class="line"></div><div class="line"># Compiled Static libraries</div><div class="line">*.lai</div><div class="line">*.la</div><div class="line">*.a</div><div class="line">*.lib</div><div class="line"></div><div class="line"># Executables</div><div class="line">*.exe</div><div class="line">*.out</div><div class="line">*.app</div><div class="line"></div><div class="line">#Editplus</div><div class="line">*.bak</div><div class="line">TestA.c // 排除该文件</div><div class="line"> testDir // 排除该目录</div></pre></td></tr></table></figure>
</code></pre><hr>
<h2 id="git-分支"><a href="#git-分支" class="headerlink" title="git 分支"></a>git 分支</h2><p>分支：可以在现有代码上拉出一个分支，使得代码可以在主干与分支同时开发，并且代码之间互相不会影响。常见使用环境，就是每次版本发布，已发布的可以拉出一个分支，剩下的功能继续在主干开发，如果发布版本有问题，只用修改分支，最终将代码合并到主干。</p>
<ul>
<li>分支命令：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">git branch -a // 查看所有分支，master主干，分支前有*号，表示当前处于那个分支</div><div class="line">git branch release1.0 // 创建release1.0分支，</div><div class="line">git checkout release1.0 // 切换到release1.0分支，主要与文件修改撤销的区别</div><div class="line">git checkout master // 1： 切换到主干</div><div class="line">git merge release1.0 // 2： 将release1.0的修改合并到master，如果有冲突解决冲突</div><div class="line">git branch -D release1.0 // 删除release1.0分支</div></pre></td></tr></table></figure>
<h2 id="远程版本库"><a href="#远程版本库" class="headerlink" title="远程版本库"></a>远程版本库</h2><ul>
<li><p>比如有远程版本库(仓库)，<a href="https://github.com/FreeSunny/RefreashTabView.git" target="_blank" rel="external">https://github.com/FreeSunny/RefreashTabView.git</a></p>
<pre><code>git clone https://github.com/FreeSunny/RefreashTabView.git // 下载到本地
</code></pre></li>
</ul>
<h3 id="远程库命令："><a href="#远程库命令：" class="headerlink" title="远程库命令："></a>远程库命令：</h3><ul>
<li><p>pussh：将代码修改和提交同步到远程库 <strong>[重要]</strong></p>
<pre><code>#origin 指定远程版本库的 Git 地址，master 指定同步到哪一个分支
git push origin master
</code></pre></li>
<li><p>fetch：远程库的修改同步到本地, 不会将代码合并到任何分支，会存放到一个origin/master分支上</p>
<pre><code>#注释同
git fetch origin master
</code></pre></li>
<li><p>diff：查看远程库修改内容</p>
<pre><code>#注意有一个斜线，就是fetch同步后放置的位
git diff origin/master
</code></pre></li>
<li><p>merge：将origin/master分支修改的内容合并到主分支</p>
<pre><code>#注意斜线
git merge origin/master
</code></pre></li>
<li><p>pull：fetch + merge，拉取并且合并<strong>[重要]</strong></p>
<pre><code>#没有斜线  
git pull origin master
</code></pre></li>
</ul>
<h2 id="Git常用速查-gitbub网址"><a href="#Git常用速查-gitbub网址" class="headerlink" title="Git常用速查 gitbub网址"></a>Git常用速查 <a href="https://github.com/" target="_blank" rel="external">gitbub网址</a></h2><p>知易行难，say easy than do， 下面就来一个小小的实例，<strong>必须要有git账号</strong>，这个步骤就不用say了吧！</p>
<h3 id="创建远程库"><a href="#创建远程库" class="headerlink" title="创建远程库"></a>创建远程库</h3><pre><code>a. 点击+号下的New repository 创建一个远程库，命名为GitOperate,

b. 版本库类型可以public或者private，程序员都有开源的心，那就public。

c. 还可以勾选Initialize this repository with a README，

d. 接下来可以选择添加.gitignore文件，.gitignore文件有很多类型可以选，
   比如 Android，Android项目下的bin这些文件一般都不需要提交。
   选择遵循的协议。eg：Apache License 2.0, 这个可以自己去查查每种的意思

e. 点击create，远程版本库就创建完成了，远程版本库的地址为
   https://github.com/FreeSunny/GitOperate.git。
   之后跳转到README.md,该文件主要是对项目的描述。
</code></pre><h3 id="远程库克隆到本地"><a href="#远程库克隆到本地" class="headerlink" title="远程库克隆到本地"></a>远程库克隆到本地</h3><pre><code>a. 本地创建一个GitOperate文件夹

b. 远程库地址为https://github.com/FreeSunny/GitOperate.git，
   cd进入GitOperate，输入 *git clone https://github.com/FreeSunny/GitOperate.git*

c. 完成后可以在GitOperater文件下的GitOperate文件夹下看到README.md文件（两层文件夹了）

d. 将第二个目录下的所有文件全部复制到上一层目录中，这样就只有第一层目录添加到版本控制中。
   操作命令为(cp -r GitOperate/ .)
</code></pre><h3 id="提交代码"><a href="#提交代码" class="headerlink" title="提交代码"></a>提交代码</h3><pre><code>git add .// 将提交的代码添加进来，这里指README.md

git commit -m “add readme” // 本地提交

git push origin master //  同步到远程库
</code></pre>]]></content>
      
        <categories>
            
            <category> 建站 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> github </tag>
            
            <tag> github入门 </tag>
            
            <tag> 置顶文章 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>https://ygcaicn.github.io/uncategorized/hello-world.html</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<a id="more"></a>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
      
        
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
